(self["webpackChunk"] = self["webpackChunk"] || []).push([["resources_js_admin_pages_bankBranch_ManageItems_js"],{

/***/ "./node_modules/@inovua/reactdatagrid-community/ActiveRowIndicator/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/ActiveRowIndicator/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../packages/join */ "./node_modules/@inovua/reactdatagrid-community/packages/join/index.js"));
var _usePrevious = _interopRequireDefault(__webpack_require__(/*! ../hooks/usePrevious */ "./node_modules/@inovua/reactdatagrid-community/hooks/usePrevious.js"));
var _getScrollbarWidth = _interopRequireDefault(__webpack_require__(/*! ../packages/getScrollbarWidth */ "./node_modules/@inovua/reactdatagrid-community/packages/getScrollbarWidth/index.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var CLASS_NAME = 'InovuaReactDataGrid__row';
var SCROLLBAR_WIDTH = (0, _getScrollbarWidth.default)();
var RTL_OFFSET = SCROLLBAR_WIDTH || 17;
var ActiveRowIndicator = function ActiveRowIndicator(props) {
  var _style;
  var _useState = (0, _react.useState)(''),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    offset = _useState2[0],
    setOffset = _useState2[1];
  var _useState3 = (0, _react.useState)(0),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    _scrollLeft = _useState4[0],
    setScrollLeft = _useState4[1];
  var activeIndex = props.activeIndex,
    rtl = props.rtl,
    rtlOffset = props.rtlOffset,
    activeRowIndicatorClassName = props.activeRowIndicatorClassName;
  var oldActiveIndex = (0, _usePrevious.default)(activeIndex, -1);
  var _ref = props.activeRowRef.current || {},
    _ref$instance = _ref.instance,
    row = _ref$instance === void 0 ? {} : _ref$instance;
  var hasBorderBottom = row.hasBorderBottom,
    hasBorderTop = row.hasBorderTop;
  var rowProps = row.props || {};
  var groupColumn = rowProps.groupColumn,
    data = rowProps.data,
    depth = rowProps.depth,
    groupNestingSize = rowProps.groupNestingSize;
  var deps = [activeIndex, rtlOffset, oldActiveIndex, props.dataSourceCount, props.computedExpandedRows, props.computedExpandedNodes, props.computedRowHeights, row];
  var updateLayout = function updateLayout(config) {
    var node = (props.activeRowRef.current || {
      node: null
    }).node;
    var instance = (props.activeRowRef.current || {
      instance: null
    }).instance;
    if (!node || !node.parentNode || props.dataSourceCount < activeIndex) {
      return setOffset('');
    }
    if (instance && instance.props.rowIndex !== props.activeIndex && props.activeIndex >= 0) {
      requestAnimationFrame(function () {
        return updateLayout({
          raf: false
        });
      });
      return;
    }
    var doSetOffset = function doSetOffset(left, top) {
      top = Number.parseFloat(top) || 0;
      setOffset("translate3d(".concat(left || 0, "px, ").concat(top, "px, 0px)"));
    };
    if (config && config.raf === false) {
      doSetOffset(rtl ? -RTL_OFFSET : 0, node.style.top);
    } else {
      requestAnimationFrame(function () {
        if (node && node.parentNode) {
          doSetOffset(rtl ? -RTL_OFFSET : 0, node.style.top);
        }
      });
    }
  };
  (0, _react.useLayoutEffect)(updateLayout, deps);
  (0, _react.useEffect)(function () {
    if (props.handle) {
      props.handle({
        setScrollLeft: setScrollLeft
      });
    }
    return function () {
      if (props.handle) {
        props.handle(null);
      }
    };
  }, [props.handle]);
  var groupDepth = groupColumn ? 0 : data && data.__group ? data.depth - 1 : data && data.__summary ? rowProps.summaryProps.depth : depth || 0;
  var scrollbarOffset = props.rtl ? RTL_OFFSET : 0;
  var left = (groupNestingSize || 0) * groupDepth;
  var style = (_style = {}, (0, _defineProperty2.default)(_style, rtl ? 'right' : 'left', left - scrollbarOffset), (0, _defineProperty2.default)(_style, "width", props.width - left), _style);
  var transform;
  if (!offset) {
    style.opacity = 0;
  } else {
    style.willChange = 'transform';
    transform = offset;
    style.height = props.activeRowHeight;
  }
  if (transform) {
    style.transform = transform;
  }
  var innerClassName = (0, _join.default)("".concat(CLASS_NAME, "-active-borders-inner"), activeRowIndicatorClassName ? activeRowIndicatorClassName : '');
  return _react.default.createElement("div", {
    key: "active-row-borders",
    className: (0, _join.default)("".concat(CLASS_NAME, "-active-borders"), offset != '' ? "".concat(CLASS_NAME, "-active-borders--active") : '', hasBorderTop && "".concat(CLASS_NAME, "-active-borders--has-border-top"), hasBorderBottom && "".concat(CLASS_NAME, "-active-borders--has-border-bottom")),
    style: style
  }, _react.default.createElement("div", {
    className: innerClassName
  }));
};
var _default = ActiveRowIndicator;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Cover.js":
/*!***************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Cover.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ./packages/join */ "./node_modules/@inovua/reactdatagrid-community/packages/join/index.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var _default = function _default(_ref) {
  var handle = _ref.handle;
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    active = _useState2[0],
    setActive = _useState2[1];
  var _useState3 = (0, _react.useState)('inherit'),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    cursor = _useState4[0],
    setCursor = _useState4[1];
  (0, _react.useEffect)(function () {
    handle({
      setActive: setActive,
      setCursor: setCursor
    });
  }, []);
  return _react.default.createElement("div", {
    style: {
      opacity: active ? 1 : 0,
      cursor: active ? cursor || 'inherit' : 'inherit'
    },
    className: (0, _join.default)("InovuaReactDataGrid__cover", active && "InovuaReactDataGrid__cover--active")
  });
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/DateFilter/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/DateFilter/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _Calendar = __webpack_require__(/*! ../packages/Calendar */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/index.js");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var DateFilter = function (_Component) {
  (0, _inherits2.default)(DateFilter, _Component);
  var _super = _createSuper(DateFilter);
  function DateFilter(props) {
    var _this;
    (0, _classCallCheck2.default)(this, DateFilter);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "input", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getInputRef", function () {
      return _this.input.current;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onStartTextChange", function (start) {
      var text = _this.state.text;
      if (text && text.start && start === text.start) {
        return;
      }
      var newText = typeof text === 'string' ? {} : _objectSpread({}, text);
      newText.start = start;
      _this.setState({
        text: newText
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onEndTextChange", function (end) {
      var text = _this.state.text;
      if (text && text.end && end === text.end) {
        return;
      }
      var newText = typeof text === 'string' ? {} : _objectSpread({}, text);
      newText.end = end;
      _this.setState({
        text: newText
      });
    });
    var filterValue = props.filterValue;
    _this.input = (0, _react.createRef)();
    _this.state = {
      value: filterValue ? filterValue.value || '' : '',
      text: ''
    };
    _this.onChange = _this.onChange.bind((0, _assertThisInitialized2.default)(_this));
    _this.onStartChange = _this.onStartChange.bind((0, _assertThisInitialized2.default)(_this));
    _this.onEndChange = _this.onEndChange.bind((0, _assertThisInitialized2.default)(_this));
    _this.onValueChange = _this.onValueChange.bind((0, _assertThisInitialized2.default)(_this));
    _this.onTextChange = _this.onTextChange.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }
  (0, _createClass2.default)(DateFilter, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (this.props.filterValue && prevProps.filterValue && this.props.filterValue.value !== prevProps.filterValue.value) {
        this.setValue(this.props.filterValue.value);
      }
    }
  }, {
    key: "onChange",
    value: function onChange(value) {
      if (value === this.state.value) {
        return;
      }
      this.onValueChange(value);
      this.setValue(value);
    }
  }, {
    key: "onStartChange",
    value: function onStartChange(start) {
      if (this.state.value) {
        if (this.state.value.start && start === this.state.value.start) {
          return;
        }
      }
      var newValue = typeof this.state.value === 'string' ? {} : _objectSpread({}, this.state.value);
      newValue.start = start;
      this.onValueChange(newValue);
      this.setValue(newValue);
    }
  }, {
    key: "onEndChange",
    value: function onEndChange(end) {
      if (this.state.value) {
        if (this.state.value.end && end === this.state.value.end) {
          return;
        }
      }
      var newValue = typeof this.state.value === 'string' ? {} : _objectSpread({}, this.state.value);
      newValue.end = end;
      this.onValueChange(newValue);
      this.setValue(newValue);
    }
  }, {
    key: "setValue",
    value: function setValue(value) {
      this.setState({
        value: value
      });
      if (typeof value === 'string') {
        this.onTextChange(value);
      }
    }
  }, {
    key: "onValueChange",
    value: function onValueChange(value) {
      this.props.onChange && this.props.onChange(_objectSpread(_objectSpread({}, this.props.filterValue), {}, {
        value: value
      }));
    }
  }, {
    key: "onTextChange",
    value: function onTextChange(value) {
      this.setState({
        text: value
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
        filterValue = _this$props.filterValue,
        readOnly = _this$props.readOnly,
        disabled = _this$props.disabled,
        rtl = _this$props.rtl,
        style = _this$props.style,
        cell = _this$props.cell,
        renderInPortal = _this$props.renderInPortal,
        i18n = _this$props.i18n,
        theme = _this$props.theme;
      var _this$props2 = this.props,
        filterEditorProps = _this$props2.filterEditorProps,
        dateFormat = _this$props2.cellProps.dateFormat;
      if (filterEditorProps === undefined) {
        filterEditorProps = filterValue && filterValue.filterEditorProps;
      }
      if (dateFormat === undefined) {
        if (typeof filterEditorProps === 'function') {
          dateFormat = filterEditorProps(this.props, {
            value: this.state.value,
            index: 0
          }).dateFormat;
        } else {
          dateFormat = filterEditorProps && filterEditorProps.dateFormat || '';
        }
      }
      var calendarLabels = {
        todayButtonText: i18n && i18n('calendar.todayButtonText'),
        clearButtonText: i18n && i18n('calendar.clearButtonText'),
        okButtonText: i18n && i18n('calendar.okButtonText'),
        cancelButtonText: i18n && i18n('calendar.cancelButtonText')
      };
      var startTarget = function startTarget() {
        return cell && cell.getDOMNode().querySelectorAll('.InovuaReactDataGrid__column-header__filter')[0] || cell && cell.getDOMNode();
      };
      var inputProps = {
        ref: this.input,
        calendarProps: _objectSpread({}, calendarLabels),
        readOnly: readOnly,
        disabled: disabled,
        dateFormat: dateFormat,
        forceValidDate: false,
        relativeToViewport: true,
        okButton: false,
        cancelButton: false,
        overlayProps: {
          zIndex: null,
          positions: ['tl-bl', 'bl-tl', 'tr-br', 'br-tr'],
          target: startTarget
        },
        style: _objectSpread({
          minWidth: 0
        }, style),
        theme: theme,
        rtl: rtl
      };
      if (filterValue) {
        inputProps.value = this.state.value;
        if (!inputProps.value) {
          inputProps.text = '';
        }
      }
      var renderPicker = renderInPortal;
      var editorClassName = 'InovuaReactDataGrid__column-header__filter InovuaReactDataGrid__column-header__filter--date';
      switch (filterValue && filterValue.operator) {
        case 'inrange':
        case 'notinrange':
          var _this$state = this.state,
            value = _this$state.value,
            text = _this$state.text;
          var start = value.start,
            end = value.end;
          var startText = text.start,
            endText = text.end,
            startInputProps = _objectSpread(_objectSpread({}, inputProps), {}, {
              value: start,
              text: startText
            }),
            endInputProps = _objectSpread(_objectSpread({}, inputProps), {}, {
              value: end,
              text: endText,
              overlayProps: {
                target: function target() {
                  var filterNodes = cell && cell.getDOMNode().querySelectorAll('.InovuaReactDataGrid__column-header__filter');
                  return filterNodes[filterNodes.length - 1];
                }
              }
            });
          var startFilterEditorProps = typeof filterEditorProps === 'function' ? filterEditorProps(this.props, {
            value: start,
            index: 0
          }) : filterEditorProps;
          var endFilterEditorProps = typeof filterEditorProps === 'function' ? filterEditorProps(this.props, {
            value: end,
            index: 1
          }) : filterEditorProps;
          var startProps = _objectSpread(_objectSpread(_objectSpread({
            okButton: true,
            placeholder: i18n && i18n('start')
          }, startFilterEditorProps), {}, {
            onChange: this.onStartChange,
            onTextChange: this.onStartTextChange,
            className: editorClassName
          }, startInputProps), {}, {
            renderPicker: renderPicker
          });
          var startEditor = _react.default.createElement(_Calendar.DateInput, _objectSpread({}, startProps));
          var endProps = _objectSpread(_objectSpread(_objectSpread({
            okButton: true,
            placeholder: i18n && i18n('end')
          }, endFilterEditorProps), {}, {
            onChange: this.onEndChange,
            onTextChange: this.onEndTextChange,
            className: editorClassName
          }, endInputProps), {}, {
            renderPicker: renderPicker,
            endInput: true
          });
          var endEditor = _react.default.createElement(_Calendar.DateInput, _objectSpread({}, endProps));
          return this.props.render(_react.default.createElement("div", {
            style: {
              display: 'flex'
            }
          }, startEditor, _react.default.createElement("div", {
            className: "InovuaReactDataGrid__column-header__filter__binary_operator_separator"
          }), endEditor));
        default:
          var finalEditorProps = typeof filterEditorProps === 'function' ? filterEditorProps(this.props, {
            value: this.state.value
          }) : filterEditorProps;
          if (finalEditorProps !== null && finalEditorProps !== void 0 && finalEditorProps.inputRef) {
            finalEditorProps.inputRef.current = this.getInputRef();
          }
          var finalProps = _objectSpread(_objectSpread(_objectSpread({}, finalEditorProps), {}, {
            onChange: this.onChange,
            onTextChange: this.onTextChange,
            className: editorClassName
          }, inputProps), {}, {
            renderPicker: renderPicker
          });
          return this.props.render(_react.default.createElement(_Calendar.DateInput, _objectSpread({}, finalProps)));
      }
    }
  }]);
  return DateFilter;
}(_react.Component);
var _default = DateFilter;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/FakeFlex.js":
/*!******************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/FakeFlex.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _resizeObserverPolyfill = _interopRequireDefault(__webpack_require__(/*! resize-observer-polyfill */ "./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js"));
var _NotifyResize = _interopRequireDefault(__webpack_require__(/*! ./packages/NotifyResize */ "./node_modules/@inovua/reactdatagrid-community/packages/NotifyResize/index.js"));
var _autoBind = _interopRequireDefault(__webpack_require__(/*! ./packages/react-class/autoBind */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/autoBind.js"));
var _getGlobal = __webpack_require__(/*! ./getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var globalObject = (0, _getGlobal.getGlobal)();
var ResizeObserver = globalObject.ResizeObserver || _resizeObserverPolyfill.default;
var useFragment = !!_react.default.Fragment;
var coverStyle = !useFragment ? {
  height: '100%',
  position: 'absolute',
  width: '100%',
  top: 0,
  left: 0
} : null;
var FLEX_1_STYLE = {
  flex: 1
};
var nativeFlexCoverStyle = {
  height: '100%',
  position: 'absolute',
  width: '100%',
  top: 0,
  left: 0,
  display: 'flex',
  flexFlow: 'column'
};
var FakeFlex = function (_Component) {
  (0, _inherits2.default)(FakeFlex, _Component);
  var _super = _createSuper(FakeFlex);
  function FakeFlex(props) {
    var _this;
    (0, _classCallCheck2.default)(this, FakeFlex);
    _this = _super.call(this, props);
    (0, _autoBind.default)((0, _assertThisInitialized2.default)(_this));
    _this.state = {
      flexHeight: null
    };
    _this.flexRef = (0, _react.createRef)();
    return _this;
  }
  (0, _createClass2.default)(FakeFlex, [{
    key: "onResize",
    value: function onResize(size) {
      var _this2 = this;
      if (this.props.useNativeFlex) {
        return;
      }
      this.size = size;
      if (size.height === this.availableHeight) {
        return;
      }
      this.availableHeight = size.height;
      requestAnimationFrame(function () {
        _this2.computeSize();
        requestAnimationFrame(_this2.resync);
      });
    }
  }, {
    key: "resync",
    value: function resync() {
      var node = this.getNode();
      if (!node || this.unmounted) {
        return;
      }
      var _node$getBoundingClie = node.getBoundingClientRect(),
        width = _node$getBoundingClie.width,
        height = _node$getBoundingClie.height;
      this.onResize({
        width: width,
        height: height
      });
    }
  }, {
    key: "onChildResize",
    value: function onChildResize() {
      this.computeSize();
    }
  }, {
    key: "computeSize",
    value: function computeSize() {
      var _this3 = this;
      var availableHeight = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.availableHeight;
      var node = this.getNode();
      if (!node || this.unmounted) {
        return;
      }
      var flexIndex = this.props.flexIndex;
      var sum = [].slice.call(node.children).reduce(function (acc, child, index) {
        if (index >= _this3.length) {
          return acc;
        }
        if (index === flexIndex) {
          return acc;
        }
        return acc + child.offsetHeight;
      }, 0);
      var flexHeight = availableHeight - sum;
      if (flexHeight != this.state.flexHeight) {
        this.setState({
          flexHeight: flexHeight
        });
      }
    }
  }, {
    key: "getNode",
    value: function getNode() {
      if (this.node) {
        return this.node;
      }
      if (this.props.getNode) {
        this.node = this.props.getNode();
      } else {
        this.node = this.flexRef.current;
      }
      return this.node;
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this4 = this;
      this.unmounted = false;
      requestAnimationFrame(function () {
        _this4.setupObservers();
      });
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (this.prevLength && this.prevLength !== this.length) {
        this.clearObservers();
        this.setupObservers();
      }
      this.prevLength = this.length;
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.unmounted = true;
      this.clearObservers();
    }
  }, {
    key: "setupObservers",
    value: function setupObservers() {
      var _this5 = this;
      if (this.props.useNativeFlex) {
        return;
      }
      var node = this.getNode();
      if (!node) {
        return;
      }
      var flexIndex = this.props.flexIndex;
      this.observers = [].slice.call(node.children).map(function (child, index) {
        if (index >= _this5.length) {
          return null;
        }
        if (index === flexIndex) {
          return null;
        }
        if (child.__observer) {
          return child.__observer;
        }
        var observer = new ResizeObserver(function (entries) {
          var first = entries[0];
          if (first) {
            _this5.onChildResize(first.contentRect);
          }
        });
        observer.observe(child);
        observer.__obsTarget = child;
        child.__observer = observer;
        return observer;
      }).filter(Boolean);
    }
  }, {
    key: "clearObservers",
    value: function clearObservers() {
      var node = this.getNode();
      if (!node) {
        return;
      }
      [].slice.call(node.children).map(function (child) {
        if (child && child.__observer) {
          child.__observer.__obsTarget = null;
          child.__observer = null;
        }
      });
      if (this.observers) {
        this.observers.forEach(function (o) {
          if (o.unobserve && o.__obsTarget) {
            o.__obsTarget.__observer = null;
            o.unobserve(o.__obsTarget);
          }
          if (o.disconnect) {
            o.disconnect();
          }
        });
      }
      delete this.observers;
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.props;
      var flexIndex = props.flexIndex,
        useNativeFlex = props.useNativeFlex;
      var flexHeight = this.state.flexHeight;
      var children = _react.default.Children.toArray(props.children).filter(Boolean).map(function (x, i) {
        if (i === flexIndex && (useNativeFlex || flexHeight)) {
          var additionalStyle = useNativeFlex ? FLEX_1_STYLE : {
            height: flexHeight
          };
          x = (0, _react.cloneElement)(x, {
            style: x.props.style ? _objectSpread(_objectSpread({}, x.props.style), additionalStyle) : additionalStyle
          });
        }
        return x;
      });
      this.length = children.length;
      var resizer = !useNativeFlex ? _react.default.createElement(_NotifyResize.default, {
        key: "fakeflexresizer",
        onResize: this.onResize,
        notifyOnMount: true,
        ResizeObserver: ResizeObserver
      }) : null;
      if (useFragment && !useNativeFlex) {
        return _react.default.createElement(_react.default.Fragment, {
          key: "fragment"
        }, children, resizer);
      }
      return _react.default.createElement("div", {
        ref: this.flexRef,
        style: useNativeFlex ? nativeFlexCoverStyle : coverStyle
      }, children, resizer);
    }
  }]);
  return FakeFlex;
}(_react.Component);
FakeFlex.propTypes = {
  flexIndex: _propTypes.default.number.isRequired,
  getNode: _propTypes.default.func.isRequired,
  useNativeFlex: _propTypes.default.bool
};
var _default = FakeFlex;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/ColumnResizer.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/ColumnResizer.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _lodash = _interopRequireDefault(__webpack_require__(/*! lodash.throttle */ "./node_modules/lodash.throttle/index.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var propTypes = {
  onMouseDown: _propTypes.default.func.isRequired,
  onTouchStart: _propTypes.default.func.isRequired,
  resizeHandleClassName: _propTypes.default.string.isRequired
};
var ColumnResizer = function (_Component) {
  (0, _inherits2.default)(ColumnResizer, _Component);
  var _super = _createSuper(ColumnResizer);
  function ColumnResizer(props) {
    var _this;
    (0, _classCallCheck2.default)(this, ColumnResizer);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "domRef", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "overHeight", 0);
    _this.state = {
      over: false
    };
    _this.domRef = _react.default.createRef();
    _this.onMouseDown = _this.onMouseDown.bind((0, _assertThisInitialized2.default)(_this));
    _this.onTouchStart = _this.onTouchStart.bind((0, _assertThisInitialized2.default)(_this));
    _this.onMouseEnter = _this.onMouseEnter.bind((0, _assertThisInitialized2.default)(_this));
    _this.onMouseLeave = _this.onMouseLeave.bind((0, _assertThisInitialized2.default)(_this));
    _this.setOver = (0, _lodash.default)(_this.setOver, 50, {
      leading: false
    });
    return _this;
  }
  (0, _createClass2.default)(ColumnResizer, [{
    key: "onMouseEnter",
    value: function onMouseEnter() {
      var parent = this.domRef.current.parentElement;
      var overHeight = parent ? parent.offsetHeight : null;
      this.overHeight = overHeight;
      this.setOver(true);
    }
  }, {
    key: "setOver",
    value: function setOver(value) {
      if (value) {
        this.setState({
          over: true,
          overHeight: this.overHeight
        });
      } else {
        this.setState({
          over: false
        });
      }
    }
  }, {
    key: "onMouseLeave",
    value: function onMouseLeave() {
      this.setOver(false);
    }
  }, {
    key: "onMouseDown",
    value: function onMouseDown(event) {
      event.preventDefault();
      if (this.props.onMouseDown) {
        this.props.onMouseDown(event);
      }
      this.setState({
        over: false
      });
    }
  }, {
    key: "onTouchStart",
    value: function onTouchStart(event) {
      event.preventDefault();
      if (this.props.onTouchStart) {
        this.props.onTouchStart(event);
      }
      this.setState({
        over: false
      });
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.props;
      var _this$props = this.props,
        className = _this$props.className,
        resizeHandleClassName = _this$props.resizeHandleClassName;
      var style = _objectSpread(_objectSpread({}, props.style), {}, {
        height: this.state.overHeight
      });
      var resizeHandleStyle = _objectSpread({}, props.resizeHandleStyle);
      if (this.state.over) {
        resizeHandleStyle.visibility = 'visible';
      } else {
        resizeHandleStyle.visibility = 'hidden';
      }
      return _react.default.createElement("div", {
        ref: this.domRef,
        draggable: "false",
        className: className,
        onMouseDown: this.onMouseDown,
        onTouchStart: this.onTouchStart,
        onMouseEnter: this.onMouseEnter,
        onMouseLeave: this.onMouseLeave,
        style: style
      }, _react.default.createElement("div", {
        style: resizeHandleStyle,
        className: resizeHandleClassName
      }));
    }
  }]);
  return ColumnResizer;
}(_react.Component);
exports["default"] = ColumnResizer;
(0, _defineProperty2.default)(ColumnResizer, "propTypes", propTypes);

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/editors/Text.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/editors/Text.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _TextInput = _interopRequireDefault(__webpack_require__(/*! ../../../../packages/TextInput */ "./node_modules/@inovua/reactdatagrid-community/packages/TextInput/index.js"));
var _autoBind = _interopRequireDefault(__webpack_require__(/*! ../../../../packages/react-class/autoBind */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/autoBind.js"));
var _reactCleanProps = _interopRequireDefault(__webpack_require__(/*! ../../../../packages/react-clean-props */ "./node_modules/@inovua/reactdatagrid-community/packages/react-clean-props/index.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var InovuaTextEditor = function (_React$Component) {
  (0, _inherits2.default)(InovuaTextEditor, _React$Component);
  var _super = _createSuper(InovuaTextEditor);
  function InovuaTextEditor(props) {
    var _this;
    (0, _classCallCheck2.default)(this, InovuaTextEditor);
    _this = _super.call(this, props);
    (0, _autoBind.default)((0, _assertThisInitialized2.default)(_this));
    return _this;
  }
  (0, _createClass2.default)(InovuaTextEditor, [{
    key: "render",
    value: function render() {
      var props = this.props;
      var value = props.value;
      var domProps = (0, _reactCleanProps.default)(props, InovuaTextEditor.propTypes);
      var className = 'InovuaReactDataGrid__cell__editor InovuaReactDataGrid__cell__editor--text ' + (domProps.className || '');
      return _react.default.createElement(_TextInput.default, _objectSpread(_objectSpread({
        autoFocus: props.autoFocus,
        value: value,
        theme: props.theme,
        onChange: this.onChange,
        onBlur: this.onBlur,
        onKeyDown: this.onKeyDown,
        enableClearButton: true
      }, domProps), {}, {
        className: className
      }));
    }
  }, {
    key: "onChange",
    value: function onChange(value, e) {
      var onChange = this.props.onChange;
      if (onChange) {
        onChange(value, e);
      }
    }
  }, {
    key: "onBlur",
    value: function onBlur(e) {
      if (this.props.onComplete) {
        this.props.onComplete(e);
      }
    }
  }, {
    key: "onKeyDown",
    value: function onKeyDown(e) {
      if (e.key === 'Enter') {
        if (this.props.onComplete) {
          this.props.onEnterNavigation(true, e.shiftKey ? -1 : 1, e);
        }
      }
      if (e.key === 'Escape') {
        if (this.props.onCancel) {
          this.props.onCancel(e);
        }
      }
      if (e.key == 'Tab') {
        e.preventDefault();
        this.props.onTabNavigation(true, e.shiftKey ? -1 : 1, e);
      }
    }
  }]);
  return InovuaTextEditor;
}(_react.default.Component);
InovuaTextEditor.propTypes = {
  onCancel: _propTypes.default.func,
  onChange: _propTypes.default.func,
  onComplete: _propTypes.default.func,
  onKeyDown: _propTypes.default.func,
  onTabNavigation: _propTypes.default.func,
  gotoNext: _propTypes.default.func,
  gotoPrev: _propTypes.default.func,
  value: _propTypes.default.any,
  cell: _propTypes.default.any,
  cellProps: _propTypes.default.any,
  nativeScroll: _propTypes.default.any,
  editorProps: _propTypes.default.any,
  onEnterNavigation: _propTypes.default.func
};
var _default = InovuaTextEditor;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/index.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/index.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _region = _interopRequireDefault(__webpack_require__(/*! ../../../packages/region */ "./node_modules/@inovua/reactdatagrid-community/packages/region/index.js"));
var _shallowequal = _interopRequireWildcard(__webpack_require__(/*! ../../../packages/shallowequal */ "./node_modules/@inovua/reactdatagrid-community/packages/shallowequal/index.js"));
var _renderHeader = _interopRequireDefault(__webpack_require__(/*! ./renderHeader */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/renderHeader.js"));
var _renderGroupTool = _interopRequireDefault(__webpack_require__(/*! ./renderGroupTool */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/renderGroupTool.js"));
var _renderNodeTool = _interopRequireDefault(__webpack_require__(/*! ./renderNodeTool */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/renderNodeTool.js"));
var _sealedObjectFactory = _interopRequireDefault(__webpack_require__(/*! ../../../utils/sealedObjectFactory */ "./node_modules/@inovua/reactdatagrid-community/utils/sealedObjectFactory.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../packages/join */ "./node_modules/@inovua/reactdatagrid-community/packages/join/index.js"));
var _isFocusable = _interopRequireDefault(__webpack_require__(/*! ../../../utils/isFocusable */ "./node_modules/@inovua/reactdatagrid-community/utils/isFocusable.js"));
var _bemFactory = _interopRequireDefault(__webpack_require__(/*! ../../../bemFactory */ "./node_modules/@inovua/reactdatagrid-community/bemFactory.js"));
var _renderSortTool = _interopRequireDefault(__webpack_require__(/*! ./renderSortTool */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/renderSortTool.js"));
var _defaultRowReorderColumnId = __webpack_require__(/*! ../../../normalizeColumns/defaultRowReorderColumnId */ "./node_modules/@inovua/reactdatagrid-community/normalizeColumns/defaultRowReorderColumnId.js");
var _Text = _interopRequireDefault(__webpack_require__(/*! ./editors/Text */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/editors/Text.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var cellBem = (0, _bemFactory.default)('InovuaReactDataGrid__cell');
var headerBem = (0, _bemFactory.default)('InovuaReactDataGrid__column-header');
var emptyObject = Object.freeze ? Object.freeze({}) : {};
var emptyFn = function emptyFn() {};
var CELL_RENDER_OBJECT = (0, _sealedObjectFactory.default)({
  empty: null,
  value: null,
  data: null,
  columnIndex: null,
  rowIndex: null,
  remoteRowIndex: null,
  rowIndexInGroup: null,
  nodeProps: null,
  rowSelected: null,
  rowExpanded: null,
  treeColumn: null,
  setRowSelected: null,
  setRowExpanded: null,
  isRowExpandable: null,
  toggleRowExpand: null,
  toggleNodeExpand: null,
  loadNodeAsync: null,
  toggleGroup: null,
  cellProps: null,
  totalDataCount: null,
  rendersInlineEditor: null,
  renderRowDetailsExpandIcon: null,
  renderRowDetailsCollapsedIcon: null,
  renderRowDetailsMoreIcon: null
});
var CELL_RENDER_SECOND_OBJ = (0, _sealedObjectFactory.default)({
  cellProps: null,
  column: null,
  headerProps: null
});
var wrapInContent = function wrapInContent(value) {
  return _react.default.createElement("div", {
    key: "content",
    className: "InovuaReactDataGrid__cell__content",
    children: value
  });
};
function InovuaDataGridCell(props) {
  var domRef = (0, _react.useRef)(null);
  var isCancelled = (0, _react.useRef)(false);
  var sortTimeoutId = (0, _react.useRef)(null);
  var lastEditCompleteTimestamp = (0, _react.useRef)(0);
  var unmounted = (0, _react.useRef)(false);
  var cleanupResizeObserver = (0, _react.useRef)(null);
  var callbackRef = (0, _react.useRef)(undefined);
  var _useState = (0, _react.useState)({
      props: props
    }),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    theState = _useState2[0],
    setState = _useState2[1];
  var useInitialProps = !theState.props || props.timestamp > theState.props.timestamp;
  var state = useInitialProps ? _objectSpread(_objectSpread({}, theState), {}, {
    props: props,
    left: props.left || 0
  }) : theState;
  var latestPropsRef = (0, _react.useRef)(state.props);
  latestPropsRef.current = state.props;
  var getProps = (0, _react.useCallback)(function () {
    return latestPropsRef.current;
  }, []);
  var updateState = (0, _react.useCallback)(function (newState, callback) {
    callbackRef.current = callback;
    setState(function (oldState) {
      return _objectSpread(_objectSpread({}, oldState), newState);
    });
  }, []);
  var updateProps = (0, _react.useCallback)(function (props, callback) {
    props.timestamp = Date.now();
    var newState = {
      props: props
    };
    requestAnimationFrame(function () {
      updateState(newState, callback);
    });
  }, []);
  var setStateProps = (0, _react.useCallback)(function (stateProps) {
    if (unmounted.current) {
      return;
    }
    var newProps = Object.assign({}, InovuaDataGridCell.defaultProps, stateProps);
    if (!(0, _shallowequal.default)(newProps, getProps(), {
      timestamp: 1
    })) {
      updateProps(newProps);
    }
  }, [getProps]);
  (0, _react.useEffect)(function () {
    var callback = callbackRef.current;
    if (callback && typeof callback === 'function') {
      callback();
    }
    callbackRef.current = null;
  }, [state]);
  (0, _react.useEffect)(function () {
    var _props$cellRef;
    unmounted.current = false;
    if (props.onMount) {
      props.onMount(props, cellInstance);
    }
    (_props$cellRef = props.cellRef) === null || _props$cellRef === void 0 ? void 0 : _props$cellRef.call(props, cellInstance);
    return function () {
      if (cleanupResizeObserver.current) {
        var cleanupResizeObserverFn = cleanupResizeObserver.current;
        cleanupResizeObserverFn();
      }
      if (props.onUnmount) {
        props.onUnmount(props, cellInstance);
      }
      unmounted.current = true;
    };
  }, []);
  var getDOMNode = (0, _react.useCallback)(function () {
    return domRef.current;
  }, []);
  var onUpdate = (0, _react.useCallback)(function () {
    if (props.onUpdate) {
      props.onUpdate(getProps(), cellInstance);
    }
  }, [props.onUpdate]);
  var setDragging = (0, _react.useCallback)(function (dragging, callback) {
    var newState = {
      dragging: dragging
    };
    if (!dragging) {
      newState.top = 0;
      if (props.rtl) {
        newState.right = 0;
      } else {
        newState.left = 0;
      }
    }
    updateState(newState, callback);
  }, [props.rtl]);
  var setLeft = (0, _react.useCallback)(function (left) {
    updateState({
      left: left
    });
  }, []);
  var setRight = (0, _react.useCallback)(function (right) {
    updateState({
      right: right
    });
  }, []);
  var setTop = (0, _react.useCallback)(function (top) {
    updateState({
      top: top
    });
  }, []);
  var setHeight = (0, _react.useCallback)(function (height) {
    updateState({
      height: height
    });
  }, []);
  var setWidth = (0, _react.useCallback)(function (width) {
    updateState({
      width: width
    });
  }, []);
  var prepareStyle = function prepareStyle(thisProps) {
    var maxWidth = thisProps.maxWidth,
      minRowHeight = thisProps.minRowHeight,
      computedLocked = thisProps.computedLocked,
      computedWidth = thisProps.computedWidth,
      computedOffset = thisProps.computedOffset,
      rowHeight = thisProps.rowHeight,
      initialRowHeight = thisProps.initialRowHeight,
      naturalRowHeight = thisProps.naturalRowHeight,
      headerCell = thisProps.headerCell,
      hidden = thisProps.hidden,
      rtl = thisProps.rtl,
      inTransition = thisProps.inTransition,
      inShowTransition = thisProps.inShowTransition,
      computedRowspan = thisProps.computedRowspan,
      zIndex = thisProps.zIndex;
    var style = {};
    if (typeof thisProps.style === 'function') {
      if (!headerCell) {
        Object.assign(style, thisProps.style(thisProps));
      }
    } else {
      Object.assign(style, thisProps.style);
    }
    style.width = computedWidth;
    style.minWidth = computedWidth;
    if (minRowHeight) {
      style.minHeight = minRowHeight;
    }
    if (headerCell) {
      style.maxWidth = computedWidth;
    }
    if (maxWidth) {
      style.maxWidth = maxWidth;
    }
    if (!headerCell) {
      if (rowHeight && !naturalRowHeight) {
        style.height = rowHeight;
      }
      if (naturalRowHeight) {
        style.minHeight = minRowHeight;
      } else {
        if (initialRowHeight) {
          style.height = initialRowHeight;
        }
        if (rowHeight && computedRowspan > 1) {
          style.height = (initialRowHeight || rowHeight) * computedRowspan;
        }
      }
    }
    if (hidden) {
      style.display = 'none';
    }
    if (!headerCell && !computedLocked) {
      style.position = naturalRowHeight ? 'relative' : 'absolute';
      style.top = 0;
      if (!naturalRowHeight) {
        if (rtl) {
          style.right = computedOffset;
        } else {
          style.left = computedOffset;
        }
      }
    }
    if (state && state.dragging) {
      if (rtl) {
        style.right = state.right || 0;
      } else {
        style.left = state.left || 0;
      }
      style.top = state.top || 0;
      style.height = state.height || '';
      if (!thisProps.computedResizable && thisProps.computedFilterable) {
        if (rtl) {
          style.right = 0;
        } else {
          style.left = 0;
        }
        style.top = 0;
      }
      style.position = 'absolute';
      style.zIndex = 100;
    }
    if (zIndex) {
      style.zIndex = zIndex;
    }
    if (computedWidth === 0) {
      style.paddingLeft = 0;
      style.paddingRight = 0;
    }
    if (inTransition) {
      var duration = inShowTransition ? thisProps.showTransitionDuration : thisProps.hideTransitionDuration;
      duration = duration || thisProps.visibilityTransitionDuration;
      style.transitionDuration = typeof duration == 'number' ? "".concat(duration, "ms") : duration;
    }
    return style;
  };
  var prepareClassName = function prepareClassName(thisProps) {
    var isGroupCell = thisProps.groupCell,
      groupTitleCell = thisProps.groupTitleCell,
      groupExpandCell = thisProps.groupExpandCell,
      isHeaderCell = thisProps.headerCell,
      headerCellDefaultClassName = thisProps.headerCellDefaultClassName,
      cellDefaultClassName = thisProps.cellDefaultClassName,
      computedGroupBy = thisProps.computedGroupBy,
      depth = thisProps.depth,
      computedVisibleIndex = thisProps.computedVisibleIndex,
      headerCell = thisProps.headerCell,
      headerEllipsis = thisProps.headerEllipsis,
      groupProps = thisProps.groupProps,
      hidden = thisProps.hidden,
      showBorderRight = thisProps.showBorderRight,
      showBorderTop = thisProps.showBorderTop,
      showBorderBottom = thisProps.showBorderBottom,
      showBorderLeft = thisProps.showBorderLeft,
      firstInSection = thisProps.firstInSection,
      lastInSection = thisProps.lastInSection,
      noBackground = thisProps.noBackground,
      computedLocked = thisProps.computedLocked,
      computedWidth = thisProps.computedWidth,
      inTransition = thisProps.inTransition,
      rowSelected = thisProps.rowSelected,
      computedRowspan = thisProps.computedRowspan,
      cellSelected = thisProps.cellSelected,
      cellActive = thisProps.cellActive,
      groupSpacerColumn = thisProps.groupSpacerColumn,
      computedPivot = thisProps.computedPivot,
      computedResizable = thisProps.computedResizable,
      groupColumnVisible = thisProps.groupColumnVisible,
      computedFilterable = thisProps.computedFilterable,
      rtl = thisProps.rtl,
      inEdit = thisProps.inEdit,
      columnIndex = thisProps.columnIndex,
      columnIndexHovered = thisProps.columnIndexHovered,
      columnHoverClassName = thisProps.columnHoverClassName,
      bulkUpdate = thisProps.bulkUpdateMouseDown;
    var userSelect = thisProps.userSelect,
      headerUserSelect = thisProps.headerUserSelect;
    if (typeof userSelect === 'boolean') {
      userSelect = userSelect ? 'text' : 'none';
    }
    if (typeof headerUserSelect === 'boolean') {
      headerUserSelect = headerUserSelect ? 'text' : 'none';
    }
    var nested = depth != null && computedVisibleIndex == 0 && !headerCell && !groupColumnVisible;
    var baseClassName = isHeaderCell ? headerCellDefaultClassName : cellDefaultClassName;
    var commonClassName = (0, _join.default)(!computedLocked && "".concat(baseClassName, "--unlocked"), computedLocked && "".concat(baseClassName, "--locked"), computedLocked && "".concat(baseClassName, "--locked-").concat(computedLocked));
    var last = thisProps.last || thisProps.computedVisibleIndex == thisProps.computedVisibleCount - 1;
    var propsClassName = typeof thisProps.className === 'function' ? thisProps.className(thisProps) : thisProps.className;
    var className = (0, _join.default)(propsClassName, baseClassName, commonClassName, !isHeaderCell && thisProps.cellClassName, (nested || hidden) && "".concat(baseClassName, "--no-padding"), hidden && "".concat(baseClassName, "--hidden"), "".concat(baseClassName, "--direction-").concat(rtl ? 'rtl' : 'ltr'), computedRowspan > 1 && "".concat(baseClassName, "--rowspan"), inTransition && "".concat(baseClassName, "--transition"), inTransition && computedWidth && "".concat(baseClassName, "--showing"), inTransition && !computedWidth && "".concat(baseClassName, "--hiding"), computedWidth === 0 && "".concat(baseClassName, "--no-size"), nested && "".concat(baseClassName, "--stretch"), isHeaderCell && headerUserSelect == null || !isHeaderCell ? userSelect && "".concat(baseClassName, "--user-select-").concat(userSelect) : null, groupExpandCell && "".concat(baseClassName, "--group-expand-cell"), groupTitleCell && "".concat(baseClassName, "--group-title-cell"), rowSelected && "".concat(baseClassName, "--selected"), groupProps && "".concat(baseClassName, "--group-cell"), computedPivot && "".concat(baseClassName, "--pivot-enabled"), groupSpacerColumn && "".concat(baseClassName, "--group-column-cell"), inEdit && "".concat(baseClassName, "--in-edit"), cellSelected && "".concat(baseClassName, "--cell-selected"), cellActive && "".concat(baseClassName, "--cell-active"), bulkUpdate && cellSelected && "".concat(baseClassName, "--cell-bulk-update-mouse-down"), thisProps.textAlign && (isHeaderCell ? !thisProps.headerAlign : true) && "".concat(baseClassName, "--align-").concat(thisProps.textAlign), thisProps.textVerticalAlign && (isHeaderCell ? !thisProps.headerVerticalAlign : true) && "".concat(baseClassName, "--vertical-align-").concat(thisProps.textVerticalAlign), thisProps.virtualizeColumns && "".concat(baseClassName, "--virtualize-columns"), thisProps.computedVisibleIndex === 0 && "".concat(baseClassName, "--first"), thisProps.rowIndexInGroup === 0 && "".concat(baseClassName, "--first-row-in-group"), last && "".concat(baseClassName, "--last"), showBorderLeft && computedWidth !== 0 && (!isHeaderCell || !(computedResizable || computedFilterable)) && "".concat(baseClassName, "--show-border-").concat(rtl ? 'right' : 'left'), firstInSection && "".concat(baseClassName, "--first-in-section"), lastInSection && "".concat(baseClassName, "--last-in-section"), showBorderRight && computedWidth !== 0 && (!isHeaderCell || !(computedResizable || computedFilterable)) && "".concat(baseClassName, "--show-border-").concat(rtl ? 'left' : 'right'), showBorderTop && "".concat(baseClassName, "--show-border-top"), showBorderBottom && "".concat(baseClassName, "--show-border-bottom"), noBackground && "".concat(baseClassName, "--no-background"), columnIndex === columnIndexHovered ? columnHoverClassName ? (0, _join.default)("".concat(baseClassName, "--over"), columnHoverClassName) : "".concat(baseClassName, "--over") : '');
    if (cellSelected) {
      className = (0, _join.default)(className, thisProps.hasTopSelectedSibling && "".concat(baseClassName, "--cell-has-top-selected-sibling"), thisProps.hasBottomSelectedSibling && "".concat(baseClassName, "--cell-has-bottom-selected-sibling"), thisProps.hasLeftSelectedSibling && "".concat(baseClassName, "--cell-has-").concat(rtl ? 'right' : 'left', "-selected-sibling"), thisProps.hasRightSelectedSibling && "".concat(baseClassName, "--cell-has-").concat(rtl ? 'left' : 'right', "-selected-sibling"));
    }
    if (isHeaderCell) {
      className = (0, _join.default)(className, commonClassName, thisProps.headerClassName, thisProps.titleClassName, state && state.dragging && "".concat(baseClassName, "--dragging"), state && state.left && "".concat(baseClassName, "--reordered"), thisProps.computedSortable && "".concat(baseClassName, "--sortable"), headerUserSelect && "".concat(baseClassName, "--user-select-").concat(headerUserSelect), last && !headerEllipsis && "".concat(baseClassName, "--overflow-hidden"), "".concat(baseClassName, "--align-").concat(thisProps.headerAlign || 'start'), thisProps.group ? "".concat(baseClassName, "--has-group") : "".concat(baseClassName, "--has-no-group"), thisProps.headerVerticalAlign && "".concat(baseClassName, "--vertical-align-").concat(thisProps.headerVerticalAlign), thisProps.computedResizable ? "".concat(baseClassName, "--resizable") : "".concat(baseClassName, "--unresizable"), thisProps.computedLockable ? "".concat(baseClassName, "--lockable") : "".concat(baseClassName, "--unlockable"), thisProps.lastInGroup && "".concat(baseClassName, "--last-in-group"));
    } else {
      className = (0, _join.default)(className, (groupProps ? groupProps.depth == computedVisibleIndex : computedGroupBy ? computedGroupBy.length === computedVisibleIndex : computedVisibleIndex === 0) && "".concat(baseClassName, "--active-row-left-border"));
    }
    if (isGroupCell) {
      className = (0, _join.default)(className, 'InovuaReactDataGrid__group-cell');
    }
    return className;
  };
  var getInitialIndex = (0, _react.useCallback)(function () {
    return props.computedVisibleIndex;
  }, [props.computedVisibleIndex]);
  var getcomputedVisibleIndex = (0, _react.useCallback)(function () {
    return getProps().computedVisibleIndex;
  }, []);
  var renderNodeTool = function renderNodeTool(thisProps) {
    var data = thisProps.data,
      renderTreeCollapseTool = thisProps.renderTreeCollapseTool,
      renderTreeExpandTool = thisProps.renderTreeExpandTool,
      renderTreeLoadingTool = thisProps.renderTreeLoadingTool;
    var nodeProps = data.__nodeProps || emptyObject;
    var leafNode = nodeProps.leafNode;
    var loading = nodeProps.loading;
    var expanded = nodeProps.expanded;
    var collapsed = !expanded;
    var style = (0, _defineProperty2.default)({}, props.rtl ? 'marginRight' : 'marginLeft', (nodeProps.depth || 0) * thisProps.treeNestingSize);
    if (props.rtl && collapsed) {
      style.transform = 'rotate(180deg)';
    }
    var element = (0, _renderNodeTool.default)({
      render: thisProps.renderNodeTool,
      nodeExpanded: expanded,
      nodeCollapsed: collapsed,
      nodeLoading: loading,
      leafNode: leafNode,
      nodeProps: nodeProps,
      node: data,
      rtl: props.rtl,
      size: 20,
      style: style,
      toggleNodeExpand: thisProps.toggleNodeExpand,
      renderTreeCollapseTool: renderTreeCollapseTool,
      renderTreeExpandTool: renderTreeExpandTool,
      renderTreeLoadingTool: renderTreeLoadingTool
    }, thisProps);
    if (!element) {
      return;
    }
    return (0, _react.cloneElement)(element, {
      key: 'nodeTool'
    });
  };
  var getInitialDOMProps = (0, _react.useCallback)(function () {
    var thisProps = getProps();
    var domProps = thisProps.domProps;
    var specificDomProps = thisProps.headerCell ? thisProps.headerDOMProps : thisProps.cellDOMProps;
    if (typeof domProps == 'function') {
      domProps = domProps(thisProps);
    }
    if (typeof specificDomProps == 'function') {
      specificDomProps = specificDomProps(thisProps);
    }
    return Object.assign({}, domProps, specificDomProps);
  }, [getProps, props.domProps, props.headerCell, props.headerDOMProps, props.cellDOMProps]);
  var renderEditor = function renderEditor(_props) {
    var thisProps = getProps();
    var editorProps = _objectSpread(_objectSpread({
      nativeScroll: thisProps.nativeScroll
    }, thisProps.editorProps), {}, {
      editorProps: thisProps.editorProps,
      cell: cellInstance,
      cellProps: thisProps,
      value: thisProps.editValue,
      theme: thisProps.theme,
      rtl: thisProps.rtl,
      autoFocus: true,
      onChange: onEditValueChange,
      onComplete: onEditorComplete,
      onCancel: onEditorCancel,
      onEnterNavigation: onEditorEnterNavigation,
      onTabNavigation: onEditorTabNavigation,
      gotoNext: gotoNextEditor,
      gotoPrev: gotoPrevEditor,
      key: 'editor',
      onClick: onEditorClick
    });
    var Editor = thisProps.editor;
    if (Editor) {
      return _react.default.createElement(Editor, _objectSpread({}, editorProps));
    }
    if (thisProps.renderEditor) {
      return thisProps.renderEditor(editorProps, editorProps.cellProps, cellInstance);
    }
    return _react.default.createElement(_Text.default, _objectSpread({}, editorProps));
  };
  var isInEdit = (0, _react.useCallback)(function () {
    return getProps().inEdit;
  }, [props.inEdit]);
  var getEditable = (0, _react.useCallback)(function (editValue) {
    var thisProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getProps();
    if (thisProps.groupSpacerColumn || thisProps.groupProps) {
      return Promise.resolve(false);
    }
    var editable = thisProps.computedEditable;
    if (typeof editable === 'function') {
      return Promise.resolve(editable(editValue, thisProps));
    }
    return Promise.resolve(editable);
  }, [props.groupSpacerColumn, props.groupProps, props.computedEditable]);
  var onEditorTabLeave = function onEditorTabLeave(_direction) {};
  var gotoNextEditor = (0, _react.useCallback)(function () {
    return props.tryRowCellEdit && props.tryRowCellEdit(getProps().computedVisibleIndex + 1, +1);
  }, [props.tryRowCellEdit, props.computedVisibleIndex]);
  var gotoPrevEditor = (0, _react.useCallback)(function () {
    props.tryRowCellEdit && props.tryRowCellEdit(getProps().computedVisibleIndex - 1, -1);
  }, [props.tryRowCellEdit, props.computedVisibleIndex]);
  var onEditorEnterNavigation = (0, _react.useCallback)(function (complete, dir) {
    var thisProps = getProps();
    if (typeof dir !== 'number') {
      dir = 0;
    }
    var newIndex = props.rowIndex + dir;
    if (!complete) {
      stopEdit();
      if (newIndex != props.rowIndex) {
        thisProps.tryNextRowEdit && thisProps.tryNextRowEdit(dir, props.columnIndex, true);
      }
    } else {
      onEditorComplete();
      if (newIndex != thisProps.rowIndex) {
        thisProps.tryNextRowEdit && thisProps.tryNextRowEdit(dir, thisProps.columnIndex, true);
      }
    }
  }, [props.tryNextRowEdit, props.rowIndex, props.columnIndex]);
  var onEditorTabNavigation = (0, _react.useCallback)(function (complete, dir) {
    var thisProps = getProps();
    if (typeof dir !== 'number') {
      dir = 0;
    }
    var newIndex = thisProps.computedVisibleIndex + dir;
    if (!complete) {
      stopEdit();
      if (newIndex != thisProps.computedVisibleIndex) {
        thisProps.tryRowCellEdit && thisProps.tryRowCellEdit(newIndex, dir);
      }
    } else {
      onEditorComplete();
      if (newIndex != thisProps.computedVisibleIndex) {
        thisProps.tryRowCellEdit && thisProps.tryRowCellEdit(newIndex, dir);
      }
    }
  }, [props.computedVisibleIndex]);
  var onEditorClick = (0, _react.useCallback)(function (event) {
    event.stopPropagation();
  }, []);
  var onEditorCancel = (0, _react.useCallback)(function () {
    cancelEdit();
  }, []);
  var startEdit = (0, _react.useCallback)(function (editValue, errBack) {
    var thisProps = getProps();
    isCancelled.current = false;
    var editValuePromise = editValue === undefined ? getEditStartValue(thisProps) : Promise.resolve(editValue);
    return editValuePromise.then(function (editValue) {
      return getEditable(editValue, thisProps).then(function (editable) {
        if (!editable) {
          return Promise.reject(editable);
        }
        if (thisProps.onEditStart) {
          thisProps.onEditStart(editValue, thisProps);
        }
        if (thisProps.onEditStartForRow) {
          thisProps.onEditStartForRow(editValue, thisProps);
        }
        return editValue;
      });
    }).catch(errBack || function (_err) {});
  }, [props.onEditStart, props.onEditStartForRow]);
  var stopEdit = (0, _react.useCallback)(function () {
    var editValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getCurrentEditValue();
    var thisProps = getProps();
    if (thisProps.onEditStop) {
      thisProps.onEditStop(editValue, thisProps);
    }
    if (thisProps.onEditStopForRow) {
      thisProps.onEditStopForRow(editValue, thisProps);
    }
  }, [props.onEditStop, props.onEditStopForRow]);
  var cancelEdit = (0, _react.useCallback)(function () {
    isCancelled.current = true;
    stopEdit();
    var thisProps = getProps();
    if (thisProps.onEditCancel) {
      thisProps.onEditCancel(thisProps);
    }
    if (thisProps.onEditCancelForRow) {
      thisProps.onEditCancelForRow(thisProps);
    }
  }, [props.onEditCancel, props.onEditCancelForRow]);
  var onEditorComplete = (0, _react.useCallback)(function () {
    var now = Date.now();
    if (lastEditCompleteTimestamp.current && now - lastEditCompleteTimestamp.current < 50) {
      return;
    }
    lastEditCompleteTimestamp.current = now;
    if (!isCancelled.current) {
      completeEdit();
    }
    isCancelled.current = false;
  }, []);
  var getEditCompleteValue = (0, _react.useCallback)(function () {
    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getCurrentEditValue();
    if (props.getEditCompleteValue) {
      return props.getEditCompleteValue(value, getProps());
    }
    return value;
  }, [props.getEditCompleteValue, props.editValue]);
  var completeEdit = (0, _react.useCallback)(function () {
    var completeValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getEditCompleteValue();
    var thisProps = getProps();
    stopEdit();
    if (thisProps.onEditComplete) {
      thisProps.onEditComplete(completeValue, thisProps);
    }
    if (thisProps.onEditCompleteForRow) {
      thisProps.onEditCompleteForRow(completeValue, thisProps);
    }
  }, [props.onEditComplete, props.onEditCompleteForRow, getEditCompleteValue]);
  var getCurrentEditValue = function getCurrentEditValue() {
    var editValue = getProps().editValue;
    return editValue;
  };
  var onFilterValueChange = (0, _react.useCallback)(function (filterValue) {
    var thisProps = getProps();
    if (thisProps.onFilterValueChange) {
      thisProps.onFilterValueChange(filterValue, thisProps);
    }
  }, [props.onFilterValueChange]);
  var onEditValueChange = (0, _react.useCallback)(function (e) {
    var value = e && e.target ? e.target.value : e;
    var thisProps = getProps();
    if (thisProps.onEditValueChange) {
      thisProps.onEditValueChange(value, thisProps);
    }
    if (thisProps.onEditValueChangeForRow) {
      thisProps.onEditValueChangeForRow(value, thisProps);
    }
  }, [props.onEditValueChange, props.onEditValueChangeForRow]);
  var renderSelectionBox = (0, _react.useCallback)(function (_props) {
    var thisProps = getProps();
    var inTransition = thisProps.inTransition,
      inShowTransition = thisProps.inShowTransition,
      cellSelected = thisProps.cellSelected,
      cellActive = thisProps.cellActive,
      bulkUpdate = thisProps.bulkUpdateMouseDown;
    if (!cellSelected && !cellActive) {
      return null;
    }
    var style = {};
    if (inTransition) {
      var duration = inShowTransition ? props.showTransitionDuration : props.hideTransitionDuration;
      duration = duration || props.visibilityTransitionDuration;
      style.transitionDuration = typeof duration == 'number' ? "".concat(duration, "ms") : duration;
    }
    var className = (0, _join.default)('InovuaReactDataGrid__cell__selection', bulkUpdate && 'InovuaReactDataGrid__cell__selection__bulk-update-mouse-down');
    return _react.default.createElement("div", {
      key: "selectionBox",
      style: style,
      className: className
    }, props.lastInRange && props.computedCellMultiSelectionEnabled && _react.default.createElement("div", {
      className: "InovuaReactDataGrid__cell__selection-dragger InovuaReactDataGrid__cell__selection-dragger--direction-".concat(props.rtl ? 'rtl' : 'ltr'),
      onMouseDown: onCellSelectionDraggerMouseDown
    }));
  }, [props.computedCellMultiSelectionEnabled, props.lastInRange, props.rtl, props.inTransition, props.inShowTransition, props.cellSelected, props.cellActive, props.showTransitionDuration, props.hideTransitionDuration, props.visibilityTransitionDuration]);
  var onHeaderCellFocus = (0, _react.useCallback)(function (event) {
    var thisProps = getProps();
    if (thisProps.onFocus) {
      thisProps.onFocus(event, thisProps);
    }
    var initialProps = getInitialDOMProps();
    if (initialProps.onFocus) {
      initialProps.onFocus(event, thisProps);
    }
  }, [props.onFocus, getInitialDOMProps]);
  var onColumnHoverMouseEnter = (0, _react.useCallback)(function (thisProps) {
    if (thisProps.groupProps || thisProps.groupSpacerColumn || thisProps.isRowDetailsCell || thisProps.isCheckboxColumn) {
      return;
    }
    if (thisProps.onColumnMouseEnter) {
      thisProps.onColumnMouseEnter(thisProps);
    }
  }, [props.groupProps, props.groupSpacerColumn, props.isRowDetailsCell, props.isCheckboxColumn, props.onColumnMouseEnter]);
  var onColumnHoverMouseLeave = (0, _react.useCallback)(function (thisProps) {
    if (thisProps.groupProps || thisProps.groupSpacerColumn || thisProps.isRowDetailsCell || thisProps.isCheckboxColumn) {
      return;
    }
    if (thisProps.onColumnMouseLeave) {
      thisProps.onColumnMouseLeave(thisProps);
    }
  }, [props.groupProps, props.groupSpacerColumn, props.isRowDetailsCell, props.isCheckboxColumn, props.onColumnMouseLeave]);
  var onCellEnterHandle = (0, _react.useCallback)(function (event) {
    var thisProps = getProps();
    var initialProps = getInitialDOMProps();
    if (thisProps.onCellEnter) {
      thisProps.onCellEnter(event, thisProps);
    }
    if (thisProps.computedEnableColumnHover) {
      onColumnHoverMouseEnter(thisProps);
    }
    if (initialProps.onMouseEnter) {
      initialProps.onMouseEnter(event, thisProps);
    }
  }, [props.onCellEnter, props.computedEnableColumnHover, getInitialDOMProps]);
  var onCellLeave = (0, _react.useCallback)(function (event) {
    var thisProps = getProps();
    var initialProps = getInitialDOMProps();
    if (thisProps.onCellLeave) {
      thisProps.onCellLeave(event, thisProps);
    }
    if (thisProps.computedEnableColumnHover) {
      onColumnHoverMouseLeave(thisProps);
    }
    if (initialProps.onMouseLeave) {
      initialProps.onMouseLeave(event, thisProps);
    }
  }, [props.onCellLeave, props.computedEnableColumnHover, getInitialDOMProps]);
  var onCellSelectionDraggerMouseDown = (0, _react.useCallback)(function (event) {
    event.preventDefault();
    event.stopPropagation();
    if (props.onCellSelectionDraggerMouseDown) {
      props.onCellSelectionDraggerMouseDown(event, getProps());
    }
    if (props.onCellBulkUpdateMouseDown) {
      props.onCellBulkUpdateMouseDown(event, getProps());
    }
  }, [props.onCellSelectionDraggerMouseDown, props.onCellBulkUpdateMouseDown]);
  var prepareHeaderCellProps = (0, _react.useCallback)(function (cellProps) {
    var thisProps = getProps();
    var children = cellProps.children,
      computedSortInfo = cellProps.computedSortInfo;
    var computedSortable = thisProps.computedSortable;
    var sortTools = computedSortable ? getSortTools(computedSortInfo ? computedSortInfo.dir : null, cellProps) : null;
    if (sortTools) {
      cellProps.children = [children && children.props ? (0, _react.cloneElement)(children, {
        key: 'content'
      }) : children, sortTools];
      if (thisProps.headerAlign === 'end' || !thisProps.headerAlign && thisProps.textAlign == 'end') {
        cellProps.children.reverse();
      }
    }
    if (cellProps.renderHeader) {
      if (!Array.isArray(cellProps.children)) {
        cellProps.children = [cellProps.children];
      }
      cellProps.children = cellProps.renderHeader(cellProps);
    }
    if (computedSortInfo && computedSortInfo.dir) {
      var dirName = computedSortInfo.dir === 1 ? 'asc' : 'desc';
      cellProps.className = (0, _join.default)(cellProps.className, "".concat(thisProps.headerCellDefaultClassName, "--sort-").concat(dirName));
    }
    cellProps.onResizeMouseDown = onResizeMouseDown.bind(cellInstance, cellProps);
    cellProps.onResizeTouchStart = onResizeTouchStart.bind(cellInstance, cellProps);
    return cellProps;
  }, [props.computedSortable, props.headerAlign, props.textAlign, props.headerCellDefaultClassName]);
  var onMouseDown = (0, _react.useCallback)(function (event) {
    var thisProps = getProps();
    var initialDOMProps = getInitialDOMProps();
    if (event.button === 2) {
      return;
    }
    if (thisProps.onMouseDown) {
      thisProps.onMouseDown(thisProps, event);
    }
    if (initialDOMProps.onMouseDown) {
      initialDOMProps.onMouseDown(event, thisProps);
    }
    if (thisProps.onCellMouseDown) {
      thisProps.onCellMouseDown(event, thisProps);
    }
    if (thisProps.onDragRowMouseDown && thisProps.id === _defaultRowReorderColumnId.id) {
      thisProps.onDragRowMouseDown(event, thisProps.rowIndex, domRef);
    }
  }, [props.onMouseDown, props.onCellMouseDown, props.onDragRowMouseDown, props.id, props.rowIndex]);
  var onContextMenu = (0, _react.useCallback)(function (event) {
    var thisProps = getProps();
    var initialDOMProps = getInitialDOMProps();
    if (event.nativeEvent) {
      event.nativeEvent.__cellProps = thisProps;
    }
    if (thisProps.onContextMenu) {
      thisProps.onContextMenu(event, thisProps);
    }
    if (initialDOMProps.onContextMenu) {
      initialDOMProps.onContextMenu(event, thisProps);
    }
  }, [props.onContextMenu, getProps]);
  var onTouchStart = (0, _react.useCallback)(function (event) {
    var thisProps = getProps();
    var initialDOMProps = getInitialDOMProps();
    if (thisProps.onTouchStart) {
      thisProps.onTouchStart(thisProps, event);
    }
    if (initialDOMProps.onTouchStart) {
      initialDOMProps.onTouchStart(event, thisProps);
    }
    if (thisProps.onCellTouchStart) {
      thisProps.onCellTouchStart(event, thisProps);
    }
    if (thisProps.onDragRowMouseDown && thisProps.id === _defaultRowReorderColumnId.id) {
      thisProps.onDragRowMouseDown(event, thisProps.rowIndex, domRef);
    }
    event.stopPropagation();
  }, [props.onTouchStart, props.onCellTouchStart, props.onDragRowMouseDown, props.id, props.rowIndex]);
  var onResizeMouseDown = (0, _react.useCallback)(function (cellProps, event) {
    var thisProps = getProps();
    hideFilterContextMenu();
    if (thisProps.hideColumnContextMenu) {
      thisProps.hideColumnContextMenu();
    }
    if (thisProps.onResizeMouseDown) {
      var node = getDOMNode();
      thisProps.onResizeMouseDown(cellProps, {
        colHeaderNode: node,
        event: event
      });
    }
  }, [props.hideColumnContextMenu, props.onResizeMouseDown]);
  var onResizeTouchStart = (0, _react.useCallback)(function (cellProps, event) {
    var thisProps = getProps();
    if (thisProps.onResizeTouchStart) {
      thisProps.onResizeTouchStart(cellProps, {
        colHeaderNode: getDOMNode(),
        event: event
      });
    }
  }, [props.onResizeTouchStart]);
  var onClick = (0, _react.useCallback)(function (event) {
    var thisProps = getProps();
    var initialDOMProps = getInitialDOMProps();
    if (thisProps.onClick) {
      thisProps.onClick(event, thisProps);
    }
    if (initialDOMProps.onClick) {
      initialDOMProps.onClick(event, thisProps);
    }
    if (!thisProps.headerCell && thisProps.onCellClick) {
      thisProps.onCellClick(event, thisProps);
    }
    if (!thisProps.headerCell) {
      if (thisProps.computedEditable && !thisProps.inEdit && (thisProps.editStartEvent === 'onClick' || thisProps.editStartEvent === 'click')) {
        startEdit();
      }
      return;
    }
    if (thisProps.preventSortOnClick) {
      if (thisProps.preventSortOnClick(event, thisProps) === true) {
        return;
      }
    }
    if (!thisProps.sortDelay || thisProps.sortDelay < 1) {
      return onSortClick();
    }
    if (sortTimeoutId.current) {
      clearTimeout(sortTimeoutId.current);
      sortTimeoutId.current = null;
    }
    sortTimeoutId.current = setTimeout(function () {
      onSortClick();
      sortTimeoutId.current = null;
    }, parseInt(thisProps.sortDelay, 10));
    return undefined;
  }, [props.onClick, props.onCellClick, props.headerCell, props.computedEditable, props.inEdit, props.editStartEvent, props.preventSortOnClick, props.sortDelay]);
  var onDoubleClick = function onDoubleClick(event) {
    var thisProps = getProps();
    var initialDOMProps = getInitialDOMProps();
    if (thisProps.onDoubleClick) {
      thisProps.onDoubleClick(event, thisProps);
    }
    if (initialDOMProps.onDoubleClick) {
      initialDOMProps.onDoubleClick(event, thisProps);
    }
    var headerProps = thisProps.headerProps,
      headerCell = thisProps.headerCell;
    if (!headerCell) {
      if (thisProps.computedEditable && !thisProps.inEdit && (thisProps.editStartEvent === 'onDoubleClick' || thisProps.editStartEvent === 'dblclick' || thisProps.editStartEvent === 'doubleclick')) {
        startEdit();
      }
      return;
    }
    if (headerProps && headerProps.onDoubleClick) {
      headerProps.onDoubleClick(event, thisProps);
    }
    if (sortTimeoutId.current) {
      clearTimeout(sortTimeoutId.current);
      sortTimeoutId.current = null;
    }
  };
  var getEditStartValue = function getEditStartValue() {
    var thisProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getProps();
    if (typeof thisProps.getEditStartValue == 'function') {
      return Promise.resolve(thisProps.getEditStartValue(thisProps.value, thisProps));
    }
    return Promise.resolve(thisProps.value);
  };
  var onSortClick = function onSortClick() {
    var thisProps = getProps();
    if (thisProps.headerCell && thisProps.computedSortable) {
      if (thisProps.onSortClick) {
        thisProps.onSortClick(thisProps);
      }
    }
  };
  var getSortTools = (0, _react.useCallback)(function () {
    var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
    var cellProps = arguments.length > 1 ? arguments[1] : undefined;
    var _getProps = getProps(),
      computedSortable = _getProps.computedSortable,
      render = _getProps.renderSortTool;
    return (0, _renderSortTool.default)({
      sortable: computedSortable,
      direction: direction,
      renderSortTool: render
    }, cellProps);
  }, [props.computedSortable, props.renderSortTool]);
  var showFilterContextMenu = (0, _react.useCallback)(function (node) {
    if (props.showColumnFilterContextMenu) {
      props.showColumnFilterContextMenu(node, getProps());
    }
  }, [props.showColumnFilterContextMenu]);
  var hideFilterContextMenu = (0, _react.useCallback)(function (node) {
    if (props.hideColumnFilterContextMenu) {
      props.hideColumnFilterContextMenu(node);
    }
  }, [props.hideColumnFilterContextMenu]);
  var showContextMenu = (0, _react.useCallback)(function (domRef, onHide) {
    if (props.showColumnContextMenu) {
      props.showColumnContextMenu(domRef ? domRef : null, getProps(), {
        computedVisibleIndex: props.computedVisibleIndex
      }, onHide);
    }
  }, [props.showColumnContextMenu]);
  var getProxyRegion = (0, _react.useCallback)(function () {
    var node = getDOMNode();
    var _getProps2 = getProps(),
      computedResizable = _getProps2.computedResizable,
      computedFilterable = _getProps2.computedFilterable;
    return computedFilterable ? _region.default.from(node.firstChild) : _region.default.from(computedResizable ? node.firstChild : node);
  }, [props.computedResizable, props.computedFilterable]);
  var renderGroupTool = (0, _react.useCallback)(function () {
    var thisProps = getProps();
    var rtl = thisProps.rtl,
      collapsed = thisProps.collapsed,
      groupProps = thisProps.groupProps,
      renderGroupCollapseTool = thisProps.renderGroupCollapseTool,
      renderGroupExpandTool = thisProps.renderGroupExpandTool;
    return (0, _renderGroupTool.default)({
      render: groupProps === null || groupProps === void 0 ? void 0 : groupProps.renderGroupTool,
      collapsed: collapsed,
      rtl: rtl,
      size: 20,
      renderGroupCollapseTool: renderGroupCollapseTool,
      renderGroupExpandTool: renderGroupExpandTool,
      toggleGroup: toggleGroup
    });
  }, [props.rtl, props.collapsed, props.groupProps]);
  var toggleGroup = (0, _react.useCallback)(function (event) {
    if (event && event.preventDefault) {
      event.preventDefault();
    }
    var props = getProps();
    if (typeof props.onGroupToggle === 'function') {
      var _data = props.data;
      props.onGroupToggle(_data.keyPath, props, event);
    }
  }, [props.onGroupToggle, props.data, getProps]);
  var cellInstance = {
    showContextMenu: showContextMenu,
    getProps: getProps,
    setLeft: setLeft,
    setRight: setRight,
    setTop: setTop,
    setHeight: setHeight,
    setWidth: setWidth,
    setDragging: setDragging,
    setStateProps: setStateProps,
    updateState: updateState,
    updateProps: updateProps,
    getDOMNode: getDOMNode,
    onUpdate: onUpdate,
    getInitialIndex: getInitialIndex,
    getcomputedVisibleIndex: getcomputedVisibleIndex,
    getInitialDOMProps: getInitialDOMProps,
    isInEdit: isInEdit,
    getEditable: getEditable,
    onEditorTabLeave: onEditorTabLeave,
    gotoNextEditor: gotoNextEditor,
    gotoPrevEditor: gotoPrevEditor,
    onEditorEnterNavigation: onEditorEnterNavigation,
    onEditorTabNavigation: onEditorTabNavigation,
    onEditorClick: onEditorClick,
    onEditorCancel: onEditorCancel,
    startEdit: startEdit,
    stopEdit: stopEdit,
    cancelEdit: cancelEdit,
    onEditorComplete: onEditorComplete,
    getEditCompleteValue: getEditCompleteValue,
    completeEdit: completeEdit,
    getCurrentEditValue: getCurrentEditValue,
    onFilterValueChange: onFilterValueChange,
    onEditValueChange: onEditValueChange,
    onHeaderCellFocus: onHeaderCellFocus,
    onColumnHoverMouseEnter: onColumnHoverMouseEnter,
    onColumnHoverMouseLeave: onColumnHoverMouseLeave,
    onCellEnterHandle: onCellEnterHandle,
    onCellLeave: onCellLeave,
    onCellSelectionDraggerMouseDown: onCellSelectionDraggerMouseDown,
    prepareHeaderCellProps: prepareHeaderCellProps,
    onMouseDown: onMouseDown,
    onContextMenu: onContextMenu,
    onTouchStart: onTouchStart,
    onResizeMouseDown: onResizeMouseDown,
    onResizeTouchStart: onResizeTouchStart,
    onClick: onClick,
    onDoubleClick: onDoubleClick,
    getEditStartValue: getEditStartValue,
    onSortClick: onSortClick,
    getSortTools: getSortTools,
    showFilterContextMenu: showFilterContextMenu,
    hideFilterContextMenu: hideFilterContextMenu,
    getProxyRegion: getProxyRegion,
    renderGroupTool: renderGroupTool,
    toggleGroup: toggleGroup,
    domRef: getDOMNode(),
    props: props
  };
  var thisProps = getProps();
  var cellActive = thisProps.cellActive,
    cellSelected = thisProps.cellSelected,
    data = thisProps.data,
    empty = thisProps.empty,
    groupProps = thisProps.groupProps,
    headerCell = thisProps.headerCell,
    hidden = thisProps.hidden,
    name = thisProps.name,
    onRender = thisProps.onRender,
    treeColumn = thisProps.treeColumn,
    groupSpacerColumn = thisProps.groupSpacerColumn,
    loadNodeAsync = thisProps.loadNodeAsync,
    groupColumnVisible = thisProps.groupColumnVisible,
    rowIndex = thisProps.rowIndex,
    remoteRowIndex = thisProps.remoteRowIndex,
    rowSelected = thisProps.rowSelected,
    rowExpanded = thisProps.rowExpanded,
    setRowSelected = thisProps.setRowSelected,
    setRowExpanded = thisProps.setRowExpanded,
    isRowExpandable = thisProps.isRowExpandable,
    toggleRowExpand = thisProps.toggleRowExpand,
    toggleNodeExpand = thisProps.toggleNodeExpand,
    totalDataCount = thisProps.totalDataCount,
    computedVisibleIndex = thisProps.computedVisibleIndex,
    inEdit = thisProps.inEdit,
    renderRowDetailsMoreIcon = thisProps.renderRowDetailsMoreIcon,
    renderRowDetailsExpandIcon = thisProps.renderRowDetailsExpandIcon,
    renderRowDetailsCollapsedIcon = thisProps.renderRowDetailsCollapsedIcon,
    notifyColumnFilterVisibleStateChange = thisProps.notifyColumnFilterVisibleStateChange;
  var value = thisProps.value,
    renderCell = thisProps.render,
    renderSummary = thisProps.renderSummary;
  var className = prepareClassName(thisProps);
  var style = prepareStyle(thisProps);
  var headerProps = headerCell ? thisProps.headerProps || emptyObject : null;
  if (!headerCell && groupSpacerColumn && groupProps && groupProps.depth == computedVisibleIndex) {
    value = renderGroupTool();
  }
  var children = value;
  var cellProps = Object.assign({}, thisProps, headerCell ? headerProps : thisProps.cellProps, {
    instance: cellInstance,
    value: value,
    name: name,
    notifyColumnFilterVisibleStateChange: notifyColumnFilterVisibleStateChange,
    columnIndex: computedVisibleIndex,
    children: children,
    onClick: onClick,
    onDoubleClick: onDoubleClick,
    onContextMenu: onContextMenu,
    onMouseDown: onMouseDown,
    onTouchStart: onTouchStart,
    onMouseEnter: onCellEnterHandle,
    onMouseLeave: onCellLeave
  });
  cellProps.className = headerCell ? headerProps.className ? "".concat(className, " ").concat(headerProps.className) : className : thisProps.cellProps && thisProps.cellProps.className ? typeof thisProps.cellProps.className === 'function' ? "".concat(className, " ").concat(thisProps.cellProps.className(cellProps)) : "".concat(className, " ").concat(thisProps.cellProps.className) : className;
  if (!headerCell) {
    CELL_RENDER_OBJECT.empty = empty;
    CELL_RENDER_OBJECT.value = value;
    CELL_RENDER_OBJECT.data = data;
    CELL_RENDER_OBJECT.cellProps = cellProps;
    CELL_RENDER_OBJECT.columnIndex = computedVisibleIndex;
    CELL_RENDER_OBJECT.treeColumn = treeColumn;
    CELL_RENDER_OBJECT.rowIndex = rowIndex;
    CELL_RENDER_OBJECT.remoteRowIndex = remoteRowIndex;
    CELL_RENDER_OBJECT.rowIndexInGroup = thisProps.rowIndexInGroup;
    CELL_RENDER_OBJECT.rowSelected = rowSelected;
    CELL_RENDER_OBJECT.rowExpanded = rowExpanded;
    CELL_RENDER_OBJECT.nodeProps = data ? data.__nodeProps : emptyObject;
    CELL_RENDER_OBJECT.setRowSelected = setRowSelected;
    CELL_RENDER_OBJECT.setRowExpanded = setRowExpanded;
    CELL_RENDER_OBJECT.toggleGroup = toggleGroup;
    CELL_RENDER_OBJECT.toggleRowExpand = toggleRowExpand;
    CELL_RENDER_OBJECT.toggleNodeExpand = toggleNodeExpand;
    CELL_RENDER_OBJECT.loadNodeAsync = loadNodeAsync;
    CELL_RENDER_OBJECT.isRowExpandable = isRowExpandable;
    CELL_RENDER_OBJECT.totalDataCount = totalDataCount;
    CELL_RENDER_OBJECT.renderRowDetailsExpandIcon = renderRowDetailsExpandIcon;
    CELL_RENDER_OBJECT.renderRowDetailsCollapsedIcon = renderRowDetailsCollapsedIcon;
  }
  var rendersInlineEditor = headerCell ? false : cellProps.rendersInlineEditor;
  if (rendersInlineEditor && typeof rendersInlineEditor === 'function') {
    rendersInlineEditor = cellProps.rendersInlineEditor(CELL_RENDER_OBJECT);
  }
  CELL_RENDER_OBJECT.rendersInlineEditor = rendersInlineEditor;
  cellProps.style = headerCell ? headerProps.style ? Object.assign({}, style, headerProps.style) : style : thisProps.cellProps && thisProps.cellProps.style ? typeof thisProps.cellProps.style === 'function' ? Object.assign({}, style, thisProps.cellProps.style(cellProps)) : Object.assign({}, style, thisProps.cellProps.style) : style;
  if (inEdit || rendersInlineEditor) {
    cellProps.editProps = {
      inEdit: inEdit,
      startEdit: startEdit,
      value: thisProps.editValue,
      onClick: onEditorClick,
      onChange: onEditValueChange,
      onComplete: onEditorComplete,
      onCancel: onEditorCancel,
      onEnterNavigation: onEditorEnterNavigation,
      onTabNavigation: onEditorTabNavigation,
      gotoNext: gotoNextEditor,
      gotoPrev: gotoPrevEditor
    };
  }
  if (headerCell) {
    cellProps.onFocus = onHeaderCellFocus;
  }
  if (headerCell) {
    CELL_RENDER_OBJECT.renderRowDetailsMoreIcon = renderRowDetailsMoreIcon;
  }
  if (headerCell) {
    cellProps = prepareHeaderCellProps(cellProps);
  } else {
    if (data && (data.__summary || data.__group && data.groupColumnSummary) && renderSummary) {
      renderCell = renderSummary;
    }
    if (renderCell) {
      CELL_RENDER_SECOND_OBJ.cellProps = cellProps;
      CELL_RENDER_SECOND_OBJ.column = cellProps;
      CELL_RENDER_SECOND_OBJ.headerProps = null;
      if (data && (!data.__group || groupColumnVisible)) {
        cellProps.children = renderCell(CELL_RENDER_OBJECT, CELL_RENDER_SECOND_OBJ);
      }
    }
    if (!hidden && cellProps.children != null && cellProps.textEllipsis !== false) {
      cellProps.children = wrapInContent(cellProps.children);
    }
    if (onRender) {
      onRender(cellProps, CELL_RENDER_OBJECT);
    }
    if (cellSelected || cellActive || inEdit || rendersInlineEditor) {
      cellProps.children = [cellProps.children, renderSelectionBox(cellProps), inEdit && !rendersInlineEditor ? renderEditor(cellProps) : null];
    }
    if (treeColumn) {
      if (Array.isArray(cellProps.children)) {
        cellProps.children = [renderNodeTool(thisProps)].concat((0, _toConsumableArray2.default)(cellProps.children));
      } else {
        cellProps.children = [renderNodeTool(thisProps), cellProps.children];
      }
    }
  }
  var initialDOMProps = getInitialDOMProps();
  var domProps = Object.assign({}, initialDOMProps, {
    onFocus: cellProps.onFocus || initialDOMProps.onFocus,
    onClick: cellProps.onClick || initialDOMProps.onClick,
    onContextMenu: cellProps.onContextMenu || initialDOMProps.onContextMenu,
    onDoubleClick: cellProps.onDoubleClick || initialDOMProps.onDoubleClick,
    onMouseDown: cellProps.onMouseDown || initialDOMProps.onMouseDown,
    onTouchStart: cellProps.onTouchStart || initialDOMProps.onTouchStart,
    onMouseEnter: cellProps.onMouseEnter || initialDOMProps.onMouseEnter,
    onMouseLeave: cellProps.onMouseLeave || initialDOMProps.onMouseLeave,
    style: initialDOMProps.style ? Object.assign({}, initialDOMProps.style, cellProps.style) : cellProps.style,
    className: (0, _join.default)(initialDOMProps.className, cellProps.className)
  });
  domProps.ref = domRef;
  return headerCell ? (0, _renderHeader.default)(cellProps, domProps, cellInstance, state) : _react.default.createElement("div", _objectSpread(_objectSpread({}, domProps), {}, {
    children: cellProps.children,
    "data-props-id": props.id,
    "data-state-props-id": getProps().id,
    id: null,
    name: null,
    value: null,
    title: null,
    data: null
  }));
}
InovuaDataGridCell.defaultProps = {
  cellDefaultClassName: cellBem(),
  headerCellDefaultClassName: headerBem(),
  computedMinWidth: 40,
  groupNestingSize: 10,
  treeNestingSize: 10,
  checkboxTabIndex: null,
  onSortClick: emptyFn,
  preventSortOnClick: function preventSortOnClick(event) {
    var target = event.target;
    return (0, _isFocusable.default)(target);
  }
};
InovuaDataGridCell.propTypes = {
  computedAbsoluteIndex: _propTypes.default.number,
  checkboxTabIndex: _propTypes.default.number,
  cellActive: _propTypes.default.bool,
  cellClassName: _propTypes.default.string,
  cellDefaultClassName: _propTypes.default.string,
  cellDOMProps: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]),
  computedCellMultiSelectionEnabled: _propTypes.default.bool,
  cellSelectable: _propTypes.default.bool,
  cellSelected: _propTypes.default.bool,
  checkboxColumn: _propTypes.default.any,
  collapsed: _propTypes.default.bool,
  computedColspan: _propTypes.default.number,
  computedRowspan: _propTypes.default.number,
  columnIndex: _propTypes.default.number,
  columnResizeHandleWidth: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  computedLocked: _propTypes.default.oneOf([false, 'start', 'end']),
  computedWidth: _propTypes.default.number,
  data: _propTypes.default.oneOfType([_propTypes.default.shape({}), _propTypes.default.array]),
  defaultWidth: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  depth: _propTypes.default.number,
  deselectAll: _propTypes.default.func,
  domProps: _propTypes.default.object,
  empty: _propTypes.default.bool,
  first: _propTypes.default.bool,
  firstInSection: _propTypes.default.bool,
  computedFlex: _propTypes.default.number,
  flex: _propTypes.default.number,
  group: _propTypes.default.string,
  computedGroupBy: _propTypes.default.any,
  groupCell: _propTypes.default.bool,
  groupSpacerColumn: _propTypes.default.bool,
  groupNestingSize: _propTypes.default.number,
  groupProps: _propTypes.default.object,
  hasBottomSelectedSibling: _propTypes.default.bool,
  hasLeftSelectedSibling: _propTypes.default.bool,
  hasLockedStart: _propTypes.default.bool,
  hasRightSelectedSibling: _propTypes.default.bool,
  hasTopSelectedSibling: _propTypes.default.bool,
  header: _propTypes.default.any,
  headerAlign: _propTypes.default.oneOf(['start', 'center', 'end']),
  headerCell: _propTypes.default.bool,
  headerCellDefaultClassName: _propTypes.default.string,
  headerClassName: _propTypes.default.string,
  headerDOMProps: _propTypes.default.object,
  headerEllipsis: _propTypes.default.bool,
  headerHeight: _propTypes.default.number,
  headerProps: _propTypes.default.any,
  headerUserSelect: _propTypes.default.oneOf([true, false, 'text', 'none']),
  headerVerticalAlign: _propTypes.default.oneOf(['top', 'middle', 'center', 'bottom', 'start', 'end']),
  headerWrapperClassName: _propTypes.default.string,
  hidden: _propTypes.default.bool,
  hideIntermediateState: _propTypes.default.bool,
  hideTransitionDuration: _propTypes.default.number,
  hiding: _propTypes.default.bool,
  id: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  inHideTransition: _propTypes.default.bool,
  inShowTransition: _propTypes.default.bool,
  inTransition: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.number]),
  index: _propTypes.default.number,
  initialIndex: _propTypes.default.number,
  isColumn: _propTypes.default.bool,
  last: _propTypes.default.bool,
  lastInRange: _propTypes.default.bool,
  lastInSection: _propTypes.default.bool,
  lastRowInGroup: _propTypes.default.bool,
  lastUnlocked: _propTypes.default.bool,
  locked: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),
  maxWidth: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  computedMaxWidth: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  minWidth: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  computedMinWidth: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  minRowHeight: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  multiSelect: _propTypes.default.bool,
  name: _propTypes.default.string,
  nativeScroll: _propTypes.default.bool,
  nextBorderLeft: _propTypes.default.bool,
  noBackground: _propTypes.default.bool,
  onCellClick: _propTypes.default.func,
  onCellEnter: _propTypes.default.func,
  onCellMouseDown: _propTypes.default.func,
  preventSortOnClick: _propTypes.default.func,
  onCellSelectionDraggerMouseDown: _propTypes.default.func,
  onGroupToggle: _propTypes.default.func,
  onMount: _propTypes.default.func,
  onRender: _propTypes.default.func,
  onResizeMouseDown: _propTypes.default.func,
  onResizeTouchStart: _propTypes.default.func,
  onSortClick: _propTypes.default.func,
  onUnmount: _propTypes.default.func,
  prevBorderRight: _propTypes.default.bool,
  render: _propTypes.default.func,
  renderCheckbox: _propTypes.default.func,
  renderGroupTitle: _propTypes.default.func,
  renderHeader: _propTypes.default.func,
  renderSortTool: _propTypes.default.func,
  computedResizable: _propTypes.default.bool,
  lockable: _propTypes.default.bool,
  resizeProxyStyle: _propTypes.default.object,
  rowActive: _propTypes.default.bool,
  rowHeight: _propTypes.default.number,
  initialRowHeight: _propTypes.default.number,
  rowIndex: _propTypes.default.number,
  rowIndexInGroup: _propTypes.default.number,
  rowRenderIndex: _propTypes.default.number,
  rowSelected: _propTypes.default.bool,
  scrollbarWidth: _propTypes.default.number,
  indexInHeaderGroup: _propTypes.default.number,
  parentGroups: _propTypes.default.array,
  selectAll: _propTypes.default.func,
  selectedCount: _propTypes.default.number,
  selection: _propTypes.default.any,
  setRowSelected: _propTypes.default.func,
  setRowExpanded: _propTypes.default.func,
  toggleRowExpand: _propTypes.default.func,
  toggleNodeExpand: _propTypes.default.func,
  shouldComponentUpdate: _propTypes.default.func,
  showBorderBottom: _propTypes.default.bool,
  showBorderLeft: _propTypes.default.bool,
  showBorderRight: _propTypes.default.any,
  showBorderTop: _propTypes.default.bool,
  showColumnContextMenu: _propTypes.default.func,
  showColumnMenuSortOptions: _propTypes.default.bool,
  showColumnMenuFilterOptions: _propTypes.default.bool,
  showColumnMenuLockOptions: _propTypes.default.bool,
  showColumnMenuGroupOptions: _propTypes.default.bool,
  showTransitionDuration: _propTypes.default.number,
  sort: _propTypes.default.any,
  sortDelay: _propTypes.default.number,
  computedSortInfo: _propTypes.default.any,
  computedSortable: _propTypes.default.bool,
  textAlign: _propTypes.default.oneOf(['start', 'center', 'end']),
  textEllipsis: _propTypes.default.bool,
  textVerticalAlign: _propTypes.default.oneOf(['top', 'middle', 'center', 'bottom', 'start', 'end']),
  titleClassName: _propTypes.default.string,
  tryRowCellEdit: _propTypes.default.func,
  totalCount: _propTypes.default.number,
  totalDataCount: _propTypes.default.number,
  unselectedCount: _propTypes.default.number,
  userSelect: _propTypes.default.oneOf([true, false, 'text', 'none']),
  value: _propTypes.default.any,
  virtualizeColumns: _propTypes.default.bool,
  visibilityTransitionDuration: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.number]),
  computedVisible: _propTypes.default.bool,
  computedVisibleCount: _propTypes.default.number,
  computedVisibleIndex: _propTypes.default.number,
  indexInColumns: _propTypes.default.number,
  width: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  editable: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.func]),
  onEditStop: _propTypes.default.func,
  onEditStart: _propTypes.default.func,
  onEditCancel: _propTypes.default.func,
  onEditValueChange: _propTypes.default.func,
  onEditComplete: _propTypes.default.func,
  onEditStopForRow: _propTypes.default.func,
  onEditStartForRow: _propTypes.default.func,
  onEditCancelForRow: _propTypes.default.func,
  onEditValueChangeForRow: _propTypes.default.func,
  onEditCompleteForRow: _propTypes.default.func,
  onDragRowMouseDown: _propTypes.default.func,
  isRowExpandable: _propTypes.default.func,
  editorProps: _propTypes.default.any,
  editValue: _propTypes.default.any,
  Editor: _propTypes.default.func,
  renderEditor: _propTypes.default.func,
  zIndex: _propTypes.default.number,
  computedOffset: _propTypes.default.number,
  groupTitleCell: _propTypes.default.bool,
  groupExpandCell: _propTypes.default.bool,
  rendersInlineEditor: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.func]),
  groupColumn: _propTypes.default.bool,
  treeColumn: _propTypes.default.bool,
  renderNodeTool: _propTypes.default.func,
  showInContextMenu: _propTypes.default.bool,
  naturalRowHeight: _propTypes.default.bool,
  rtl: _propTypes.default.bool,
  computedFilterable: _propTypes.default.bool,
  computedEditable: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.func]),
  groupColumnVisible: _propTypes.default.bool,
  filterTypes: _propTypes.default.any,
  filterDelay: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.number]),
  getFilterValue: _propTypes.default.func,
  onFilterValueChange: _propTypes.default.func,
  getEditStartValue: _propTypes.default.func,
  getEditCompleteValue: _propTypes.default.func,
  editStartEvent: _propTypes.default.string,
  setActiveIndex: _propTypes.default.func,
  renderColumnReorderProxy: _propTypes.default.func,
  columnHoverClassName: _propTypes.default.string,
  renderRowDetailsExpandIcon: _propTypes.default.func,
  renderRowDetailsCollapsedIcon: _propTypes.default.func
};
var _default = _react.default.memo(InovuaDataGridCell, function (prevProps, nextProps) {
  var areEqual = (0, _shallowequal.equalReturnKey)(nextProps, prevProps, {
    computedActiveIndex: 1,
    activeRowRef: 1,
    active: 1,
    timestamp: 1,
    remoteRowIndex: 1,
    onResizeMouseDown: 1,
    onResizeTouchStart: 1,
    onFocus: 1,
    onSortClick: 1,
    onTouchStart: 1,
    onColumnMouseEnter: 1,
    onColumnMouseLeave: 1
  });
  var equalProps = areEqual.result;
  if (!equalProps) {
    return false;
  }
  return true;
});
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/renderFilter/index.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/renderFilter/index.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _StringFilter = _interopRequireDefault(__webpack_require__(/*! ../../../../StringFilter/StringFilter */ "./node_modules/@inovua/reactdatagrid-community/StringFilter/StringFilter.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var filterWrapperClassName = 'InovuaReactDataGrid__column-header__filter-wrapper';
var GenericFilter = function (_React$Component) {
  (0, _inherits2.default)(GenericFilter, _React$Component);
  var _super = _createSuper(GenericFilter);
  function GenericFilter(props) {
    var _this;
    (0, _classCallCheck2.default)(this, GenericFilter);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onSettingsClickListener", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "settings", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "refSettings", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "ref", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "specificFilter", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "unsubscribeColumnFilterVisibility", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setupEventListener", function () {
      _this.unsubscribeColumnFilterVisibility = _this.props.props.notifyColumnFilterVisibleStateChange.onCalled(function (visible) {
        if (!visible && _this.state.open) {
          _this.close(_this.settings);
        }
      });
      _this.refSettings = function (s) {
        if (s) {
          if (!_this.onSettingsClickListener) {
            _this.onSettingsClickListener = s.addEventListener('mousedown', _this.onSettingsClick);
          }
        } else {
          if (_this.settings && _this.onSettingsClickListener) {
            _this.settings.removeEventListener(_this.onSettingsClickListener);
          }
        }
        _this.settings = s;
      };
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onSettingsClick", function (e) {
      if (!_this.state.open) {
        _this.onMenuOpen(e);
      } else {
        _this.onMenuClose(e);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onFocus", function () {
      _this.setState({
        focused: true
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onBlur", function () {
      _this.setState({
        focused: false
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onMenuOpen", function (e) {
      e.preventDefault();
      _this.props.cellInstance.showFilterContextMenu(_this.settings);
      _this.setState({
        focused: true,
        open: true
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onMenuClose", function (e) {
      e.preventDefault();
      _this.close();
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onKeyDown", function (event) {
      if (event.key === 'Enter') {
        _this.onMenuOpen(event);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "close", function (settings) {
      _this.setState({
        focused: false,
        open: false
      }, function () {
        _this.props.cellInstance.hideFilterContextMenu(settings);
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setValue", function (value) {
      if (_this.specificFilter.setValue) {
        _this.specificFilter.setValue(value);
      }
    });
    _this.onSettingsClick = _this.onSettingsClick.bind((0, _assertThisInitialized2.default)(_this));
    _this.onSettingsClickListener = null;
    _this.ref = function (specificFilter) {
      var inputRef = props.inputRef || props.props.filterEditorProps && props.props.filterEditorProps.inputRef;
      if (inputRef) {
        if (typeof inputRef === 'function') {
          inputRef(specificFilter);
        } else {
          inputRef.current = specificFilter;
        }
      }
      _this.specificFilter = specificFilter;
    };
    _this.state = {
      focused: false,
      open: false
    };
    return _this;
  }
  (0, _createClass2.default)(GenericFilter, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.props.cellInstance) {
        this.props.cellInstance.filter = this;
      }
      this.setupEventListener();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.props.cellInstance) {
        this.props.cellInstance.filter = null;
      }
      if (this.settings && this.onSettingsClickListener) {
        this.settings.removeEventListener(this.onSettingsClickListener);
      }
      this.onSettingsClickListener = null;
      this.settings = null;
      if (this.unsubscribeColumnFilterVisibility) {
        this.unsubscribeColumnFilterVisibility();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
        props = _this$props.props,
        cellInstance = _this$props.cellInstance;
      var filterValue = props.computedFilterValue;
      var active = filterValue ? filterValue.active !== false : false;
      var filterType = filterValue ? filterValue.type || props.filterType || props.type : props.filterType || props.type || 'string';
      if (filterValue && !filterValue.type) {
        filterValue = _objectSpread(_objectSpread({}, filterValue), {}, {
          type: filterType
        });
      }
      var className = filterWrapperClassName;
      if (filterValue) {
        if (!active) {
          className += " ".concat(className, "--disabled");
        }
      }
      var settings;
      var style = {
        minHeight: props.filterRowHeight + 1
      };
      if (filterValue) {
        var settingsIconClassName = 'InovuaReactDataGrid__column-header__filter-settings-icon';
        var settingsIcon = props.filterEditorProps && props.filterEditorProps.renderSettings ? props.filterEditorProps.renderSettings({
          className: settingsIconClassName,
          filterValue: filterValue
        }) : _react.default.createElement("svg", {
          tabIndex: 0,
          className: settingsIconClassName,
          width: "14",
          height: "14",
          viewBox: "0 0 14 14"
        }, _react.default.createElement("path", {
          fillRule: "evenodd",
          d: "M13.222 2H.778C.348 2 0 1.552 0 1s.348-1 .778-1h12.444c.43 0 .778.448.778 1s-.348 1-.778 1zM1.556 3.111l3.888 4.667v5.444c0 .43.349.778.778.778h1.556c.43 0 .778-.348.778-.778V7.778l3.888-4.667H1.556z"
        }));
        settings = _react.default.createElement("div", {
          className: "InovuaReactDataGrid__column-header__filter-settings",
          ref: this.refSettings,
          onKeyDown: this.onKeyDown,
          onFocus: this.onFocus,
          onBlur: this.onBlur
        }, settingsIcon);
      }
      if (!filterValue) {
        className += " ".concat(filterWrapperClassName, "--empty");
        return _react.default.createElement("div", {
          style: style,
          className: className
        });
      }
      var filterTypes = props.filterTypes;
      var filterTypeDescription = filterTypes[filterType] || {
        operators: []
      };
      var operator = filterTypeDescription.operators.filter(function (op) {
        return op.name === filterValue.operator;
      })[0];
      var operatorDisabled = operator && operator.disableFilterEditor;
      var filterProps = _objectSpread(_objectSpread({
        i18n: props.i18n,
        rtl: props.rtl,
        nativeScroll: props.nativeScroll,
        filterDelay: props.filterDelay !== undefined ? props.filterDelay : 250
      }, props.filterEditorProps), {}, {
        filterEditorProps: props.filterEditorProps,
        ref: this.ref,
        cellProps: props,
        renderInPortal: props.renderInPortal,
        cell: cellInstance,
        filterValue: filterValue,
        emptyValue: filterTypeDescription.emptyValue,
        onChange: cellInstance.onFilterValueChange,
        active: active,
        disabled: !active || operatorDisabled,
        filterType: filterType,
        theme: props.theme,
        render: function render(node) {
          return _react.default.createElement("div", {
            style: style,
            className: className
          }, node, props.enableColumnFilterContextMenu && settings);
        }
      });
      var FilterEditor = props.filterEditor;
      if (FilterEditor && typeof FilterEditor != 'string') {
        return _react.default.createElement(FilterEditor, _objectSpread({}, filterProps));
      }
      if (props.renderFilterEditor) {
        return props.renderFilterEditor(filterProps, props, cellInstance);
      }
      return _react.default.createElement(_StringFilter.default, _objectSpread({}, filterProps));
    }
  }]);
  return GenericFilter;
}(_react.default.Component);
var _default = function _default(props, cellInstance) {
  return _react.default.createElement(GenericFilter, {
    key: "filter-".concat(cellInstance.getProps().id),
    props: props,
    rtl: props.rtl,
    cellInstance: cellInstance
  });
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/renderGroupTool.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/renderGroupTool.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var DEFAULT_STYLE = {
  position: 'relative',
  verticalAlign: 'middle',
  cursor: 'pointer'
};
var stopPropagation = function stopPropagation(e) {
  return e.stopPropagation();
};
var _default = function _default(_ref, cellProps) {
  var render = _ref.render,
    rtl = _ref.rtl,
    collapsed = _ref.collapsed,
    toggleGroup = _ref.toggleGroup,
    style = _ref.style,
    size = _ref.size,
    renderGroupCollapseTool = _ref.renderGroupCollapseTool,
    renderGroupExpandTool = _ref.renderGroupExpandTool;
  size = size || 18;
  style = style ? _objectSpread(_objectSpread({}, DEFAULT_STYLE), style) : DEFAULT_STYLE;
  var domProps = {
    onMouseDown: toggleGroup,
    onClick: stopPropagation,
    style: style
  };
  var result;
  if (render) {
    domProps.style = _objectSpread({}, domProps.style);
    result = render(domProps, _objectSpread(_objectSpread({}, cellProps), {}, {
      collapsed: collapsed,
      toggleGroup: toggleGroup,
      size: size
    }));
    if (result != undefined) {
      return result;
    }
  }
  var renderCollapseTool = function renderCollapseTool() {
    var result;
    if (renderGroupCollapseTool) {
      result = renderGroupCollapseTool({
        domProps: domProps,
        size: size,
        rtl: rtl
      });
    }
    if (result === undefined) {
      result = _react.default.createElement("svg", _objectSpread(_objectSpread({}, domProps), {}, {
        height: size,
        viewBox: "0 0 24 24",
        width: size
      }), rtl ? _react.default.createElement("path", {
        d: "M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z"
      }) : _react.default.createElement("path", {
        d: "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
      }));
    }
    return result;
  };
  var renderExpandTool = function renderExpandTool() {
    var result;
    if (renderGroupExpandTool) {
      result = renderGroupExpandTool({
        domProps: domProps,
        size: size,
        rtl: rtl
      });
    }
    if (result === undefined) {
      result = _react.default.createElement("svg", _objectSpread(_objectSpread({}, domProps), {}, {
        height: size,
        viewBox: "0 0 24 24",
        width: size
      }), _react.default.createElement("path", {
        d: "M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
      }));
    }
    return result;
  };
  if (collapsed) {
    return renderCollapseTool();
  }
  return renderExpandTool();
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/renderHeader.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/renderHeader.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../packages/join */ "./node_modules/@inovua/reactdatagrid-community/packages/join/index.js"));
var _renderFilter = _interopRequireDefault(__webpack_require__(/*! ./renderFilter */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/renderFilter/index.js"));
var _ColumnResizer = _interopRequireDefault(__webpack_require__(/*! ./ColumnResizer */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/ColumnResizer.js"));
var _renderMenuTool = _interopRequireDefault(__webpack_require__(/*! ./renderMenuTool */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/renderMenuTool.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var RESIZE_WRAPPER_CLASS_NAME = 'InovuaReactDataGrid__column-header__resize-wrapper';
var HEADER_CONTENT_CLASS_NAME = 'InovuaReactDataGrid__column-header__content';
var EMPTY_OBJECT = {};
var renderContent = function renderContent(props) {
  if (!props) {
    return;
  }
  if (props.renderColumnReorderProxy) {
    return props.renderColumnReorderProxy(props);
  }
  return props.children;
};
var renderHeader = function renderHeader(props, domProps, cellInstance) {
  var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : EMPTY_OBJECT;
  var dragging = props.dragging !== undefined ? props.dragging : state.dragging;
  var last = props.last || props.computedVisibleIndex == props.computedVisibleCount - 1;
  var depth = props.depth,
    showBorderRight = props.showBorderRight,
    showBorderLeft = props.showBorderLeft,
    computedLocked = props.computedLocked,
    firstInSection = props.firstInSection,
    lastInSection = props.lastInSection,
    group = props.group,
    rtl = props.rtl,
    virtualizeColumns = props.virtualizeColumns,
    headerProps = props.headerProps;
  var style = headerProps && headerProps.headerCellStyle ? headerProps.headerCellStyle : null;
  var content = _react.default.createElement("div", {
    key: "content",
    style: style,
    className: "".concat(HEADER_CONTENT_CLASS_NAME, " ").concat(props.headerEllipsis !== false ? 'InovuaReactDataGrid__box--ellipsis' : ''),
    children: renderContent(props)
  });
  var menuTool = (0, _renderMenuTool.default)(props, cellInstance);
  var headerAlign = props.headerAlign != null ? props.headerAlign : props.textAlign;
  content = [headerAlign == 'end' && menuTool, content, headerAlign != 'end' && menuTool];
  if (props.computedResizable || props.computedFilterable) {
    var innerStyle = Object.assign({}, domProps.style || EMPTY_OBJECT);
    if (!dragging) {
      delete innerStyle.width;
      delete innerStyle.minWidth;
    }
    if (virtualizeColumns) {
      delete innerStyle.position;
    }
    var resizeHandleStyle;
    var right;
    var resizerClassName;
    if (props.computedResizable) {
      right = props.computedVisibleIndex === props.computedVisibleCount - 1 && !showBorderRight || lastInSection ? 0 : -props.columnResizeHandleWidth / 2;
      resizeHandleStyle = {
        width: props.columnResizeHandleWidth,
        zIndex: 10000 * (depth || 0)
      };
      if (lastInSection && computedLocked === 'start') {
        right = -props.columnResizeHandleWidth + 1;
      }
      if (props.resizeProxyStyle) {
        resizeHandleStyle = Object.assign({}, props.resizeProxyStyle, resizeHandleStyle);
      }
      if (dragging) {
        delete innerStyle.top;
        if (rtl) {
          delete innerStyle.right;
        } else {
          delete innerStyle.left;
        }
      }
      resizerClassName = 'InovuaReactDataGrid__column-resizer';
      if (props.lastUnlocked && !props.last) {
        resizerClassName += " ".concat(resizerClassName, "--last-unlocked");
      }
      resizerClassName += " InovuaReactDataGrid__column-resizer--direction-".concat(rtl ? 'rtl' : 'ltr');
    }
    if (innerStyle.transform) {
      delete innerStyle.transform;
    }
    var theStyle = props.style;
    var styleCloned = false;
    if (computedLocked) {
      theStyle = _objectSpread({}, theStyle);
      styleCloned = true;
    }
    var resizeHandle;
    if (!dragging && !computedLocked && virtualizeColumns) {
      theStyle.left = props.computedOffset;
      theStyle.position = 'absolute';
    }
    if (props.computedResizable) {
      var _style;
      resizeHandle = _react.default.createElement(_ColumnResizer.default, {
        key: "columnResizer",
        className: resizerClassName,
        onMouseDown: props.onResizeMouseDown,
        onTouchStart: props.onResizeTouchStart,
        style: (_style = {
          width: props.columnResizeHandleWidth
        }, (0, _defineProperty2.default)(_style, props.rtl ? 'left' : 'right', right), (0, _defineProperty2.default)(_style, "zIndex", (depth || 0) * 10000 + (100 - props.computedVisibleIndex || 0)), (0, _defineProperty2.default)(_style, "height", props.headerHeight), _style),
        resizeHandleStyle: resizeHandleStyle,
        resizeHandleClassName: "InovuaReactDataGrid__column-resize-handle"
      });
    } else {
      if (dragging && props.computedFilterable) {
        if (!styleCloned) {
          styleCloned = true;
          theStyle = _objectSpread({}, theStyle);
        }
        if (rtl) {
          theStyle.right = state.right || 0;
        } else {
          theStyle.left = state.left || 0;
        }
        theStyle.top = state.top || 0;
      }
    }
    return _react.default.createElement("div", {
      ref: domProps.ref,
      style: theStyle,
      onFocus: domProps.onFocus,
      className: (0, _join.default)(RESIZE_WRAPPER_CLASS_NAME, dragging && "".concat(RESIZE_WRAPPER_CLASS_NAME, "--dragging"), group ? "".concat(RESIZE_WRAPPER_CLASS_NAME, "--has-group") : "".concat(RESIZE_WRAPPER_CLASS_NAME, "--has-no-group"), showBorderLeft && "".concat(RESIZE_WRAPPER_CLASS_NAME, "--show-border-").concat(rtl ? 'right' : 'left'), (showBorderRight || props.computedShowHeaderBorderRight && last && !firstInSection) && "".concat(RESIZE_WRAPPER_CLASS_NAME, "--show-border-").concat(rtl ? 'left' : 'right'), "".concat(RESIZE_WRAPPER_CLASS_NAME, "--direction-").concat(rtl ? 'rtl' : 'ltr'), computedLocked && "".concat(RESIZE_WRAPPER_CLASS_NAME, "--locked"), computedLocked && "".concat(RESIZE_WRAPPER_CLASS_NAME, "--locked-").concat(computedLocked), firstInSection && "".concat(RESIZE_WRAPPER_CLASS_NAME, "--first-in-section"), lastInSection && "".concat(RESIZE_WRAPPER_CLASS_NAME, "--last-in-section"), last && "".concat(RESIZE_WRAPPER_CLASS_NAME, "--last"), props.headerWrapperClassName)
    }, _react.default.createElement("div", _objectSpread(_objectSpread({}, cleanup(domProps)), {}, {
      style: innerStyle,
      children: content
    })), resizeHandle, props.computedFilterable && !dragging ? (0, _renderFilter.default)(props, cellInstance) : null);
  }
  var ref = domProps.ref;
  return _react.default.createElement("div", _objectSpread(_objectSpread({}, cleanup(domProps)), {}, {
    ref: ref,
    id: null,
    name: null,
    title: null,
    type: null,
    value: null,
    children: content
  }));
};
var cleanup = function cleanup(domProps) {
  delete domProps.ref;
  delete domProps.id;
  delete domProps.computedOffset;
  delete domProps.name;
  delete domProps.title;
  delete domProps.type;
  delete domProps.value;
  delete domProps.onFocus;
  return domProps;
};
var _default = renderHeader;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/renderMenuTool.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/renderMenuTool.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = exports.MenuTool = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../packages/join */ "./node_modules/@inovua/reactdatagrid-community/packages/join/index.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var BASE_CLASS_NAME = 'InovuaReactDataGrid__column-header__menu-tool';
var MenuTool = function MenuTool(props) {
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    keepVisible = _useState2[0],
    setKeepVisible = _useState2[1];
  var domRef = (0, _react.useRef)();
  var _unmounted = (0, _react.useRef)();
  (0, _react.useEffect)(function () {
    _unmounted.current = false;
    return function () {
      _unmounted.current = true;
    };
  }, []);
  var onClick = function onClick(event) {
    event.stopPropagation();
  };
  var onMouseDown = function onMouseDown(event) {
    event.preventDefault();
    props.showContextMenu && props.showContextMenu(domRef.current, props.showOnHover ? onHide : null);
    if (_unmounted.current) {
      return;
    }
    if (props.showOnHover && !keepVisible) {
      setKeepVisible(true);
    }
  };
  var onHide = function onHide() {
    if (_unmounted.current) {
      return;
    }
    setKeepVisible(false);
  };
  var renderMenuTool = function renderMenuTool() {
    var domProps = {
      className: (0, _join.default)('', 'InovuaReactDataGrid__sort-icon--desc'),
      width: 14,
      height: 12
    };
    if (props.renderMenuTool) {
      return props.renderMenuTool(domProps);
    }
    return _react.default.createElement("svg", _objectSpread(_objectSpread({}, domProps), {}, {
      viewBox: "0 0 14 12"
    }), _react.default.createElement("g", {
      fillRule: "evenodd"
    }, _react.default.createElement("rect", {
      width: "14",
      height: "2",
      rx: "1"
    }), _react.default.createElement("rect", {
      width: "14",
      height: "2",
      y: "5",
      rx: "1"
    }), _react.default.createElement("rect", {
      width: "14",
      height: "2",
      y: "10",
      rx: "1"
    })));
  };
  var className = BASE_CLASS_NAME;
  var showOnHover = props.showOnHover,
    rtl = props.rtl;
  if (showOnHover) {
    className += " ".concat(BASE_CLASS_NAME, "--show-on-hover");
  }
  if (!showOnHover || keepVisible) {
    className += " ".concat(BASE_CLASS_NAME, "--visible");
  }
  className += " ".concat(BASE_CLASS_NAME, "--direction-").concat(rtl ? 'rtl' : 'ltr');
  return _react.default.createElement("div", {
    className: className,
    onMouseDown: onMouseDown,
    onClick: onClick,
    ref: domRef
  }, renderMenuTool());
};
exports.MenuTool = MenuTool;
var _default = function _default(props, cellInstance) {
  if (props.groupSpacerColumn) {
    return null;
  }
  if (!props.showColumnMenuTool) {
    return null;
  }
  return _react.default.createElement(MenuTool, {
    key: "menuTool",
    name: props.name,
    rtl: props.rtl,
    showOnHover: props.showColumnMenuToolOnHover,
    showContextMenu: cellInstance.showContextMenu,
    renderMenuTool: props.renderMenuTool
  });
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/renderNodeTool.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/renderNodeTool.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var DEFAULT_STYLE = {
  position: 'relative',
  verticalAlign: 'middle',
  cursor: 'pointer'
};
var stopPropagation = function stopPropagation(e) {
  return e.stopPropagation();
};
var _default = function _default(_ref, cellProps) {
  var render = _ref.render,
    nodeLoading = _ref.nodeLoading,
    nodeCollapsed = _ref.nodeCollapsed,
    leafNode = _ref.leafNode,
    node = _ref.node,
    nodeProps = _ref.nodeProps,
    toggleNodeExpand = _ref.toggleNodeExpand,
    style = _ref.style,
    size = _ref.size,
    renderTreeCollapseTool = _ref.renderTreeCollapseTool,
    renderTreeExpandTool = _ref.renderTreeExpandTool,
    renderTreeLoadingTool = _ref.renderTreeLoadingTool;
  size = size || 18;
  if (!leafNode) {
    style = style ? _objectSpread(_objectSpread({}, DEFAULT_STYLE), style) : DEFAULT_STYLE;
  }
  var domProps = {
    onMouseDown: leafNode ? null : toggleNodeExpand,
    onClick: leafNode ? null : stopPropagation,
    style: style
  };
  var result;
  if (render) {
    domProps.style = _objectSpread({}, domProps.style);
    result = render(domProps, _objectSpread(_objectSpread({}, cellProps), {}, {
      leafNode: leafNode,
      nodeCollapsed: nodeCollapsed,
      node: node,
      nodeLoading: nodeLoading,
      nodeProps: nodeProps,
      toggleNodeExpand: toggleNodeExpand,
      size: size
    }));
    if (result != undefined) {
      return result;
    }
  }
  if (leafNode) {
    var tools = true;
    if (renderTreeCollapseTool === null && renderTreeExpandTool === null) {
      tools = false;
    }
    return _react.default.createElement("div", _objectSpread(_objectSpread({}, domProps), {}, {
      style: _objectSpread(_objectSpread({}, domProps.style), {}, {
        width: tools ? size : 0,
        height: size
      })
    }));
  }
  var renderNodeLoading = function renderNodeLoading(_ref2) {
    var domProps = _ref2.domProps,
      size = _ref2.size;
    var className = "".concat(domProps.className || '', " InovuaReactDataGrid__cell__node-tool--loading");
    var loadingTool;
    if (renderTreeLoadingTool === null) {
      return _react.default.createElement("div", {
        style: domProps.style
      });
    }
    if (renderTreeLoadingTool) {
      loadingTool = renderTreeLoadingTool({
        domProps: domProps,
        size: size,
        className: className
      });
    }
    if (loadingTool === undefined) {
      loadingTool = _react.default.createElement("svg", _objectSpread(_objectSpread({}, domProps), {}, {
        className: className,
        height: size,
        width: size,
        viewBox: "0 0 24 24"
      }), _react.default.createElement("path", {
        d: "M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8c-.45-.83-.7-1.79-.7-2.8 0-3.31 2.69-6 6-6zm6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26z"
      }));
    }
    return loadingTool;
  };
  if (nodeLoading) {
    return renderNodeLoading({
      domProps: domProps,
      size: size
    });
  }
  var renderCollapseToolHandle = function renderCollapseToolHandle() {
    var result;
    if (renderTreeCollapseTool === null) {
      return _react.default.createElement("div", {
        style: domProps.style
      });
    }
    if (renderTreeCollapseTool) {
      result = renderTreeCollapseTool({
        domProps: domProps,
        size: size
      });
    }
    if (result === undefined) {
      result = _react.default.createElement("svg", _objectSpread(_objectSpread({}, domProps), {}, {
        height: size,
        viewBox: "0 0 24 24",
        width: size
      }), _react.default.createElement("path", {
        d: "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
      }));
    }
    return result;
  };
  var renderExpandToolHandle = function renderExpandToolHandle() {
    var result;
    if (renderTreeExpandTool === null) {
      return _react.default.createElement("div", {
        style: domProps.style
      });
    }
    if (renderTreeExpandTool) {
      result = renderTreeExpandTool({
        domProps: domProps,
        size: size
      });
    }
    if (result === undefined) {
      result = _react.default.createElement("svg", _objectSpread(_objectSpread({}, domProps), {}, {
        height: size,
        viewBox: "0 0 24 24",
        width: size
      }), _react.default.createElement("path", {
        d: "M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
      }));
    }
    return result;
  };
  if (nodeCollapsed) {
    return renderCollapseToolHandle();
  }
  return renderExpandToolHandle();
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/renderSortTool.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/renderSortTool.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../packages/join */ "./node_modules/@inovua/reactdatagrid-community/packages/join/index.js"));
var DEFAULT_SIZE = 10;
var _default = function _default(_ref, extraProps) {
  var sortable = _ref.sortable,
    size = _ref.size,
    direction = _ref.direction,
    renderSortTool = _ref.renderSortTool;
  if (!sortable) {
    return null;
  }
  size = size || DEFAULT_SIZE;
  if (renderSortTool) {
    return renderSortTool(direction, extraProps);
  }
  var visibilityClassName = 'InovuaReactDataGrid__sort-icon';
  if (!direction) {
    visibilityClassName += ' InovuaReactDataGrid__sort-icon--hidden';
  }
  return _react.default.createElement("div", {
    className: "InovuaReactDataGrid__sort-icon-wrapper",
    key: "iconWrapper"
  }, _react.default.createElement("svg", {
    key: "sortToolAsc",
    className: (0, _join.default)(visibilityClassName, 'InovuaReactDataGrid__sort-icon--asc', direction === 1 && 'InovuaReactDataGrid__sort-icon--active'),
    width: size,
    height: size / 2,
    viewBox: "0 0 10 5"
  }, _react.default.createElement("path", {
    fillRule: "evenodd",
    d: "M4.767.276L8.395 4.04c.142.147.138.382-.01.524-.069.066-.16.104-.257.104H.872c-.205 0-.37-.166-.37-.37 0-.097.036-.189.103-.258L4.233.276c.142-.147.377-.151.524-.009l.01.01z"
  })), _react.default.createElement("svg", {
    key: "sortToolDesc",
    className: (0, _join.default)(visibilityClassName, 'InovuaReactDataGrid__sort-icon--desc', direction === -1 && 'InovuaReactDataGrid__sort-icon--active'),
    width: size,
    height: size / 2,
    viewBox: "0 0 10 5"
  }, _react.default.createElement("path", {
    fillRule: "evenodd",
    d: "M4.233 4.724L.605.96C.463.814.467.579.615.437.684.371.775.333.872.333h7.256c.205 0 .37.166.37.37 0 .097-.036.189-.103.258L4.767 4.724c-.142.147-.377.151-.524.009l-.01-.01z"
  })));
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/List.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/List.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _assignDefined = _interopRequireDefault(__webpack_require__(/*! ../../../packages/assign-defined */ "./node_modules/@inovua/reactdatagrid-community/packages/assign-defined/index.js"));
var _src = _interopRequireWildcard(__webpack_require__(/*! ../../../packages/react-virtual-list-pro/src */ "./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-list-pro/src/index.js"));
var _shallowequal = _interopRequireDefault(__webpack_require__(/*! ../../../packages/shallowequal */ "./node_modules/@inovua/reactdatagrid-community/packages/shallowequal/index.js"));
var _renderRows = _interopRequireDefault(__webpack_require__(/*! ./renderRows */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/renderRows.js"));
var _shouldComponentUpdate2 = _interopRequireDefault(__webpack_require__(/*! ../../../packages/shouldComponentUpdate */ "./node_modules/@inovua/reactdatagrid-community/packages/shouldComponentUpdate/index.js"));
var _searchClosestSmallerValue = _interopRequireDefault(__webpack_require__(/*! ../../../utils/searchClosestSmallerValue */ "./node_modules/@inovua/reactdatagrid-community/utils/searchClosestSmallerValue.js"));
var _renderEmptyContent = _interopRequireDefault(__webpack_require__(/*! ../../../renderEmptyContent */ "./node_modules/@inovua/reactdatagrid-community/renderEmptyContent.js"));
var _detectUa = __webpack_require__(/*! ../../../detect-ua */ "./node_modules/@inovua/reactdatagrid-community/detect-ua.js");
var _getGlobal = __webpack_require__(/*! ../../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var globalObject = (0, _getGlobal.getGlobal)();
var EMPTY_OBJECT = {};
var returnTrue = function returnTrue() {
  return true;
};
var CHUNKS_SIZE = 1;
var raf = globalObject.requestAnimationFrame;
var DEFAULT_SCROLL_POS = {
  scrollLeft: 0,
  scrollTop: 0
};
var initialSkip = 0;
var timeout = false;
var VirtualListClassName = 'InovuaReactDataGrid__virtual-list';
var InovuaDataGridList = function (_Component) {
  (0, _inherits2.default)(InovuaDataGridList, _Component);
  var _super = _createSuper(InovuaDataGridList);
  function InovuaDataGridList(_props) {
    var _this;
    (0, _classCallCheck2.default)(this, InovuaDataGridList);
    _this = _super.call(this, _props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "scrollingDirection", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "lastScrollTimestamp", 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "scrollLeft", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "virtualListRef", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "isRowFullyVisible", function (index) {
      return _this.getVirtualList().isRowVisible(index);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setValue", function () {
      var _this$props = _this.props,
        hasValueSetter = _this$props.hasValueSetter,
        data = _this$props.data,
        columns = _this$props.columns,
        idProperty = _this$props.idProperty,
        setItemsAt = _this$props.setItemsAt;
      if (!hasValueSetter) {
        return;
      }
      var newDataMap = data.reduce(function (acc, current) {
        var _iterator = _createForOfIteratorHelper(columns),
          _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var column = _step.value;
            if (column.setValue) {
              var columnName = column.name || column.id;
              var value = current[columnName];
              if (value) {
                var result = column.setValue(_objectSpread({
                  value: value,
                  data: current
                }, column));
                if (value !== result) {
                  var id = current[idProperty];
                  acc[id] = _objectSpread(_objectSpread({}, acc[id]), {}, (0, _defineProperty2.default)({}, columnName, result));
                }
              }
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
        return acc;
      }, {});
      var newData = Object.keys(newDataMap).map(function (key) {
        var id = isNaN(Number(key)) ? key : Number(key);
        return _objectSpread({
          id: id
        }, newDataMap[key]);
      });
      setItemsAt(newData, {
        replace: false
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "computeRows", function (props) {
      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : EMPTY_OBJECT,
        from = _ref.from,
        to = _ref.to,
        rowHeight = _ref.rowHeight,
        renderIndex = _ref.renderIndex,
        empty = _ref.empty,
        setRowSpan = _ref.setRowSpan,
        sticky = _ref.sticky;
      var columnRenderCount = props.columnRenderCount;
      return (0, _renderRows.default)({
        empty: empty,
        renderIndex: renderIndex,
        setRowSpan: setRowSpan,
        sticky: sticky,
        from: from || _this.startIndex || 0,
        to: to || _this.endIndex || CHUNKS_SIZE,
        rowHeight: rowHeight,
        columnRenderStartIndex: _this.columnRenderStartIndex,
        columnRenderCount: columnRenderCount,
        onEditStop: _this.onEditStop,
        onEditStart: _this.onEditStart,
        onEditValueChange: _this.onEditValueChange,
        getScrollLeftMax: _this.props.getScrollLeftMax,
        tryNextRowEdit: _this.tryRowEdit,
        editValue: _this.editValue,
        editRowIndex: _this.editRowIndex,
        editColumnIndex: _this.editColumnIndex,
        editColumnId: _this.editColumnId,
        memorizedScrollLeft: _this.scrollLeft.current
      }, props);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getVirtualList", function () {
      var vl = _this.virtualListRef.current;
      return vl;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "tryRowEdit", function (nextEditRowIndex, dir, columnIndex, isEnterNavigation) {
      var columnEditIndex = columnIndex;
      var row = _this.getRowAt(nextEditRowIndex);
      if (!row) {
        return;
      }
      var setActiveIndex = function setActiveIndex() {
        return _this.props.setActiveIndex(nextEditRowIndex);
      };
      if (_this.props.livePagination) {
        var skip = _this.props.computedSkip;
        if (skip !== initialSkip) {
          initialSkip = skip;
          timeout = true;
        }
        timeout ? setTimeout(function () {
          return setActiveIndex();
        }, 50) : setActiveIndex();
      } else {
        setActiveIndex();
      }
      row.tryRowCellEdit(columnEditIndex, dir, isEnterNavigation);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "isEditing", function () {
      return !!_this.editColumnId;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onEditStop", function (args) {
      if (_this.editColumnIndex !== args.columnIndex || _this.editRowIndex !== args.rowIndex) {
        return;
      }
      if (_this.props.onEditStop) {
        _this.props.onEditStop(args);
      }
      _this.updateEditing({
        value: undefined,
        rowIndex: undefined,
        columnIndex: undefined
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onEditValueChange", function (args) {
      if (_this.props.onEditValueChange) {
        _this.props.onEditValueChange(args);
      }
      _this.updateEditing(args);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onEditStart", function (args) {
      if (_this.props.onEditStart) {
        _this.props.onEditStart(args);
      }
      _this.updateEditing(args);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "updateEditing", function (_ref2) {
      var value = _ref2.value,
        rowIndex = _ref2.rowIndex,
        columnId = _ref2.columnId,
        columnIndex = _ref2.columnIndex;
      var oldEditRowIndex = _this.editRowIndex;
      var oldEditValue = _this.editValue;
      var oldEditColumnIndex = _this.editColumnIndex;
      _this.editValue = value;
      _this.editRowIndex = rowIndex;
      _this.editColumnIndex = columnIndex;
      _this.editColumnId = columnId;
      if (_this.editTimeoutId) {
        clearTimeout(_this.editTimeoutId);
      }
      _this.lazyEditColumnId = _this.editColumnId || _this.lazyEditColumnId;
      _this.editTimeoutId = setTimeout(function () {
        delete _this.editTimeoutId;
        _this.lazyEditColumnId = _this.editColumnId;
      }, 50);
      if (oldEditRowIndex === rowIndex && oldEditColumnIndex === columnIndex && oldEditValue !== value) {
        _this.getVirtualList().getRows().forEach(function (r) {
          var row = r.getInstance();
          if (row && row.props.rowIndex === rowIndex) {
            r.update();
          }
        });
        return;
      }
      _this.forceUpdate();
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onScrollHorizontal", function (scrollLeft, _, __, scrollLeftMax) {
      _this.scrollLeft.current = scrollLeft;
      _this.onContainerScrollHorizontal(scrollLeft, undefined, scrollLeftMax);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderRowContainer", function (props) {
      return _react.default.createElement("div", _objectSpread({}, props), props.children, _this.props.renderActiveRowIndicator && _this.props.renderActiveRowIndicator(_this.setupActiveRowIndicatorHandle));
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setupActiveRowIndicatorHandle", function (activeRowHandle) {
      _this.activeRowIndicatorHandle = activeRowHandle;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onStickyRowUpdate", function () {
      _this.updateOnScrollLeft(undefined, true);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderEmptyContent", function () {
      var SCROLLBAR_WIDTH = (0, _src.getScrollbarWidth)();
      var _this$props2 = _this.props,
        i18n = _this$props2.i18n,
        data = _this$props2.data,
        loading = _this$props2.computedLoading,
        nativeScroll = _this$props2.nativeScroll;
      var emptyText = _this.props.emptyText;
      var length = data.length;
      emptyText = i18n(emptyText, emptyText);
      if (!length && !loading) {
        return (0, _renderEmptyContent.default)(emptyText, 'empty', {
          right: nativeScroll ? 0 : -SCROLLBAR_WIDTH,
          bottom: nativeScroll ? 0 : -SCROLLBAR_WIDTH
        });
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderView", function (viewProps) {
      var _this$props3 = _this.props,
        data = _this$props3.data,
        loading = _this$props3.loading;
      var scrollbarOffset = _this.getEmptyScrollOffset();
      var length = data.length;
      if (!length && !loading) {
        viewProps.children = _react.default.Children.toArray(viewProps.children);
        viewProps.children.push(_this.renderEmptyContent());
        if (_detectUa.IS_EDGE) {
          viewProps.style.minHeight = '99%';
        }
      }
      var hasScrollbars = _this.scrollbars && _this.scrollbars.vertical && _this.scrollbars.horizontal;
      if (!!_this.props.renderRowDetails || !!_this.props.renderDetailsGrid) {
        if (_this.props.rtl && !(0, _src.getScrollbarWidth)() && !_this.props.nativeScroll) {
          viewProps.style.transform = "translateX(".concat(-(hasScrollbars ? 2 : 1) * scrollbarOffset, "px)");
        }
      } else {
        if (_this.props.rtl && !(0, _src.getScrollbarWidth)() && !_this.props.nativeScroll) {
          viewProps.style.transform = "translateX(".concat(-scrollbarOffset, "px)");
        }
      }
      var result;
      if (_this.props.renderView) {
        result = _this.props.renderView(viewProps);
      }
      if (result === undefined) {
        result = _react.default.createElement("div", _objectSpread({}, viewProps));
      }
      return result;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderSizer", function (props, scrollHeight) {
      if (!_this.props.nativeScroll) {
        return;
      }
      if (!_this.props.virtualized) {
        return null;
      }
      var minWidth = Math.max(_this.props.availableWidth || 0, _this.props.minRowWidth || 0) || 0;
      var SCROLLBAR_WIDTH = (0, _src.getScrollbarWidth)();
      var sizerStyle = _objectSpread(_objectSpread({}, props.style), {}, {
        minWidth: minWidth,
        minHeight: props.style ? (props.style.minHeight || 0) - (!SCROLLBAR_WIDTH ? _this.getEmptyScrollOffset() : 0) : 0
      });
      if (_this.props.naturalRowHeight) {
        sizerStyle.height = scrollHeight;
      }
      return _react.default.createElement("div", _objectSpread(_objectSpread({
        key: "grid-sizer",
        "data-name": "sizer"
      }, props), {}, {
        style: sizerStyle
      }));
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderScrollerSpacer", function (spacerProps) {
      if (!_this.props.totalFlexColumnCount) {
        spacerProps.style.width = _this.props.minRowWidth || 0;
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderScroller", function (scrollerProps) {
      var _style;
      var _this$props4 = _this.props,
        data = _this$props4.data,
        loading = _this$props4.loading,
        virtualized = _this$props4.virtualized,
        maxVisibleRows = _this$props4.maxVisibleRows,
        nativeScroll = _this$props4.nativeScroll,
        availableWidth = _this$props4.availableWidth,
        minRowWidth = _this$props4.minRowWidth;
      var length = data.length;
      scrollerProps.children.push(_react.default.createElement("div", {
        key: "empty-spacer",
        "data-name": "empty-spacer",
        style: (_style = {
          position: _detectUa.IS_IE && nativeScroll ? 'static' : 'absolute',
          contain: 'strict'
        }, (0, _defineProperty2.default)(_style, _this.props.rtl ? 'right' : 'left', 0), (0, _defineProperty2.default)(_style, "height", 1), (0, _defineProperty2.default)(_style, "top", 0), (0, _defineProperty2.default)(_style, "pointerEvents", 'none'), (0, _defineProperty2.default)(_style, "minWidth", Math.max(availableWidth, minRowWidth) || 0), _style)
      }, _detectUa.IS_IE && nativeScroll ? _this.renderEmptyContent() : null));
      if (!virtualized && length < maxVisibleRows) {
        scrollerProps.style = scrollerProps.style || {};
        scrollerProps.style.overflow = 'hidden';
      }
      var hasHorizontalScrollbar = _this.scrollbars && _this.scrollbars.horizontal;
      if (!_this.props.renderRowDetails || !_this.props.renderDetailsGrid) {
        if (!(0, _src.getScrollbarWidth)() && !nativeScroll && hasHorizontalScrollbar) {
          scrollerProps.style.right = 0;
        }
      }
      var result;
      if (_this.props.renderScroller) {
        result = _this.props.renderScroller(scrollerProps);
      }
      if (result === undefined) {
        result = _react.default.createElement("div", _objectSpread({}, scrollerProps));
      }
      return result;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getRowAt", function (index) {
      return _this.getRows().filter(function (r) {
        var _r$props;
        return (r === null || r === void 0 ? void 0 : (_r$props = r.props) === null || _r$props === void 0 ? void 0 : _r$props.rowIndex) === index;
      })[0];
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "startEdit", function (_ref3) {
      var rowIndex = _ref3.rowIndex,
        columnIndex = _ref3.columnIndex,
        value = _ref3.value;
      var row = _this.getRowAt(rowIndex);
      if (row) {
        var cell = row.getCellAt(columnIndex);
        if (cell) {
          return cell.startEdit(value);
        }
      }
      return Promise.reject(null);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "completeEdit", function (_ref4) {
      var rowIndex = _ref4.rowIndex,
        columnIndex = _ref4.columnIndex,
        value = _ref4.value;
      var row = _this.getRowAt(rowIndex);
      if (row) {
        var cell = row.getCellAt(columnIndex);
        if (cell) {
          cell.completeEdit(value);
        }
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "cancelEdit", function (_ref5) {
      var rowIndex = _ref5.rowIndex,
        columnIndex = _ref5.columnIndex;
      var row = _this.getRowAt(rowIndex);
      if (row) {
        var cell = row.getCellAt(columnIndex);
        if (cell) {
          cell.cancelEdit();
        }
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onContainerScroll", function (scrollPos) {
      var prevScrollPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_SCROLL_POS;
      if (_this.props.onContainerScroll) {
        _this.props.onContainerScroll(scrollPos, prevScrollPos);
      }
      var oldScrollingDirection = _this.scrollingDirection;
      if (scrollPos.scrollTop === prevScrollPos.scrollTop && scrollPos.scrollLeft === prevScrollPos.scrollLeft) {
        return;
      }
      _this.scrollingDirection = scrollPos.scrollLeft === prevScrollPos.scrollLeft ? 'vertical' : 'horizontal';
      if (_this.scrollingDirection === oldScrollingDirection) {
        return;
      }
      if (_this.props.virtualized) {
        var _this$getDOMNode, _this$getDOMNode$clas;
        (_this$getDOMNode = _this.getDOMNode()) === null || _this$getDOMNode === void 0 ? void 0 : (_this$getDOMNode$clas = _this$getDOMNode.classList) === null || _this$getDOMNode$clas === void 0 ? void 0 : _this$getDOMNode$clas.add("".concat(VirtualListClassName, "--scrolling"));
        requestAnimationFrame(function () {
          _this.getRows().forEach(function (r) {
            return r ? r.setScrolling(_this.scrollingDirection) : null;
          });
        });
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onScrollStop", function () {
      _this.scrollingDirection = 'none';
      if (_this.props.virtualized) {
        var _this$getDOMNode2, _this$getDOMNode2$cla;
        (_this$getDOMNode2 = _this.getDOMNode()) === null || _this$getDOMNode2 === void 0 ? void 0 : (_this$getDOMNode2$cla = _this$getDOMNode2.classList) === null || _this$getDOMNode2$cla === void 0 ? void 0 : _this$getDOMNode2$cla.remove("".concat(VirtualListClassName, "--scrolling"));
        _this.getRows().forEach(function (r) {
          if (!r) {
            return;
          }
          r.setScrolling(false);
        });
      }
      if (_this.props.onScrollStop) {
        _this.props.onScrollStop();
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setColumnRenderStartIndex", function (columnRenderStartIndex, force) {
      if (_this.__willUnmount) {
        return;
      }
      if (_this.resizing && !force) {
        return;
      }
      if (columnRenderStartIndex === _this.columnRenderStartIndex && !force) {
        return;
      }
      if (!_this.getVirtualList()) {
        return;
      }
      if (_this.props.onColumnRenderStartIndexChange) {
        _this.props.onColumnRenderStartIndexChange(columnRenderStartIndex);
      }
      _this.columnRenderStartIndex = columnRenderStartIndex;
      var rows = _this.getVirtualList().getRows();
      rows.forEach(function (row) {
        var rowInstance = row.getInstance();
        if (rowInstance) {
          requestAnimationFrame(function () {
            rowInstance.setColumnRenderStartIndex(columnRenderStartIndex);
          });
        }
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getRows", function () {
      var virtualList = _this.getVirtualList();
      if (!virtualList) {
        return [];
      }
      return virtualList.getRows().map(function (row) {
        return row.getInstance();
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onScrollbarsChange", function (scrollbars) {
      _this.scrollbars = scrollbars;
      if (!scrollbars.horizontal) {
        raf(function () {
          _this.onContainerScrollHorizontal(0);
        });
      }
      if (_this.props.onScrollbarsChange) {
        raf(function () {
          _this.props.onScrollbarsChange(scrollbars);
        });
      }
      if (_this.props.scrollProps && _this.props.scrollProps.onScrollbarsChange) {
        _this.props.scrollProps.onScrollbarsChange(scrollbars);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onResize", function () {
      if (_this.props.onResize) {
        var _this$props5;
        (_this$props5 = _this.props).onResize.apply(_this$props5, arguments);
      }
      _this.visibleCount = _this.getVisibleCount();
      _this.resizing = true;
      raf(function () {
        _this.resizing = false;
        var force;
        _this.updateOnScrollLeft(undefined, force = true);
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onContainerScrollHorizontal", function (scrollLeft, force, scrollLeftMax) {
      if (scrollLeft < 0) {
        scrollLeft = 0;
      }
      scrollLeft = Math.round(scrollLeft);
      _this._scrollLeft = scrollLeft;
      if (_this.__willUnmount) {
        return;
      }
      if (_this.props.onContainerScrollHorizontal) {
        _this.props.onContainerScrollHorizontal(scrollLeft, scrollLeftMax);
      }
      if (_this.props.scrollProps && _this.props.scrollProps.onContainerScrollHorizontal) {
        _this.props.scrollProps.onContainerScrollHorizontal(scrollLeft);
      }
      scrollLeft = _this._scrollLeft;
      _this.updateOnScrollLeft(scrollLeft);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "updateOnScrollLeft", function () {
      var scrollLeft = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this._scrollLeft;
      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var props = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _this.props;
      if (_this.__willUnmount) {
        return;
      }
      var columnRenderStartIndex;
      if (props.virtualizeColumns) {
        var lockedStartColumns = props.lockedStartColumns,
          columnWidthPrefixSums = props.columnWidthPrefixSums;
        if (!columnRenderStartIndex) {
          var lockedOffset = lockedStartColumns.length && columnWidthPrefixSums[lockedStartColumns.length] ? columnWidthPrefixSums[lockedStartColumns.length] : 0;
          columnRenderStartIndex = (0, _searchClosestSmallerValue.default)(props.columnWidthPrefixSums, scrollLeft + lockedOffset);
        }
        _this.setColumnRenderStartIndex(columnRenderStartIndex, force);
      }
      if (_this.activeRowIndicatorHandle) {
        _this.activeRowIndicatorHandle.setScrollLeft(scrollLeft);
      }
      if (_this.props.updateLockedWrapperPositions) {
        _this.props.updateLockedWrapperPositions.call((0, _assertThisInitialized2.default)(_this), _this.props, scrollLeft);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getDOMNode", function () {
      return _this.node || (_this.node = _this.getVirtualList().getDOMNode());
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderRow", function (args) {
      var rowHeight = args.rowHeight,
        index = args.index,
        renderIndex = args.renderIndex,
        empty = args.empty,
        sticky = args.sticky;
      var setRowSpan = function setRowSpan(rowSpan) {
        args.rowSpan = rowSpan;
      };
      var result = _this.computeRows(_this.props, {
        empty: empty,
        from: index,
        sticky: sticky,
        to: index + 1,
        renderIndex: renderIndex,
        rowHeight: rowHeight,
        setRowSpan: setRowSpan
      })[0];
      return result;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getVisibleCount", function () {
      return _this.getVirtualList() ? _this.getVirtualList().getVisibleCount() : -1;
    });
    _this.virtualListRef = (0, _react.createRef)();
    _this._scrollLeft = 0;
    _this._scrollTop = 0;
    _this.startIndex = 0;
    _this.endIndex = CHUNKS_SIZE;
    _this.state = {
      columnRenderCount: 0
    };
    _this.rows = [];
    _this.scrollbars = {};
    _this.scrollLeft = (0, _react.createRef)();
    return _this;
  }
  (0, _createClass2.default)(InovuaDataGridList, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps, nextState) {
      if (nextProps.shouldComponentUpdate) {
        return (0, _shouldComponentUpdate2.default)(this, nextProps, nextState);
      }
      var equalProps = (0, _shallowequal.default)(this.props, nextProps);
      if (!equalProps) {
        return true;
      }
      return !(0, _shallowequal.default)(nextState, this.state);
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;
      if (this.props.hasValueSetter) {
        setTimeout(function () {
          _this2.setValue();
        }, 100);
      }
      this.__willUnmount = false;
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.__willUnmount = true;
    }
  }, {
    key: "isLazyEditing",
    value: function isLazyEditing() {
      return !!this.lazyEditColumnId;
    }
  }, {
    key: "render",
    value: function render() {
      var thisProps = this.props;
      var maybeProps = (0, _assignDefined.default)({}, {
        minRowHeight: thisProps.minRowHeight,
        rowHeight: thisProps.rowHeight
      });
      var pureRows = !!this.fromState;
      var shouldUpdate = returnTrue;
      var scrollProps = thisProps.scrollProps;
      if (scrollProps && scrollProps.onContainerScrollHorizontal) {
        scrollProps = _objectSpread({}, scrollProps);
        scrollProps.onContainerScrollHorizontal = this.onScrollHorizontal;
      }
      var minRowWidth = Math.max(this.props.availableWidth, this.props.minRowWidth) || 0;
      var naturalRowHeight = thisProps.naturalRowHeight;
      var renderRow = this.renderRow;
      if (naturalRowHeight) {
        if (this.__data !== thisProps.data || !this.__minRowWidth) {
          renderRow = renderRow.bind(this);
        }
        this.__minRowWidth = minRowWidth;
        this.__data = thisProps.data;
      }
      return _react.default.createElement(_src.default, _objectSpread(_objectSpread({
        rowHeight: null,
        extraRows: naturalRowHeight ? 1 : 0,
        style: thisProps.style,
        theme: this.props.theme,
        checkResizeDelay: thisProps.checkResizeDelay,
        rowContain: thisProps.rowContain,
        contain: thisProps.contain,
        rtl: thisProps.rtl,
        stickyOffset: thisProps.rtlOffset,
        stickyRows: thisProps.computedStickyRows,
        onStickyRowUpdate: this.onStickyRowUpdate,
        enableRowSpan: thisProps.computedEnableRowspan,
        recycleCoveredRows: false,
        className: VirtualListClassName,
        renderRowContainer: this.renderRowContainer
      }, maybeProps), {}, {
        overscrollBehavior: "auto",
        rowHeightManager: thisProps.rowHeightManager,
        before: thisProps.before,
        after: thisProps.after,
        showEmptyRows: thisProps.computedShowEmptyRows,
        scrollProps: scrollProps,
        emptyScrollOffset: this.getEmptyScrollOffset(),
        nativeScroll: thisProps.nativeScroll,
        onResize: this.onResize,
        virtualized: thisProps.virtualized,
        minRowWidth: minRowWidth,
        naturalRowHeight: naturalRowHeight,
        renderScroller: this.renderScroller,
        renderScrollerSpacer: this.renderScrollerSpacer,
        renderSizer: this.renderSizer,
        renderView: this.renderView,
        useTransformRowPosition: this.props.useTransformRowPosition,
        useTransformPosition: this.props.useTransformPosition,
        shouldComponentUpdate: shouldUpdate,
        ref: this.virtualListRef,
        count: thisProps.data.length || 0,
        pureRows: pureRows,
        renderRow: renderRow,
        onContainerScrollHorizontal: this.onScrollHorizontal,
        onContainerScroll: this.onContainerScroll,
        onScrollbarsChange: this.onScrollbarsChange,
        onContainerScrollVertical: this.props.onContainerScrollVertical,
        onScrollStop: this.onScrollStop,
        shouldFocusNextRow: this.shouldFocusNextRow
      }));
    }
  }, {
    key: "shouldFocusNextRow",
    value: function shouldFocusNextRow(_ref6) {
      var index = _ref6.index,
        nextIndex = _ref6.nextIndex,
        dir = _ref6.dir;
      var shouldFocus = !this.isLazyEditing();
      return shouldFocus;
    }
  }, {
    key: "getEmptyScrollOffset",
    value: function getEmptyScrollOffset() {
      return this.props.emptyScrollOffset || (0, _src.getScrollbarWidth)() || 17;
    }
  }, {
    key: "tryStartEdit",
    value: function tryStartEdit(_ref7) {
      var rowIndex = _ref7.rowIndex,
        columnIndex = _ref7.columnIndex,
        dir = _ref7.dir;
      var row = this.getRowAt(rowIndex);
      if (row) {
        return row.tryRowCellEdit(columnIndex, dir);
      }
      return Promise.reject(null);
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      var _this3 = this;
      if (prevProps.columnRenderCount != this.props.columnRenderCount) {
        raf(function () {
          _this3.updateOnScrollLeft(undefined, true, _this3.props);
        });
      }
      var _this$props6 = this.props,
        lockedStartColumns = _this$props6.lockedStartColumns,
        lockedEndColumns = _this$props6.lockedEndColumns;
      var hasLocked = lockedStartColumns && lockedStartColumns.length || lockedEndColumns && lockedEndColumns.length;
      if (hasLocked) {
        this.onContainerScrollHorizontal(this._scrollLeft);
      }
    }
  }, {
    key: "getScrollLeftMax",
    value: function getScrollLeftMax() {
      return this.getVirtualList() ? this.getVirtualList().scrollLeftMax : 0;
    }
  }]);
  return InovuaDataGridList;
}(_react.Component);
exports["default"] = InovuaDataGridList;
var propTypes = Object.assign({}, _src.propTypes, {
  count: _propTypes.default.number,
  columns: _propTypes.default.arrayOf(_propTypes.default.shape({
    name: _propTypes.default.string,
    computedWidth: _propTypes.default.number,
    id: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
    render: _propTypes.default.func
  })),
  data: _propTypes.default.any,
  from: _propTypes.default.number,
  updateLockedWrapperPositions: _propTypes.default.any,
  idProperty: _propTypes.default.string,
  maxWidth: _propTypes.default.number,
  minRowHeight: _propTypes.default.number,
  minWidth: _propTypes.default.number,
  onColumnRenderStartIndexChange: _propTypes.default.func,
  rowHeight: _propTypes.default.number,
  renderScroller: _propTypes.default.func,
  renderScrollerSpacer: _propTypes.default.func,
  renderActiveRowIndicator: _propTypes.default.func,
  showWarnings: _propTypes.default.bool,
  to: _propTypes.default.number,
  virtualizeColumns: _propTypes.default.bool,
  hasValueSetter: _propTypes.default.bool
});
delete propTypes.renderRow;
InovuaDataGridList.propTypes = propTypes;
InovuaDataGridList.defaultProps = {
  showWarnings: false
};

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/Row.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/Row.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _reactCleanProps = _interopRequireDefault(__webpack_require__(/*! ../../../packages/react-clean-props */ "./node_modules/@inovua/reactdatagrid-community/packages/react-clean-props/index.js"));
var _shallowequal = _interopRequireWildcard(__webpack_require__(/*! ../../../packages/shallowequal */ "./node_modules/@inovua/reactdatagrid-community/packages/shallowequal/index.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../packages/join */ "./node_modules/@inovua/reactdatagrid-community/packages/join/index.js"));
var _clamp = _interopRequireDefault(__webpack_require__(/*! ../../../utils/clamp */ "./node_modules/@inovua/reactdatagrid-community/utils/clamp.js"));
var _Cell = _interopRequireDefault(__webpack_require__(/*! ../Cell */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/index.js"));
var _renderCellsMaybeLocked = _interopRequireDefault(__webpack_require__(/*! ./renderCellsMaybeLocked */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/renderCellsMaybeLocked.js"));
var _adjustCellProps = _interopRequireDefault(__webpack_require__(/*! ./adjustCellProps */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/adjustCellProps.js"));
var _usePrevious = _interopRequireDefault(__webpack_require__(/*! ../../../hooks/usePrevious */ "./node_modules/@inovua/reactdatagrid-community/hooks/usePrevious.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var CLASS_NAME = 'InovuaReactDataGrid__row';
var skipSelect = function skipSelect(event) {
  event.nativeEvent.skipSelect = true;
};
var getValueForPivotColumn = function getValueForPivotColumn(item, path) {
  return path.reduce(function (acc, field, index) {
    if (!acc || acc[field] == null) {
      return null;
    }
    if (index === path.length - 1) {
      return acc[field];
    }
    return acc[field].pivotSummary || acc[field].values;
  }, item);
};
var getValueForPivotColumnSummary = function getValueForPivotColumnSummary(item, _ref) {
  var path = _ref.pivotSummaryPath;
  var i = 0;
  var root = item;
  var current;
  while ((current = path[i]) && root) {
    if (!root.pivotSummary) {
      return null;
    }
    root = root.pivotSummary[current.value];
    i++;
  }
  if (root && root.pivotColumnSummary) {
    return root.pivotColumnSummary[path[path.length - 1].field];
  }
  return null;
};
var DataGridRow = _react.default.forwardRef(function (props, ref) {
  var cells = (0, _react.useRef)([]);
  var cellRef = (0, _react.useCallback)(function (c) {
    if (!c) {
      return;
    }
    cells.current.push(c);
  }, []);
  var domRef = (0, _react.useRef)(null);
  var columnRenderStartIndex = (0, _react.useRef)(0);
  var hasBorderTop = (0, _react.useRef)(false);
  var hasBorderBottom = (0, _react.useRef)(false);
  var maxRowspan = (0, _react.useRef)(1);
  var scrollingInProgress = (0, _react.useRef)(false);
  var scrollingDirection = (0, _react.useRef)('vertical');
  var cleanupCells = (0, _react.useCallback)(function () {
    cells.current = cells.current.filter(Boolean);
    return cells.current;
  }, []);
  var getCells = (0, _react.useCallback)(function () {
    return cells.current;
  }, []);
  var prevColumnRenderCount = (0, _usePrevious.default)(props.columnRenderCount, props.columnRenderCount);
  if (props.columnRenderCount < prevColumnRenderCount) {
    cleanupCells();
  }
  var getDOMNode = (0, _react.useCallback)(function () {
    return domRef.current;
  }, []);
  var setActiveRowRef = function setActiveRowRef() {
    props.activeRowRef.current = {
      instance: {
        hasBorderBottom: hasBorderBottom.current,
        hasBorderTop: hasBorderTop.current,
        props: props
      },
      node: getDOMNode()
    };
  };
  if (props.active) {
    setActiveRowRef();
  }
  (0, _react.useEffect)(function () {
    if (props.columnRenderStartIndex) {
      setColumnRenderStartIndex(props.columnRenderStartIndex);
    }
    return function () {
      cells.current = [];
    };
  }, []);
  var prevRowIndex = (0, _usePrevious.default)(props.rowIndex, props.rowIndex);
  var prevEditing = (0, _usePrevious.default)(props.editing, props.editing);
  var prevActive = (0, _usePrevious.default)(props.active, props.active);
  (0, _react.useEffect)(function () {
    if (props.groupProps && props.rowIndex !== prevRowIndex) {
      fixForColspan();
    }
    if (props.editing !== prevEditing) {
      updateEditCell();
    }
    if (!prevActive && props.active) {
      setActiveRowRef();
    }
  });
  var onCellUnmount = (0, _react.useCallback)(function (_cellProps, cell) {
    if (cells.current) {
      cells.current = cells.current.filter(function (c) {
        return c !== cell;
      });
    }
  }, []);
  var orderCells = (0, _react.useCallback)(function () {
    var cells = cleanupCells();
    var sortedProps = cells.map(function (c) {
      return c.getProps();
    }).sort(function (p1, p2) {
      return p1.index - p2.index;
    });
    cells.sort(function (cell1, cell2) {
      return cell1.props.renderIndex - cell2.props.renderIndex;
    });
    cells.forEach(function (c, i) {
      c.setStateProps(sortedProps[i]);
    });
  }, [cleanupCells]);
  var updateEditCell = (0, _react.useCallback)(function () {
    var cells = getCells();
    var editColumnIndex = props.editColumnIndex;
    for (var i = 0, len = cells.length, cell; i < len; i++) {
      cell = cells[i];
      if (getCellIndex(cell) === editColumnIndex) {
        setCellIndex(cell, editColumnIndex);
      }
      if (cell.getProps().inEdit) {
        setCellIndex(cell, getCellIndex(cell));
      }
    }
  }, [props.editColumnIndex]);
  var fixForColspan = (0, _react.useCallback)(function () {
    if (props.computedHasColSpan) {
      setColumnRenderStartIndex(columnRenderStartIndex.current);
    }
  }, [props.computedHasColSpan]);
  var setScrolling = (0, _react.useCallback)(function (scrolling) {
    var node = getDOMNode() || domRef.current;
    var scrollingDir = scrollingDirection.current;
    if (scrolling !== false) {
      scrollingDirection.current = scrolling;
    }
    var oldScrollingInProgress = scrollingInProgress.current;
    scrollingDirection.current = scrollingDir;
    scrollingInProgress.current = scrolling ? true : false;
    if (!node) {
      return;
    }
    if (oldScrollingInProgress !== scrollingInProgress.current) {
      var _className = "".concat(CLASS_NAME, "--scrolling");
      if (scrollingInProgress.current) {
        node.classList.add(_className);
      } else {
        node.classList.remove(_className);
      }
    }
    return;
  }, []);
  var renderRowDetails = (0, _react.useCallback)(function (rowDetailsInfo) {
    if (props.computedRenderRowDetails) {
      return props.computedRenderRowDetails(rowDetailsInfo);
    }
    return 'Please specify `renderRowDetails`';
  }, []);
  var onContextMenu = (0, _react.useCallback)(function (event) {
    var passedProps = props.passedProps,
      onRowContextMenu = props.onRowContextMenu;
    if (onRowContextMenu) {
      onRowContextMenu(props, event);
    }
    if (passedProps && passedProps.onContextMenu) {
      passedProps.onContextMenu(event, props);
    }
  }, [props.passedProps, props.passedProps.onContextMenu, props.onRowContextMenu]);
  var setCellIndex = (0, _react.useCallback)(function (cell, index, cellProps) {
    cellProps = cellProps || (props.computedHasColSpan ? getPropsForCells().slice(index, index + 1)[0] : getPropsForCells(index, index)[0]);
    cell.setStateProps(cellProps);
  }, [props.computedHasColSpan]);
  var getCellIndex = (0, _react.useCallback)(function (cell) {
    return cell.getProps().computedVisibleIndex;
  }, []);
  var sortCells = (0, _react.useCallback)(function (cells) {
    return cells.sort(function (cell1, cell2) {
      return getCellIndex(cell1) - getCellIndex(cell2);
    });
  }, []);
  var getCellAt = (0, _react.useCallback)(function (index) {
    return getCells().filter(function (c) {
      return c.getProps().computedVisibleIndex === index;
    })[0];
  }, []);
  var getCellById = (0, _react.useCallback)(function (id) {
    return getCells().filter(function (c) {
      return c.getProps().id === id;
    })[0];
  }, []);
  var getSortedCells = (0, _react.useCallback)(function () {
    return sortCells(getCells().slice());
  }, []);
  var getGaps = (0, _react.useCallback)(function (startIndex, endIndex) {
    var visibleCellPositions = {};
    var sortedCells = getSortedCells();
    sortedCells.forEach(function (cell) {
      var cellProps = cell.getProps();
      if (cellProps.computedLocked) {
        return;
      }
      var computedVisibleIndex = cellProps.computedVisibleIndex,
        computedColspan = cellProps.computedColspan,
        groupProps = cellProps.groupProps;
      if (groupProps && computedVisibleIndex <= groupProps.depth + 1) {
        return;
      }
      visibleCellPositions[computedVisibleIndex] = true;
      if (computedColspan) {
        for (var i = 0; i < computedColspan; i++) {
          visibleCellPositions[computedVisibleIndex + i] = true;
        }
      }
    });
    var gaps = [];
    for (; startIndex <= endIndex; startIndex++) {
      if (!visibleCellPositions[startIndex]) {
        gaps.push(startIndex);
      }
    }
    return gaps;
  }, []);
  var getVirtualizeColumns = (0, _react.useCallback)(function () {
    return props.virtualizeColumns;
    return scrollingDirection.current !== 'horizontal' ? props.virtualizeColumns : false;
  }, [props.virtualizeColumns]);
  var toggleRowExpand = (0, _react.useCallback)(function (rowIndex) {
    if (typeof rowIndex !== 'number') {
      rowIndex = props.realIndex;
    }
    props.toggleRowExpand(rowIndex);
  }, [props.realIndex, props.toggleRowExpand]);
  var toggleNodeExpand = (0, _react.useCallback)(function (rowIndex) {
    if (typeof rowIndex !== 'number') {
      rowIndex = props.realIndex;
    }
    props.toggleNodeExpand(rowIndex);
  }, [props.realIndex, props.toggleNodeExpand]);
  var loadNodeAsync = (0, _react.useCallback)(function () {
    var _props$loadNodeAsync;
    (_props$loadNodeAsync = props.loadNodeAsync) === null || _props$loadNodeAsync === void 0 ? void 0 : _props$loadNodeAsync.call(props, props.data);
  }, [props.loadNodeAsync, props.data]);
  var isRowExpandable = (0, _react.useCallback)(function (rowIndex) {
    if (typeof rowIndex !== 'number') {
      rowIndex = props.realIndex;
    }
    return props.isRowExpandableAt(rowIndex);
  }, [props.realIndex, props.isRowExpandableAt]);
  var setRowExpanded = (0, _react.useCallback)(function (expanded, _) {
    var rowIndex = props.realIndex;
    var _expanded = expanded;
    if (typeof expanded === 'number') {
      rowIndex = expanded;
      _expanded = _;
    }
    props.setRowExpanded(rowIndex, _expanded);
  }, [props.realIndex, props.setRowExpanded]);
  var getCurrentGaps = function getCurrentGaps() {};
  var setColumnRenderStartIndex = (0, _react.useCallback)(function (columnStartIndex) {
    if (columnRenderStartIndex.current === columnStartIndex) {
      return;
    }
    columnRenderStartIndex.current = columnStartIndex;
    if (getVirtualizeColumns() === false) {
      return;
    }
    var newCellProps;
    var renderRange;
    var cellPropsAt;
    if (props.computedHasColSpan) {
      newCellProps = getPropsForCells();
      renderRange = getColumnRenderRange(newCellProps);
      cellPropsAt = function cellPropsAt(index) {
        return newCellProps[index];
      };
    } else {
      var _renderRange, _renderRange2;
      renderRange = getColumnRenderRange();
      newCellProps = getPropsForCells((_renderRange = renderRange) === null || _renderRange === void 0 ? void 0 : _renderRange.start, (((_renderRange2 = renderRange) === null || _renderRange2 === void 0 ? void 0 : _renderRange2.end) || 0) + 1);
      cellPropsAt = function cellPropsAt(index) {
        return newCellProps.filter(function (cellProps) {
          return cellProps.computedVisibleIndex === index;
        })[0];
      };
    }
    if (!renderRange) {
      return;
    }
    var _renderRange3 = renderRange,
      start = _renderRange3.start,
      end = _renderRange3.end;
    var gaps = getGaps(start, end);
    if (!gaps.length) {
      return;
    }
    var gapsMap = gaps.reduce(function (acc, gapIndex) {
      acc[gapIndex] = true;
      return acc;
    }, {});
    var tempCellMap = {};
    var calls = [];
    getCells().forEach(function (cell) {
      var cellProps = cell.getProps();
      var groupProps = cellProps.groupProps,
        cellIndex = cellProps.computedVisibleIndex,
        computedColspan = cellProps.computedColspan,
        computedLocked = cellProps.computedLocked;
      if (computedLocked) {
        return;
      }
      if (!props.groupColumn && groupProps && cellIndex <= groupProps.depth + 1) {
        return;
      }
      var outside = cellIndex < start || cellIndex > end || cellIndex === undefined;
      if (outside && computedColspan) {
        var endCellIndex = cellIndex + (computedColspan - 1);
        outside = cellIndex < start && endCellIndex < start || cellIndex > end;
      }
      var outOfView = outside || tempCellMap[cellIndex] || gapsMap[cellIndex];
      tempCellMap[cellIndex] = true;
      var newIndex;
      if (outOfView && gaps.length) {
        newIndex = gaps[gaps.length - 1];
        calls.push([cell, newIndex]);
        gaps.length -= 1;
      }
    });
    calls.forEach(function (call) {
      var cell = call[0];
      var newIndex = call[1];
      setCellIndex(cell, newIndex, cellPropsAt(newIndex));
    });
  }, [props.columnRenderStartIndex, props.computedHasColSpan, props.columnRenderCount, props.virtualizeColumns]);
  var propsRef = (0, _react.useRef)(props);
  propsRef.current = props;
  var lastDataSource = (0, _usePrevious.default)(propsRef.current.dataSourceArray, propsRef.current.dataSourceArray);
  var lastColumns = (0, _usePrevious.default)(propsRef.current.columns, propsRef.current.columns);
  var getPropsForCells = function getPropsForCells(startIndex, endIndex) {
    var _columns$filter$;
    var props = propsRef.current;
    var initialColumns = props.columns;
    var columns = initialColumns;
    var hasLockedStart = props.hasLockedStart,
      data = props.data,
      onGroupToggle = props.onGroupToggle,
      computedPivot = props.computedPivot,
      rowHeight = props.rowHeight,
      remoteRowIndex = props.remoteRowIndex,
      initialRowHeight = props.initialRowHeight,
      lastLockedStartIndex = props.lastLockedStartIndex,
      lastLockedEndIndex = props.lastLockedEndIndex,
      lastUnlockedIndex = props.lastUnlockedIndex,
      minRowHeight = props.minRowHeight,
      realIndex = props.realIndex,
      showHorizontalCellBorders = props.showHorizontalCellBorders,
      showVerticalCellBorders = props.showVerticalCellBorders,
      empty = props.empty,
      treeColumn = props.treeColumn,
      groupColumn = props.groupColumn,
      totalDataCount = props.totalDataCount,
      depth = props.depth,
      dataSourceArray = props.dataSourceArray,
      computedGroupBy = props.computedGroupBy,
      groupProps = props.groupProps,
      summaryProps = props.summaryProps,
      indexInGroup = props.indexInGroup,
      firstUnlockedIndex = props.firstUnlockedIndex,
      firstLockedEndIndex = props.firstLockedEndIndex,
      selectAll = props.selectAll,
      deselectAll = props.deselectAll,
      columnUserSelect = props.columnUserSelect,
      multiSelect = props.multiSelect,
      selection = props.selection,
      setRowSelected = props.setRowSelected,
      computedRowExpandEnabled = props.computedRowExpandEnabled,
      rtl = props.rtl,
      lastRow = props.last,
      computedCellSelection = props.computedCellSelection,
      lastNonEmpty = props.lastNonEmpty,
      maxVisibleRows = props.maxVisibleRows,
      onCellClick = props.onCellClick,
      editStartEvent = props.editStartEvent,
      naturalRowHeight = props.naturalRowHeight,
      renderNodeTool = props.renderNodeTool,
      computedTreeEnabled = props.computedTreeEnabled,
      rowExpanded = props.expanded,
      expandGroupTitle = props.expandGroupTitle,
      expandColumnFn = props.expandColumn,
      onCellSelectionDraggerMouseDown = props.onCellSelectionDraggerMouseDown,
      onCellMouseDown = props.onCellMouseDown,
      onCellEnter = props.onCellEnter,
      computedCellMultiSelectionEnabled = props.computedCellMultiSelectionEnabled,
      getCellSelectionKey = props.getCellSelectionKey,
      lastCellInRange = props.lastCellInRange,
      computedRowspans = props.computedRowspans,
      renderIndex = props.renderIndex,
      nativeScroll = props.nativeScroll,
      onDragRowMouseDown = props.onDragRowMouseDown,
      theme = props.theme,
      onContextMenu = props.onContextMenu,
      setActiveIndex = props.setActiveIndex,
      renderTreeCollapseTool = props.renderTreeCollapseTool,
      renderTreeExpandTool = props.renderTreeExpandTool,
      renderGroupCollapseTool = props.renderGroupCollapseTool,
      renderGroupExpandTool = props.renderGroupExpandTool,
      renderTreeLoadingTool = props.renderTreeLoadingTool,
      onColumnMouseEnter = props.onColumnMouseEnter,
      onColumnMouseLeave = props.onColumnMouseLeave,
      columnIndexHovered = props.columnIndexHovered,
      computedEnableColumnHover = props.computedEnableColumnHover,
      columnHoverClassName = props.columnHoverClassName,
      enableColumnAutosize = props.enableColumnAutosize,
      renderRowDetailsExpandIcon = props.renderRowDetailsExpandIcon,
      renderRowDetailsCollapsedIcon = props.renderRowDetailsCollapsedIcon,
      disabledRow = props.disabledRow,
      onCellDoubleClick = props.onCellDoubleClick,
      onCellBulkUpdateMouseDown = props.onCellBulkUpdateMouseDown,
      onCellBulkUpdateMouseUp = props.onCellBulkUpdateMouseUp,
      bulkUpdateMouseDown = props.bulkUpdateMouseDown;
    var dataSourceChange = !(0, _shallowequal.default)(lastDataSource, props.dataSourceArray);
    var columnsChange = !(0, _shallowequal.default)(lastColumns, props.columns);
    var expandColumnId = expandColumnFn ? expandColumnFn({
      data: data
    }) : undefined;
    var virtualizeColumns = getVirtualizeColumns();
    var visibleColumnCount = columns.length;
    var expandColumnIndex = expandColumnId ? (_columns$filter$ = columns.filter(function (c) {
      return c.id === expandColumnId;
    })[0]) === null || _columns$filter$ === void 0 ? void 0 : _columns$filter$.computedVisibleIndex : undefined;
    if (startIndex !== undefined) {
      columns = columns.slice(startIndex, endIndex ? endIndex + 1 : startIndex + 1);
    }
    startIndex = startIndex || 0;
    var hasBorderTopVar = false;
    var hasBorderBottomVar = false;
    var hiddenCells = {};
    var belongsToColspan = {};
    var columnsTillColspanStart = {};
    var lastInGroup = indexInGroup == props.groupCount - 1;
    var activeCell = props.computedActiveCell && getCellSelectionKey ? getCellSelectionKey.apply(void 0, (0, _toConsumableArray2.default)(props.computedActiveCell)) : null;
    var lastInRange = lastCellInRange || activeCell || null;
    var maxRowspanVar = 1;
    var cellPropsArray = columns.map(function (column, idx) {
      var theColumnIndex = idx + startIndex;
      var columnProps = column;
      var name = columnProps.name,
        computedVisibleIndex = columnProps.computedVisibleIndex;
      var value = data ? data[name] : null;
      var rowIndex = realIndex;
      if (groupProps && data && data.groupColumnSummary) {
        value = data.groupColumnSummary[name];
      }
      if (groupProps && data && column.groupColumn) {
        value = data.value;
      }
      if (columnProps.pivotColumnPath) {
        value = data.pivotSummary ? getValueForPivotColumn(data.pivotSummary, columnProps.pivotColumnPath) : value;
      }
      if (columnProps.pivotGrandSummaryColumn) {} else {
        if (columnProps.pivotSummaryPath) {
          value = data.pivotSummary ? getValueForPivotColumnSummary(data, {
            pivotSummaryPath: columnProps.pivotSummaryPath,
            pivotGrandSummaryColumn: columnProps.pivotGrandSummaryColumn
          }) : value;
        }
      }
      var defaults = {};
      if (columnUserSelect !== undefined) {
        defaults.userSelect = columnUserSelect;
      }
      var groupTitleCell = !groupColumn && groupProps && groupProps.depth + 1 == computedVisibleIndex;
      var groupExpandCell = !groupColumn && groupProps && groupProps.depth == computedVisibleIndex;
      var hidden = groupProps ? expandGroupTitle && !groupColumn ? computedVisibleIndex > groupProps.depth + 1 : false : false;
      if (expandColumnIndex != null && computedVisibleIndex > expandColumnIndex) {
        hidden = true;
      }
      var cellProps = _objectSpread(_objectSpread(_objectSpread({}, defaults), columnProps), {}, {
        remoteRowIndex: remoteRowIndex,
        indexInColumns: theColumnIndex,
        depth: depth,
        expandColumnIndex: expandColumnIndex,
        expandColumn: expandColumnIndex === computedVisibleIndex,
        editStartEvent: editStartEvent,
        onCellClick: onCellClick,
        computedRowspan: computedRowspans ? computedRowspans[column.id] : 1,
        groupNestingSize: props.groupNestingSize,
        treeNestingSize: props.treeNestingSize,
        data: data,
        naturalRowHeight: naturalRowHeight,
        totalDataCount: totalDataCount,
        onCellSelectionDraggerMouseDown: onCellSelectionDraggerMouseDown,
        onCellMouseDown: onCellMouseDown,
        onCellEnter: onCellEnter,
        rtl: rtl,
        computedPivot: computedPivot,
        selectAll: selectAll,
        deselectAll: deselectAll,
        selection: selection,
        renderNodeTool: renderNodeTool,
        onDragRowMouseDown: onDragRowMouseDown,
        multiSelect: multiSelect,
        treeColumn: treeColumn !== undefined ? treeColumn === columnProps.id : false,
        setRowSelected: setRowSelected,
        setRowExpanded: computedRowExpandEnabled ? setRowExpanded : null,
        toggleRowExpand: computedRowExpandEnabled ? toggleRowExpand : null,
        toggleNodeExpand: computedTreeEnabled ? toggleNodeExpand : null,
        loadNodeAsync: computedTreeEnabled ? loadNodeAsync : null,
        rowActive: props.active,
        rowSelected: props.selected,
        rowExpanded: rowExpanded,
        rowIndex: rowIndex,
        rowHeight: rowHeight,
        groupColumnVisible: !!groupColumn,
        minRowHeight: minRowHeight,
        groupProps: groupProps,
        summaryProps: summaryProps,
        empty: empty,
        computedGroupBy: computedGroupBy,
        nativeScroll: nativeScroll,
        computedCellMultiSelectionEnabled: computedCellMultiSelectionEnabled,
        lastRowInGroup: lastInGroup,
        columnIndex: computedVisibleIndex,
        first: computedVisibleIndex == 0,
        last: computedVisibleIndex == visibleColumnCount - 1,
        value: value,
        virtualizeColumns: virtualizeColumns,
        hasLockedStart: hasLockedStart,
        rowIndexInGroup: indexInGroup,
        rowRenderIndex: renderIndex,
        hidden: hidden,
        groupTitleCell: groupTitleCell,
        groupExpandCell: groupExpandCell,
        isRowExpandable: computedRowExpandEnabled ? isRowExpandable : null,
        tryRowCellEdit: tryRowCellEdit,
        tryNextRowEdit: tryNextRowEdit,
        onGroupToggle: onGroupToggle,
        initialRowHeight: rowExpanded ? initialRowHeight : rowHeight,
        theme: theme,
        onContextMenu: onContextMenu,
        setActiveIndex: setActiveIndex,
        renderTreeCollapseTool: renderTreeCollapseTool,
        renderTreeExpandTool: renderTreeExpandTool,
        renderGroupCollapseTool: renderGroupCollapseTool,
        renderGroupExpandTool: renderGroupExpandTool,
        renderTreeLoadingTool: renderTreeLoadingTool,
        onColumnMouseEnter: onColumnMouseEnter,
        onColumnMouseLeave: onColumnMouseLeave,
        columnIndexHovered: columnIndexHovered,
        computedEnableColumnHover: computedEnableColumnHover,
        columnHoverClassName: columnHoverClassName,
        renderRowDetailsExpandIcon: renderRowDetailsExpandIcon,
        renderRowDetailsCollapsedIcon: renderRowDetailsCollapsedIcon,
        disabledRow: disabledRow,
        dataSourceChange: dataSourceChange,
        columnsChange: columnsChange,
        onDoubleClick: onCellDoubleClick,
        onCellBulkUpdateMouseDown: onCellBulkUpdateMouseDown,
        onCellBulkUpdateMouseUp: onCellBulkUpdateMouseUp,
        bulkUpdateMouseDown: bulkUpdateMouseDown
      });
      if (computedCellSelection && getCellSelectionKey) {
        cellProps.cellSelected = computedCellSelection[getCellSelectionKey(rowIndex, computedVisibleIndex)];
        if (cellProps.cellSelected) {
          cellProps.hasRightSelectedSibling = cellProps.last ? false : computedCellSelection[getCellSelectionKey(rowIndex, computedVisibleIndex + 1)];
          cellProps.hasLeftSelectedSibling = cellProps.first ? false : computedCellSelection[getCellSelectionKey(rowIndex, computedVisibleIndex - 1)];
          cellProps.hasTopSelectedSibling = computedCellSelection[getCellSelectionKey(rowIndex - 1, computedVisibleIndex)];
          cellProps.hasBottomSelectedSibling = computedCellSelection[getCellSelectionKey(rowIndex + 1, computedVisibleIndex)];
        }
      }
      if (getCellSelectionKey && (activeCell || lastInRange)) {
        var cellKey = getCellSelectionKey(rowIndex, computedVisibleIndex);
        if (activeCell && activeCell === cellKey) {
          cellProps.cellActive = true;
        }
        if (lastInRange && lastInRange === cellKey) {
          cellProps.lastInRange = true;
        }
      }
      if (cellProps.visibilityTransitionDuration || cellProps.showTransitionDuration || cellProps.hideTransitionDuration) {
        cellProps.onTransitionEnd = onTransitionEnd(cellProps, columnProps);
      }
      if (props.editing && props.editColumnIndex === cellProps.columnIndex) {
        cellProps.inEdit = true;
        cellProps.editValue = props.editValue;
      }
      if (virtualizeColumns && !cellProps.computedLocked || enableColumnAutosize || props.editable || cellProps.computedEditable) {
        cellProps.cellRef = cellRef;
        cellProps.onUnmount = onCellUnmount;
      }
      var computedLocked = cellProps.computedLocked,
        colspan = cellProps.colspan;
      var lockedStart = computedLocked === 'start';
      var lockedEnd = computedLocked === 'end';
      var unlocked = !computedLocked;
      var computedColspan = 1;
      if (typeof colspan === 'function') {
        computedColspan = cellProps.computedColspan = Math.max(1, colspan({
          remoteRowIndex: remoteRowIndex,
          dataSourceArray: dataSourceArray,
          data: cellProps.data,
          value: cellProps.value,
          rowIndex: cellProps.rowIndex,
          column: column,
          columns: columns,
          empty: empty
        }));
        if (lockedStart) {
          computedColspan = (0, _clamp.default)(computedColspan, 1, Math.max(lastLockedStartIndex - computedVisibleIndex + 1, 1));
        }
        if (lockedEnd) {
          computedColspan = (0, _clamp.default)(computedColspan, 1, Math.max(lastLockedEndIndex - computedVisibleIndex + 1, 1));
        }
        if (unlocked) {
          computedColspan = (0, _clamp.default)(computedColspan, 1, Math.max(lastUnlockedIndex - computedVisibleIndex + 1, 1));
        }
        if (computedColspan > 1) {
          cellProps.computedWidth = columns.slice(theColumnIndex, theColumnIndex + computedColspan).reduce(function (sum, col) {
            if (col.id !== column.id) {
              hiddenCells[col.id] = true;
              if (column.computedLocked === col.computedLocked) {
                belongsToColspan[col.id] = column.id;
                columnsTillColspanStart[col.id] = col.computedVisibleIndex - column.computedVisibleIndex;
              }
            }
            return sum + col.computedWidth;
          }, 0);
        }
      }
      cellProps.lastInSection = lockedStart ? computedVisibleIndex + computedColspan - 1 === firstUnlockedIndex - 1 : lockedEnd ? computedVisibleIndex + computedColspan - 1 === visibleColumnCount - 1 : computedVisibleIndex + computedColspan - 1 === firstLockedEndIndex - 1;
      cellProps.firstInSection = lockedStart ? computedVisibleIndex === 0 : lockedEnd ? computedVisibleIndex === firstLockedEndIndex : computedVisibleIndex === firstUnlockedIndex;
      if (computedGroupBy && !groupColumn && !!cellProps.depth) {
        cellProps.noBackground = computedVisibleIndex < cellProps.depth;
      }
      if (hiddenCells[column.id]) {
        cellProps.hidden = true;
      }
      if (belongsToColspan[column.id]) {
        cellProps.computedColspanedBy = belongsToColspan[column.id];
        cellProps.computedColspanToStart = columnsTillColspanStart[column.id];
      }
      if (groupProps && !groupColumn || expandColumnIndex != null) {
        (0, _adjustCellProps.default)(cellProps, props);
      }
      if (cellProps.hidden) {
        cellProps.last = false;
        cellProps.lastInSection = false;
      } else {
        cellProps.showBorderLeft = showVerticalCellBorders && computedVisibleIndex > 0;
        cellProps.showBorderBottom = showHorizontalCellBorders;
        if (!showVerticalCellBorders && computedGroupBy) {
          cellProps.showBorderLeft = computedVisibleIndex > 0 && computedVisibleIndex <= computedGroupBy.length;
        }
        if (computedGroupBy) {
          if (!cellProps.groupProps) {
            cellProps.showBorderBottom = groupColumn ? showHorizontalCellBorders : computedVisibleIndex >= computedGroupBy.length && showHorizontalCellBorders;
            var summaryBefore = indexInGroup === 0 && !groupColumn ? dataSourceArray[rowIndex - indexInGroup] : null;
            if (summaryBefore && summaryBefore.__summary && computedVisibleIndex >= computedGroupBy.length) {
              cellProps.showBorderBottom = false;
            }
          }
          if (!empty) {
            if (!groupColumn && (computedVisibleIndex < computedGroupBy.length || lastInGroup)) {
              cellProps.showBorderBottom = rowExpanded;
            }
            if (cellProps.groupProps) {
              cellProps.showBorderBottom = cellProps.groupProps.collapsed ? !!groupColumn : groupColumn ? true : computedVisibleIndex > cellProps.groupProps.depth && cellProps.groupProps.depth >= computedGroupBy.length;
              cellProps.showBorderTop = groupTitleCell || groupExpandCell || !expandGroupTitle && !groupColumn;
            } else if (indexInGroup === 0 && !groupColumn) {
              cellProps.showBorderTop = computedVisibleIndex >= computedGroupBy.length;
            }
            if (lastNonEmpty && !lastRow && showHorizontalCellBorders) {
              cellProps.showBorderBottom = computedVisibleIndex >= (cellProps.groupProps ? cellProps.groupProps.depth : computedGroupBy.length);
            }
          } else if (rowIndex > 0 && showHorizontalCellBorders) {
            if (rowIndex === totalDataCount) {
              cellProps.showBorderBottom = computedVisibleIndex >= computedGroupBy.length;
            } else {
              cellProps.showBorderBottom = computedGroupBy ? computedVisibleIndex >= computedGroupBy.length : true;
            }
          }
        }
        if (lastRow) {
          cellProps.showBorderBottom = rowIndex < maxVisibleRows - 1 || rowExpanded;
        }
        if (lockedStart && cellProps.lastInSection) {
          cellProps.showBorderRight = true;
        }
        if (lockedEnd && computedVisibleIndex === firstLockedEndIndex) {
          cellProps.showBorderLeft = true;
        }
        if (cellProps.groupProps && computedVisibleIndex >= cellProps.groupProps.depth + 1 && !groupColumn && props.expandGroupTitle) {
          cellProps.showBorderLeft = false;
        }
        if (cellProps.summaryProps) {
          cellProps.showBorderBottom = lastRow;
          cellProps.showBorderTop = computedVisibleIndex > cellProps.summaryProps.depth;
          if (cellProps.summaryProps.position == 'start') {
            cellProps.showBorderTop = computedVisibleIndex >= cellProps.summaryProps.depth;
            cellProps.showBorderBottom = false;
          }
          cellProps.showBorderLeft = showVerticalCellBorders ? true : computedVisibleIndex <= cellProps.summaryProps.depth;
          if (computedVisibleIndex > cellProps.summaryProps.depth && computedVisibleIndex <= computedGroupBy.length && !groupColumn) {
            cellProps.showBorderLeft = false;
          }
          if (computedVisibleIndex === 0) {
            cellProps.showBorderLeft = false;
          }
          cellProps.noBackground = !groupColumn;
        }
        if (firstUnlockedIndex === computedVisibleIndex && hasLockedStart) {
          cellProps.showBorderLeft = false;
        }
        if (cellProps.groupSpacerColumn && rowExpanded) {
          cellProps.showBorderBottom = false;
        }
        if (cellProps.last) {
          cellProps.showBorderRight = true;
        }
        var prevColumn = columns[theColumnIndex - 1];
        var nextColumn = columns[theColumnIndex + 1];
        if (nextColumn && nextColumn.prevBorderRight !== undefined && !(lockedStart && cellProps.lastInSection)) {
          cellProps.showBorderRight = nextColumn.prevBorderRight;
        }
        if (prevColumn && prevColumn.nextBorderLeft !== undefined) {
          cellProps.showBorderLeft = prevColumn.nextBorderLeft;
        }
        if (columnProps.showBorderRight !== undefined) {
          cellProps.showBorderRight = columnProps.showBorderRight;
        }
        if (columnProps.showBorderLeft !== undefined) {
          cellProps.showBorderLeft = columnProps.showBorderLeft;
        }
      }
      if (cellProps.computedEditable) {
        cellProps.onEditStopForRow = onCellStopEdit;
        cellProps.onEditStartForRow = onCellStartEdit;
        cellProps.onEditCancelForRow = onCellEditCancel;
        cellProps.onEditValueChangeForRow = onCellEditValueChange;
        cellProps.onEditCompleteForRow = onCellEditComplete;
      }
      hasBorderBottomVar = hasBorderBottomVar || cellProps.showBorderBottom;
      hasBorderTopVar = hasBorderTopVar || cellProps.showBorderTop;
      return cellProps;
    });
    maxRowspan.current = maxRowspanVar;
    if (props.computedEnableRowspan) {
      props.setRowSpan && props.setRowSpan(maxRowspan.current);
    }
    hasBorderTop.current = hasBorderTopVar;
    hasBorderBottom.current = hasBorderBottomVar;
    return cellPropsArray;
  };
  var onCellStopEdit = (0, _react.useCallback)(function (value, cellProps) {
    if (props.onEditStop) {
      props.onEditStop({
        value: value,
        data: cellProps.data,
        rowId: props.getItemId(cellProps.data),
        columnId: cellProps.id,
        columnIndex: cellProps.computedVisibleIndex,
        rowIndex: cellProps.rowIndex,
        cellProps: cellProps
      });
    }
  }, [props.onEditStop]);
  var onCellStartEdit = (0, _react.useCallback)(function (value, cellProps) {
    if (props.onEditStart) {
      props.onEditStart({
        data: cellProps.data,
        value: value,
        rowId: props.getItemId(cellProps.data),
        columnId: cellProps.id,
        columnIndex: cellProps.computedVisibleIndex,
        rowIndex: cellProps.rowIndex,
        cellProps: cellProps
      });
    }
  }, [props.onEditStart]);
  var onCellEditCancel = (0, _react.useCallback)(function (cellProps) {
    if (props.onEditCancel) {
      props.onEditCancel({
        data: cellProps.data,
        rowId: props.getItemId(cellProps.data),
        columnIndex: cellProps.computedVisibleIndex,
        columnId: cellProps.id,
        rowIndex: cellProps.rowIndex,
        cellProps: cellProps
      });
    }
  }, [props.onEditCancel]);
  var onCellEditValueChange = (0, _react.useCallback)(function (value, cellProps) {
    if (props.onEditValueChange) {
      props.onEditValueChange({
        value: value,
        data: cellProps.data,
        rowId: props.getItemId(cellProps.data),
        columnId: cellProps.id,
        columnIndex: cellProps.computedVisibleIndex,
        rowIndex: cellProps.rowIndex,
        cellProps: cellProps
      });
    }
  }, [props.onEditValueChange]);
  var onCellEditComplete = (0, _react.useCallback)(function (value, cellProps) {
    if (props.onEditComplete) {
      props.onEditComplete({
        value: value,
        data: cellProps.data,
        rowId: props.getItemId(cellProps.data),
        columnId: cellProps.id,
        columnIndex: cellProps.computedVisibleIndex,
        rowIndex: cellProps.rowIndex,
        cellProps: cellProps
      });
    }
  }, [props.onEditComplete]);
  var tryRowCellEdit = (0, _react.useCallback)(function (editIndex) {
    var dir = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    var isEnterNavigation = arguments.length > 2 ? arguments[2] : undefined;
    var cols = props.columns;
    var col;
    var colIndex;
    if (!dir) {
      dir = 1;
    }
    dir = dir == 1 ? 1 : -1;
    var currentIndex = dir == 1 ? 0 : cols.length - 1;
    var foundCols = [];
    while (cols[currentIndex]) {
      col = cols[currentIndex];
      if (col.editable || props.editable && col.editable !== false) {
        colIndex = col.computedVisibleIndex;
        if (colIndex == editIndex) {
          foundCols.push(col);
        } else {
          if (dir < 0) {
            if (colIndex < editIndex) {
              foundCols.push(col);
            }
          } else if (dir > 0) {
            if (colIndex > editIndex) {
              foundCols.push(col);
            }
          }
        }
      }
      currentIndex += dir;
    }
    if (!foundCols.length) {
      tryNextRowEdit(dir, isEnterNavigation ? editIndex : dir > 0 ? 0 : props.columns.length - 1);
      return Promise.reject(null);
    }
    foundCols.sort(function (a, b) {
      return dir > 0 ? a - b : b - a;
    });
    return new Promise(function (resolve, reject) {
      var startEdit = function startEdit(cols) {
        var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
        props.currentEditCompletePromise.current.then(function () {
          var errBack = function errBack() {
            isEnterNavigation ? tryNextRowEdit(dir, editIndex, true) : startEdit(cols, index + 1);
          };
          var col = cols[index];
          if (!col) {
            tryNextRowEdit(dir, isEnterNavigation ? editIndex : dir > 0 ? 0 : props.columns.length - 1);
            return reject('column not found');
          }
          var cell = getCellById(col.id);
          if (!cell) {
            if (props.scrollToColumn) {
              props.scrollToColumn(col.id, undefined, function () {
                setTimeout(function () {
                  startEdit(cols, index);
                }, 20);
              });
            }
            return;
          }
          setTimeout(function () {
            return cell.startEdit && cell.startEdit(undefined, errBack).then(resolve).catch(errBack);
          }, 0);
        }).catch(function (error) {
          return reject(error);
        });
        return;
      };
      startEdit(foundCols, 0);
    });
  }, [props.columns, props.editable, props.currentEditCompletePromise, props.rowIndex, props.scrollToColumn]);
  var tryNextRowEdit = (0, _react.useCallback)(function (dir, columnIndex, isEnterNavigation) {
    if (props.scrollToIndexIfNeeded) {
      props.scrollToIndexIfNeeded(props.rowIndex + 2 * dir, {
        direction: dir == -1 ? 'top' : 'bottom'
      }, function () {
        if (props.tryNextRowEdit) {
          props.tryNextRowEdit(props.rowIndex + dir, dir, columnIndex, isEnterNavigation);
        }
      });
    }
  }, [props.rowIndex, props.scrollToIndexIfNeeded, props.tryNextRowEdit]);
  var onTransitionEnd = (0, _react.useCallback)(function (cellProps, columnProps, e) {
    e.stopPropagation();
    if (columnProps.onTransitionEnd) {
      columnProps.onTransitionEnd(e);
    }
    if (props.onTransitionEnd) {
      props.onTransitionEnd(e, cellProps);
    }
  }, [props.onTransitionEnd]);
  var getColumnRenderRange = (0, _react.useCallback)(function (cellProps) {
    var virtualizeColumns = getVirtualizeColumns();
    if (!virtualizeColumns) {
      return null;
    }
    var minStartIndex = props.lockedStartColumns.length ? props.lockedStartColumns.length : props.groupProps && !props.groupColumn ? props.groupProps.depth + 2 : 0;
    var maxEndIndex = props.columns.length - props.lockedEndColumns.length - 1;
    var columnStartIndex = columnRenderStartIndex.current == null ? props.columnRenderStartIndex || 0 : columnRenderStartIndex.current;
    columnStartIndex = Math.max(columnStartIndex, minStartIndex);
    var fixStartIndexForColspan = function fixStartIndexForColspan() {
      if (cellProps) {
        while (cellProps[columnStartIndex].computedColspanedBy) {
          columnStartIndex--;
        }
      }
    };
    if (props.columnRenderCount != null) {
      var columnRenderEndIndex = columnStartIndex + props.columnRenderCount;
      columnRenderEndIndex = Math.min(columnRenderEndIndex, maxEndIndex);
      if (columnRenderEndIndex - props.columnRenderCount != columnStartIndex) {
        columnStartIndex = Math.max(columnRenderEndIndex - props.columnRenderCount, minStartIndex);
      }
      if (columnRenderEndIndex < 0) {
        return {
          start: 0,
          end: 0
        };
      }
      fixStartIndexForColspan();
      return {
        start: columnStartIndex,
        end: columnRenderEndIndex
      };
    }
    return null;
  }, [props.virtualizeColumns, props.columnRenderCount, props.lockedStartColumns, props.lockedEndColumns, props.groupColumn, props.groupProps, props.columnRenderStartIndex, props.columns]);
  var expandRangeWithColspan = (0, _react.useCallback)(function (range, cellProps) {
    var extraNeededColumns = cellProps.reduce(function (total, cellProps) {
      return total + (cellProps.computedColspan > 1 ? cellProps.computedColspan - 1 : 0);
    }, 0);
    if (!extraNeededColumns) {
      return range;
    }
    if (range.start < props.firstUnlockedIndex) {
      range.start = props.firstUnlockedIndex;
    }
    if (range.start > extraNeededColumns) {
      range.start -= extraNeededColumns;
      return range;
    }
    extraNeededColumns -= range.start;
    range.start = 0;
    if (extraNeededColumns) {
      range.end += extraNeededColumns;
    }
    return range;
  }, []);
  var renderRowInstance = function renderRowInstance(_, __, style) {
    var scrollLeft = props.scrollLeft,
      hasLockedStart = props.hasLockedStart,
      hasLockedEnd = props.hasLockedEnd,
      lockedStartColumns = props.lockedStartColumns,
      lockedEndColumns = props.lockedEndColumns,
      computedHasColSpan = props.computedHasColSpan,
      groupProps = props.groupProps,
      columns = props.columns;
    var virtualizeColumns = getVirtualizeColumns();
    var cellProps;
    if (!virtualizeColumns) {
      cellProps = getPropsForCells();
    } else {
      var lockedStartCellProps = [];
      var lockedEndCellProps = [];
      var groupCellProps = [];
      var renderRange;
      if (computedHasColSpan) {
        cellProps = getPropsForCells();
        if (hasLockedStart) {
          lockedStartCellProps = cellProps.slice(0, lockedStartColumns.length);
        } else if (groupProps) {
          groupCellProps = cellProps.slice(0, groupProps.depth + 2);
        }
        if (hasLockedEnd) {
          lockedEndCellProps = cellProps.slice(columns.length - lockedEndColumns.length, columns.length);
        }
        renderRange = getColumnRenderRange(cellProps);
        if (renderRange) {
          renderRange = expandRangeWithColspan(renderRange, cellProps);
          cellProps = cellProps.slice(renderRange.start, renderRange.end + 1);
        }
      } else {
        var _renderRange4, _renderRange5;
        renderRange = getColumnRenderRange();
        cellProps = getPropsForCells((_renderRange4 = renderRange) === null || _renderRange4 === void 0 ? void 0 : _renderRange4.start, ((_renderRange5 = renderRange) === null || _renderRange5 === void 0 ? void 0 : _renderRange5.end) || 0);
        if (hasLockedStart) {
          lockedStartCellProps = getPropsForCells(0, lockedStartColumns.length - 1);
        } else if (groupProps) {
          groupCellProps = getPropsForCells(0, groupProps.depth + 2 - 1);
        }
        if (hasLockedEnd) {
          lockedEndCellProps = getPropsForCells(lockedEndColumns[0].computedVisibleIndex, columns.length - 1);
        }
      }
      if (hasLockedStart) {
        cellProps = [].concat((0, _toConsumableArray2.default)(lockedStartCellProps), (0, _toConsumableArray2.default)(cellProps));
      } else if (groupProps) {
        cellProps = [].concat((0, _toConsumableArray2.default)(groupCellProps), (0, _toConsumableArray2.default)(cellProps));
      }
      if (hasLockedEnd) {
        var _cellProps2;
        (_cellProps2 = cellProps).push.apply(_cellProps2, (0, _toConsumableArray2.default)(lockedEndCellProps));
      }
    }
    var result = cellProps.map(function (cProps, index) {
      var cell;
      var key = index;
      if (!virtualizeColumns) {
        key = cProps.id || index;
      }
      if (props.cellFactory) {
        cell = props.cellFactory(cProps);
      }
      if (cell === undefined) {
        cell = _react.default.createElement(_Cell.default, _objectSpread(_objectSpread({}, cProps), {}, {
          timestamp: Date.now(),
          cellRef: cProps.cellRef ? cProps.cellRef : null,
          key: key
        }));
      }
      return cell;
    });
    return (0, _renderCellsMaybeLocked.default)(result, props, scrollLeft, undefined, style);
  };
  var onClick = (0, _react.useCallback)(function (event) {
    if (props.computedTreeEnabled && props.expandOnMouseDown) {
      toggleNodeExpand(props.rowIndex);
    }
    if (props.onClick) {
      props.onClick(event, props);
    }
    if (props.passedProps && props.passedProps.onClick) {
      props.passedProps.onClick(event, props);
    }
  }, [props.passedProps, props.computedTreeEnabled, props.rowIndex, props.expandOnMouseDown, props.onClick]);
  var onDoubleClick = (0, _react.useCallback)(function (event) {
    if (props.onRowDoubleClick) {
      props.onRowDoubleClick(event, props);
    }
  }, [props.onRowDoubleClick]);
  var onMouseDown = (0, _react.useCallback)(function (event) {
    if (props.onMouseDown) {
      props.onMouseDown(event, props);
    }
  }, [props.onMouseDown]);
  var onMouseUp = (0, _react.useCallback)(function (event) {
    if (props.onMouseUp) {
      props.onMouseUp(event);
    }
  }, []);
  (0, _react.useImperativeHandle)(ref, function () {
    return {
      onCellUnmount: onCellUnmount,
      cleanupCells: cleanupCells,
      getDOMNode: getDOMNode,
      orderCells: orderCells,
      updateEditCell: updateEditCell,
      fixForColspan: fixForColspan,
      setScrolling: setScrolling,
      renderRowDetails: renderRowDetails,
      onContextMenu: onContextMenu,
      setCellIndex: setCellIndex,
      getCellIndex: getCellIndex,
      sortCells: sortCells,
      getCellAt: getCellAt,
      getCellById: getCellById,
      getCells: getCells,
      getSortedCells: getSortedCells,
      getGaps: getGaps,
      getVirtualizeColumns: getVirtualizeColumns,
      toggleRowExpand: toggleRowExpand,
      toggleNodeExpand: toggleNodeExpand,
      loadNodeAsync: loadNodeAsync,
      isRowExpandable: isRowExpandable,
      setRowExpanded: setRowExpanded,
      setColumnRenderStartIndex: setColumnRenderStartIndex,
      getPropsForCells: getPropsForCells,
      onCellStopEdit: onCellStopEdit,
      onCellStartEdit: onCellStartEdit,
      onCellEditCancel: onCellEditCancel,
      onCellEditValueChange: onCellEditValueChange,
      onCellEditComplete: onCellEditComplete,
      tryRowCellEdit: tryRowCellEdit,
      tryNextRowEdit: tryNextRowEdit,
      onTransitionEnd: onTransitionEnd,
      getColumnRenderRange: getColumnRenderRange,
      expandRangeWithColspan: expandRangeWithColspan,
      renderRow: renderRow,
      onClick: onClick,
      onMouseDown: onMouseDown,
      getCurrentGaps: getCurrentGaps,
      totalDataCount: props.totalDataCount,
      rowProps: rowProps,
      domRef: domRef,
      props: props
    };
  });
  var rowHeight = props.rowHeight,
    initialRowHeight = props.initialRowHeight,
    maxRowHeight = props.maxRowHeight,
    groupNestingSize = props.groupNestingSize,
    summaryProps = props.summaryProps,
    data = props.data,
    id = props.id,
    columns = props.columns,
    minWidth = props.minWidth,
    maxWidth = props.maxWidth,
    rowStyle = props.rowStyle,
    scrollbars = props.scrollbars,
    renderRow = props.renderRow,
    computedRowExpandEnabled = props.computedRowExpandEnabled,
    even = props.even,
    odd = props.odd,
    active = props.active,
    selected = props.selected,
    expanded = props.expanded,
    passedProps = props.passedProps,
    realIndex = props.realIndex,
    remoteRowIndex = props.remoteRowIndex,
    nativeScroll = props.nativeScroll,
    indexInGroup = props.indexInGroup,
    naturalRowHeight = props.naturalRowHeight,
    rowDetailsStyle = props.rowDetailsStyle,
    renderDetailsGrid = props.renderDetailsGrid,
    last = props.last,
    empty = props.empty,
    computedPivot = props.computedPivot,
    computedShowZebraRows = props.computedShowZebraRows,
    rowDetailsWidth = props.rowDetailsWidth,
    availableWidth = props.availableWidth,
    groupProps = props.groupProps,
    groupColumn = props.groupColumn,
    dataSourceArray = props.dataSourceArray,
    onRenderRow = props.onRenderRow,
    shouldRenderCollapsedRowDetails = props.shouldRenderCollapsedRowDetails,
    editing = props.editing,
    rtl = props.rtl,
    sticky = props.sticky,
    hasLockedEnd = props.hasLockedEnd,
    hasLockedStart = props.hasLockedStart,
    showHorizontalCellBorders = props.showHorizontalCellBorders,
    disabledRow = props.disabledRow,
    rowspanZIndex = props.rowspanZIndex,
    focusedRow = props.focusedRow,
    rowFocusClassName = props.rowFocusClassName;
  var rowClassName = props.rowClassName;
  var virtualizeColumns = getVirtualizeColumns();
  var lastInGroup = indexInGroup == props.groupCount - 1;
  var hasRowSpan = props.computedRowspans && Object.keys(props.computedRowspans).map(function (name) {
    var rowspan = props.computedRowspans[name];
    return rowspan > 1;
  }).find(function (rowSpan) {
    return rowSpan === true;
  });
  var className = (0, _join.default)(props.className, CLASS_NAME, scrollingInProgress.current && "".concat(CLASS_NAME, "--scrolling"), empty && "".concat(CLASS_NAME, "--empty"), editing && "".concat(CLASS_NAME, "--editing"), "".concat(CLASS_NAME, "--direction-").concat(rtl ? 'rtl' : 'ltr'), computedShowZebraRows && even && (!groupProps || computedPivot) && "".concat(CLASS_NAME, "--even"), computedShowZebraRows && odd && (!groupProps || computedPivot) && "".concat(CLASS_NAME, "--odd"), !computedShowZebraRows && !groupProps && "".concat(CLASS_NAME, "--no-zebra"), groupProps && "".concat(CLASS_NAME, "--group-row"), summaryProps && "".concat(CLASS_NAME, "--summary-row"), summaryProps && "".concat(CLASS_NAME, "--summary-position-").concat(summaryProps.position), groupProps && groupProps.collapsed && "".concat(CLASS_NAME, "--collapsed"), selected && "".concat(CLASS_NAME, "--selected"), expanded && "".concat(CLASS_NAME, "--expanded"), hasLockedStart ? "".concat(CLASS_NAME, "--has-locked-start") : "".concat(CLASS_NAME, "--no-locked-start"), hasLockedEnd ? "".concat(CLASS_NAME, "--has-locked-end") : "".concat(CLASS_NAME, "--no-locked-end"), showHorizontalCellBorders && "".concat(CLASS_NAME, "--show-horizontal-borders"), active && "".concat(CLASS_NAME, "--active"), virtualizeColumns && "".concat(CLASS_NAME, "--virtualize-columns"), rowHeight && "".concat(CLASS_NAME, "--rowheight"), naturalRowHeight && "".concat(CLASS_NAME, "--natural-rowheight"), realIndex == 0 && "".concat(CLASS_NAME, "--first"), last && "".concat(CLASS_NAME, "--last"), indexInGroup == 0 && "".concat(CLASS_NAME, "--first-in-group"), lastInGroup && "".concat(CLASS_NAME, "--last-in-group"), disabledRow ? "".concat(CLASS_NAME, "--disabled") : '', focusedRow ? (0, _join.default)("".concat(CLASS_NAME, "--focused"), rowFocusClassName ? rowFocusClassName : '') : '');
  if (passedProps) {
    className = (0, _join.default)(className, selected && passedProps.selectedClassName);
  }
  var style = _objectSpread(_objectSpread({}, props.style), {}, {
    height: naturalRowHeight ? null : rowHeight,
    width: props.width,
    minWidth: minWidth,
    direction: 'ltr'
  });
  if (hasRowSpan) {
    style.zIndex = rowspanZIndex;
  }
  if (maxWidth != null) {
    style.maxWidth = maxWidth;
  }
  if (maxRowHeight != null) {
    style.maxHeight = maxRowHeight;
  }
  if (rowStyle) {
    if (typeof rowStyle === 'function') {
      var rowStyleResult = rowStyle({
        data: data,
        props: props,
        style: style
      });
      if (rowStyleResult !== undefined) {
        style = _objectSpread(_objectSpread({}, style), rowStyleResult);
      }
    } else {
      style = _objectSpread(_objectSpread({}, style), rowStyle);
    }
  }
  if (rowClassName) {
    if (typeof rowClassName === 'function') {
      rowClassName = rowClassName({
        data: data,
        props: props,
        className: className
      });
    }
    if (rowClassName && typeof rowClassName == 'string') {
      className = (0, _join.default)(className, rowClassName);
    }
  }
  var rowProps = _objectSpread(_objectSpread(_objectSpread({}, props), {}, {
    className: className,
    style: style,
    ref: domRef
  }, passedProps), {}, {
    onClick: !disabledRow ? onClick : null,
    onDoubleClick: !disabledRow ? onDoubleClick : null,
    onContextMenu: !disabledRow ? onContextMenu : null,
    onMouseUp: !disabledRow ? onMouseUp : null
  });
  rowProps.children = [_react.default.createElement("div", {
    key: "cellWrap",
    className: "InovuaReactDataGrid__row-cell-wrap InovuaReactDataGrid__row-hover-target",
    style: {
      width: props.width,
      height: naturalRowHeight ? null : rowHeight,
      position: 'absolute',
      top: 0,
      left: rtl ? -(props.emptyScrollOffset || 0) : 0
    }
  }, renderRowInstance(data, columns, style))];
  var groupDepth = groupColumn ? 0 : data && data.__group ? data.depth - 1 : data && data.__summary ? rowProps.summaryProps.depth : props.depth || 0;
  var activeBordersDiv = sticky ? _react.default.createElement("div", {
    key: "active-row-borders",
    className: (0, _join.default)("".concat(CLASS_NAME, "-active-borders"), hasBorderTop.current && "".concat(CLASS_NAME, "-active-borders--has-border-top"), hasBorderBottom.current && "".concat(CLASS_NAME, "-actived-borders--has-border-bottom"))
  }) : null;
  var shouldRender = expanded || shouldRenderCollapsedRowDetails;
  if (computedRowExpandEnabled && shouldRender && !data.__group) {
    var rowDetailsInfo = {
      data: data,
      rtl: rtl,
      isRowExpandable: isRowExpandable,
      rowIndex: realIndex,
      remoteRowIndex: remoteRowIndex,
      rowId: props.getItemId(data),
      rowExpanded: expanded,
      id: id,
      rowSelected: selected,
      rowActive: active,
      toggleRowExpand: toggleRowExpand,
      setRowExpanded: setRowExpanded,
      dataSource: dataSourceArray
    };
    var detailsStyle = {
      position: 'absolute',
      height: rowHeight - initialRowHeight,
      overflow: renderDetailsGrid ? 'visible' : 'auto',
      top: initialRowHeight
    };
    if (rtl) {
      detailsStyle.direction = 'rtl';
    }
    if (rowDetailsWidth == 'max-viewport-width') {
      detailsStyle.width = Math.min(availableWidth, props.width || maxWidth);
    }
    if (rowDetailsWidth === 'min-viewport-width') {
      detailsStyle.width = Math.max(availableWidth, props.width || maxWidth);
    }
    if (rowDetailsWidth === 'viewport-width') {
      detailsStyle.width = availableWidth;
    }
    if (groupDepth) {
      detailsStyle[rtl ? 'paddingRight' : 'paddingLeft'] = (groupNestingSize || 0) * groupDepth;
    }
    detailsStyle[rtl ? 'right' : 'left'] = 0;
    if (isNaN(detailsStyle.width)) {
      delete detailsStyle.width;
    }
    if (!expanded) {
      detailsStyle.display = 'none';
    }
    if (rowProps.memorizedScrollLeft && rowDetailsWidth !== 'min-viewport-width') {
      var scrollLeftMax = rowProps.getScrollLeftMax && rowProps.getScrollLeftMax();
      var scrollLeft = !rtl ? rowProps.memorizedScrollLeft : -(scrollLeftMax - rowProps.memorizedScrollLeft);
      detailsStyle.transform = "translate3d(".concat(scrollLeft, "px, 0px, 0px)");
    }
    if (rowDetailsStyle) {
      if (typeof rowDetailsStyle === 'function') {
        var styleResult = rowDetailsStyle(detailsStyle, rowDetailsInfo);
        if (styleResult !== undefined) {
          detailsStyle = styleResult;
        }
      } else {
        detailsStyle = _objectSpread(_objectSpread({}, detailsStyle), rowDetailsStyle);
      }
    }
    var showBorderBottom = !lastInGroup || last;
    if (nativeScroll && last && expanded) {
      showBorderBottom = false;
    }
    rowProps.children.push(_react.default.createElement("div", {
      key: "rowDetails",
      style: detailsStyle,
      onClick: skipSelect,
      className: (0, _join.default)("".concat(CLASS_NAME, "-details"), "".concat(CLASS_NAME, "-details--").concat(rowDetailsWidth), renderDetailsGrid ? "".concat(CLASS_NAME, "-details--details-grid") : null, !nativeScroll || nativeScroll && scrollbars && !scrollbars.vertical || availableWidth > minWidth ? "".concat(CLASS_NAME, "-details--show-border-right") : null, showBorderBottom ? "".concat(CLASS_NAME, "-details--show-border-bottom") : '')
    }, renderRowDetails(rowDetailsInfo)), _react.default.createElement("div", {
      className: "".concat(CLASS_NAME, "-details-special-bottom-border"),
      key: "row-details-special-bottom-border",
      style: (0, _defineProperty2.default)({}, rtl ? 'right' : 'left', (groupDepth || 0) * groupNestingSize)
    }), groupDepth ? (0, _toConsumableArray2.default)(new Array(groupDepth)).map(function (_, index) {
      var _style2;
      return _react.default.createElement("div", {
        key: index,
        className: "".concat(CLASS_NAME, "-details-border"),
        style: (_style2 = {
          height: '100%',
          position: 'absolute'
        }, (0, _defineProperty2.default)(_style2, rtl ? 'right' : 'left', (index + 1) * groupNestingSize), (0, _defineProperty2.default)(_style2, "top", 0), _style2)
      });
    }) : null, rowDetailsWidth != 'max-viewport-width' ? _react.default.createElement("div", {
      key: "rowDetailsBorder",
      style: (0, _defineProperty2.default)({
        top: initialRowHeight - 1,
        width: availableWidth
      }, rtl ? 'right' : 'left', (groupDepth || 0) * groupNestingSize),
      className: "".concat(CLASS_NAME, "-details-special-top-border")
    }) : null);
  }
  if (sticky) {
    if (activeBordersDiv) {
      var _style4;
      rowProps.children.push(_react.default.createElement("div", {
        key: "active-row-borders",
        className: "InovuaReactDataGrid__row-active-borders-wrapper",
        style: (_style4 = {
          height: '100%',
          position: 'absolute',
          top: 0
        }, (0, _defineProperty2.default)(_style4, rtl ? 'right' : 'left', (groupNestingSize || 0) * groupDepth), (0, _defineProperty2.default)(_style4, "width", availableWidth - (groupNestingSize || 0) * groupDepth), (0, _defineProperty2.default)(_style4, "pointerEvents", 'none'), _style4)
      }, activeBordersDiv));
    }
  }
  var row;
  if (renderRow) {
    row = renderRow(rowProps);
  }
  if (onRenderRow) {
    onRenderRow(rowProps);
  }
  if (row === undefined) {
    row = _react.default.createElement("div", _objectSpread(_objectSpread({}, (0, _reactCleanProps.default)(rowProps, DataGridRow.propTypes)), {}, {
      id: null,
      data: null,
      value: null
    }));
  }
  return row;
});
var emptyFn = function emptyFn() {};
DataGridRow.defaultProps = {
  onClick: emptyFn,
  onMouseEnter: emptyFn,
  onMouseLeave: emptyFn,
  onMouseDown: emptyFn,
  columnRenderStartIndex: 0,
  showAllGroupCells: false
};
DataGridRow.propTypes = {
  rowActive: _propTypes.default.bool,
  rowSelected: _propTypes.default.bool,
  availableWidth: _propTypes.default.number,
  computedGroupBy: _propTypes.default.array,
  expandGroupTitle: _propTypes.default.bool,
  expandColumn: _propTypes.default.any,
  getCellSelectionKey: _propTypes.default.func,
  depth: _propTypes.default.number,
  columns: _propTypes.default.array,
  columnsMap: _propTypes.default.shape({}),
  active: _propTypes.default.bool,
  computedActiveCell: _propTypes.default.any,
  cellFactory: _propTypes.default.func,
  computedCellMultiSelectionEnabled: _propTypes.default.bool,
  computedCellSelection: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
  columnRenderCount: _propTypes.default.number,
  columnRenderStartIndex: _propTypes.default.number,
  columnUserSelect: _propTypes.default.bool,
  deselectAll: _propTypes.default.func,
  empty: _propTypes.default.bool,
  even: _propTypes.default.bool,
  firstLockedEndIndex: _propTypes.default.number,
  firstLockedStartIndex: _propTypes.default.number,
  firstUnlockedIndex: _propTypes.default.number,
  flex: _propTypes.default.number,
  groupCount: _propTypes.default.number,
  groupNestingSize: _propTypes.default.number,
  treeNestingSize: _propTypes.default.number,
  groupProps: _propTypes.default.object,
  summaryProps: _propTypes.default.object,
  hasLockedEnd: _propTypes.default.bool,
  hasLockedStart: _propTypes.default.bool,
  indexInGroup: _propTypes.default.number,
  last: _propTypes.default.bool,
  lastCellInRange: _propTypes.default.any,
  lastNonEmpty: _propTypes.default.bool,
  lastRowInGroup: _propTypes.default.bool,
  lockedEndColumns: _propTypes.default.array,
  lockedStartColumns: _propTypes.default.array,
  maxRowHeight: _propTypes.default.number,
  minRowHeight: _propTypes.default.number,
  maxVisibleRows: _propTypes.default.number,
  minWidth: _propTypes.default.number,
  multiSelect: _propTypes.default.bool,
  odd: _propTypes.default.bool,
  onArrowDown: _propTypes.default.func,
  onArrowUp: _propTypes.default.func,
  onCellClick: _propTypes.default.func,
  onCellDoubleClick: _propTypes.default.func,
  onRowDoubleClick: _propTypes.default.func,
  onCellEnter: _propTypes.default.func,
  onCellMouseDown: _propTypes.default.func,
  onCellSelectionDraggerMouseDown: _propTypes.default.func,
  onRowContextMenu: _propTypes.default.func,
  passedProps: _propTypes.default.object,
  realIndex: _propTypes.default.number,
  renderIndex: _propTypes.default.number,
  renderRow: _propTypes.default.func,
  onRenderRow: _propTypes.default.func,
  rowHeight: _propTypes.default.number,
  rowExpandHeight: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.func]),
  initialRowHeight: _propTypes.default.number,
  defaultRowHeight: _propTypes.default.number,
  emptyScrollOffset: _propTypes.default.number,
  rowIndex: _propTypes.default.number,
  remoteRowIndex: _propTypes.default.number,
  rowIndexInGroup: _propTypes.default.bool,
  rowStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]),
  rowClassName: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func]),
  scrollLeft: _propTypes.default.number,
  selectAll: _propTypes.default.func,
  selected: _propTypes.default.bool,
  expanded: _propTypes.default.bool,
  selection: _propTypes.default.any,
  computedRowExpandEnabled: _propTypes.default.bool,
  computedTreeEnabled: _propTypes.default.bool,
  computedRenderRowDetails: _propTypes.default.func,
  isRowExpandableAt: _propTypes.default.func,
  setRowSelected: _propTypes.default.func,
  setRowExpanded: _propTypes.default.func,
  toggleRowExpand: _propTypes.default.func,
  toggleNodeExpand: _propTypes.default.func,
  expandOnMouseDown: _propTypes.default.bool,
  loadNodeAsync: _propTypes.default.func,
  showAllGroupCells: _propTypes.default.bool,
  computedShowCellBorders: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),
  showHorizontalCellBorders: _propTypes.default.bool,
  showVerticalCellBorders: _propTypes.default.bool,
  totalColumnCount: _propTypes.default.number,
  totalComputedWidth: _propTypes.default.number,
  totalDataCount: _propTypes.default.number,
  totalLockedEndWidth: _propTypes.default.number,
  totalLockedStartWidth: _propTypes.default.number,
  totalUnlockedWidth: _propTypes.default.number,
  unlockedColumns: _propTypes.default.array,
  virtualizeColumns: _propTypes.default.bool,
  nativeScroll: _propTypes.default.bool,
  shouldRenderCollapsedRowDetails: _propTypes.default.bool,
  rowDetailsStyle: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),
  dataSourceArray: _propTypes.default.array,
  getItemId: _propTypes.default.func.isRequired,
  editable: _propTypes.default.bool,
  editing: _propTypes.default.bool,
  editValue: _propTypes.default.any,
  editRowIndex: _propTypes.default.number,
  editColumnIndex: _propTypes.default.number,
  editColumnId: _propTypes.default.any,
  naturalRowHeight: _propTypes.default.bool,
  renderDetailsGrid: _propTypes.default.func,
  scrollToColumn: _propTypes.default.func,
  scrollToIndexIfNeeded: _propTypes.default.func,
  renderNodeTool: _propTypes.default.func,
  computedEnableRowspan: _propTypes.default.bool,
  setRowSpan: _propTypes.default.func,
  treeColumn: _propTypes.default.string,
  scrollbars: _propTypes.default.shape({
    horizontal: _propTypes.default.bool,
    vertical: _propTypes.default.bool
  }),
  rtl: _propTypes.default.bool,
  computedPivot: _propTypes.default.array,
  groupColumnSummaries: _propTypes.default.any,
  groupSummary: _propTypes.default.any,
  groupColumn: _propTypes.default.any,
  lastUnlockedIndex: _propTypes.default.number,
  lastLockedEndIndex: _propTypes.default.number,
  lastLockedStartIndex: _propTypes.default.number,
  computedShowZebraRows: _propTypes.default.bool,
  computedRowspans: _propTypes.default.any,
  editStartEvent: _propTypes.default.string,
  onGroupToggle: _propTypes.default.func,
  onEditStop: _propTypes.default.func,
  onEditStart: _propTypes.default.func,
  onEditCancel: _propTypes.default.func,
  onEditValueChange: _propTypes.default.func,
  onEditComplete: _propTypes.default.func,
  onFilterValueChange: _propTypes.default.func,
  tryNextRowEdit: _propTypes.default.func,
  getScrollLeftMax: _propTypes.default.func,
  activeRowRef: _propTypes.default.any,
  sticky: _propTypes.default.bool,
  edition: _propTypes.default.string,
  computedLicenseValid: _propTypes.default.bool,
  parentGroupDataArray: _propTypes.default.any,
  rowDetailsWidth: _propTypes.default.oneOf(['max-viewport-width', 'min-viewport-width', 'viewport-width']),
  memorizedScrollLeft: _propTypes.default.number,
  computedHasColSpan: _propTypes.default.bool,
  onRowReorder: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.bool]),
  onDragRowMouseDown: _propTypes.default.func,
  renderLockedStartCells: _propTypes.default.func,
  renderLockedEndCells: _propTypes.default.func,
  setActiveIndex: _propTypes.default.func,
  renderTreeCollapseTool: _propTypes.default.func,
  renderTreeExpandTool: _propTypes.default.func,
  renderTreeLoadingTool: _propTypes.default.func,
  currentEditCompletePromise: _propTypes.default.any,
  enableColumnAutosize: _propTypes.default.bool,
  columnHoverClassName: _propTypes.default.string,
  computedEnableColumnHover: _propTypes.default.bool,
  onColumnMouseEnter: _propTypes.default.func,
  onColumnMouseLeave: _propTypes.default.func,
  columnIndexHovered: _propTypes.default.number,
  renderRowDetailsExpandIcon: _propTypes.default.func,
  renderRowDetailsCollapsedIcon: _propTypes.default.func,
  renderGroupCollapseTool: _propTypes.default.func,
  renderGroupExpandTool: _propTypes.default.func,
  disabledRow: _propTypes.default.bool,
  rowspanZIndex: _propTypes.default.number,
  onRowFocus: _propTypes.default.func,
  onRowBlur: _propTypes.default.func,
  onRowKeyDown: _propTypes.default.func,
  focusedRow: _propTypes.default.bool,
  rowFocusClassName: _propTypes.default.string,
  onCellBulkUpdateMouseDown: _propTypes.default.func,
  onCellBulkUpdateMouseUp: _propTypes.default.func,
  bulkUpdateMouseDown: _propTypes.default.bool
};
var _default = _react.default.memo(DataGridRow, function (prevProps, nextProps) {
  var areEqual = (0, _shallowequal.equalReturnKey)(prevProps, nextProps, {
    computedActiveCell: 1,
    computedActiveIndex: 1,
    columnRenderStartIndex: 1,
    activeRowRef: 1,
    active: 1,
    onKeyDown: 1,
    onFocus: 1,
    setRowSpan: 1,
    passedProps: 1,
    computedRowspans: 1,
    lockedStartColumns: 1,
    selection: 1,
    lockedEndColumns: 1,
    unlockedColumns: 1,
    maxVisibleRows: 1,
    onClick: 1,
    style: 1,
    loadNodeAsync: 1,
    scrollToIndexIfNeeded: 1,
    onColumnMouseEnter: 1,
    onColumnMouseLeave: 1,
    getCellSelectionKey: 1
  });
  if (areEqual.result) {
    if (prevProps.computedActiveCell != nextProps.computedActiveCell) {
      var _ref2 = prevProps.computedActiveCell || [],
        _ref3 = (0, _slicedToArray2.default)(_ref2, 1),
        oldRowIndex = _ref3[0];
      var _ref4 = nextProps.computedActiveCell || [],
        _ref5 = (0, _slicedToArray2.default)(_ref4, 1),
        newRowIndex = _ref5[0];
      if (oldRowIndex === nextProps.rowIndex || newRowIndex === nextProps.rowIndex) {
        return false;
      }
    }
  }
  if (!areEqual.result) {
    return false;
  }
  if (prevProps.active !== nextProps.active) {
    return false;
  }
  if (JSON.stringify(prevProps.style) !== JSON.stringify(nextProps.style)) {
    return false;
  }
  var prevActiveCellRow, prevActiveColumn;
  var activeCellRow, activeColumn;
  if (prevProps.computedActiveCell) {
    var _prevProps$computedAc = (0, _slicedToArray2.default)(prevProps.computedActiveCell, 2);
    prevActiveCellRow = _prevProps$computedAc[0];
    prevActiveColumn = _prevProps$computedAc[1];
  }
  if (nextProps.computedActiveCell) {
    var _nextProps$computedAc = (0, _slicedToArray2.default)(nextProps.computedActiveCell, 2);
    activeCellRow = _nextProps$computedAc[0];
    activeColumn = _nextProps$computedAc[1];
  }
  if (activeCellRow !== prevActiveCellRow) {
    if (nextProps.rowIndex === activeCellRow || nextProps.rowIndex === prevActiveCellRow) {
      return false;
    }
  } else {
    if (nextProps.rowIndex === activeCellRow && activeColumn !== prevActiveColumn) {
      return false;
    }
  }
  return true;
});
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/adjustCellProps.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/adjustCellProps.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _renderGroupTitle = _interopRequireDefault(__webpack_require__(/*! ./renderGroupTitle */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/renderGroupTitle.js"));
var _default = function _default(cellProps, rowProps) {
  var groupProps = rowProps.groupProps,
    totalLockedStartWidth = rowProps.totalLockedStartWidth,
    totalLockedEndWidth = rowProps.totalLockedEndWidth,
    totalUnlockedWidth = rowProps.totalUnlockedWidth,
    totalComputedWidth = rowProps.totalComputedWidth,
    totalColumnCount = rowProps.totalColumnCount,
    firstLockedEndIndex = rowProps.firstLockedEndIndex,
    firstUnlockedIndex = rowProps.firstUnlockedIndex,
    groupColumn = rowProps.groupColumn,
    hasLockedEnd = rowProps.hasLockedEnd,
    hasLockedStart = rowProps.hasLockedStart;
  var computedVisibleIndex = cellProps.computedVisibleIndex,
    computedLocked = cellProps.computedLocked,
    expandColumnIndex = cellProps.expandColumnIndex;
  var expandColumn = computedVisibleIndex === expandColumnIndex;
  var expandGroupTitle = rowProps.expandGroupTitle;
  if (!hasLockedStart && !hasLockedEnd) {
    expandGroupTitle = true;
  }
  var data = rowProps.data;
  var lockedStart = computedLocked === 'start';
  var lockedEnd = computedLocked === 'end';
  if (groupProps && computedVisibleIndex < groupProps.depth || expandColumnIndex != null && computedVisibleIndex < expandColumnIndex) {
    cellProps.value = null;
    cellProps.noBackground = true;
    return cellProps;
  }
  if (computedVisibleIndex === (groupProps === null || groupProps === void 0 ? void 0 : groupProps.depth)) {
    cellProps.value = null;
    cellProps.collapsed = groupProps.collapsed;
    cellProps.textAlign = 'center';
    cellProps.noBackground = false;
    cellProps.firstInSection = true;
    return cellProps;
  }
  if (computedVisibleIndex === (groupProps === null || groupProps === void 0 ? void 0 : groupProps.depth) + 1 || expandColumn) {
    var remainingWidth = lockedStart ? totalLockedStartWidth : totalComputedWidth - totalLockedEndWidth;
    if (expandGroupTitle || expandColumn) {
      remainingWidth = totalComputedWidth;
      cellProps.last = true;
      cellProps.computedColspan = Math.max(totalColumnCount - computedVisibleIndex, 1);
    } else {
      cellProps.computedColspan = Math.max(lockedStart ? firstUnlockedIndex - computedVisibleIndex : lockedEnd ? totalColumnCount - computedVisibleIndex : firstLockedEndIndex - computedVisibleIndex, 1);
    }
    cellProps.lastInSection = true;
    cellProps.noBackground = false;
    cellProps.computedWidth = remainingWidth - cellProps.computedOffset;
    if (!expandColumn) {
      cellProps.value = (0, _renderGroupTitle.default)({
        cellProps: cellProps,
        rowProps: rowProps,
        groupProps: groupProps
      });
    }
    cellProps.zIndex = 1;
    cellProps.textAlign = 'start';
    if (cellProps.render) {
      if (!expandColumn) {
        cellProps.render = function () {
          return cellProps.value;
        };
      }
    }
    return cellProps;
  }
  if (lockedStart) {
    cellProps.hidden = true;
  } else {
    var fakeHidden = lockedEnd ? computedVisibleIndex !== firstLockedEndIndex : computedVisibleIndex !== firstUnlockedIndex;
    if (!cellProps.hidden) {
      cellProps.textAlign = 'start';
      cellProps.value = fakeHidden ? null : (0, _renderGroupTitle.default)({
        cellProps: cellProps,
        rowProps: rowProps,
        groupProps: groupProps
      });
      if (cellProps.render) {
        cellProps.render = function () {
          return cellProps.value;
        };
      }
      cellProps.computedWidth = lockedEnd ? totalLockedEndWidth : totalUnlockedWidth;
      if (!lockedEnd && computedVisibleIndex >= firstUnlockedIndex + 1) {
        cellProps.hidden = true;
      }
      cellProps.firstInSection = true;
      cellProps.last = hasLockedEnd ? lockedEnd : true;
      cellProps.lastInSection = true;
      cellProps.computedColspan = Math.max(lockedEnd ? totalColumnCount - computedVisibleIndex : firstLockedEndIndex - computedVisibleIndex, 1);
    }
  }
  return cellProps;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/getRowSpans.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/getRowSpans.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = function _default(rowProps) {
  var rowSpans = {};
  var data = rowProps.data,
    rowIndex = rowProps.realIndex,
    remoteRowIndex = rowProps.remoteRowIndex,
    columns = rowProps.columns,
    empty = rowProps.empty,
    dataSourceArray = rowProps.dataSourceArray;
  columns === null || columns === void 0 ? void 0 : columns.forEach(function (column) {
    var name = column.name;
    var rowspan = column.rowspan;
    var value = data && name ? data[name] : null;
    var computedRowspan = 1;
    if (typeof rowspan === 'function') {
      computedRowspan = rowspan({
        dataSourceArray: dataSourceArray,
        data: data,
        value: value,
        remoteRowIndex: remoteRowIndex,
        rowIndex: rowIndex,
        column: column,
        columns: columns,
        empty: empty
      });
      rowSpans[column.id] = computedRowspan;
    }
  });
  return rowSpans;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/index.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/index.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _List = _interopRequireDefault(__webpack_require__(/*! ./List */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/List.js"));
var _default = _List.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/renderCellsMaybeLocked.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/renderCellsMaybeLocked.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var emptyObject = Object.freeze ? Object.freeze({}) : null;
var addTransitionDuration = function addTransitionDuration(cols, style) {
  var firstCol = cols[0];
  if (firstCol.inTransition) {
    var duration = firstCol.inShowTransition ? firstCol.showTransitionDuration : firstCol.hideTransitionDuration;
    duration = duration || firstCol.visibilityTransitionDuration;
    style.transitionDuration = typeof duration == 'number' ? "".concat(duration, "ms") : duration;
    return true;
  }
  return false;
};
var _default = function _default(initialCells, _ref, scrollLeft) {
  var renderLockedStartCells = _ref.renderLockedStartCells,
    renderLockedEndCells = _ref.renderLockedEndCells,
    lockedStartColumns = _ref.lockedStartColumns,
    lockedEndColumns = _ref.lockedEndColumns,
    availableWidth = _ref.availableWidth,
    virtualizeColumns = _ref.virtualizeColumns,
    sticky = _ref.sticky,
    rowHeight = _ref.rowHeight,
    columns = _ref.columns,
    depth = _ref.depth,
    data = _ref.data,
    initialRowHeight = _ref.initialRowHeight,
    groupNestingSize = _ref.groupNestingSize,
    nativeScroll = _ref.nativeScroll,
    scrollbarWidth = _ref.scrollbarWidth,
    groupProps = _ref.groupProps,
    expandGroupTitle = _ref.expandGroupTitle,
    computedRowExpandEnabled = _ref.computedRowExpandEnabled,
    expanded = _ref.expanded,
    shouldRenderCollapsedRowDetails = _ref.shouldRenderCollapsedRowDetails,
    virtualListBorderLeft = _ref.virtualListBorderLeft,
    virtualListBorderRight = _ref.virtualListBorderRight,
    getScrollLeftMax = _ref.getScrollLeftMax,
    rtl = _ref.rtl;
  var _ref2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : emptyObject,
    lockedStartContent = _ref2.lockedStartContent,
    lockedEndContent = _ref2.lockedEndContent,
    unlockedContent = _ref2.unlockedContent,
    isHeader = _ref2.isHeader;
  var style = arguments.length > 4 ? arguments[4] : undefined;
  var lockedStartCount = lockedStartColumns ? lockedStartColumns.length : 0;
  var lockedEndCount = lockedEndColumns ? lockedEndColumns.length : 0;
  var lockedEndStartIndex = initialCells.length - lockedEndCount;
  var groupDepth = data && data.__group ? data.depth - 1 : depth || 0;
  var lockedStartCells = null;
  var lockedEndCells = null;
  var unlockedCells = null;
  var hasRowDetails = computedRowExpandEnabled && (expanded || shouldRenderCollapsedRowDetails);
  var lockedStartEndArgs = {
    lockedStartCount: lockedStartCount,
    isHeader: isHeader,
    virtualListBorderLeft: virtualListBorderLeft,
    lockedStartColumns: lockedStartColumns,
    style: style,
    virtualizeColumns: virtualizeColumns,
    rtl: rtl,
    getScrollLeftMax: getScrollLeftMax,
    addTransitionDuration: addTransitionDuration,
    lockedStartContent: lockedStartContent,
    initialCells: initialCells,
    sticky: sticky,
    scrollLeft: scrollLeft,
    rowHeight: rowHeight,
    groupProps: groupProps,
    expandGroupTitle: expandGroupTitle,
    lockedEndColumns: lockedEndColumns,
    nativeScroll: nativeScroll,
    scrollbarWidth: scrollbarWidth,
    virtualListBorderRight: virtualListBorderRight,
    lockedEndContent: lockedEndContent,
    hasRowDetails: hasRowDetails,
    initialRowHeight: initialRowHeight,
    lockedEndStartIndex: lockedEndStartIndex,
    availableWidth: availableWidth
  };
  if (lockedStartCount && renderLockedStartCells) {
    lockedStartCells = renderLockedStartCells(lockedStartEndArgs);
  }
  if (lockedEndCount && renderLockedEndCells) {
    lockedEndCells = renderLockedEndCells(lockedStartEndArgs);
  }
  unlockedCells = unlockedContent || initialCells.slice(lockedStartCount, lockedEndStartIndex);
  if (lockedStartCount || lockedEndCount) {
    return [lockedStartCells, unlockedCells, lockedEndCells];
  }
  return initialCells;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/renderGroupTitle.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/renderGroupTitle.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js"));
var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _uglified = _interopRequireDefault(__webpack_require__(/*! ../../../packages/uglified */ "./node_modules/@inovua/reactdatagrid-community/packages/uglified/index.js"));
var emptyObject = {};
var isValid = function isValid(value) {
  if (value == null) {
    return true;
  }
  if (Array.isArray(value)) {
    return true;
  }
  var type = (0, _typeof2.default)(value);
  if (type == 'string' || type == 'number') {
    return true;
  }
  return (0, _react.isValidElement)(value);
};
var _default = function _default(_ref) {
  var cellProps = _ref.cellProps,
    rowProps = _ref.rowProps;
  var computedLocked = cellProps.computedLocked;
  var data = rowProps.data,
    _rowProps$groupProps = rowProps.groupProps,
    groupProps = _rowProps$groupProps === void 0 ? emptyObject : _rowProps$groupProps,
    hasLockedStart = rowProps.hasLockedStart;
  var renderGroupTitle = computedLocked === 'start' || !hasLockedStart && !computedLocked ? groupProps.renderGroupTitle : computedLocked === 'end' ? groupProps.renderLockedEndGroupTitle : groupProps.renderUnlockedGroupTitle;
  var groupColId;
  if (rowProps.data.fieldPath && rowProps.data.fieldPath.length) {
    groupColId = rowProps.data.fieldPath[rowProps.data.fieldPath.length - 1];
  }
  groupColId = groupColId || rowProps.data.name || rowProps.data.id;
  var col = rowProps.columnsMap[groupColId];
  if (col && col.renderGroupTitle) {
    return col.renderGroupTitle(rowProps.data.value, rowProps);
  }
  if (renderGroupTitle) {
    return renderGroupTitle(rowProps.data.value, rowProps);
  }
  if (col && col.groupToString) {
    return col.groupToString(rowProps.data.value, {
      data: rowProps.data,
      fieldName: col.name,
      renderGroupTitle: true
    });
  }
  if (computedLocked === 'start') {
    if (!_uglified.default && !isValid(data.value)) {
      return "Invalid group title for column \"".concat(groupColId, "\". Use \"renderGroupTitle\" column prop.");
    }
    return data.value;
  }
  if (!hasLockedStart && !computedLocked) {
    if (!_uglified.default && !isValid(data.value)) {
      return "Invalid group title for column \"".concat(groupColId, "\". Use \"renderGroupTitle\" column prop.");
    }
    return data.value;
  }
  return null;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/renderRows.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/renderRows.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _Row = _interopRequireDefault(__webpack_require__(/*! ./Row */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/Row.js"));
var _getRowSpans = _interopRequireDefault(__webpack_require__(/*! ./getRowSpans */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/getRowSpans.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var emptyObject = Object.freeze ? Object.freeze({}) : {};
var renderRows = function renderRows(_ref, _ref2) {
  var from = _ref.from,
    to = _ref.to,
    empty = _ref.empty,
    renderIndex = _ref.renderIndex,
    editRowIndex = _ref.editRowIndex,
    editValue = _ref.editValue,
    editColumnIndex = _ref.editColumnIndex,
    editColumnId = _ref.editColumnId,
    setRowSpan = _ref.setRowSpan,
    sticky = _ref.sticky,
    rowHeight = _ref.rowHeight,
    tryNextRowEdit = _ref.tryNextRowEdit,
    onEditStop = _ref.onEditStop,
    onEditStart = _ref.onEditStart,
    onEditValueChange = _ref.onEditValueChange,
    scrollLeft = _ref.scrollLeft,
    columnRenderCount = _ref.columnRenderCount,
    columnRenderStartIndex = _ref.columnRenderStartIndex,
    memorizedScrollLeft = _ref.memorizedScrollLeft;
  var availableWidth = _ref2.availableWidth,
    data = _ref2.data,
    onTransitionEnd = _ref2.onTransitionEnd,
    columns = _ref2.columns,
    computedPivot = _ref2.computedPivot,
    groupColumn = _ref2.groupColumn,
    activeRowRef = _ref2.activeRowRef,
    columnsMap = _ref2.columnsMap,
    renderLockedStartCells = _ref2.renderLockedStartCells,
    renderLockedEndCells = _ref2.renderLockedEndCells,
    computedOnCellMouseDown = _ref2.computedOnCellMouseDown,
    computedEnableRowspan = _ref2.computedEnableRowspan,
    lockedStartColumns = _ref2.lockedStartColumns,
    lockedEndColumns = _ref2.lockedEndColumns,
    renderDetailsGrid = _ref2.renderDetailsGrid,
    editable = _ref2.editable,
    rowDetailsWidth = _ref2.rowDetailsWidth,
    scrollbars = _ref2.scrollbars,
    scrollToColumn = _ref2.scrollToColumn,
    scrollToIndexIfNeeded = _ref2.scrollToIndexIfNeeded,
    hasLockedStart = _ref2.hasLockedStart,
    hasLockedEnd = _ref2.hasLockedEnd,
    computedShowEmptyRows = _ref2.computedShowEmptyRows,
    setRowSelected = _ref2.setRowSelected,
    setRowExpanded = _ref2.setRowExpanded,
    toggleRowExpand = _ref2.toggleRowExpand,
    toggleNodeExpand = _ref2.toggleNodeExpand,
    expandOnMouseDown = _ref2.expandOnMouseDown,
    loadNodeAsync = _ref2.loadNodeAsync,
    computedTreeEnabled = _ref2.computedTreeEnabled,
    computedActiveCell = _ref2.computedActiveCell,
    rtl = _ref2.rtl,
    naturalRowHeight = _ref2.naturalRowHeight,
    lastCellInRange = _ref2.lastCellInRange,
    getCellSelectionKey = _ref2.getCellSelectionKey,
    onRowContextMenu = _ref2.onRowContextMenu,
    columnUserSelect = _ref2.columnUserSelect,
    selectAll = _ref2.selectAll,
    deselectAll = _ref2.deselectAll,
    expandGroupTitle = _ref2.expandGroupTitle,
    expandColumn = _ref2.expandColumn,
    computedCellSelection = _ref2.computedCellSelection,
    lastLockedStartIndex = _ref2.lastLockedStartIndex,
    lastLockedEndIndex = _ref2.lastLockedEndIndex,
    lastUnlockedIndex = _ref2.lastUnlockedIndex,
    computedGroupBy = _ref2.computedGroupBy,
    computedIndexesInGroups = _ref2.computedIndexesInGroups,
    edition = _ref2.edition,
    computedLicenseValid = _ref2.computedLicenseValid,
    computedGroupCounts = _ref2.computedGroupCounts,
    rowHeightManager = _ref2.rowHeightManager,
    maxRowHeight = _ref2.maxRowHeight,
    minRowHeight = _ref2.minRowHeight,
    editStartEvent = _ref2.editStartEvent,
    getItemId = _ref2.getItemId,
    firstUnlockedIndex = _ref2.firstUnlockedIndex,
    firstLockedStartIndex = _ref2.firstLockedStartIndex,
    firstLockedEndIndex = _ref2.firstLockedEndIndex,
    maxVisibleRows = _ref2.maxVisibleRows,
    onRowMouseEnter = _ref2.onRowMouseEnter,
    onRowMouseLeave = _ref2.onRowMouseLeave,
    computedOnRowClick = _ref2.computedOnRowClick,
    computedRowDoubleClick = _ref2.computedRowDoubleClick,
    onCellClick = _ref2.onCellClick,
    computedCellDoubleClick = _ref2.computedCellDoubleClick,
    onCellSelectionDraggerMouseDown = _ref2.onCellSelectionDraggerMouseDown,
    onCellEnter = _ref2.onCellEnter,
    onColumnMouseEnter = _ref2.onColumnMouseEnter,
    onColumnMouseLeave = _ref2.onColumnMouseLeave,
    columnIndexHovered = _ref2.columnIndexHovered,
    onEditCancel = _ref2.onEditCancel,
    onEditComplete = _ref2.onEditComplete,
    computedCellMultiSelectionEnabled = _ref2.computedCellMultiSelectionEnabled,
    nativeScroll = _ref2.nativeScroll,
    renderRow = _ref2.renderRow,
    onRenderRow = _ref2.onRenderRow,
    rowClassName = _ref2.rowClassName,
    rowStyle = _ref2.rowStyle,
    rowFactory = _ref2.rowFactory,
    _ref2$rowProps = _ref2.rowProps,
    passedProps = _ref2$rowProps === void 0 ? emptyObject : _ref2$rowProps,
    rowKey = _ref2.rowKey,
    cellFactory = _ref2.cellFactory,
    computedSelected = _ref2.computedSelected,
    computedUnselected = _ref2.computedUnselected,
    treeColumn = _ref2.treeColumn,
    renderNodeTool = _ref2.renderNodeTool,
    renderTreeCollapseTool = _ref2.renderTreeCollapseTool,
    renderTreeExpandTool = _ref2.renderTreeExpandTool,
    renderGroupCollapseTool = _ref2.renderGroupCollapseTool,
    renderGroupExpandTool = _ref2.renderGroupExpandTool,
    renderTreeLoadingTool = _ref2.renderTreeLoadingTool,
    rowExpandHeight = _ref2.rowExpandHeight,
    isRowExpandedById = _ref2.isRowExpandedById,
    computedRenderRowDetails = _ref2.computedRenderRowDetails,
    isRowExpandableAt = _ref2.isRowExpandableAt,
    computedRowExpandEnabled = _ref2.computedRowExpandEnabled,
    computedRowMultiSelectionEnabled = _ref2.computedRowMultiSelectionEnabled,
    computedRowSelectionEnabled = _ref2.computedRowSelectionEnabled,
    computedActiveIndex = _ref2.computedActiveIndex,
    computedSkip = _ref2.computedSkip,
    computedShowZebraRows = _ref2.computedShowZebraRows,
    computedHasColSpan = _ref2.computedHasColSpan,
    initialRowHeight = _ref2.rowHeight,
    totalColumnCount = _ref2.totalColumnCount,
    totalComputedWidth = _ref2.totalComputedWidth,
    totalLockedStartWidth = _ref2.totalLockedStartWidth,
    totalLockedEndWidth = _ref2.totalLockedEndWidth,
    totalUnlockedWidth = _ref2.totalUnlockedWidth,
    currentDataSourceCount = _ref2.currentDataSourceCount,
    computedShowCellBorders = _ref2.computedShowCellBorders,
    emptyScrollOffset = _ref2.emptyScrollOffset,
    showHorizontalCellBorders = _ref2.showHorizontalCellBorders,
    showVerticalCellBorders = _ref2.showVerticalCellBorders,
    getScrollLeftMax = _ref2.getScrollLeftMax,
    shouldRenderCollapsedRowDetails = _ref2.shouldRenderCollapsedRowDetails,
    rowDetailsStyle = _ref2.rowDetailsStyle,
    minRowWidth = _ref2.minRowWidth,
    maxWidth = _ref2.maxWidth,
    _ref2$startIndex = _ref2.startIndex,
    startIndex = _ref2$startIndex === void 0 ? 0 : _ref2$startIndex,
    groupNestingSize = _ref2.groupNestingSize,
    treeNestingSize = _ref2.treeNestingSize,
    onGroupToggle = _ref2.onGroupToggle,
    computedCollapsedGroups = _ref2.computedCollapsedGroups,
    computedExpandedGroups = _ref2.computedExpandedGroups,
    groupPathSeparator = _ref2.groupPathSeparator,
    renderGroupTitle = _ref2.renderGroupTitle,
    renderGroupTool = _ref2.renderGroupTool,
    renderLockedEndGroupTitle = _ref2.renderLockedEndGroupTitle,
    renderUnlockedGroupTitle = _ref2.renderUnlockedGroupTitle,
    virtualizeColumns = _ref2.virtualizeColumns,
    computedLivePagination = _ref2.computedLivePagination,
    onRowReorder = _ref2.onRowReorder,
    onDragRowMouseDown = _ref2.onDragRowMouseDown,
    theme = _ref2.theme,
    onContextMenu = _ref2.onContextMenu,
    setActiveIndex = _ref2.setActiveIndex,
    currentEditCompletePromise = _ref2.currentEditCompletePromise,
    enableColumnAutosize = _ref2.enableColumnAutosize,
    columnHoverClassName = _ref2.columnHoverClassName,
    computedEnableColumnHover = _ref2.computedEnableColumnHover,
    renderRowDetailsExpandIcon = _ref2.renderRowDetailsExpandIcon,
    renderRowDetailsCollapsedIcon = _ref2.renderRowDetailsCollapsedIcon,
    computedOnRowMouseDown = _ref2.computedOnRowMouseDown,
    disabledRows = _ref2.disabledRows,
    rowFocusClassName = _ref2.rowFocusClassName,
    computedCellBulkUpdateMouseDown = _ref2.computedCellBulkUpdateMouseDown,
    computedCellBulkUpdateMouseUp = _ref2.computedCellBulkUpdateMouseUp,
    bulkUpdateMouseDown = _ref2.bulkUpdateMouseDown;
  var remoteOffset = computedLivePagination ? 0 : computedSkip || 0;
  var totalCount = data.length;
  var dataArray = data.slice(from, to);
  var isGrouped = computedGroupBy && computedGroupBy.length;
  var defaultRowHeight = rowHeightManager.getDefaultRowHeight();
  if (computedShowEmptyRows && !dataArray.length) {
    dataArray = [null];
  }
  var depth = null;
  if (isGrouped) {
    depth = computedGroupBy.length;
  }
  return dataArray.map(function (rowData, i) {
    var index = i + startIndex;
    var id = rowData ? getItemId(rowData) : i;
    var realIndex = index + from;
    var active = computedActiveIndex === realIndex;
    var focusedRow = computedActiveIndex === realIndex;
    var indexInGroup = isGrouped ? computedIndexesInGroups[realIndex] : null;
    if (empty) {
      indexInGroup = realIndex + (totalCount % 2 - 1);
    }
    var keyIndex = rowKey === 'realIndex' ? realIndex : index;
    var key = "row-".concat(keyIndex);
    var isSelected = !empty && computedRowSelectionEnabled && (computedRowMultiSelectionEnabled ? computedSelected === true ? computedUnselected ? computedUnselected[id] === undefined : true : computedSelected.hasOwnProperty(id) : computedSelected == id);
    var rowExpanded = isRowExpandedById(id);
    var rowProps = {
      rowspanZIndex: totalCount - realIndex,
      availableWidth: availableWidth,
      computedGroupBy: computedGroupBy,
      expandGroupTitle: expandGroupTitle,
      expandColumn: expandColumn,
      getCellSelectionKey: getCellSelectionKey,
      id: id,
      depth: depth,
      columns: columns,
      columnsMap: columnsMap,
      computedHasColSpan: computedHasColSpan,
      lockedStartColumns: lockedStartColumns,
      lockedEndColumns: lockedEndColumns,
      hasLockedStart: hasLockedStart,
      rowDetailsWidth: rowDetailsWidth,
      hasLockedEnd: hasLockedEnd,
      columnUserSelect: columnUserSelect,
      minWidth: minRowWidth,
      width: totalComputedWidth,
      active: active,
      activeRowRef: activeRowRef,
      emptyScrollOffset: emptyScrollOffset,
      empty: empty,
      editable: editable,
      key: key,
      scrollLeft: scrollLeft,
      getScrollLeftMax: getScrollLeftMax,
      groupColumn: groupColumn,
      renderRow: renderRow,
      onRenderRow: onRenderRow,
      cellFactory: cellFactory,
      computedActiveCell: computedActiveCell,
      computedShowZebraRows: computedShowZebraRows,
      lastCellInRange: lastCellInRange,
      groupNestingSize: groupNestingSize,
      treeNestingSize: treeNestingSize,
      columnRenderCount: columnRenderCount,
      rowStyle: rowStyle,
      rowClassName: rowClassName,
      onTransitionEnd: onTransitionEnd,
      onRowContextMenu: onRowContextMenu,
      renderNodeTool: renderNodeTool,
      indexInGroup: isGrouped ? indexInGroup : null,
      groupCount: isGrouped && computedGroupCounts ? computedGroupCounts[realIndex] : 0,
      editStartEvent: editStartEvent,
      virtualizeColumns: virtualizeColumns,
      firstUnlockedIndex: firstUnlockedIndex,
      firstLockedStartIndex: firstLockedStartIndex,
      columnRenderStartIndex: columnRenderStartIndex,
      firstLockedEndIndex: firstLockedEndIndex,
      tryNextRowEdit: tryNextRowEdit,
      totalComputedWidth: totalComputedWidth,
      totalLockedStartWidth: totalLockedStartWidth,
      totalLockedEndWidth: totalLockedEndWidth,
      totalUnlockedWidth: totalUnlockedWidth,
      sticky: sticky,
      computedCellSelection: computedCellSelection,
      computedCellMultiSelectionEnabled: computedCellMultiSelectionEnabled,
      shouldRenderCollapsedRowDetails: shouldRenderCollapsedRowDetails,
      rowDetailsStyle: rowDetailsStyle,
      renderDetailsGrid: renderDetailsGrid,
      renderIndex: renderIndex,
      realIndex: realIndex,
      rowIndex: realIndex,
      remoteRowIndex: remoteOffset + realIndex,
      maxVisibleRows: maxVisibleRows,
      last: !computedShowEmptyRows ? realIndex == totalCount - 1 : !!(maxVisibleRows && realIndex >= maxVisibleRows - 1 && realIndex == totalCount - 1),
      lastNonEmpty: realIndex === totalCount - 1,
      totalDataCount: totalCount,
      rowHeight: rowHeight,
      defaultRowHeight: defaultRowHeight,
      rowExpandHeight: rowExpandHeight,
      initialRowHeight: initialRowHeight,
      setRowSpan: setRowSpan,
      maxRowHeight: maxRowHeight,
      minRowHeight: minRowHeight,
      getItemId: getItemId,
      computedShowCellBorders: computedShowCellBorders,
      showHorizontalCellBorders: showHorizontalCellBorders,
      showVerticalCellBorders: showVerticalCellBorders,
      passedProps: passedProps,
      setRowSelected: setRowSelected,
      setRowExpanded: setRowExpanded,
      renderLockedStartCells: renderLockedStartCells,
      renderLockedEndCells: renderLockedEndCells,
      computedRowExpandEnabled: computedRowExpandEnabled,
      computedRenderRowDetails: computedRenderRowDetails,
      isRowExpandableAt: isRowExpandableAt,
      treeColumn: treeColumn,
      rtl: rtl,
      toggleRowExpand: toggleRowExpand,
      toggleNodeExpand: toggleNodeExpand,
      expandOnMouseDown: expandOnMouseDown,
      loadNodeAsync: loadNodeAsync,
      edition: edition,
      computedLicenseValid: computedLicenseValid,
      computedEnableRowspan: computedEnableRowspan,
      computedTreeEnabled: computedTreeEnabled,
      naturalRowHeight: naturalRowHeight,
      selectAll: selectAll,
      deselectAll: deselectAll,
      totalColumnCount: totalColumnCount,
      computedPivot: computedPivot,
      multiSelect: computedRowMultiSelectionEnabled,
      selection: computedSelected,
      selected: isSelected,
      expanded: rowExpanded,
      lastLockedStartIndex: lastLockedStartIndex,
      lastLockedEndIndex: lastLockedEndIndex,
      lastUnlockedIndex: lastUnlockedIndex,
      data: rowData,
      dataSourceArray: data,
      onMouseEnter: !empty ? onRowMouseEnter : null,
      onMouseLeave: !empty ? onRowMouseLeave : null,
      onClick: !empty ? computedOnRowClick : null,
      onMouseDown: !empty ? computedOnRowMouseDown : null,
      onRowDoubleClick: !empty ? computedRowDoubleClick : null,
      scrollToColumn: scrollToColumn,
      scrollToIndexIfNeeded: scrollToIndexIfNeeded,
      onCellClick: onCellClick,
      onCellDoubleClick: computedCellDoubleClick,
      onCellSelectionDraggerMouseDown: onCellSelectionDraggerMouseDown,
      onCellMouseDown: computedOnCellMouseDown,
      onColumnMouseEnter: onColumnMouseEnter,
      onColumnMouseLeave: onColumnMouseLeave,
      columnIndexHovered: columnIndexHovered,
      onCellEnter: onCellEnter,
      onEditStop: onEditStop,
      onEditStart: onEditStart,
      onEditCancel: onEditCancel,
      onEditValueChange: onEditValueChange,
      onEditComplete: onEditComplete,
      scrollbars: scrollbars,
      even: false,
      odd: false,
      nativeScroll: nativeScroll,
      onRowReorder: onRowReorder,
      onDragRowMouseDown: onDragRowMouseDown,
      theme: theme,
      onContextMenu: onContextMenu,
      setActiveIndex: setActiveIndex,
      renderTreeCollapseTool: renderTreeCollapseTool,
      renderTreeExpandTool: renderTreeExpandTool,
      renderGroupCollapseTool: renderGroupCollapseTool,
      renderGroupExpandTool: renderGroupExpandTool,
      renderTreeLoadingTool: renderTreeLoadingTool,
      currentEditCompletePromise: currentEditCompletePromise,
      enableColumnAutosize: enableColumnAutosize,
      columnHoverClassName: columnHoverClassName,
      computedEnableColumnHover: computedEnableColumnHover,
      renderRowDetailsExpandIcon: renderRowDetailsExpandIcon,
      renderRowDetailsCollapsedIcon: renderRowDetailsCollapsedIcon,
      memorizedScrollLeft: memorizedScrollLeft,
      disabledRow: disabledRows ? disabledRows[realIndex] : null,
      focusedRow: focusedRow,
      rowFocusClassName: rowFocusClassName,
      onCellBulkUpdateMouseDown: computedCellBulkUpdateMouseDown,
      onMouseUp: computedCellBulkUpdateMouseUp,
      bulkUpdateMouseDown: bulkUpdateMouseDown
    };
    if (rowProps.rowIndex === editRowIndex) {
      rowProps.editing = true;
      rowProps.editValue = editValue;
      rowProps.editColumnIndex = editColumnIndex;
      rowProps.editColumnId = editColumnId;
    }
    if (rowData && rowData.__group) {
      rowProps.indexInGroup = null;
      var rowGroupKey = "".concat(rowData.keyPath.join(groupPathSeparator));
      var collapsed;
      if (computedCollapsedGroups === true) {
        collapsed = true;
        if (computedExpandedGroups[rowGroupKey]) {
          collapsed = false;
        }
      } else if (computedExpandedGroups === true) {
        collapsed = false;
        if (computedCollapsedGroups[rowGroupKey]) {
          collapsed = true;
        }
      } else {
        collapsed = computedCollapsedGroups[rowGroupKey];
      }
      rowProps.groupProps = {
        renderGroupTitle: renderGroupTitle,
        renderGroupTool: renderGroupTool,
        renderLockedEndGroupTitle: renderLockedEndGroupTitle,
        renderUnlockedGroupTitle: renderUnlockedGroupTitle,
        onGroupToggle: onGroupToggle,
        collapsed: collapsed,
        groupNestingSize: groupNestingSize,
        depth: rowData.depth - 1
      };
      rowProps.onGroupToggle = onGroupToggle;
      rowProps.groupSummary = rowData.groupSummary;
      rowProps.groupColumnSummaries = rowData.groupColumnSummaries;
    }
    if (isGrouped) {
      rowProps.parentGroupDataArray = [];
    }
    var even = !!((isGrouped && !computedPivot ? indexInGroup : realIndex) % 2);
    if (empty && isGrouped) {
      var tmpIndex = (computedIndexesInGroups[currentDataSourceCount - 1] || 0) + (realIndex - currentDataSourceCount - 1);
      even = !!(tmpIndex % 2);
    }
    if (rowData && rowData.__summary) {
      rowProps.summaryProps = {
        position: rowData.__summary,
        groupProps: rowData.__parentGroup,
        value: rowData.__parentGroup.groupColumnSummaries,
        depth: rowData.__parentGroup.depth - 1
      };
      even = true;
    }
    if (maxWidth != null) {
      rowProps.maxWidth = maxWidth;
    }
    rowProps.even = even;
    rowProps.odd = !even;
    var row;
    if (rowFactory) {
      row = rowFactory(rowProps);
    }
    if (computedEnableRowspan) {
      rowProps.computedRowspans = (0, _getRowSpans.default)(rowProps);
      setRowSpan(Math.max.apply(Math, (0, _toConsumableArray2.default)(Object.keys(rowProps.computedRowspans).map(function (key) {
        return rowProps.computedRowspans[key];
      }))));
    }
    if (row === undefined) {
      row = _react.default.createElement(_Row.default, _objectSpread({}, rowProps));
    }
    return row;
  });
};
var _default = renderRows;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/DragCell.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/DragCell.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = exports.MAX_WIDTH = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _Cell = _interopRequireDefault(__webpack_require__(/*! ../Cell */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/index.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var MAX_WIDTH = 350;
exports.MAX_WIDTH = MAX_WIDTH;
var DragCell = function (_React$Component) {
  (0, _inherits2.default)(DragCell, _React$Component);
  var _super = _createSuper(DragCell);
  function DragCell(_props) {
    var _this;
    (0, _classCallCheck2.default)(this, DragCell);
    _this = _super.call(this, _props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "left", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "right", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "top", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "height", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "width", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getProps", function () {
      return _this.state.props || _this.props;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setProps", function (props) {
      _this.setState({
        props: props
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onCellMount", function (props, cell) {
      if (_this.left) {
        cell.setLeft(_this.left);
      }
      if (_this.right) {
        cell.setRight(_this.right);
      }
      if (_this.top) {
        cell.setTop(_this.top);
      }
      if (_this.height) {
        cell.setHeight(_this.height);
      }
      if (_this.width) {
        cell.setWidth(_this.width);
      }
      cell.setDragging(true);
      _this.cell = cell;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onCellUnmount", function () {
      _this.cell = null;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setDragging", function (visible, callback) {
      if (!visible) {
        _this.top = undefined;
        _this.left = undefined;
        _this.right = undefined;
        _this.height = undefined;
        _this.width = undefined;
      }
      _this.setState({
        visible: visible
      }, function () {
        if (_this.cell && visible) {
          _this.cell.setDragging(visible, callback);
        }
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setTop", function (top) {
      _this.top = top;
      if (_this.cell && _this.state.visible) {
        _this.cell.setTop(top);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setHeight", function (height) {
      _this.height = height;
      if (_this.cell && _this.state.visible) {
        _this.cell.setHeight(height);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setWidth", function (width) {
      _this.width = width;
      if (_this.cell && _this.state.visible) {
        _this.cell.setWidth(width);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setLeft", function (left) {
      _this.left = left;
      if (_this.cell && _this.state.visible) {
        _this.cell.setLeft(left);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setRight", function (right) {
      _this.right = right;
      if (_this.cell && _this.state.visible) {
        _this.cell.setRight(right);
      }
    });
    _this.state = {
      visible: false
    };
    return _this;
  }
  (0, _createClass2.default)(DragCell, [{
    key: "render",
    value: function render() {
      if (this.state.visible) {
        var props = this.getProps();
        var className = props.className ? "".concat(props.className, " InovuaReactDataGrid__drag-proxy") : 'InovuaReactDataGrid__drag-proxy';
        var headerWrapperClassName = props.headerWrapperClassName ? "".concat(props.headerWrapperClassName, " InovuaReactDataGrid__drag-proxy") : 'InovuaReactDataGrid__drag-proxy';
        var maxWidth = props.maxWidth ? Math.min(props.maxWidth, MAX_WIDTH) : MAX_WIDTH;
        var computedWidth = Math.min(props.computedWidth, maxWidth);
        return _react.default.createElement(_Cell.default, _objectSpread(_objectSpread({}, props), {}, {
          maxWidth: maxWidth,
          computedWidth: computedWidth,
          className: className,
          headerWrapperClassName: headerWrapperClassName,
          onMount: this.onCellMount,
          onUnmount: this.onCellUnmount
        }));
      }
      return null;
    }
  }]);
  return DragCell;
}(_react.default.Component);
exports["default"] = DragCell;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/DragHeaderGroup.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/DragHeaderGroup.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _HeaderGroup = _interopRequireDefault(__webpack_require__(/*! ./Header/HeaderGroup */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/Header/HeaderGroup.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var extraChildrenProps = {
  onUnmount: null,
  ref: null,
  dragging: true
};
var DragHeaderGroup = function (_React$Component) {
  (0, _inherits2.default)(DragHeaderGroup, _React$Component);
  var _super = _createSuper(DragHeaderGroup);
  function DragHeaderGroup(_props) {
    var _this;
    (0, _classCallCheck2.default)(this, DragHeaderGroup);
    _this = _super.call(this, _props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getProps", function () {
      return _this.state.props || _this.props;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setProps", function (props) {
      _this.setState({
        props: props
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setDragging", function (visible, callback) {
      if (!visible) {
        _this.top = undefined;
        _this.left = undefined;
        _this.right = undefined;
        _this.width = undefined;
        _this.height = undefined;
      }
      _this.setState({
        visible: visible
      }, function () {
        if (_this.headerGroup && visible) {
          _this.headerGroup.setDragging(visible, callback);
          if (_this.top !== undefined) {
            _this.headerGroup.setTop(_this.top);
          }
          if (_this.left !== undefined) {
            _this.headerGroup.setLeft(_this.left);
          }
          if (_this.right !== undefined) {
            _this.headerGroup.setRight(_this.right);
          }
          if (_this.height !== undefined) {
            _this.headerGroup.setHeight(_this.height);
          }
          if (_this.width !== undefined) {
            _this.headerGroup.setWidth(_this.width);
          }
        }
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setHeight", function (height) {
      _this.height = height;
      if (_this.headerGroup && _this.state.visible) {
        _this.headerGroup.setHeight(height);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setWidth", function (width) {
      _this.width = width;
      if (_this.headerGroup && _this.state.visible) {
        _this.headerGroup.setWidth(width);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setTop", function (top) {
      _this.top = top;
      if (_this.headerGroup && _this.state.visible) {
        _this.headerGroup.setTop(top);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setLeft", function (left) {
      _this.left = left;
      if (_this.headerGroup && _this.state.visible) {
        _this.headerGroup.setLeft(left);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setRight", function (right) {
      _this.right = right;
      if (_this.headerGroup && _this.state.visible) {
        _this.headerGroup.setRight(right);
      }
    });
    _this.refHeaderGroup = function (group) {
      _this.headerGroup = group;
    };
    _this.state = {
      visible: false
    };
    return _this;
  }
  (0, _createClass2.default)(DragHeaderGroup, [{
    key: "render",
    value: function render() {
      if (this.state.visible) {
        var props = this.getProps();
        var className = props.className ? "".concat(props.className, " InovuaReactDataGrid__drag-proxy") : 'InovuaReactDataGrid__drag-proxy';
        return _react.default.createElement(_HeaderGroup.default, _objectSpread(_objectSpread({}, props), {}, {
          dragging: true,
          extraChildrenProps: extraChildrenProps,
          className: className,
          ref: this.refHeaderGroup
        }));
      }
      return null;
    }
  }]);
  return DragHeaderGroup;
}(_react.default.Component);
exports["default"] = DragHeaderGroup;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/Header/HeaderGroup.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/Header/HeaderGroup.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _region = _interopRequireDefault(__webpack_require__(/*! ../../../../packages/region */ "./node_modules/@inovua/reactdatagrid-community/packages/region/index.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../../packages/join */ "./node_modules/@inovua/reactdatagrid-community/packages/join/index.js"));
var _humanize = _interopRequireDefault(__webpack_require__(/*! ../../../../utils/humanize */ "./node_modules/@inovua/reactdatagrid-community/utils/humanize.js"));
var _ColumnResizer = _interopRequireDefault(__webpack_require__(/*! ../../Cell/ColumnResizer */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/ColumnResizer.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var emptyObject = Object.freeze ? Object.freeze({}) : {};
var BASE_CLASS_NAME = 'InovuaReactDataGrid__header-group__title';
var TOP_Z_INDEX = 10000;
var defaultProps = {
  isHeaderGroup: true
};
var propTypes = {
  columnResizeHandleWidth: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  group: _propTypes.default.shape({
    name: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]).isRequired,
    className: _propTypes.default.string,
    style: _propTypes.default.object,
    headerClassName: _propTypes.default.string,
    headerStyle: _propTypes.default.object
  }),
  depth: _propTypes.default.number.isRequired,
  columns: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])).isRequired,
  children: _propTypes.default.node,
  extraChildrenProps: _propTypes.default.object,
  containsLastColumn: _propTypes.default.bool,
  lastInSection: _propTypes.default.bool,
  filterable: _propTypes.default.bool,
  onResizeMouseDown: _propTypes.default.func,
  onResizeTouchStart: _propTypes.default.func,
  parentGroups: _propTypes.default.array,
  showBorderLeft: _propTypes.default.bool,
  showBorderRight: _propTypes.default.bool,
  siblingCount: _propTypes.default.number,
  siblingIndex: _propTypes.default.number
};
var getHeader = function getHeader() {
  var group = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : emptyObject;
  var header = group.header,
    name = group.name;
  if (header) {
    if (typeof header !== 'function') {
      return header;
    }
    return header(group);
  }
  return (0, _humanize.default)(name || '');
};
var HeaderGroup = function (_React$Component) {
  (0, _inherits2.default)(HeaderGroup, _React$Component);
  var _super = _createSuper(HeaderGroup);
  function HeaderGroup(_props) {
    var _this;
    (0, _classCallCheck2.default)(this, HeaderGroup);
    _this = _super.call(this, _props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "domRef", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getDOMNode", function () {
      return _this.domRef && _this.domRef.current;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setTop", function (top) {
      _this.setState({
        top: top
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setLeft", function (left) {
      _this.setState({
        left: left
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setRight", function (right) {
      _this.setState({
        right: right
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setHeight", function (height) {
      _this.setState({
        height: height
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setWidth", function (width) {
      _this.setState({
        width: width
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setDragging", function (dragging, callback) {
      var newState = {
        dragging: dragging
      };
      if (!dragging) {
        newState.top = 0;
        newState.left = 0;
        newState.width = 0;
        newState.height = 0;
      }
      _this.setState(newState, callback);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "prepareStyle", function () {
      var _assertThisInitialize = (0, _assertThisInitialized2.default)(_this),
        state = _assertThisInitialize.state,
        props = _assertThisInitialize.props;
      var style = props.style || {};
      var group = props.group;
      var headerProps = group.headerProps;
      if (props.group.style) {
        style = _objectSpread(_objectSpread({}, style), props.group.style);
      }
      if (headerProps && headerProps.style) {
        style = _objectSpread(_objectSpread({}, style), headerProps.style);
      }
      if (state.dragging) {
        style = Object.assign({}, style, {
          zIndex: TOP_Z_INDEX
        });
        if (_this.props.rtl) {
          style.right = state.right || 0;
        } else {
          style.left = state.left || 0;
        }
        style.top = state.top || 0;
        style.height = state.height || '';
        style.width = state.width || '';
        style.position = 'absolute';
        style.overflow = 'hidden';
      }
      return style;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getProxyRegion", function () {
      var node = _this.domRef ? _this.domRef.current : null;
      var region = _region.default.from(node);
      if (_this.props.filterable) {
        var filterWrapper = node.querySelector('.InovuaReactDataGrid__column-header__filter-wrapper');
        if (filterWrapper) {
          region.setHeight(region.getHeight() - filterWrapper.offsetHeight);
        }
      }
      return region;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderChild", function (child, index) {
      var extraProps = {
        parent: (0, _assertThisInitialized2.default)(_this),
        indexInHeaderGroup: index
      };
      var dragging = _this.props.dragging || _this.state.dragging;
      if (_this.props.extraChildrenProps) {
        Object.assign(extraProps, _this.props.extraChildrenProps);
      }
      if (dragging) {
        extraProps.dragging = dragging;
      }
      extraProps.key = index;
      return (0, _react.cloneElement)(child, extraProps);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onResizeMouseDown", function (event) {
      if (_this.props.onResizeMouseDown) {
        event.stopPropagation();
        _this.props.onResizeMouseDown(_this.props, (0, _assertThisInitialized2.default)(_this), event);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onResizeTouchStart", function (event) {
      if (_this.props.onResizeTouchStart) {
        event.stopPropagation();
        _this.props.onResizeTouchStart(_this.props, (0, _assertThisInitialized2.default)(_this), event);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onMouseDown", function (event) {
      if (_this.props.onMouseDown) {
        _this.props.onMouseDown(event, _this.props, (0, _assertThisInitialized2.default)(_this));
      }
    });
    _this.state = {
      dragging: false
    };
    _this.domRef = _react.default.createRef();
    return _this;
  }
  (0, _createClass2.default)(HeaderGroup, [{
    key: "render",
    value: function render() {
      var _style;
      var props = this.props;
      var showBorderLeft = props.showBorderLeft,
        showBorderRight = props.showBorderRight,
        resizable = props.resizable,
        children = props.children,
        group = props.group,
        dragging = props.dragging,
        depth = props.depth,
        columnResizeHandleWidth = props.columnResizeHandleWidth,
        containsLastColumn = props.containsLastColumn,
        firstInSection = props.firstInSection,
        lastInSection = props.lastInSection,
        adjustResizer = props.adjustResizer,
        locked = props.locked,
        rtl = props.rtl,
        resizeProxyStyle = props.resizeProxyStyle;
      var style = this.prepareStyle();
      var resizerRight = containsLastColumn || adjustResizer || lastInSection ? 0 : -props.columnResizeHandleWidth / 2;
      var header = getHeader(group);
      var _ref = group || emptyObject,
        headerAlign = _ref.headerAlign;
      var className = (0, _join.default)(BASE_CLASS_NAME, firstInSection && 'InovuaReactDataGrid__header-group__title--first-in-section', "InovuaReactDataGrid__header-group__title--depth-".concat(depth), group.headerClassName, "InovuaReactDataGrid__header-group__title--direction-".concat(rtl ? 'rtl' : 'ltr'), showBorderLeft && "InovuaReactDataGrid__header-group__title--show-border-".concat(rtl ? 'right' : 'left'), showBorderRight && "InovuaReactDataGrid__header-group__title--show-border-".concat(rtl ? 'left' : 'right'), locked && "InovuaReactDataGrid__header-group__title--locked-".concat(locked), dragging && "InovuaReactDataGrid__header-group__title--dragging", containsLastColumn && 'InovuaReactDataGrid__header-group__title--last', !header ? 'InovuaReactDataGrid__header-group__title--empty' : null, "".concat(BASE_CLASS_NAME, "--align-").concat(headerAlign || 'start'));
      var groupHeader = !header && !depth ? null : _react.default.createElement("div", {
        style: group.headerStyle,
        className: className
      }, header || "\xA0");
      var resizeHandleStyle;
      if (resizable) {
        resizeHandleStyle = {
          width: columnResizeHandleWidth
        };
        if (resizeProxyStyle) {
          resizeHandleStyle = Object.assign({}, resizeProxyStyle, resizeHandleStyle);
        }
      }
      var resizer = resizable ? _react.default.createElement(_ColumnResizer.default, {
        className: "InovuaReactDataGrid__header-group-resizer",
        onMouseDown: this.onResizeMouseDown,
        onTouchStart: this.onResizeTouchStart,
        style: (_style = {
          width: columnResizeHandleWidth
        }, (0, _defineProperty2.default)(_style, rtl ? 'left' : 'right', resizerRight), (0, _defineProperty2.default)(_style, rtl ? 'right' : 'left', 'unset'), (0, _defineProperty2.default)(_style, "zIndex", depth * 10000 + (100 - this.props.firstIndex || 0)), _style),
        resizeHandleStyle: resizeHandleStyle,
        resizeHandleClassName: "InovuaReactDataGrid__header-group-resize-handle"
      }) : null;
      var headerProps = group.headerProps;
      return _react.default.createElement("div", {
        onMouseDown: this.onMouseDown,
        style: style,
        ref: this.domRef,
        className: (0, _join.default)(props.className, 'InovuaReactDataGrid__header-group', group.className, props.inTransition && 'InovuaReactDataGrid__header-group--transition', this.state.dragging && 'InovuaReactDataGrid__header-group--dragging', headerProps && headerProps.className ? headerProps.className : '')
      }, resizer, groupHeader, _react.default.createElement("div", {
        className: "InovuaReactDataGrid__header-group-cells"
      }, children.map(this.renderChild)));
    }
  }]);
  return HeaderGroup;
}(_react.default.Component);
exports["default"] = HeaderGroup;
(0, _defineProperty2.default)(HeaderGroup, "defaultProps", defaultProps);
(0, _defineProperty2.default)(HeaderGroup, "propTypes", propTypes);

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/Header/getCellHeader.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/Header/getCellHeader.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _humanize = _interopRequireDefault(__webpack_require__(/*! ../../../../utils/humanize */ "./node_modules/@inovua/reactdatagrid-community/utils/humanize.js"));
var _default = function _default(cellProps, column, headerProps, contextMenu) {
  var header = cellProps.header,
    name = cellProps.name;
  if (header !== undefined) {
    if (typeof header !== 'function') {
      return header;
    }
    return header(cellProps, {
      cellProps: cellProps,
      column: column,
      headerProps: headerProps,
      contextMenu: contextMenu
    });
  }
  return (0, _humanize.default)(name || '');
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/Header/index.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/Header/index.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
Object.defineProperty(exports, "getCellHeader", ({
  enumerable: true,
  get: function get() {
    return _getCellHeader.default;
  }
}));
exports.getParentGroups = void 0;
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _reactCleanProps = _interopRequireDefault(__webpack_require__(/*! ../../../../packages/react-clean-props */ "./node_modules/@inovua/reactdatagrid-community/packages/react-clean-props/index.js"));
var _region = _interopRequireDefault(__webpack_require__(/*! ../../../../packages/region */ "./node_modules/@inovua/reactdatagrid-community/packages/region/index.js"));
var _selectParent = _interopRequireDefault(__webpack_require__(/*! ../../../../common/selectParent */ "./node_modules/@inovua/reactdatagrid-community/common/selectParent.js"));
var _uglified = _interopRequireDefault(__webpack_require__(/*! ../../../../packages/uglified */ "./node_modules/@inovua/reactdatagrid-community/packages/uglified/index.js"));
var _Cell = _interopRequireDefault(__webpack_require__(/*! ../../Cell */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Cell/index.js"));
var _HeaderGroup = _interopRequireDefault(__webpack_require__(/*! ./HeaderGroup */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/Header/HeaderGroup.js"));
var _renderCellsMaybeLocked = _interopRequireDefault(__webpack_require__(/*! ../../Content/renderCellsMaybeLocked */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/renderCellsMaybeLocked.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../../packages/join */ "./node_modules/@inovua/reactdatagrid-community/packages/join/index.js"));
var _getCellHeader = _interopRequireDefault(__webpack_require__(/*! ./getCellHeader */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/Header/getCellHeader.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var emptyFn = function emptyFn() {};
var getParentGroups = function getParentGroups(groupName, groups) {
  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
      includeSelf: false
    },
    includeSelf = _ref.includeSelf;
  var parentGroups = [];
  if (!groups) {
    return parentGroups;
  }
  var nextGroup = groups[groupName] ? groups[groups[groupName].group] : null;
  if (includeSelf && groups[groupName]) {
    parentGroups.push(groups[groupName]);
  }
  while (nextGroup) {
    parentGroups.push(nextGroup);
    nextGroup = groups[nextGroup.group];
  }
  return parentGroups;
};
exports.getParentGroups = getParentGroups;
var defaultProps = {
  onResize: function onResize() {},
  showWarnings: !_uglified.default
};
var propTypes = {
  availableWidth: _propTypes.default.number,
  columnHeaderUserSelect: _propTypes.default.bool,
  columnRenderCount: _propTypes.default.number,
  columnResizeHandleWidth: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  columnUserSelect: _propTypes.default.bool,
  columns: _propTypes.default.array,
  columnsMap: _propTypes.default.object,
  lockedStartColumns: _propTypes.default.array,
  unlockedColumns: _propTypes.default.array,
  lockedEndColumns: _propTypes.default.array,
  deselectAll: _propTypes.default.func,
  notifyColumnFilterVisibleStateChange: _propTypes.default.func,
  firstLockedEndIndex: _propTypes.default.number,
  firstLockedStartIndex: _propTypes.default.number,
  isMultiSort: _propTypes.default.bool,
  onGroupMouseDown: _propTypes.default.func,
  onResizeMouseDown: _propTypes.default.func,
  onResizeTouchStart: _propTypes.default.func,
  resizable: _propTypes.default.bool,
  resizeProxyStyle: _propTypes.default.object,
  scrollbarWidth: _propTypes.default.number,
  selectAll: _propTypes.default.func,
  selectedCount: _propTypes.default.number,
  sortInfo: _propTypes.default.any,
  sortable: _propTypes.default.bool,
  totalCount: _propTypes.default.number,
  unselectedCount: _propTypes.default.number,
  virtualListBorderLeft: _propTypes.default.number,
  virtualListBorderRight: _propTypes.default.number,
  nativeScroll: _propTypes.default.bool,
  computedShowHeaderBorderRight: _propTypes.default.any,
  hasLockedEnd: _propTypes.default.bool,
  hasLockedStart: _propTypes.default.bool,
  showColumnContextMenu: _propTypes.default.func,
  showColumnFilterContextMenu: _propTypes.default.func,
  hideColumnFilterContextMenu: _propTypes.default.func,
  onColumnHeaderFocus: _propTypes.default.func,
  showColumnMenuTool: _propTypes.default.bool,
  showColumnMenuToolOnHover: _propTypes.default.bool,
  firstUnlockedIndex: _propTypes.default.number,
  lockedRows: _propTypes.default.any,
  i18n: _propTypes.default.any,
  filterable: _propTypes.default.bool,
  filterTypes: _propTypes.default.any,
  computedGroupsDepth: _propTypes.default.number,
  computedGroupsMap: _propTypes.default.objectOf(_propTypes.default.shape({
    name: _propTypes.default.string.isRequired
  })),
  headerHeight: _propTypes.default.number,
  maxWidth: _propTypes.default.number,
  renderSortTool: _propTypes.default.func,
  minWidth: _propTypes.default.number,
  onCellMouseDown: _propTypes.default.func,
  onCellTouchStart: _propTypes.default.func,
  onCellClick: _propTypes.default.func,
  computedOnColumnFilterValueChange: _propTypes.default.func,
  onSortClick: _propTypes.default.func,
  onResize: _propTypes.default.func,
  scrollLeft: _propTypes.default.number,
  showWarnings: _propTypes.default.bool,
  unselected: _propTypes.default.any,
  virtualizeColumns: _propTypes.default.bool,
  width: _propTypes.default.number,
  updateLockedWrapperPositions: _propTypes.default.func,
  lastLockedEndIndex: _propTypes.default.number,
  lastLockedStartIndex: _propTypes.default.number,
  lastUnlockedIndex: _propTypes.default.number,
  getScrollLeftMax: _propTypes.default.func,
  rtl: _propTypes.default.bool,
  renderLockedEndCells: _propTypes.default.func,
  renderLockedStartCells: _propTypes.default.func,
  renderInPortal: _propTypes.default.any,
  onFilterValueChange: _propTypes.default.func,
  setScrollLeft: _propTypes.default.func,
  sortedColumnsInfo: _propTypes.default.any,
  renderMenuTool: _propTypes.default.func,
  columnHoverClassName: _propTypes.default.string,
  onColumnMouseEnter: _propTypes.default.func,
  onColumnMouseLeave: _propTypes.default.func,
  columnIndexHovered: _propTypes.default.number,
  enableColumnFilterContextMenu: _propTypes.default.bool,
  computedEnableColumnHover: _propTypes.default.bool,
  renderRowDetailsMoreIcon: _propTypes.default.func,
  hideColumnContextMenu: _propTypes.default.func,
  updateMenuPosition: _propTypes.default.func,
  computedFilterable: _propTypes.default.bool,
  filterRowHeight: _propTypes.default.number
};
var InovuaDataGridHeader = function (_React$Component) {
  (0, _inherits2.default)(InovuaDataGridHeader, _React$Component);
  var _super = _createSuper(InovuaDataGridHeader);
  function InovuaDataGridHeader(_props) {
    var _this;
    (0, _classCallCheck2.default)(this, InovuaDataGridHeader);
    _this = _super.call(this, _props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "domRef", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "unlockedCells", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "cells", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "columnRenderStartIndex", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "scrollLeft", 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "startIndex", 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "endIndex", 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "componentDidUpdate", function (prevProps) {
      if (_this.props.columnRenderCount < prevProps.columnRenderCount) {
        _this.getUnlockedCells(prevProps).forEach(function (cell) {
          cell.setStateProps(null);
        });
      }
      if (prevProps.hasLockedStart && !_this.props.hasLockedStart) {
        setTimeout(function () {
          return _this.updateColumns();
        }, 0);
      }
      if (_this.props.virtualizeColumns && prevProps.columnRenderCount !== _this.props.columnRenderCount || _this.props.selectedCount !== prevProps.selectedCount || _this.props.unselectedCount !== prevProps.unselectedCount || _this.props.columns !== prevProps.columns || _this.props.columnIndexHovered !== prevProps.columnIndexHovered || _this.props.lockedStartColumns.length !== prevProps.lockedStartColumns.length) {
        _this.setState({
          children: _this.renderColumns()
        });
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onCellMount", function (cellProps, c) {
      if (cellProps.dragging) {
        return;
      }
      if (_this.props.virtualizeColumns && !cellProps.computedLocked) {
        _this.unlockedCells.push(c);
      }
      _this.cells.push(c);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onCellUnmount", function (cellProps, cell) {
      if (cellProps.dragging) {
        return;
      }
      if (_this.props.virtualizeColumns && !cellProps.computedLocked) {
        if (_this.unlockedCells) {
          _this.unlockedCells = _this.unlockedCells.filter(function (c) {
            return c !== cell;
          });
        }
      }
      if (_this.cells) {
        _this.cells = _this.cells.filter(function (c) {
          return c !== cell;
        });
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "findCellById", function (cellId) {
      var cellsArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.cells;
      return cellsArray.filter(function (c) {
        return c.getProps().id === cellId;
      })[0];
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getCells", function () {
      var result = [];
      _this.props.columns.forEach(function (c) {
        var cell = _this.findCellById(c.id);
        if (cell) {
          var props = cell.getProps();
          result[props.computedVisibleIndex] = cell;
        }
      });
      return result;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getGroupsAndCells", function () {
      var cells = _this.getCells();
      var result = [];
      var add = function add(item) {
        if (result.indexOf(item) == -1) {
          result.push(item);
        }
      };
      cells.forEach(function (cell) {
        var target = cell;
        while (target && target.props.parent) {
          add(target);
          target = target.props.parent;
        }
        if (target) {
          add(target);
        }
      });
      return result;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setCellIndex", function (cell, index) {
      var cellProps = _this.getPropsForCells(index)[0];
      cell.setStateProps(cellProps);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getCellIndex", function (cell) {
      return cell.getProps().index;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "sortCells", function (cells) {
      return cells.sort(function (cell1, cell2) {
        return _this.getCellIndex(cell1) - _this.getCellIndex(cell2);
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getUnlockedCells", function () {
      var thisProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props;
      var lockedStartColumns = thisProps.lockedStartColumns;
      var result = [];
      thisProps.columns.forEach(function (c) {
        var cell = _this.findCellById(c.id, _this.unlockedCells);
        if (cell) {
          var props = cell.getProps();
          var index = props.computedVisibleIndex - lockedStartColumns.length;
          result[index] = cell;
        }
      });
      return result;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getSortedCells", function () {
      return _this.sortCells(_this.getUnlockedCells());
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getGaps", function (startIndex, endIndex) {
      var visibleCellPositions = {};
      _this.getSortedCells().forEach(function (cell) {
        visibleCellPositions[_this.getCellIndex(cell)] = true;
      });
      var gaps = [];
      for (; startIndex <= endIndex; startIndex++) {
        if (!visibleCellPositions[startIndex]) {
          gaps.push(startIndex);
        }
      }
      return gaps;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setColumnRenderStartIndex", function (columnRenderStartIndex) {
      _this.columnRenderStartIndex = columnRenderStartIndex;
      var renderRange = _this.getColumnRenderRange();
      if (!renderRange) {
        return;
      }
      var start = renderRange.start,
        end = renderRange.end;
      var gaps = _this.getGaps(start, end);
      if (!gaps.length) {
        return;
      }
      _this.getUnlockedCells().forEach(function (cell) {
        var cellProps = cell.getProps();
        var cellIndex = cellProps.computedVisibleIndex,
          computedLocked = cellProps.computedLocked;
        if (computedLocked) {
          return;
        }
        var outOfView = cellIndex < start || cellIndex > end;
        var newIndex;
        if (outOfView && gaps.length) {
          newIndex = gaps[gaps.length - 1];
          _this.setCellIndex(cell, newIndex);
          gaps.length -= 1;
        }
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getColumnRenderRange", function () {
      var _this$props = _this.props,
        columnRenderCount = _this$props.columnRenderCount,
        lockedStartColumns = _this$props.lockedStartColumns,
        lockedEndColumns = _this$props.lockedEndColumns,
        virtualizeColumns = _this$props.virtualizeColumns,
        columns = _this$props.columns;
      if (!virtualizeColumns) {
        return null;
      }
      var minStartIndex = lockedStartColumns.length;
      var maxEndIndex = columns.length - lockedEndColumns.length - 1;
      var columnRenderStartIndex = _this.columnRenderStartIndex == null ? _this.props.columnRenderStartIndex || 0 : _this.columnRenderStartIndex;
      columnRenderStartIndex = Math.max(columnRenderStartIndex, minStartIndex);
      if (columnRenderCount != null) {
        var columnRenderEndIndex = columnRenderStartIndex + columnRenderCount;
        columnRenderEndIndex = Math.min(columnRenderEndIndex, maxEndIndex);
        if (columnRenderEndIndex - columnRenderCount != columnRenderStartIndex) {
          columnRenderStartIndex = Math.max(columnRenderEndIndex - columnRenderCount, minStartIndex);
        }
        return {
          start: columnRenderStartIndex,
          end: columnRenderEndIndex
        };
      }
      return null;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "prepareStyle", function (props) {
      var headerHeight = props.headerHeight,
        width = props.width,
        minWidth = props.minWidth,
        index = props.index;
      var style = _objectSpread({}, props.style);
      if (width || minWidth) {
        if (width) {
          style.width = Math.max(width, minWidth || 0);
        }
        if (minWidth) {
          style.minWidth = minWidth;
        }
      }
      if (headerHeight) {
        style.height = headerHeight;
        if (props.computedFilterable) {
          style.height += props.filterRowHeight;
        }
      }
      style.zIndex = style.zIndex || 100 - (index || 0);
      var scrollLeft = _this.props.scrollLeft != null ? _this.props.scrollLeft : _this.scrollLeft;
      var transformPos = _this.props.rtl ? _this.props.getScrollLeftMax() - scrollLeft : -scrollLeft;
      style.transform = "translate3d(".concat(transformPos || 0, "px, 0px, 0px)");
      return style;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "notifyScrollLeftMax", function (scrollLeftMax) {
      var resizerClassName = 'InovuaReactDataGrid__column-resizer';
      var lastUnlockedResizer = _this.getDOMNode().querySelector(".".concat(resizerClassName, "--last-unlocked"));
      if (lastUnlockedResizer) {
        var columnResizeHandleWidth = _this.props.columnResizeHandleWidth;
        var remaining = scrollLeftMax - (_this.scrollLeft + columnResizeHandleWidth / 2);
        var visible = remaining <= 0;
        lastUnlockedResizer.style.pointerEvents = visible ? 'auto' : 'none';
        var classList = lastUnlockedResizer.classList;
        if (classList && classList.add && classList.remove) {
          if (visible) {
            classList.add("".concat(resizerClassName, "--active"));
          } else {
            classList.remove("".concat(resizerClassName, "--active"));
          }
        } else {
          lastUnlockedResizer.style.zIndex = visible ? 5000 : 2000;
        }
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setScrollLeft", function (scrollLeft, scrollLeftMax) {
      _this.scrollLeft = scrollLeft;
      var node = _this.props.hasLocked ? _this.getDOMNode().querySelector('.InovuaReactDataGrid__unlocked-wrapper') : _this.getDOMNode();
      if (node) {
        var transformPos = _this.props.rtl ? _this.props.getScrollLeftMax() - scrollLeft : -scrollLeft;
        node.style.transform = "translate3d(".concat(transformPos, "px, 0px, 0px)");
      }
      if (_this.props.updateLockedWrapperPositions) {
        _this.props.updateLockedWrapperPositions.call((0, _assertThisInitialized2.default)(_this), _this.props, scrollLeft, {
          isHeader: true
        });
      }
      if (_this.props.virtualizeColumns) {
        _this.maybeUpdateColumns();
        if (scrollLeft === 0 || scrollLeft === scrollLeftMax) {
          requestAnimationFrame(function () {
            return _this.maybeUpdateColumns();
          });
        }
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "maybeUpdateColumns", function () {
      var range = _this.getColumnRenderRange();
      if (range && range.start !== _this.startIndex && range.end !== _this.endIndex) {
        _this.updateColumns();
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "updateColumns", function () {
      var newColumns = _this.renderColumns();
      _this.setState({
        children: newColumns
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onFocus", function (event) {
      var body = (0, _selectParent.default)('.InovuaReactDataGrid__body', event.target);
      if (!body) {
        return;
      }
      var OFFSET = 15;
      var headerRegion = _region.default.from(body);
      var targetRegion = _region.default.from(event.target);
      var scrollLeft = _this.scrollLeft || _this.props.scrollLeft || 0;
      if (!headerRegion.containsRegion(targetRegion)) {
        if (targetRegion.left < headerRegion.left) {
          var diff = headerRegion.left - targetRegion.left;
          var newScrollLeft = scrollLeft - (diff + OFFSET);
          _this.props.setScrollLeft(newScrollLeft);
        }
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getPropsForCells", function (startIndex) {
      var endIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : startIndex + 1;
      var props = _this.props;
      var renderInPortal = props.renderInPortal,
        columnHeaderUserSelect = props.columnHeaderUserSelect,
        columnResizeHandleWidth = props.columnResizeHandleWidth,
        columnUserSelect = props.columnUserSelect,
        data = props.data,
        showColumnContextMenu = props.showColumnContextMenu,
        showColumnFilterContextMenu = props.showColumnFilterContextMenu,
        hideColumnFilterContextMenu = props.hideColumnFilterContextMenu,
        deselectAll = props.deselectAll,
        notifyColumnFilterVisibleStateChange = props.notifyColumnFilterVisibleStateChange,
        firstLockedEndIndex = props.firstLockedEndIndex,
        firstUnlockedIndex = props.firstUnlockedIndex,
        filterable = props.filterable,
        computedShowHeaderBorderRight = props.computedShowHeaderBorderRight,
        hasLockedEnd = props.hasLockedEnd,
        hasLockedStart = props.hasLockedStart,
        lockedEndColumns = props.lockedEndColumns,
        nativeScroll = props.nativeScroll,
        resizeProxyStyle = props.resizeProxyStyle,
        rtl = props.rtl,
        i18n = props.i18n,
        scrollbarWidth = props.scrollbarWidth,
        selectAll = props.selectAll,
        selectedCount = props.selectedCount,
        filterTypes = props.filterTypes,
        totalCount = props.totalCount,
        renderSortTool = props.renderSortTool,
        unselectedCount = props.unselectedCount,
        virtualizeColumns = props.virtualizeColumns,
        showColumnMenuTool = props.showColumnMenuTool,
        showColumnMenuToolOnHover = props.showColumnMenuToolOnHover,
        lastUnlockedIndex = props.lastUnlockedIndex,
        lastLockedStartIndex = props.lastLockedStartIndex,
        lastLockedEndIndex = props.lastLockedEndIndex,
        theme = props.theme,
        renderMenuTool = props.renderMenuTool,
        sortedColumnsInfo = props.sortedColumnsInfo,
        onColumnMouseEnter = props.onColumnMouseEnter,
        onColumnMouseLeave = props.onColumnMouseLeave,
        columnIndexHovered = props.columnIndexHovered,
        columnHoverClassName = props.columnHoverClassName,
        enableColumnFilterContextMenu = props.enableColumnFilterContextMenu,
        computedEnableColumnHover = props.computedEnableColumnHover,
        renderRowDetailsMoreIcon = props.renderRowDetailsMoreIcon,
        hideColumnContextMenu = props.hideColumnContextMenu,
        updateMenuPosition = props.updateMenuPosition,
        filterRowHeight = props.filterRowHeight;
      var columns = props.columns;
      if (startIndex !== undefined) {
        columns = columns.slice(startIndex, endIndex);
      }
      var firstLockedIndex = hasLockedEnd ? props.columns.length - lockedEndColumns.length : -1;
      return columns.map(function (column, i) {
        var sortableColumn = column.computedSortable,
          resizableColumn = column.computedResizable;
        var isSortable = sortableColumn;
        var isResizable = resizableColumn;
        var cellStyle = column.style;
        if (props.headerHeight) {
          if (column.style) {
            cellStyle = Object.assign({}, cellStyle);
          }
          if (!cellStyle) {
            cellStyle = {};
          }
          cellStyle.height = props.headerHeight;
          if (props.computedFilterable) {
            cellStyle.height += props.filterRowHeight;
          }
        }
        var defaults = {
          filterable: filterable,
          renderSortTool: renderSortTool,
          renderMenuTool: renderMenuTool,
          showColumnMenuTool: showColumnMenuTool,
          showColumnMenuToolOnHover: showColumnMenuToolOnHover
        };
        if (columnUserSelect !== undefined) {
          defaults.userSelect = columnUserSelect;
        }
        if (columnHeaderUserSelect !== undefined) {
          defaults.headerUserSelect = columnHeaderUserSelect;
        }
        var displayColumnFilterContextMenu = enableColumnFilterContextMenu;
        if (column.enableColumnFilterContextMenu != null) {
          displayColumnFilterContextMenu = column.enableColumnFilterContextMenu;
        }
        var cellProps = Object.assign(defaults, column, {
          headerCell: true,
          headerHeight: props.headerHeight,
          i18n: i18n,
          selectedCount: selectedCount,
          unselectedCount: unselectedCount,
          totalCount: totalCount,
          showColumnContextMenu: showColumnContextMenu,
          showColumnFilterContextMenu: showColumnFilterContextMenu,
          hideColumnFilterContextMenu: hideColumnFilterContextMenu,
          selectAll: selectAll,
          deselectAll: deselectAll,
          style: cellStyle,
          resizeProxyStyle: resizeProxyStyle,
          renderInPortal: renderInPortal,
          lastUnlockedIndex: lastUnlockedIndex,
          lastLockedStartIndex: lastLockedStartIndex,
          lastLockedEndIndex: lastLockedEndIndex,
          notifyColumnFilterVisibleStateChange: notifyColumnFilterVisibleStateChange,
          filterTypes: filterTypes,
          onFilterValueChange: _this.onFilterValueChange,
          lastUnlocked: column.computedVisibleIndex === firstLockedIndex - 1,
          columnResizeHandleWidth: columnResizeHandleWidth,
          virtualizeColumns: virtualizeColumns,
          rtl: rtl,
          onResizeMouseDown: props.onResizeMouseDown,
          onResizeTouchStart: props.onResizeTouchStart,
          onMouseDown: _this.onCellMouseDown,
          onTouchStart: _this.onCellTouchStart,
          computedSortable: isSortable,
          computedResizable: isResizable,
          hasLockedStart: hasLockedStart,
          nativeScroll: nativeScroll,
          scrollbarWidth: scrollbarWidth,
          data: data,
          theme: theme,
          sortedColumnsInfo: sortedColumnsInfo,
          onColumnMouseEnter: onColumnMouseEnter,
          onColumnMouseLeave: onColumnMouseLeave,
          columnIndex: i,
          columnIndexHovered: columnIndexHovered,
          columnHoverClassName: columnHoverClassName,
          enableColumnFilterContextMenu: displayColumnFilterContextMenu,
          computedEnableColumnHover: computedEnableColumnHover,
          renderRowDetailsMoreIcon: renderRowDetailsMoreIcon,
          hideColumnContextMenu: hideColumnContextMenu,
          updateMenuPosition: updateMenuPosition,
          filterRowHeight: filterRowHeight
        });
        cellProps.onFocus = _this.onHeaderCellFocus.bind((0, _assertThisInitialized2.default)(_this), cellProps, column);
        if (cellProps.group) {
          cellProps.parentGroups = getParentGroups(cellProps.group, _this.props.computedGroupsMap, {
            includeSelf: true
          });
        }
        if (props.onCellClick) {
          cellProps.onClick = props.onCellClick;
        }
        if (cellProps.visibilityTransitionDuration || cellProps.hideTransitionDuration || cellProps.showTransitionDuration) {
          cellProps.onTransitionEnd = _this.onTransitionEnd.bind((0, _assertThisInitialized2.default)(_this), cellProps, column);
        }
        cellProps.onSortClick = (props.onSortClick || emptyFn).bind(null, cellProps);
        cellProps.value = (0, _getCellHeader.default)(cellProps, column, props);
        cellProps.onUnmount = _this.onCellUnmount;
        cellProps.onMount = _this.onCellMount;
        var showBorderLeft = cellProps.showBorderLeft,
          showBorderRight = cellProps.showBorderRight;
        cellProps.showBorderRight = cellProps.computedLocked === 'start' && cellProps.computedVisibleIndex == firstUnlockedIndex - 1 || computedShowHeaderBorderRight && column.computedVisibleIndex === column.computedVisibleCount - 1;
        cellProps.lastInSection = cellProps.computedLocked === 'start' ? cellProps.computedVisibleIndex === lastLockedStartIndex : cellProps.computedLocked === 'end' ? cellProps.computedVisibleIndex === lastLockedEndIndex : cellProps.computedVisibleIndex === lastUnlockedIndex;
        cellProps.firstInSection = cellProps.computedLocked === 'start' ? cellProps.computedVisibleIndex == 0 : cellProps.computedLocked === 'end' ? cellProps.computedVisibleIndex === firstLockedEndIndex : cellProps.computedVisibleIndex === firstUnlockedIndex;
        cellProps.showBorderLeft = cellProps.computedLocked === 'end' ? cellProps.computedVisibleIndex >= firstLockedEndIndex : cellProps.computedLocked === 'start' ? cellProps.computedVisibleIndex > 0 : cellProps.computedVisibleIndex > firstUnlockedIndex;
        var prevColumn = columns[i - 1];
        var nextColumn = columns[i + 1];
        if (prevColumn && prevColumn.nextBorderLeft !== undefined) {
          cellProps.showBorderLeft = prevColumn.nextBorderLeft;
        }
        if (nextColumn && nextColumn.prevBorderRight !== undefined) {
          cellProps.showBorderRight = nextColumn.prevBorderRight;
        }
        if (showBorderLeft !== undefined) {
          cellProps.showBorderLeft = showBorderLeft;
        }
        if (showBorderRight !== undefined) {
          cellProps.showBorderRight = showBorderRight;
        }
        return cellProps;
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onHeaderCellFocus", function (headerCellProps, column, e) {
      if (_this.props.onColumnHeaderFocus) {
        _this.props.onColumnHeaderFocus(headerCellProps, column, e);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onTransitionEnd", function (cellProps, column, e) {
      e.stopPropagation();
      if (column.onTransitionEnd) {
        column.onTransitionEnd(e);
      }
      if (_this.props.onTransitionEnd) {
        _this.props.onTransitionEnd(e, cellProps);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onCellMouseDown", function (headerCellProps, event) {
      if (_this.props.onCellMouseDown) {
        _this.props.onCellMouseDown(headerCellProps, event);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onCellTouchStart", function (headerCellProps, event) {
      if (_this.props.onCellTouchStart) {
        _this.props.onCellTouchStart(headerCellProps, event);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderColumns", function () {
      var _result2;
      var props = _this.props;
      var groups = props.computedGroupsMap,
        hasLockedStart = props.hasLockedStart,
        hasLockedEnd = props.hasLockedEnd,
        lockedStartColumns = props.lockedStartColumns,
        lockedEndColumns = props.lockedEndColumns,
        columns = props.columns;
      var renderRange = _this.getColumnRenderRange();
      _this.startIndex = renderRange === null || renderRange === void 0 ? void 0 : renderRange.start;
      _this.endIndex = renderRange === null || renderRange === void 0 ? void 0 : renderRange.end;
      var cellProps = renderRange ? _this.getPropsForCells(renderRange.start, renderRange.end + 1) : _this.getPropsForCells();
      var lockedStartCells;
      var lockedEndCells;
      if (renderRange) {
        if (hasLockedStart) {
          lockedStartCells = _this.getPropsForCells(0, lockedStartColumns.length);
        }
        if (hasLockedEnd) {
          lockedEndCells = _this.getPropsForCells(columns.length - lockedEndColumns.length, columns.length);
        }
      }
      if (groups) {
        if (hasLockedStart || hasLockedEnd) {
          if (hasLockedStart) {
            lockedStartCells = lockedStartCells || _this.getPropsForCells(0, lockedStartColumns.length);
            lockedStartCells = _this.renderGroupedCells(lockedStartCells);
          }
          if (hasLockedEnd) {
            lockedEndCells = lockedEndCells || _this.getPropsForCells(columns.length - lockedEndColumns.length, columns.length);
            lockedEndCells = _this.renderGroupedCells(lockedEndCells);
          }
          var unlockedCells = renderRange ? cellProps : _this.getPropsForCells(lockedStartColumns.length, columns.length - lockedEndColumns.length);
          unlockedCells = _this.renderGroupedCells(unlockedCells);
          return (0, _renderCellsMaybeLocked.default)([], _this.props, props.scrollLeft, {
            lockedStartContent: lockedStartCells,
            lockedEndContent: lockedEndCells,
            unlockedContent: unlockedCells,
            isHeader: true
          });
        }
        return _this.renderGroupedCells(cellProps);
      }
      var result = [];
      if (hasLockedStart && lockedStartCells) {
        var _result;
        (_result = result).push.apply(_result, (0, _toConsumableArray2.default)(lockedStartCells));
      }
      (_result2 = result).push.apply(_result2, (0, _toConsumableArray2.default)(cellProps));
      if (hasLockedEnd && lockedEndCells) {
        var _result3;
        (_result3 = result).push.apply(_result3, (0, _toConsumableArray2.default)(lockedEndCells));
      }
      result = result.map(function (cProps, i) {
        var index = (renderRange === null || renderRange === void 0 ? void 0 : renderRange.start) + i;
        return _react.default.createElement(_Cell.default, _objectSpread(_objectSpread({}, cProps), {}, {
          timestamp: Date.now(),
          key: "".concat(index, "__").concat(cProps.id),
          left: _this.props.columnWidthPrefixSums[index]
        }));
      });
      return (0, _renderCellsMaybeLocked.default)(result, _this.props, props.scrollLeft, {
        isHeader: true
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getCellDOMNodeAt", function (index) {
      var _this$props2 = _this.props,
        columns = _this$props2.columns,
        showWarnings = _this$props2.showWarnings,
        virtualizeColumns = _this$props2.virtualizeColumns;
      var column = columns[index];
      if (!column) {
        return null;
      }
      var arr = column.computedLocked || !virtualizeColumns ? _this.getCells() : _this.getUnlockedCells();
      var cell = arr.filter(function (c) {
        return c.getProps().computedVisibleIndex === index;
      })[0];
      if (!cell && showWarnings) {
        console.error("Cannot find dom cell at ".concat(index, "."));
      }
      if (cell) {
        return cell.getDOMNode ? cell.getDOMNode() : cell.domRef ? cell.domRef.current : null;
      }
      return;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderHeaderGroup", function (groupName, groupItems, _) {
      var _this$props3 = _this.props,
        groups = _this$props3.computedGroupsMap,
        columnsMap = _this$props3.columnsMap,
        hasLockedEnd = _this$props3.hasLockedEnd,
        lockedStartColumns = _this$props3.lockedStartColumns,
        lockedEndColumns = _this$props3.lockedEndColumns,
        firstLockedEndIndex = _this$props3.firstLockedEndIndex,
        lastLockedStartIndex = _this$props3.lastLockedStartIndex,
        lastLockedEndIndex = _this$props3.lastLockedEndIndex,
        firstUnlockedIndex = _this$props3.firstUnlockedIndex,
        lastUnlockedIndex = _this$props3.lastUnlockedIndex,
        resizeProxyStyle = _this$props3.resizeProxyStyle,
        rtl = _this$props3.rtl;
      var group = groups[groupName];
      var parentGroups = getParentGroups(groupName, groups);
      var depth = group ? group.computedDepth : 0;
      var columns = groupItems.filter(function (x) {
        return !!x;
      }).reduce(function (acc, item) {
        if (item.type == _HeaderGroup.default) {
          acc.push.apply(acc, (0, _toConsumableArray2.default)(item.props.columns));
        } else {
          acc.push(item.props.id);
        }
        return acc;
      }, []);
      var style = {
        width: columns.reduce(function (width, colId) {
          return width + columnsMap[colId].computedWidth;
        }, 0)
      };
      var resizable = group && group.resizable !== undefined ? group.resizable : _this.props.resizable;
      var allColumnsUnresizable = columns.reduce(function (acc, colId) {
        return acc && columnsMap[colId].computedResizable === false;
      }, true);
      if (allColumnsUnresizable) {
        resizable = false;
      }
      var firstColumn = columnsMap[columns[0]];
      var lastColumn = columnsMap[columns[columns.length - 1]];
      var firstIndex = firstColumn.computedVisibleIndex;
      var lastIndex = lastColumn.computedVisibleIndex;
      var showBorderLeft = firstIndex >= lockedStartColumns.length ? firstIndex > lockedStartColumns.length || firstColumn.computedLocked === 'end' : firstIndex > 0;
      var containsLastColumn = lastColumn.computedVisibleIndex === _this.props.columns.length - 1;
      var showBorderRight = lastColumn.computedVisibleIndex === lockedStartColumns.length - 1;
      var adjustResizer = hasLockedEnd && lastColumn.computedVisibleIndex === _this.props.columns.length - lockedEndColumns.length - 1;
      var firstInSection = firstColumn.computedLocked === 'start' ? firstIndex === 0 : firstColumn.computedLocked === 'end' ? firstIndex == firstLockedEndIndex : firstIndex === firstUnlockedIndex;
      var lastInSection = lastColumn.computedLocked === 'start' ? lastIndex === lastLockedStartIndex : lastColumn.computedLocked === 'end' ? lastIndex == lastLockedEndIndex : lastIndex === lastUnlockedIndex;
      if (firstColumn.inTransition) {
        var duration = firstColumn.inShowTransition ? firstColumn.showTransitionDuration : firstColumn.hideTransitionDuration;
        duration = duration || firstColumn.visibilityTransitionDuration;
        style.transitionDuration = typeof duration == 'number' ? "".concat(duration, "ms") : duration;
      }
      var key = "".concat(groupName, "-").concat(depth, "-").concat(columns.join('-'));
      return _react.default.createElement(_HeaderGroup.default, {
        key: key,
        depth: depth,
        group: group,
        style: style,
        rtl: rtl,
        firstIndex: firstIndex,
        lastUnlockedIndex: _this.props.lastUnlockedIndex,
        lastLockedStartIndex: _this.props.lastLockedStartIndex,
        lastLockedEndIndex: _this.props.lastLockedEndIndex,
        filterable: _this.props.filterable,
        inTransition: firstColumn.inTransition,
        inShowTransition: firstColumn.inShowTransition,
        inHideTransition: firstColumn.inHideTransition,
        showTransitionDuration: firstColumn.showTransitionDuration,
        hideTransitionDuration: firstColumn.hideTransitionDuration,
        visibilityTransitionDuration: firstColumn.visibilityTransitionDuration,
        onMouseDown: _this.props.onGroupMouseDown,
        columns: columns,
        resizeProxyStyle: resizeProxyStyle,
        locked: lastColumn.computedLocked === 'start' ? 'start' : firstColumn.computedLocked === 'end' ? 'end' : false,
        parentGroups: parentGroups,
        containsLastColumn: containsLastColumn,
        firstInSection: firstInSection,
        lastInSection: lastInSection,
        adjustResizer: adjustResizer,
        showBorderLeft: showBorderLeft,
        showBorderRight: showBorderRight,
        children: groupItems,
        resizable: resizable,
        columnResizeHandleWidth: _this.props.columnResizeHandleWidth,
        onResizeMouseDown: _this.onResizeMouseDown,
        onResizeTouchStart: _this.onResizeTouchStart
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onResizeMouseDown", function (groupProps, headerGroupInstance, event) {
      if (_this.props.onResizeMouseDown) {
        var colId = groupProps.columns[groupProps.columns.length - 1];
        var visibleIndex = _this.props.columnsMap[colId].computedVisibleIndex;
        _this.props.onResizeMouseDown({
          visibleIndex: visibleIndex,
          computedVisibleIndex: visibleIndex
        }, {
          colHeaderNode: headerGroupInstance.domRef ? headerGroupInstance.domRef.current : null,
          event: event,
          groupColumns: groupProps.columns
        });
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onResizeTouchStart", function (groupProps, headerGroupInstance, event) {
      if (_this.props.onResizeTouchStart) {
        var colId = groupProps.columns[groupProps.columns.length - 1];
        var visibleIndex = _this.props.columnsMap[colId].computedVisibleIndex;
        _this.props.onResizeTouchStart({
          visibleIndex: visibleIndex
        }, {
          colHeaderNode: headerGroupInstance.domRef ? headerGroupInstance.domRef.current : null,
          event: event,
          groupColumns: groupProps.columns
        });
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getItemsForDepth", function (items, depth) {
      return items.map(function (item) {
        return item.props.depth === depth ? item : null;
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderItems", function (items) {
      var computedGroupsDepth = _this.props.computedGroupsDepth;
      var currentDepth = computedGroupsDepth + 1;
      while (currentDepth > 0) {
        items = _this.groupItemsForDepth(items, currentDepth);
        currentDepth--;
      }
      return items;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "groupItemsForDepth", function (items, depth) {
      var depthItems = _this.getItemsForDepth(items, depth);
      var index = 0;
      var item = depthItems[index];
      var currentGroupName = _this.getItemGroupName(item);
      var itemGroupName;
      var groupItems;
      var headerGroup;
      var groupStartIndex = 0;
      var len = depthItems.length + 1;
      while (index <= len) {
        itemGroupName = _this.getItemGroupName(item);
        if (currentGroupName == null && itemGroupName != null) {
          groupStartIndex = index;
          currentGroupName = itemGroupName;
        } else if (itemGroupName != currentGroupName) {
          groupItems = items.slice(groupStartIndex, index);
          headerGroup = _this.renderHeaderGroup(currentGroupName, groupItems);
          items.splice(groupStartIndex, groupItems.length, headerGroup);
          depthItems.splice(groupStartIndex, groupItems.length, headerGroup);
          index = groupStartIndex;
          currentGroupName = null;
        }
        index++;
        item = depthItems[index];
      }
      return items;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getItemGroupName", function (item) {
      if (!item) {
        return null;
      }
      var groups = _this.props.computedGroupsMap;
      var groupName;
      if (item.type == _HeaderGroup.default) {
        groupName = item.props.group ? item.props.group.group : null;
      } else {
        groupName = item.props.group;
      }
      var group = groups[groupName];
      return group ? group.name || '' : '';
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "fixDepth", function (item, depthDiff) {
      while (depthDiff >= 0) {
        item = _this.renderHeaderGroup(_this.getItemGroupName(item), [item], {
          depth: item.props.depth - 1,
          forceHeader: true
        });
        depthDiff--;
      }
      return item;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderGroupedCells", function (cellProps) {
      var _this$props4 = _this.props,
        groups = _this$props4.computedGroupsMap,
        showWarnings = _this$props4.showWarnings;
      var items = cellProps.map(function (props) {
        var group = groups[props.group];
        if (showWarnings && props.group && !group) {
          _this.warn("Column \"".concat(props.id, "\" references group \"").concat(props.group, "\", but the group is never defined in the groups prop."));
        }
        var depth = group ? group.computedDepth + 1 : 0;
        return _react.default.createElement(_Cell.default, _objectSpread(_objectSpread({}, props), {}, {
          key: props.id,
          depth: depth,
          timestamp: Date.now()
        }));
      });
      return _this.renderItems(items);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onFilterValueChange", function (filterValue, cellProps) {
      if (_this.props.onFilterValueChange) {
        _this.props.onFilterValueChange({
          filterValue: filterValue,
          columnId: cellProps.id,
          columnIndex: cellProps.computedVisibleIndex,
          cellProps: cellProps
        });
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "warn", function (msg) {
      console.error(msg);
    });
    _this.cells = [];
    _this.unlockedCells = [];
    _this.startIndex = 0;
    _this.endIndex = 0;
    _this.domRef = _react.default.createRef();
    _this.state = {
      children: _this.renderColumns()
    };
    return _this;
  }
  (0, _createClass2.default)(InovuaDataGridHeader, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.cells = null;
      this.unlockedCells = null;
    }
  }, {
    key: "getDOMNode",
    value: function getDOMNode() {
      var _this$domRef;
      return (_this$domRef = this.domRef) === null || _this$domRef === void 0 ? void 0 : _this$domRef.current;
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.props;
      var rtl = props.rtl,
        virtualizeColumns = props.virtualizeColumns;
      var className = (0, _join.default)('InovuaReactDataGrid__header', "InovuaReactDataGrid__header--direction-".concat(rtl ? 'rtl' : 'ltr'), props.className);
      var style = this.prepareStyle(props);
      var children = virtualizeColumns ? this.state.children : this.renderColumns();
      var cleanedProps = (0, _reactCleanProps.default)(props, InovuaDataGridHeader.propTypes);
      delete cleanedProps.columnWidthPrefixSums;
      return _react.default.createElement("div", _objectSpread(_objectSpread({}, cleanedProps), {}, {
        className: className,
        data: null,
        style: style,
        ref: this.domRef,
        onFocus: this.onFocus
      }), children);
    }
  }]);
  return InovuaDataGridHeader;
}(_react.default.Component);
exports["default"] = InovuaDataGridHeader;
(0, _defineProperty2.default)(InovuaDataGridHeader, "defaultProps", defaultProps);
(0, _defineProperty2.default)(InovuaDataGridHeader, "propTypes", propTypes);

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/HeaderWrapper.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/HeaderWrapper.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _getScrollbarWidth = _interopRequireDefault(__webpack_require__(/*! ../../../packages/getScrollbarWidth */ "./node_modules/@inovua/reactdatagrid-community/packages/getScrollbarWidth/index.js"));
var _Header = _interopRequireDefault(__webpack_require__(/*! ./Header */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/Header/index.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var fixScrollLeft = function fixScrollLeft(event) {
  var target = event.currentTarget;
  requestAnimationFrame(function () {
    if (target.scrollLeft) {
      target.scrollLeft = 0;
    }
  });
};
var HeaderWrapper = function (_React$Component) {
  (0, _inherits2.default)(HeaderWrapper, _React$Component);
  var _super = _createSuper(HeaderWrapper);
  function HeaderWrapper() {
    var _this;
    (0, _classCallCheck2.default)(this, HeaderWrapper);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getSortedColumnsInfo", function (_ref) {
      var computedSortInfo = _ref.computedSortInfo,
        columnsMap = _ref.columnsMap;
      if (!computedSortInfo) {
        return;
      }
      var sortedColumnsInfo = [];
      if (Array.isArray(computedSortInfo)) {
        computedSortInfo.map(function (sortInfo) {
          sortedColumnsInfo.push(columnsMap[sortInfo.columnName || sortInfo.name]);
        });
      } else {
        return columnsMap[computedSortInfo.columnName];
      }
      return sortedColumnsInfo;
    });
    return _this;
  }
  (0, _createClass2.default)(HeaderWrapper, [{
    key: "render",
    value: function render() {
      var props = this.props;
      var data = props.data,
        deselectAll = props.deselectAll,
        computedShowHeaderBorderRight = props.computedShowHeaderBorderRight,
        headerProps = props.headerProps,
        filterTypes = props.filterTypes,
        filterable = props.filterable,
        isMultiSort = props.isMultiSort,
        nativeScroll = props.nativeScroll,
        resizable = props.resizable,
        resizeProxyStyle = props.resizeProxyStyle,
        scrollLeft = props.scrollLeft,
        scrollbars = props.scrollbars,
        selectAll = props.selectAll,
        selected = props.computedSelected,
        unselected = props.computedUnselected,
        selectedCount = props.computedSelectedCount,
        sortInfo = props.sortInfo,
        sortable = props.sortable,
        renderSortTool = props.renderSortTool,
        totalCount = props.paginationCount,
        unselectedCount = props.computedUnselectedCount,
        virtualListBorderLeft = props.virtualListBorderLeft,
        virtualListBorderRight = props.virtualListBorderRight,
        columns = props.visibleColumns,
        lastLockedStartIndex = props.lastLockedStartIndex,
        lastLockedEndIndex = props.lastLockedEndIndex,
        lastUnlockedIndex = props.lastUnlockedIndex,
        updateLockedWrapperPositions = props.updateLockedWrapperPositions,
        theme = props.theme,
        columnWidthPrefixSums = props.columnWidthPrefixSums,
        renderMenuTool = props.renderMenuTool,
        computedSortInfo = props.computedSortInfo,
        columnsMap = props.columnsMap,
        columnIndexHovered = props.columnIndexHovered,
        onColumnMouseEnter = props.onColumnMouseEnter,
        onColumnMouseLeave = props.onColumnMouseLeave,
        columnHoverClassName = props.columnHoverClassName,
        enableColumnFilterContextMenu = props.enableColumnFilterContextMenu,
        computedEnableColumnHover = props.computedEnableColumnHover,
        renderRowDetailsMoreIcon = props.renderRowDetailsMoreIcon,
        hideColumnContextMenu = props.hideColumnContextMenu,
        updateMenuPosition = props.updateMenuPosition;
      var scrollbarWidth = 0;
      if (nativeScroll && scrollbars.vertical) {
        scrollbarWidth = (0, _getScrollbarWidth.default)();
      }
      var sortedColumnsInfo = this.getSortedColumnsInfo({
        computedSortInfo: computedSortInfo,
        columnsMap: columnsMap
      });
      var headerHeight = !props.computedGroups ? props.headerHeight : undefined;
      return _react.default.createElement("div", {
        className: "InovuaReactDataGrid__header-wrapper InovuaReactDataGrid__header-wrapper--direction-".concat(this.props.rtl ? 'rtl' : 'ltr'),
        onFocus: fixScrollLeft
      }, nativeScroll && this.props.rtl ? _react.default.createElement("div", {
        className: "InovuaReactDataGrid__header-rtl-scroll-spacer",
        style: {
          minWidth: scrollbarWidth,
          display: scrollbarWidth ? 'block' : 'none'
        }
      }) : null, _react.default.createElement(_Header.default, _objectSpread(_objectSpread({}, headerProps), {}, {
        notifyColumnFilterVisibleStateChange: props.notifyColumnFilterVisibleStateChange,
        setScrollLeft: props.setScrollLeft,
        getScrollLeftMax: props.getScrollLeftMax,
        availableWidth: props.availableWidth,
        lockedRows: props.lockedRows,
        rtl: props.rtl,
        i18n: props.i18n,
        lastLockedStartIndex: lastLockedStartIndex,
        lastLockedEndIndex: lastLockedEndIndex,
        lastUnlockedIndex: lastUnlockedIndex,
        columnHeaderUserSelect: props.columnHeaderUserSelect,
        columnRenderCount: props.columnRenderCount,
        columnResizeHandleWidth: props.columnResizeHandleWidth,
        columnUserSelect: props.columnUserSelect,
        renderInPortal: props.renderInPortal,
        columns: columns,
        columnsMap: props.columnsMap,
        data: data,
        filterTypes: filterTypes,
        showColumnMenuTool: props.showColumnMenuTool,
        showColumnMenuToolOnHover: props.showColumnMenuToolOnHover,
        deselectAll: deselectAll,
        firstLockedEndIndex: props.firstLockedEndIndex,
        firstUnlockedIndex: props.firstUnlockedIndex,
        computedGroupsMap: props.computedGroupsMap,
        computedGroupsDepth: props.computedGroupsDepth,
        onColumnHeaderFocus: props.onColumnHeaderFocus,
        filterable: filterable,
        showColumnContextMenu: props.showColumnContextMenu,
        showColumnFilterContextMenu: props.showColumnFilterContextMenu,
        hideColumnFilterContextMenu: props.hideColumnFilterContextMenu,
        computedShowHeaderBorderRight: computedShowHeaderBorderRight,
        hasLockedEnd: props.hasLockedEnd,
        hasLockedStart: props.hasLockedStart,
        headerHeight: headerHeight,
        isMultiSort: isMultiSort,
        lockedEndColumns: props.lockedEndColumns,
        lockedStartColumns: props.lockedStartColumns,
        minWidth: props.minRowWidth,
        nativeScroll: nativeScroll,
        onCellClick: props.onHeaderCellClick,
        onGroupMouseDown: props.onHeaderGroupMouseDown,
        onCellMouseDown: props.onHeaderCellMouseDown,
        onCellTouchStart: props.onHeaderCellTouchStart,
        onResizeMouseDown: props.onResizeMouseDown,
        onResizeTouchStart: props.onResizeTouchStart,
        onSortClick: props.onHeaderSortClick,
        onTransitionEnd: props.onTransitionEnd,
        ref: props.refHeader,
        renderSortTool: renderSortTool,
        resizable: resizable,
        resizeProxyStyle: resizeProxyStyle,
        scrollLeft: scrollLeft,
        scrollbarWidth: scrollbarWidth,
        selectAll: selectAll,
        selectedCount: selectedCount,
        selected: selected,
        unselected: unselected,
        sortInfo: sortInfo,
        sortable: sortable,
        totalCount: totalCount,
        theme: theme,
        renderLockedStartCells: props.renderLockedStartCells,
        renderLockedEndCells: props.renderLockedEndCells,
        onFilterValueChange: props.onFilterValueChange,
        unselectedCount: unselectedCount,
        virtualListBorderLeft: virtualListBorderLeft,
        virtualListBorderRight: virtualListBorderRight,
        updateLockedWrapperPositions: updateLockedWrapperPositions,
        virtualizeColumns: props.virtualizeColumns && !!headerHeight && !props.computedGroups,
        columnWidthPrefixSums: columnWidthPrefixSums,
        renderMenuTool: renderMenuTool,
        sortedColumnsInfo: sortedColumnsInfo,
        columnIndexHovered: columnIndexHovered,
        onColumnMouseEnter: onColumnMouseEnter,
        onColumnMouseLeave: onColumnMouseLeave,
        columnHoverClassName: columnHoverClassName,
        enableColumnFilterContextMenu: enableColumnFilterContextMenu,
        computedEnableColumnHover: computedEnableColumnHover,
        renderRowDetailsMoreIcon: renderRowDetailsMoreIcon,
        hideColumnContextMenu: hideColumnContextMenu,
        updateMenuPosition: updateMenuPosition,
        computedFilterable: props.computedFilterable,
        filterRowHeight: props.filterRowHeight
      })), _react.default.createElement("div", {
        className: "InovuaReactDataGrid__header-wrapper__fill"
      }, props.computedFilterable && _react.default.createElement("div", {
        className: "InovuaReactDataGrid__header-wrapper__fill__filters"
      })));
    }
  }]);
  return HeaderWrapper;
}(_react.default.Component);
exports["default"] = HeaderWrapper;
HeaderWrapper.propTypes = {
  visibleColumns: _propTypes.default.array.isRequired,
  columnsMap: _propTypes.default.object.isRequired,
  deselectAll: _propTypes.default.func,
  headerHeight: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  headerProps: _propTypes.default.object,
  isMultiSort: _propTypes.default.bool,
  refHeader: _propTypes.default.func.isRequired,
  selectAll: _propTypes.default.func,
  setScrollLeft: _propTypes.default.func,
  sortable: _propTypes.default.bool,
  virtualizeColumns: _propTypes.default.bool,
  updateLockedWrapperPositions: _propTypes.default.func,
  lastLockedStartIndex: _propTypes.default.number,
  lastLockedEndIndex: _propTypes.default.number,
  lastUnlockedIndex: _propTypes.default.number,
  computedEnableColumnHover: _propTypes.default.bool,
  renderRowDetailsMoreIcon: _propTypes.default.func,
  computedFilterable: _propTypes.default.bool,
  filterRowHeight: _propTypes.default.number
};

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/getDropIndex.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/getDropIndex.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = function _default(_ref) {
  var dragTarget = _ref.dragTarget,
    dropTarget = _ref.dropTarget,
    dragMinIndex = _ref.dragMinIndex,
    dragMaxIndex = _ref.dragMaxIndex,
    dragRange = _ref.dragRange,
    ranges = _ref.ranges,
    rtl = _ref.rtl,
    dir = _ref.dir,
    validDropPositions = _ref.validDropPositions;
  ranges = ranges || [];
  var dragIndex = dragRange.index;
  var draggingLocked = dragRange.computedLocked;
  var locked = draggingLocked;
  var isValid = function isValid(i) {
    if (i === undefined) {
      return false;
    }
    var validDropIndex = dropTarget === 'group' || !validDropPositions || validDropPositions[i];
    if (dragMinIndex !== undefined && i < dragMinIndex || dragMaxIndex !== undefined && i > dragMaxIndex || !validDropIndex || i > ranges.length) {
      return false;
    }
    return true;
  };
  var searchInRanges = dragTarget != dropTarget ? ranges : dir == 1 ? ranges.slice(dragIndex) : ranges.slice(0, dragIndex);
  var currentRange;
  var halfSize;
  var thisDir;
  var index;
  var foundIndex;
  for (var i = 0, len = searchInRanges.length; i < len; i++) {
    currentRange = searchInRanges[i];
    if (!currentRange) {
      continue;
    }
    index = currentRange.index;
    thisDir = index <= dragIndex || dragTarget !== dropTarget ? -1 : 1;
    halfSize = (currentRange.right - currentRange.left) / 2;
    if (thisDir > 0) {
      if (isValid(index + 1) && (rtl ? dragRange.left <= currentRange.right - halfSize : dragRange.right >= currentRange.left + halfSize)) {
        foundIndex = index + 1;
      }
    } else {
      if (isValid(index) && (rtl ? dragRange.right > currentRange.right - halfSize : dragRange.left < currentRange.left + halfSize)) {
        foundIndex = index;
        if (dropTarget !== dragTarget || dir === -1) {
          break;
        }
      }
    }
  }
  if (dragTarget === dropTarget) {
    if (foundIndex === dragIndex + 1) {
      foundIndex++;
    } else if (foundIndex === undefined) {
      foundIndex = dragIndex === ranges.length - 1 || dragIndex === 0 ? dragIndex : dir > 1 ? ranges.length : undefined;
    }
  } else if (foundIndex === undefined) {
    foundIndex = ranges.length;
  }
  if (!isValid(foundIndex)) {
    foundIndex = undefined;
  }
  if (dragMinIndex !== undefined && foundIndex < dragMinIndex) {
    foundIndex = dragMinIndex;
  }
  if (dragMaxIndex !== undefined && foundIndex > dragMaxIndex) {
    foundIndex = dragMaxIndex;
  }
  if (!isValid(foundIndex)) {
    foundIndex = dragIndex;
  }
  if (!isValid(foundIndex)) {
    foundIndex = undefined;
  }
  if (isValid(foundIndex) && ranges[foundIndex]) {
    locked = ranges[foundIndex].computedLocked;
  }
  var initialLocked = locked;
  if (dir === 1) {
    var targetRange = ranges[foundIndex];
    var beforeTargetRange = ranges[foundIndex - 1];
    var afterTargetRange = ranges[foundIndex + 1];
    if (targetRange && !targetRange.computedLocked) {
      if (rtl) {
        if (dragRange.left < targetRange.right) {
          locked = targetRange.computedLocked;
        } else {
          locked = beforeTargetRange ? beforeTargetRange.computedLocked : initialLocked;
        }
      } else {
        if (dragRange.right > targetRange.left) {
          locked = targetRange.computedLocked;
        } else {
          locked = beforeTargetRange ? beforeTargetRange.computedLocked : initialLocked;
        }
      }
    } else if (targetRange && targetRange.computedLocked === 'end') {
      if (rtl) {
        locked = dragRange.left < targetRange.right ? 'end' : beforeTargetRange ? beforeTargetRange.computedLocked : initialLocked;
      } else {
        locked = dragRange.right > targetRange.left ? 'end' : beforeTargetRange ? beforeTargetRange.computedLocked : initialLocked;
      }
    } else if (afterTargetRange && !afterTargetRange.computedLocked && (rtl ? dragRange.left > afterTargetRange.right : dragRange.right > afterTargetRange.left)) {
      locked = null;
    } else if (beforeTargetRange && beforeTargetRange.computedLocked === 'end') {
      locked = 'end';
    }
  }
  if (dir === -1) {
    var _targetRange = ranges[foundIndex];
    var _beforeTargetRange = ranges[foundIndex - 1];
    if (_beforeTargetRange && !_beforeTargetRange.computedLocked && (rtl ? dragRange.right > _beforeTargetRange.left : dragRange.left < _beforeTargetRange.right)) {
      locked = null;
    } else if (_beforeTargetRange && _beforeTargetRange.computedLocked === 'start' && (rtl ? dragRange.right > _beforeTargetRange.left : dragRange.left < _beforeTargetRange.right)) {
      locked = 'start';
    } else if (_targetRange && _targetRange.computedLocked === 'end' && (rtl ? dragRange.right > _targetRange.left : dragRange.left < _targetRange.right)) {
      locked = 'end';
    }
  }
  if (draggingLocked === 'start' && ranges[foundIndex] && ranges[foundIndex].computedLocked === 'start' && locked == null) {
    foundIndex++;
  }
  return {
    index: foundIndex,
    locked: locked
  };
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/getRangesForBoxes.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/getRangesForBoxes.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _region = _interopRequireDefault(__webpack_require__(/*! ../../../packages/region */ "./node_modules/@inovua/reactdatagrid-community/packages/region/index.js"));
var _default = function _default(cells, getIndex) {
  return (cells || []).map(function (c, i) {
    var node = c.domRef ? c.domRef.current : c.getDOMNode ? c.getDOMNode() : null;
    var reg = _region.default.from(node);
    var isCell = typeof c.getProps === 'function';
    var props = isCell ? c.getProps() : c.props;
    var result = {
      left: reg.left,
      right: reg.right,
      width: reg.width,
      computedLocked: props.computedLocked,
      index: getIndex === undefined ? i : getIndex(i, c, props)
    };
    return result;
  });
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/getRangesForColumns.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/getRangesForColumns.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _default = function _default(columns, _ref) {
  var headerRegion = _ref.headerRegion,
    initialOffset = _ref.initialOffset,
    availableWidth = _ref.availableWidth,
    totalLockedEndWidth = _ref.totalLockedEndWidth,
    initialScrollLeft = _ref.initialScrollLeft,
    rtlOffset = _ref.rtlOffset,
    rtl = _ref.rtl;
  var lockedEndOffset = 0;
  var result = columns.map(function (c, i) {
    var _result;
    var computedLocked = c.computedLocked;
    var offset = rtl ? initialOffset - (initialScrollLeft || 0) - c.computedOffset : c.computedOffset + (initialOffset - (initialScrollLeft || 0));
    if (rtl) {
      offset += rtlOffset;
    }
    if (computedLocked === 'end') {
      offset = !rtl ? availableWidth - totalLockedEndWidth + lockedEndOffset + initialOffset : initialOffset - availableWidth + totalLockedEndWidth - lockedEndOffset;
      lockedEndOffset += c.computedWidth;
    }
    if (computedLocked === 'start') {
      offset = c.computedOffset + (initialOffset || 0);
    }
    var result = (_result = {}, (0, _defineProperty2.default)(_result, rtl ? 'right' : 'left', offset), (0, _defineProperty2.default)(_result, rtl ? 'left' : 'right', rtl ? offset - c.computedWidth : offset + c.computedWidth), (0, _defineProperty2.default)(_result, "width", c.computedWidth), (0, _defineProperty2.default)(_result, "computedLocked", computedLocked), (0, _defineProperty2.default)(_result, "index", i), _result);
    return result;
  });
  return result;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/getUndraggableSuccessiveCount.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/getUndraggableSuccessiveCount.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = function _default(columns) {
  return columns.reduce(function (acc, col) {
    if (col.draggable !== false) {
      acc.stop = true;
    }
    if (col.draggable === false && !acc.stop) {
      acc.count++;
    }
    return acc;
  }, {
    count: 0
  }).count;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/index.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/index.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _reactClass = _interopRequireDefault(__webpack_require__(/*! ../../../packages/react-class */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/index.js"));
var _debounce = _interopRequireDefault(__webpack_require__(/*! ../../../packages/debounce */ "./node_modules/@inovua/reactdatagrid-community/packages/debounce/index.js"));
var _contains = _interopRequireDefault(__webpack_require__(/*! ../../../packages/contains */ "./node_modules/@inovua/reactdatagrid-community/packages/contains/index.js"));
var _assignDefined2 = _interopRequireDefault(__webpack_require__(/*! ../../../packages/assign-defined */ "./node_modules/@inovua/reactdatagrid-community/packages/assign-defined/index.js"));
var _region = _interopRequireDefault(__webpack_require__(/*! ../../../packages/region */ "./node_modules/@inovua/reactdatagrid-community/packages/region/index.js"));
var _isMobile = _interopRequireDefault(__webpack_require__(/*! ../../../packages/isMobile */ "./node_modules/@inovua/reactdatagrid-community/packages/isMobile/index.js"));
var _getRangesForBoxes = _interopRequireDefault(__webpack_require__(/*! ./getRangesForBoxes */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/getRangesForBoxes.js"));
var _getRangesForColumns = _interopRequireDefault(__webpack_require__(/*! ./getRangesForColumns */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/getRangesForColumns.js"));
var _setupColumnDrag = _interopRequireDefault(__webpack_require__(/*! ./setupColumnDrag */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/setupColumnDrag.js"));
var _moveXBeforeY = _interopRequireDefault(__webpack_require__(/*! ../../../utils/moveXBeforeY */ "./node_modules/@inovua/reactdatagrid-community/utils/moveXBeforeY.js"));
var _isFocusable = _interopRequireDefault(__webpack_require__(/*! ../../../utils/isFocusable */ "./node_modules/@inovua/reactdatagrid-community/utils/isFocusable.js"));
var _getDropIndex2 = _interopRequireDefault(__webpack_require__(/*! ./getDropIndex */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/getDropIndex.js"));
var _getUndraggableSuccessiveCount = _interopRequireDefault(__webpack_require__(/*! ./getUndraggableSuccessiveCount */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/getUndraggableSuccessiveCount.js"));
var _DragCell = _interopRequireWildcard(__webpack_require__(/*! ./DragCell */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/DragCell.js"));
var _DragHeaderGroup = _interopRequireDefault(__webpack_require__(/*! ./DragHeaderGroup */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/DragHeaderGroup.js"));
var _HeaderWrapper = _interopRequireDefault(__webpack_require__(/*! ./HeaderWrapper */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/HeaderWrapper.js"));
var _Header = __webpack_require__(/*! ./Header */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/Header/index.js");
var _getScrollbarWidth = _interopRequireDefault(__webpack_require__(/*! ../../../packages/getScrollbarWidth */ "./node_modules/@inovua/reactdatagrid-community/packages/getScrollbarWidth/index.js"));
var _getGlobal = __webpack_require__(/*! ../../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
var _join = _interopRequireDefault(__webpack_require__(/*! @inovua/reactdatagrid-community/packages/join */ "./node_modules/@inovua/reactdatagrid-community/packages/join/index.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var globalObject = (0, _getGlobal.getGlobal)();
var SCROLL_MARGIN = 40;
var DRAG_INFO = null;
var preventDefault = function preventDefault(e) {
  return e.preventDefault();
};
var getColumnOrder = function getColumnOrder(props, filter) {
  var doFilter = function doFilter(c) {
    return !c.groupColumn && filter ? filter(c) : true;
  };
  var order;
  if (props.computedColumnOrder) {
    order = props.computedColumnOrder.map(function (id) {
      return props.columnsMap[id];
    }).filter(Boolean);
  } else {
    order = props.allColumns;
  }
  var toId = function toId(c) {
    return c.id;
  };
  order = (order || []).filter(doFilter).map(toId);
  var lockedStart = props.lockedStartColumns.filter(doFilter).map(toId);
  var lockedMap = lockedStart.reduce(function (acc, cId) {
    acc[cId] = true;
    return acc;
  }, {});
  var lockedEnd = props.lockedEndColumns.filter(doFilter).map(toId);
  lockedEnd.reduce(function (acc, cId) {
    acc[cId] = true;
    return acc;
  }, lockedMap);
  return [].concat((0, _toConsumableArray2.default)(lockedStart), (0, _toConsumableArray2.default)(order.filter(function (cId) {
    return !lockedMap[cId];
  })), (0, _toConsumableArray2.default)(lockedEnd));
};
var getParentsForColumns = function getParentsForColumns(columns, groups, maxDepth) {
  var parentsForColumns = columns.map(function (col) {
    var result = [col.id].concat((0, _toConsumableArray2.default)((0, _Header.getParentGroups)(col.group, groups, {
      includeSelf: true
    }).map(function (g) {
      return g.name;
    })));
    while (result.length <= maxDepth + 1) {
      result.splice(0, 0, result[0]);
    }
    return result;
  });
  return parentsForColumns;
};
var getValidDropPositions = function getValidDropPositions(_ref) {
  var dragTargetDepth = _ref.dragTargetDepth,
    dragTargetIndex = _ref.dragTargetIndex,
    dragTargetLength = _ref.dragTargetLength,
    parentsForColumns = _ref.parentsForColumns,
    lockedForColumns = _ref.lockedForColumns,
    columns = _ref.columns,
    allowGroupSplitOnReorder = _ref.allowGroupSplitOnReorder;
  var getGroupsForColumn = function getGroupsForColumn(parents) {
    parents = parents || [];
    var initialName = parents[0];
    var shouldCheck = true;
    var groups = [];
    parents.forEach(function (group) {
      if (!shouldCheck) {
        groups.push(group);
        return;
      }
      if (shouldCheck && group !== initialName) {
        shouldCheck = false;
        groups.push(group);
        return;
      }
      groups.push(null);
    });
    return groups;
  };
  var getGroupStartFor = function getGroupStartFor(parents, depth, index) {
    var initialParent = parents[index].slice(-depth - 1)[0];
    var initialLocked = lockedForColumns[index];
    var itParents;
    var currentParent;
    var currentLocked;
    do {
      itParents = parents[index - 1];
      if (!itParents) {
        break;
      }
      currentParent = itParents.slice(-depth - 1)[0];
      currentLocked = lockedForColumns[index];
      if (currentParent !== initialParent || currentLocked !== initialLocked) {
        break;
      }
      index--;
    } while (index >= 0);
    return index;
  };
  var getGroupEndFor = function getGroupEndFor(parents, depth, index) {
    var initialParent = parents[index].slice(-depth - 1)[0];
    var initialLocked = lockedForColumns[index];
    var itParents;
    var currentParent;
    var currentLocked;
    do {
      index++;
      itParents = parents[index];
      if (!itParents) {
        break;
      }
      currentParent = itParents.slice(-depth - 1)[0];
      currentLocked = lockedForColumns[index];
      if (currentParent !== initialParent || currentLocked !== initialLocked) {
        break;
      }
    } while (index < parents.length);
    return index;
  };
  var res = columns.reduce(function (acc, col, index) {
    if (index > dragTargetIndex && index <= dragTargetIndex + dragTargetLength) {
      return acc;
    }
    acc[index] = true;
    return acc;
  }, {});
  res[columns.length] = true;
  if (!allowGroupSplitOnReorder) {
    var dragTargetParentGroups = getGroupsForColumn(parentsForColumns[dragTargetIndex]).filter(function (x) {
      return x;
    });
    var isSingleColumn = !dragTargetParentGroups.length;
    var usedDepth = isSingleColumn ? 0 : dragTargetDepth;
    var parentGroupStartIndex = !usedDepth ? 0 : getGroupStartFor(parentsForColumns, usedDepth - 1, dragTargetIndex);
    var parentGroupEndIndex = !usedDepth ? columns.length : getGroupEndFor(parentsForColumns, usedDepth - 1, dragTargetIndex);
    var currentGroupEndIndex = getGroupEndFor(parentsForColumns, usedDepth, dragTargetIndex);
    for (var i = 0; i <= columns.length; i++) {
      delete res[i];
    }
    for (var _i = parentGroupStartIndex; _i < parentGroupEndIndex; _i++) {
      var itGroupStartIndex = getGroupStartFor(parentsForColumns, usedDepth, _i);
      var itGroupEndIndex = getGroupEndFor(parentsForColumns, usedDepth, _i);
      res[itGroupStartIndex] = true;
      res[itGroupEndIndex] = true;
    }
    var groupEndIsLastUnlocked = columns[currentGroupEndIndex] && columns[currentGroupEndIndex].computedLocked === 'end' && columns[currentGroupEndIndex - 1] && columns[currentGroupEndIndex - 1].computedLocked !== 'end';
    if (!groupEndIsLastUnlocked) {
      delete res[currentGroupEndIndex];
    }
  }
  return res;
};
var ReorderArrow = function (_React$Component) {
  (0, _inherits2.default)(ReorderArrow, _React$Component);
  var _super = _createSuper(ReorderArrow);
  function ReorderArrow(props) {
    var _this;
    (0, _classCallCheck2.default)(this, ReorderArrow);
    _this = _super.call(this, props);
    _this.state = {
      visible: false,
      bottom: 0,
      top: 0,
      left: 0
    };
    return _this;
  }
  (0, _createClass2.default)(ReorderArrow, [{
    key: "set",
    value: function set(_ref2) {
      var bottom = _ref2.bottom,
        top = _ref2.top,
        left = _ref2.left,
        right = _ref2.right,
        target = _ref2.target;
      this.setState({
        target: target,
        bottom: bottom,
        left: left,
        top: top,
        right: right
      });
    }
  }, {
    key: "setVisible",
    value: function setVisible(visible) {
      if (visible != this.state.visible) {
        this.setState({
          visible: visible
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var size = this.props.size;
      var _this$state = this.state,
        bottom = _this$state.bottom,
        top = _this$state.top,
        left = _this$state.left,
        right = _this$state.right,
        visible = _this$state.visible,
        target = _this$state.target;
      return _react.default.createElement("div", {
        ref: this.refReorderArrow,
        style: {
          position: 'absolute',
          top: top,
          left: left,
          right: right,
          width: size,
          height: bottom - top,
          bottom: bottom,
          pointerEvents: 'none',
          opacity: visible ? 1 : 0,
          display: 'block'
        },
        className: "InovuaReactDataGrid__column-reorder-arrow InovuaReactDataGrid__column-reorder-arrow--direction-".concat(this.props.rtl ? 'rtl' : 'ltr')
      }, _react.default.createElement("div", {
        className: "InovuaReactDataGrid__column-reorder-arrow-fill InovuaReactDataGrid__column-reorder-arrow-fill--direction-".concat(this.props.rtl ? 'rtl' : 'ltr', " InovuaReactDataGrid__column-reorder-arrow-fill--target-").concat(target || 'none')
      }), this.props.renderReorderIndicator());
    }
  }]);
  return ReorderArrow;
}(_react.default.Component);
ReorderArrow.defaultProps = {
  renderReorderIndicator: function renderReorderIndicator() {}
};
var InovuaDataGridHeaderLayout = function (_Component) {
  (0, _inherits2.default)(InovuaDataGridHeaderLayout, _Component);
  var _super2 = _createSuper(InovuaDataGridHeaderLayout);
  function InovuaDataGridHeaderLayout(props) {
    var _this2;
    (0, _classCallCheck2.default)(this, InovuaDataGridHeaderLayout);
    _this2 = _super2.call(this, props);
    _this2.state = {
      draggingProps: null
    };
    _this2.refDragGroupItem = function (item) {
      _this2.dragGroupItem = item;
    };
    _this2.refDragCell = function (cell) {
      _this2.dragCell = cell;
    };
    _this2.refDragHeaderGroup = function (item) {
      _this2.dragHeaderGroup = item;
    };
    _this2.groupToolbar = (0, _react.createRef)();
    _this2.refHeader = function (h) {
      _this2.headerNode = null;
      if (h) {
        _this2.headerNode = h.getDOMNode ? h.getDOMNode() : null;
        if (!_this2.headerNode) {
          throw 'Cannot find header node';
        }
        if (_isMobile.default) {
          _this2.headerNode.addEventListener('touchmove', preventDefault);
        }
      } else {
        if (_this2.headerNode && _isMobile.default) {
          _this2.headerNode.removeEventListener('touchmove', preventDefault);
        }
        _this2.headerNode = null;
      }
      _this2.header = h;
    };
    _this2.headerWrapper = (0, _react.createRef)();
    _this2.refReorderArrow = function (cmp) {
      _this2.reorderArrow = cmp;
    };
    _this2.headerDomNode = (0, _react.createRef)();
    _this2.lazyNotifyHeaderScrollLeftMax = (0, _debounce.default)(_this2.notifyHeaderScrollLeftMax, 150);
    return _this2;
  }
  (0, _createClass2.default)(InovuaDataGridHeaderLayout, [{
    key: "notifyHeaderScrollLeftMax",
    value: function notifyHeaderScrollLeftMax(scrollLeftMax) {
      if (this.header && this.props.lockedEndColumns) {
        this.header.notifyScrollLeftMax(scrollLeftMax === undefined ? this.getScrollLeftMax() : scrollLeftMax);
      }
    }
  }, {
    key: "onContainerScrollHorizontal",
    value: function onContainerScrollHorizontal(scrollLeft, scrollLeftMax) {
      this.scrollLeft = scrollLeft;
      if (this.header) {
        this.header.setScrollLeft(scrollLeft, scrollLeftMax);
        this.lazyNotifyHeaderScrollLeftMax();
      }
    }
  }, {
    key: "setScrollLeft",
    value: function setScrollLeft(scrollLeft) {
      this.props.setScrollLeft(scrollLeft);
    }
  }, {
    key: "getScrollLeft",
    value: function getScrollLeft() {
      return this.scrollLeft || 0;
    }
  }, {
    key: "getScrollLeftMax",
    value: function getScrollLeftMax() {
      return this.props.getScrollLeftMax();
    }
  }, {
    key: "setColumnRenderStartIndex",
    value: function setColumnRenderStartIndex(columnRenderStartIndex) {
      if (this.header) {
        this.header.setColumnRenderStartIndex(columnRenderStartIndex);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var className = (0, _join.default)('InovuaReactDataGrid__header-layout', this.props.stickyHeader && 'InovuaReactDataGrid__header-layout__sticky-header');
      return _react.default.createElement("div", {
        ref: this.headerDomNode,
        className: className
      }, this.renderGroupToolbar(), this.renderHeaderWrapper(), this.renderDragCell(), this.renderDragGroupItem(), this.renderDragHeaderGroup(), this.renderReorderIndicator());
    }
  }, {
    key: "renderGroupToolbar",
    value: function renderGroupToolbar() {
      var _this$props = this.props,
        columnsMap = _this$props.columnsMap,
        onGroupByChange = _this$props.onGroupByChange,
        onHeaderSortClick = _this$props.onHeaderSortClick,
        renderGroupItem = _this$props.renderGroupItem,
        renderSortTool = _this$props.renderSortTool,
        renderGroupToolbar = _this$props.renderGroupToolbar,
        groupBy = _this$props.computedGroupBy,
        disableGroupByToolbar = _this$props.disableGroupByToolbar,
        i18n = _this$props.i18n,
        rtl = _this$props.rtl,
        theme = _this$props.theme;
      if (!groupBy || !renderGroupToolbar) {
        return null;
      }
      return renderGroupToolbar({
        columnsMap: columnsMap,
        groupBy: groupBy,
        rtl: rtl,
        theme: theme,
        renderSortTool: renderSortTool,
        onGroupByChange: onGroupByChange,
        disableGroupByToolbar: disableGroupByToolbar,
        renderGroupItem: renderGroupItem,
        headerGroupPlaceholderText: i18n('dragHeaderToGroup'),
        onItemMouseDown: this.onGroupItemMouseDown,
        onSortClick: onHeaderSortClick,
        ref: this.groupToolbar
      });
    }
  }, {
    key: "renderHeaderWrapper",
    value: function renderHeaderWrapper() {
      var props = this.props;
      var computedShowHeader = props.computedShowHeader;
      if (!computedShowHeader) {
        return null;
      }
      var scrollLeft = (this.scrollLeft !== undefined ? this.scrollLeft : props.scrollLeft) || 0;
      var groupBy = this.props.computedGroupBy && this.props.computedGroupBy.length ? this.props.computedGroupBy : null;
      return _react.default.createElement(_HeaderWrapper.default, _objectSpread(_objectSpread({}, props), {}, {
        groupBy: groupBy,
        onHeaderGroupMouseDown: this.onHeaderGroupMouseDown,
        onHeaderCellMouseDown: this.onHeaderCellMouseDown,
        onHeaderCellTouchStart: this.onHeaderCellTouchStart,
        ref: this.headerWrapper,
        refHeader: this.refHeader,
        scrollLeft: scrollLeft,
        setScrollLeft: this.setScrollLeft
      }));
    }
  }, {
    key: "renderDragCell",
    value: function renderDragCell() {
      return _react.default.createElement(_DragCell.default, {
        ref: this.refDragCell
      });
    }
  }, {
    key: "renderDragGroupItem",
    value: function renderDragGroupItem() {
      if (!this.props.renderDragGroupItem) {
        return null;
      }
      return this.props.renderDragGroupItem(this.refDragGroupItem);
    }
  }, {
    key: "renderDragHeaderGroup",
    value: function renderDragHeaderGroup() {
      if (!this.props.computedGroups) {
        return;
      }
      return _react.default.createElement(_DragHeaderGroup.default, {
        ref: this.refDragHeaderGroup
      });
    }
  }, {
    key: "onGroupItemMouseDown",
    value: function onGroupItemMouseDown(column, index, event) {
      this.onHeaderCellMouseDown(column, event, {
        dragTarget: 'group',
        dragIndex: index
      });
    }
  }, {
    key: "getCellDOMNodeAt",
    value: function getCellDOMNodeAt(index) {
      return this.header.getCellDOMNodeAt(index);
    }
  }, {
    key: "getHeader",
    value: function getHeader() {
      return this.header;
    }
  }, {
    key: "onHeaderGroupMouseDown",
    value: function onHeaderGroupMouseDown(event, headerGroupProps, headerGroup) {
      if (event.ctrlKey || event.metaKey) {
        return;
      }
      if (this._dragIndex !== undefined) {
        return;
      }
      if (headerGroupProps.group && headerGroupProps.group.draggable === false) {
        return;
      }
      var dragTargetNode = headerGroup.domRef ? headerGroup.domRef.current : null;
      var shouldStop = (0, _toConsumableArray2.default)(dragTargetNode.querySelectorAll('.InovuaReactDataGrid__column-header__filter-wrapper')).reduce(function (shouldStop, filterWrapperNode) {
        if ((0, _contains.default)(filterWrapperNode, event.target) || filterWrapperNode === event.target) {
          return true;
        }
        return shouldStop;
      }, false);
      if (shouldStop) {
        return;
      }
      var groupColumns = headerGroupProps.columns.reduce(function (acc, colId) {
        acc[colId] = true;
        return acc;
      }, {});
      this.groupColumns = groupColumns;
      var dragBoxes = this.header.getGroupsAndCells().filter(function (item) {
        if (item === headerGroup) {
          return true;
        }
        if (item.props.id in groupColumns) {
          return false;
        }
        return !item.props.isHeaderGroup;
      });
      var dragIndex = dragBoxes.indexOf(headerGroup);
      var dragTargetIndex = this.props.columnsMap[headerGroup.props.columns[0]].computedVisibleIndex;
      var dragTargetDepth = headerGroup.props.depth;
      var dragTargetLength = headerGroup.props.columns.length;
      var parentsForColumns = getParentsForColumns(this.props.visibleColumns, this.props.computedGroupsMap, this.props.computedGroupsDepth);
      this.maybeDragMouseDown(event, {
        dragTarget: 'headergroup',
        dragTargetIndex: dragTargetIndex,
        dragTargetDepth: dragTargetDepth,
        dragTargetLength: dragTargetLength,
        parentsForColumns: parentsForColumns,
        dragTargetNode: dragTargetNode,
        dragIndex: dragIndex,
        dragBoxes: dragBoxes,
        allowTargetChange: false,
        ranges: (0, _getRangesForBoxes.default)(dragBoxes, function (i) {
          return i;
        })
      });
    }
  }, {
    key: "onHeaderCellTouchStart",
    value: function onHeaderCellTouchStart() {
      return this.onHeaderCellMouseDown.apply(this, arguments);
    }
  }, {
    key: "onHeaderCellMouseDown",
    value: function onHeaderCellMouseDown(_ref3, event) {
      var visibleIndex = _ref3.computedVisibleIndex;
      var _ref4 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
          dragTarget: 'header'
        },
        _ref4$dragTarget = _ref4.dragTarget,
        dragTarget = _ref4$dragTarget === void 0 ? 'header' : _ref4$dragTarget,
        dragIndex = _ref4.dragIndex;
      if (this.props.reorderColumns === false) {
        return;
      }
      if ((0, _isFocusable.default)(event.target)) {
        return;
      }
      if (event.nativeEvent.which == 3 || event.metaKey || event.ctrlKey) {
        return;
      }
      if (dragIndex === undefined) {
        dragIndex = visibleIndex;
      }
      if (event.ctrlKey || event.metaKey) {
        return;
      }
      var allowTargetChange = undefined;
      var dragColumn;
      var dragTargetNode = this.getCellDOMNodeAt(visibleIndex);
      if (dragTarget == 'header') {
        dragColumn = this.props.visibleColumns[visibleIndex];
        if (!dragColumn || dragColumn.groupColumn || dragColumn.draggable === false) {
          event.stopPropagation();
          return;
        }
        if (this.props.computedGroupBy) {
          if (this.props.computedGroupBy.indexOf(dragColumn.id) != -1 || this.props.computedGroupBy.indexOf(dragColumn.name) != -1) {
            allowTargetChange = false;
          }
        }
        if (dragColumn.draggable === false) {
          return;
        }
        if (dragColumn.groupBy === false) {
          allowTargetChange = false;
        }
      }
      var dragTargetIndex = dragIndex;
      var dragTargetDepth = dragColumn && dragColumn.group && this.props.computedGroupsMap && this.props.computedGroupsMap[dragColumn.group] ? this.props.computedGroupsMap[dragColumn.group].computedDepth + 1 : this.props.computedGroupsDepth + 1;
      var parentsForColumns = getParentsForColumns(this.props.visibleColumns, this.props.computedGroupsMap, this.props.computedGroupsDepth);
      this.maybeDragMouseDown(event, {
        dragTarget: dragTarget,
        dragIndex: dragIndex,
        dragTargetNode: dragTargetNode,
        parentsForColumns: parentsForColumns,
        dragTargetIndex: dragTargetIndex,
        dragTargetDepth: dragTargetDepth,
        dragTargetLength: 1,
        allowTargetChange: allowTargetChange
      });
    }
  }, {
    key: "maybeDragMouseDown",
    value: function maybeDragMouseDown(event, _ref5) {
      var _this3 = this;
      var dragTarget = _ref5.dragTarget,
        dragIndex = _ref5.dragIndex,
        allowTargetChange = _ref5.allowTargetChange,
        ranges = _ref5.ranges,
        parentsForColumns = _ref5.parentsForColumns,
        dragTargetIndex = _ref5.dragTargetIndex,
        dragTargetDepth = _ref5.dragTargetDepth,
        dragTargetNode = _ref5.dragTargetNode,
        dragTargetLength = _ref5.dragTargetLength;
      if (this.props.computedPivot) {
        return;
      }
      this._dragIndex = dragIndex;
      var _removeListeners;
      var mouseMoveEventCount = 0;
      var didSetupDrag = false;
      var cleanup = function cleanup() {
        delete _this3._dragIndex;
        if (_removeListeners) {
          _removeListeners();
        }
      };
      var onMouseUp = cleanup;
      var onMouseMove = function onMouseMove(event) {
        if (didSetupDrag) {
          return;
        }
        mouseMoveEventCount++;
        if (mouseMoveEventCount > 1) {
          didSetupDrag = true;
          _removeListeners();
          _this3.setupDrag({
            dragTarget: dragTarget,
            dragIndex: dragIndex,
            allowTargetChange: allowTargetChange,
            ranges: ranges,
            parentsForColumns: parentsForColumns,
            dragTargetIndex: dragTargetIndex,
            dragTargetDepth: dragTargetDepth,
            dragTargetLength: dragTargetLength,
            dragTargetNode: dragTargetNode
          }, event);
        }
      };
      var mouseup = _isMobile.default ? 'touchend' : 'mouseup';
      var mousemove = _isMobile.default ? 'touchmove' : 'mousemove';
      _removeListeners = function removeListeners() {
        _removeListeners = null;
        globalObject.removeEventListener(mouseup, onMouseUp, false);
        globalObject.removeEventListener(mousemove, onMouseMove, false);
      };
      if (_isMobile.default) {
        setTimeout(function () {
          onMouseUp();
        }, 350);
      }
      globalObject.addEventListener(mouseup, onMouseUp, false);
      globalObject.addEventListener(mousemove, onMouseMove, false);
    }
  }, {
    key: "renderReorderIndicator",
    value: function renderReorderIndicator() {
      var size = this.props.reorderProxySize;
      return _react.default.createElement(ReorderArrow, {
        ref: this.refReorderArrow,
        size: size,
        rtl: this.props.rtl,
        renderReorderIndicator: this.props.renderReorderIndicator
      });
    }
  }, {
    key: "setReorderArrowAt",
    value: function setReorderArrowAt(index, ranges, target) {
      var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
      var visible = arguments.length > 4 ? arguments[4] : undefined;
      visible = visible !== undefined ? visible : index != DRAG_INFO.dragIndex || target != DRAG_INFO.dragTarget;
      if (offset) {
        visible = true;
      }
      var rtl = this.props.rtl;
      this.reorderArrow.setVisible(visible);
      var last = index == ranges.length;
      var box = ranges[index];
      var _DRAG_INFO = DRAG_INFO,
        headerRegion = _DRAG_INFO.headerRegion,
        initialScrollLeft = _DRAG_INFO.initialScrollLeft;
      if (!box && last) {
        var _box;
        var lastBox = ranges[ranges.length - 1] || {
          left: headerRegion.left,
          right: headerRegion.left
        };
        box = (_box = {}, (0, _defineProperty2.default)(_box, rtl ? 'right' : 'left', rtl ? lastBox.left : lastBox.right), (0, _defineProperty2.default)(_box, "computedLocked", lastBox.computedLocked), _box);
      }
      box = box || (rtl ? {
        right: 0
      } : {
        left: 0
      });
      var boxPos = rtl ? box.right : box.left;
      if (rtl && this.props.nativeScroll && this.props.scrollbars.vertical) {
        boxPos -= (0, _getScrollbarWidth.default)();
      }
      return this.setReorderArrowPosition(rtl ? -boxPos + headerRegion.right - offset : boxPos - headerRegion.left + offset, target);
    }
  }, {
    key: "setReorderArrowPosition",
    value: function setReorderArrowPosition(pos, target) {
      var rtl = this.props.rtl;
      this.reorderArrowPosition = this.reorderArrowPosition || {};
      (0, _assignDefined2.default)(this.reorderArrowPosition, (0, _defineProperty2.default)({}, rtl ? 'right' : 'left', pos));
      this.reorderArrow.set(_objectSpread((0, _defineProperty2.default)({
        target: target
      }, rtl ? 'right' : 'left', rtl ? this.reorderArrowPosition.right : this.reorderArrowPosition.left), DRAG_INFO.reorderProxyPosition[target]));
      return this;
    }
  }, {
    key: "setReorderArrowVisible",
    value: function setReorderArrowVisible(visible) {
      this.reorderArrow.setVisible(visible);
      return this;
    }
  }, {
    key: "getGroupToolbar",
    value: function getGroupToolbar() {
      return this.groupToolbar.current;
    }
  }, {
    key: "getGroupByItems",
    value: function getGroupByItems() {
      if (!this.groupToolbar.current) {
        return null;
      }
      return this.groupToolbar.current.getSortedItemsInfo();
    }
  }, {
    key: "getHeaderCells",
    value: function getHeaderCells() {
      return this.header.getCells();
    }
  }, {
    key: "getBoxesFor",
    value: function getBoxesFor(target) {
      if (target == 'header') {
        return this.header.getCells();
      }
      if (target == 'group' && this.groupToolbar.current) {
        return this.groupToolbar.current.getCells();
      }
      if (target == 'headergroup') {
        return this.header.getGroupsAndCells();
      }
      return [];
    }
  }, {
    key: "getDragBoxInstance",
    value: function getDragBoxInstance(dragIndex, dragTarget, dragTargetDepth, dragTargetLength) {
      if (dragTarget === 'group') {
        return this.getGroupToolbar() && this.getGroupToolbar().getCells()[dragIndex];
      }
      var dragCell = this.getHeaderCells()[dragIndex];
      var dragBox = dragCell;
      if (dragTargetLength) {
        var cellProps = dragCell.getProps();
        while (cellProps.depth > dragTargetDepth) {
          if (cellProps.parent) {
            dragBox = cellProps.parent;
            cellProps = dragBox.props;
          } else {
            break;
          }
        }
      }
      return dragBox;
    }
  }, {
    key: "setupDrag",
    value: function setupDrag(_ref6, event) {
      var _DRAG_INFO2;
      var dragTarget = _ref6.dragTarget,
        dragIndex = _ref6.dragIndex,
        _ref6$allowTargetChan = _ref6.allowTargetChange,
        allowTargetChange = _ref6$allowTargetChan === void 0 ? true : _ref6$allowTargetChan,
        parentsForColumns = _ref6.parentsForColumns,
        dragTargetIndex = _ref6.dragTargetIndex,
        dragTargetDepth = _ref6.dragTargetDepth,
        dragTargetLength = _ref6.dragTargetLength;
      var columns = this.props.visibleColumns;
      var rtl = this.props.rtl;
      var headerRegion = _region.default.from(this.headerDomNode.current);
      var dragBox = this.getDragBoxInstance(dragIndex, dragTarget, dragTargetDepth, dragTargetLength);
      var initialScrollLeft = this.getScrollLeft();
      var dragBoxProps = dragBox.getProps ? dragBox.getProps() : dragBox.props;
      var rtlOffset = Math.max(this.props.totalComputedWidth - this.props.size.width, 0);
      var columnRanges = (0, _getRangesForColumns.default)(columns, {
        rtl: rtl,
        rtlOffset: rtlOffset,
        initialOffset: rtl ? headerRegion.right : headerRegion.left,
        headerRegion: headerRegion,
        initialScrollLeft: initialScrollLeft,
        availableWidth: Math.min(this.props.availableWidth, this.props.totalComputedWidth),
        totalLockedEndWidth: this.props.totalLockedEndWidth
      });
      var groupToolbarCells = this.getGroupToolbar() && this.getGroupToolbar().getCells();
      var groupByRanges = this.props.computedGroupBy && this.props.computedGroupBy.length ? (0, _getRangesForBoxes.default)(groupToolbarCells) || [] : [];
      var dragProxy = dragTarget == 'header' ? this.dragCell : dragTarget == 'group' ? this.dragGroupItem : this.dragHeaderGroup;
      var dragColumn = dragTarget === 'group' ? dragBoxProps.column : columns[dragIndex];
      var headerDragColumn = dragTarget == 'header' ? dragColumn : null;
      var columnId = dragTarget == 'header' ? headerDragColumn.id : dragTarget == 'group' ? dragColumn.id : null;
      var dragBoxNode = dragBox.getDOMNode ? dragBox.getDOMNode() : null;
      var dragBoxInitialRegion = dragBox && dragBox.getProxyRegion ? dragBox.getProxyRegion() : _region.default.from(dragBoxNode);
      if (_DragCell.MAX_WIDTH && dragBoxInitialRegion.getWidth() > _DragCell.MAX_WIDTH) {
        dragBoxInitialRegion.setWidth(_DragCell.MAX_WIDTH);
      }
      if (_region.default.from(dragBoxNode).getWidth() > headerRegion.getWidth() / 2) {
        if (rtl) {
          dragBoxInitialRegion.shift({
            right: event.pageX - dragBoxInitialRegion.right - this.props.columnReorderScrollByAmount
          });
        } else {
          dragBoxInitialRegion.shift({
            left: event.pageX - dragBoxInitialRegion.left - this.props.columnReorderScrollByAmount
          });
        }
      }
      var dragBoxOffsets = (0, _defineProperty2.default)({
        top: headerRegion.top
      }, rtl ? 'right' : 'left', rtl ? headerRegion.right : headerRegion.left);
      var extendedDragBoxProps = _objectSpread({}, dragBoxProps);
      if (this.props.renderColumnReorderProxy) {
        Object.assign(extendedDragBoxProps, {
          renderColumnReorderProxy: this.props.renderColumnReorderProxy
        });
      }
      dragProxy.setProps(extendedDragBoxProps);
      var dragProxyPosition = (0, _defineProperty2.default)({
        top: dragBoxInitialRegion.top - dragBoxOffsets.top
      }, rtl ? 'right' : 'left', rtl ? dragBoxOffsets.right - dragBoxInitialRegion.right : dragBoxInitialRegion.left - dragBoxOffsets.left);
      dragProxy.setHeight(dragBoxInitialRegion.height);
      dragProxy.setWidth(dragBoxInitialRegion.width);
      dragProxy.setTop(dragProxyPosition.top);
      if (rtl) {
        dragProxy.setRight(dragProxyPosition.right);
      } else {
        dragProxy.setLeft(dragProxyPosition.left);
      }
      var maxHeaderIndex = columns.length - (0, _getUndraggableSuccessiveCount.default)((0, _toConsumableArray2.default)(columns).reverse());
      var minHeaderIndex = (0, _getUndraggableSuccessiveCount.default)(columns);
      var validDropPositions = columns.reduce(function (acc, col, i) {
        acc[i] = true;
        return acc;
      }, {});
      validDropPositions[columns.length] = true;
      if (this.props.groups && this.props.groups.length && !this.props.allowGroupSplitOnReorder) {
        validDropPositions = getValidDropPositions({
          dragTargetDepth: dragTargetDepth,
          dragTargetIndex: dragTargetIndex,
          dragTargetLength: dragTargetLength,
          parentsForColumns: parentsForColumns,
          lockedForColumns: columns.map(function (c) {
            return c.computedLocked;
          }),
          columns: columns,
          allowGroupSplitOnReorder: this.props.allowGroupSplitOnReorder,
          maxDepth: this.props.computedGroupsDepth + 1
        });
      }
      if (validDropPositions && !validDropPositions[dragIndex] && dragTarget != 'group') {
        validDropPositions[dragIndex] = true;
      }
      var wrapperNode = this.headerDomNode ? this.headerDomNode.current : null;
      var filterRowHeight = 0;
      if (this.props.computedFilterable) {
        var filterWrapperNode = wrapperNode.querySelector('.InovuaReactDataGrid__column-header__filter-wrapper');
        if (filterWrapperNode) {
          filterRowHeight = filterWrapperNode.offsetHeight;
        }
      }
      DRAG_INFO = (_DRAG_INFO2 = {
        allowTargetChange: allowTargetChange,
        columnId: columnId,
        headerRegion: headerRegion,
        headerDragColumn: headerDragColumn,
        minHeaderIndex: minHeaderIndex,
        maxHeaderIndex: maxHeaderIndex,
        dragColumn: dragColumn,
        dragColumnsIds: dragTarget == 'headergroup' ? dragBox.props.columns : null,
        dragBox: dragBox,
        dragBoxInitialRegion: dragBoxInitialRegion,
        dragBoxRegion: dragBoxInitialRegion.clone(),
        dragBoxProps: dragBoxProps,
        dragBoxOffsets: dragBoxOffsets,
        dragProxy: dragProxy,
        dragProxyInitialPosition: dragProxyPosition,
        dragTarget: dragTarget,
        dropTarget: dragTarget,
        dragIndex: dragIndex,
        columnRanges: columnRanges,
        groupByRanges: groupByRanges,
        parentsForColumns: parentsForColumns,
        dragTargetIndex: dragTargetIndex,
        dragTargetDepth: dragTargetDepth,
        dragTargetLength: dragTargetLength,
        scrollLeftMax: this.props.getScrollLeftMax(),
        initialScrollLeft: initialScrollLeft
      }, (0, _defineProperty2.default)(_DRAG_INFO2, "headerRegion", headerRegion), (0, _defineProperty2.default)(_DRAG_INFO2, "validDropPositions", validDropPositions), _DRAG_INFO2);
      var groupToolbarNode = this.groupToolbar.current ? this.groupToolbar.current.domRef ? this.groupToolbar.current.domRef.current : null : null;
      var headerGroupTargetNode = wrapperNode;
      var groupTargetNode = groupToolbarNode || this.headerDomNode.current;
      var groupComputedStyle = getComputedStyle(groupTargetNode);
      DRAG_INFO.reorderProxyPosition = {
        group: {
          top: parseInt(groupComputedStyle.paddingTop),
          bottom: groupTargetNode.offsetHeight - parseInt(groupComputedStyle.paddingBottom)
        },
        header: {
          top: this.props.computedGroupBy ? groupToolbarNode ? groupTargetNode.offsetHeight : this.headerDomNode.current.offsetTop : 0,
          bottom: headerGroupTargetNode.offsetHeight - filterRowHeight
        },
        headergroup: {
          top: this.props.computedGroupBy ? groupToolbarNode ? groupTargetNode.offsetHeight : this.headerDomNode.current.offsetTop : 0,
          bottom: headerGroupTargetNode.offsetHeight - filterRowHeight
        }
      };
      this.setReorderArrowAt(dragIndex, dragTarget === 'group' ? groupByRanges : columnRanges, dragTarget);
      this.setReorderArrowPosition(undefined, dragTarget);
      dragProxy.setDragging(true);
      this.props.coverHandleRef.current.setActive(true);
      this.props.coverHandleRef.current.setCursor('grabbing');
      var headerNode = this.headerDomNode ? this.headerDomNode.current : null;
      (0, _setupColumnDrag.default)({
        constrainTo: this.props.constrainReorder ? _region.default.from(headerNode.parentNode) : undefined,
        region: dragBoxInitialRegion
      }, {
        onDrag: this.onHeaderCellDrag,
        onDrop: this.onHeaderCellDrop
      }, event);
    }
  }, {
    key: "onHeaderCellDrop",
    value: function onHeaderCellDrop() {
      var _this4 = this;
      this.props.coverHandleRef.current.setActive(false);
      delete this._dragIndex;
      var dropIndex = this.dropIndex,
        props = this.props;
      if (dropIndex === undefined || !DRAG_INFO) {
        if (DRAG_INFO) {
          DRAG_INFO.dragProxy.setDragging(false);
        }
        this.setReorderArrowVisible(false);
        DRAG_INFO = null;
        return;
      }
      var _DRAG_INFO3 = DRAG_INFO,
        dragColumn = _DRAG_INFO3.dragColumn,
        columnId = _DRAG_INFO3.columnId,
        dragColumnsIds = _DRAG_INFO3.dragColumnsIds,
        dragTarget = _DRAG_INFO3.dragTarget,
        dropTarget = _DRAG_INFO3.dropTarget,
        dragProxy = _DRAG_INFO3.dragProxy,
        newLocked = _DRAG_INFO3.newLocked;
      var _DRAG_INFO4 = DRAG_INFO,
        dragIndex = _DRAG_INFO4.dragIndex;
      DRAG_INFO = null;
      this.setReorderArrowVisible(false);
      dragProxy.setDragging(false);
      var columns = this.props.visibleColumns;
      var currentLocked = columns[dragIndex].computedLocked;
      if (dropIndex == dragIndex && newLocked === currentLocked && dragTarget == dropTarget) {
        return;
      }
      if (this.props.virtualizeColumns) {
        setTimeout(function () {
          _this4.header.updateColumns();
        }, 10);
      }
      if (dragTarget == 'headergroup') {
        if (dropIndex == dragIndex && dragTarget == dropTarget && newLocked === currentLocked) {
          return;
        }
        if (columns[dropIndex]) {
          this.moveColumnsBeforeIndex(dragColumnsIds, columns[dropIndex].computedVisibleIndex, newLocked);
        } else if (dropIndex == columns.length) {
          var col = columns[columns.length - 1];
          if (col) {
            this.moveColumnsBeforeIndex(dragColumnsIds, col.computedVisibleIndex + 1, newLocked);
          }
        }
        return;
      }
      var visibleColumns = props.visibleColumns,
        groupBy = props.computedGroupBy;
      if (dropTarget == dragTarget) {
        if (dragTarget == 'group') {
          this.setGroupBy((0, _moveXBeforeY.default)(groupBy, dragIndex, dropIndex));
        }
        if (dragTarget == 'header') {
          this.moveColumnsBeforeIndex([columnId], dropIndex, newLocked);
        }
      }
      if (dragTarget == 'header' && dropTarget == 'group') {
        var groupByColumn = visibleColumns[dragIndex];
        var newGroupBy = [].concat(groupBy);
        newGroupBy.splice(dropIndex, 0, groupByColumn.id);
        this.setGroupBy(newGroupBy);
      }
      if (dragTarget == 'group' && dropTarget == 'header') {
        this.ungroupColumnToIndex(columnId, dropIndex);
      }
    }
  }, {
    key: "ungroupColumnToIndex",
    value: function ungroupColumnToIndex(columnId, dropIndex) {
      var props = this.props;
      var allColumns = props.allColumns,
        visibleColumns = props.visibleColumns;
      var dragColumn = allColumns.filter(function (c) {
        return c.id === columnId;
      })[0];
      var newGroupBy = [].concat(this.props.computedGroupBy).filter(function (g) {
        return g != columnId;
      });
      var columnAtDropIndex = visibleColumns[dropIndex];
      if (columnAtDropIndex && columnAtDropIndex.id === columnId) {
        this.setGroupBy(newGroupBy);
        return;
      }
      var order = getColumnOrder(props, function (c) {
        return c.id !== columnId;
      });
      var insertIndex = columnAtDropIndex ? order.indexOf(columnAtDropIndex.id) : order.length;
      order.splice(insertIndex, 0, columnId);
      var columnAtDropIndexOrLast = columnAtDropIndex || visibleColumns[visibleColumns.length - 1];
      if (columnAtDropIndexOrLast.computedLocked != dragColumn.computedLocked) {
        this.props.setColumnLocked(columnId, columnAtDropIndexOrLast.computedLocked);
      }
      this.setGroupBy(newGroupBy);
      this.setColumnOrder(order);
    }
  }, {
    key: "moveColumnsBeforeIndex",
    value: function moveColumnsBeforeIndex(columnsIds, dropIndex, newLocked) {
      var _this5 = this;
      var props = this.props;
      var visibleColumns = props.visibleColumns,
        columnVisibilityMap = props.columnVisibilityMap,
        allowGroupSplitOnReorder = props.allowGroupSplitOnReorder;
      var columnOrder = getColumnOrder(props);
      var columns = visibleColumns.filter(function (col) {
        return columnsIds.indexOf(col.id) != -1;
      });
      var dragColumnsIndexesInAllColumns = columnsIds.map(function (columnId) {
        return columnOrder.indexOf(columnId);
      });
      var dropBeforeIndexInAllColumns = visibleColumns[dropIndex] ? columnOrder.indexOf(visibleColumns[dropIndex].id) : columnOrder.length;
      var firstDragIndex = dragColumnsIndexesInAllColumns[0];
      if (!allowGroupSplitOnReorder && firstDragIndex < dropBeforeIndexInAllColumns) {
        while (true) {
          var columnRightBefore = columnOrder[dropBeforeIndexInAllColumns - 1];
          if (columnRightBefore && columnVisibilityMap[columnRightBefore] === false) {
            dropBeforeIndexInAllColumns--;
            continue;
          }
          break;
        }
      }
      var targetColumn = visibleColumns[dropIndex] || visibleColumns[visibleColumns.length - 1];
      columns.forEach(function (col) {
        if (newLocked != col.computedLocked) {
          _this5.props.setColumnLocked(col.id, newLocked);
        }
      });
      var newColumnOrder = (0, _moveXBeforeY.default)(columnOrder, dragColumnsIndexesInAllColumns, dropBeforeIndexInAllColumns);
      this.setColumnOrder(newColumnOrder);
    }
  }, {
    key: "onHeaderCellDrag",
    value: function onHeaderCellDrag(_ref7) {
      var diffLeft = _ref7.left,
        diffTop = _ref7.top;
      if (!DRAG_INFO) {
        return;
      }
      var _DRAG_INFO5 = DRAG_INFO,
        allowTargetChange = _DRAG_INFO5.allowTargetChange,
        dragTarget = _DRAG_INFO5.dragTarget,
        dragIndex = _DRAG_INFO5.dragIndex,
        dragProxy = _DRAG_INFO5.dragProxy,
        dragColumn = _DRAG_INFO5.dragColumn,
        dragBoxInitialRegion = _DRAG_INFO5.dragBoxInitialRegion,
        dragBoxOffsets = _DRAG_INFO5.dragBoxOffsets,
        dragBoxRegion = _DRAG_INFO5.dragBoxRegion,
        groupByRanges = _DRAG_INFO5.groupByRanges,
        theRanges = _DRAG_INFO5.columnRanges,
        headerRegion = _DRAG_INFO5.headerRegion,
        scrollLeftMax = _DRAG_INFO5.scrollLeftMax,
        initialScrollLeft = _DRAG_INFO5.initialScrollLeft,
        validDropPositions = _DRAG_INFO5.validDropPositions;
      dragBoxRegion.set({
        left: dragBoxInitialRegion.left,
        top: dragBoxInitialRegion.top,
        bottom: dragBoxInitialRegion.bottom,
        right: dragBoxInitialRegion.right
      });
      var _DRAG_INFO6 = DRAG_INFO,
        dropTarget = _DRAG_INFO6.dropTarget;
      var _this$props2 = this.props,
        columnReorderScrollByAmount = _this$props2.columnReorderScrollByAmount,
        rtl = _this$props2.rtl;
      var scrollLeft = this.getScrollLeft();
      var scrollDiff = scrollLeft - initialScrollLeft;
      var initialDiffLeft = diffLeft;
      dragBoxRegion.shift({
        top: diffTop,
        left: diffLeft
      });
      diffLeft += scrollDiff;
      var minScrollLeft = Math.max(headerRegion.left, 0);
      var maxScrollRight = headerRegion.right;
      var groupToolbarNode = this.groupToolbar && this.groupToolbar.current && this.groupToolbar.current.domRef ? this.groupToolbar.current.domRef.current : null;
      if (this.groupToolbar.current && allowTargetChange) {
        var groupToolbarRegion = _region.default.from(groupToolbarNode);
        if (dragBoxRegion.top + dragBoxRegion.height / 2 < groupToolbarRegion.bottom) {
          if (dropTarget !== 'group' && dragColumn.groupBy !== false) {
            dropTarget = DRAG_INFO.dropTarget = 'group';
          }
        } else {
          if (dropTarget != 'header') {
            dropTarget = DRAG_INFO.dropTarget = 'header';
          }
        }
      }
      var scrollAdjust = 0;
      var dragProxyAdjust = 0;
      var dragComputedLocked = this.props.visibleColumns[dragIndex].computedLocked;
      if (dropTarget == 'header' || dropTarget == 'headergroup') {
        if (dragBoxInitialRegion.left + initialDiffLeft - this.props.totalLockedStartWidth < minScrollLeft + SCROLL_MARGIN && initialDiffLeft < 0) {
          scrollAdjust = -columnReorderScrollByAmount;
        } else if (dragBoxInitialRegion.right + initialDiffLeft > maxScrollRight - SCROLL_MARGIN - this.props.totalLockedEndWidth && initialDiffLeft > 0) {
          scrollAdjust = columnReorderScrollByAmount;
        }
        if (scrollAdjust) {
          if (scrollLeft + scrollAdjust < 0) {
            scrollAdjust = -scrollLeft;
          }
          if (scrollLeft + scrollAdjust > scrollLeftMax) {
            scrollAdjust = scrollLeftMax - scrollLeft;
          }
          if (scrollAdjust) {
            this.setScrollLeft(scrollLeft + scrollAdjust);
            dragProxyAdjust = scrollAdjust;
          }
        }
      }
      if (rtl) {
        dragProxy.setRight(dragBoxOffsets.right + -initialDiffLeft - dragBoxInitialRegion.right - dragProxyAdjust);
      } else {
        dragProxy.setLeft(dragBoxInitialRegion.left + initialDiffLeft - dragBoxOffsets.left - dragProxyAdjust);
      }
      dragProxy.setTop(dragBoxRegion.top - dragBoxOffsets.top);
      var dir = dropTarget == 'group' && dragTarget == 'group' ? initialDiffLeft < 0 ? -1 : 1 : dragTarget != dropTarget || diffLeft < 0 ? -1 : 1;
      if (dragComputedLocked) {
        dir = initialDiffLeft < 0 ? -1 : 1;
      }
      if (rtl) {
        dir *= -1;
      }
      var mapRange = function mapRange(r) {
        if (!r.computedLocked) {
          return _objectSpread(_objectSpread({}, r), {}, {
            left: r.left - scrollDiff,
            right: r.right - scrollDiff
          });
        }
        return r;
      };
      var currentRanges = dropTarget === 'group' ? groupByRanges : theRanges;
      var ranges = currentRanges.map(mapRange);
      var compareRanges = currentRanges.map(mapRange);
      var dragMinIndex = dropTarget == 'header' ? DRAG_INFO.minHeaderIndex : undefined;
      var dragMaxIndex = dropTarget == 'header' ? DRAG_INFO.maxHeaderIndex : undefined;
      var dropIndex;
      var _getDropIndex = (0, _getDropIndex2.default)({
          dir: dir,
          rtl: rtl,
          dragMinIndex: dragMinIndex,
          dragMaxIndex: dragMaxIndex,
          dragTarget: dragTarget,
          dropTarget: dropTarget,
          dragRange: _objectSpread(_objectSpread({}, ranges[dragIndex]), {}, {
            left: dragBoxRegion.left,
            right: dragBoxRegion.right,
            index: dragIndex
          }),
          dragIndex: dragIndex,
          ranges: compareRanges,
          validDropPositions: dropTarget === dragTarget ? validDropPositions : undefined
        }),
        newDropIndex = _getDropIndex.index,
        locked = _getDropIndex.locked;
      DRAG_INFO.newLocked = locked;
      if (newDropIndex != undefined) {
        dropIndex = newDropIndex;
      }
      var offset = 0;
      var visible;
      if (locked === 'start' && newDropIndex === this.props.firstUnlockedIndex) {
        offset = (rtl ? -1 : 1) * -11;
      }
      if (newDropIndex === this.props.firstLockedEndIndex && dragIndex !== this.props.firstLockedEndIndex) {
        if (locked === 'end') {
          offset = (rtl ? -1 : 1) * 4;
        } else if (!locked) {
          offset = (rtl ? -1 : 1) * -6;
        }
      }
      if (newDropIndex === this.props.visibleColumns.length) {
        offset = rtl ? 6 : -6;
      }
      if (locked == null && dragComputedLocked === 'end' && newDropIndex === this.props.firstLockedEndIndex) {
        visible = true;
      }
      this.dropIndex = dropIndex;
      this.setReorderArrowPosition(undefined, dropTarget);
      this.setReorderArrowAt(dropIndex, compareRanges, dropTarget, offset, visible);
    }
  }, {
    key: "setColumnOrder",
    value: function setColumnOrder(newColumnOrder) {
      var columnOrder = getColumnOrder(this.props);
      if (this.props.setColumnOrder && JSON.stringify(columnOrder) !== JSON.stringify(newColumnOrder)) {
        this.props.setColumnOrder(newColumnOrder);
      }
    }
  }, {
    key: "setGroupBy",
    value: function setGroupBy(groupBy) {
      if (this.props.onGroupByChange && JSON.stringify(groupBy) !== JSON.stringify(this.props.computedGroupBy)) {
        this.props.onGroupByChange(groupBy);
      }
    }
  }, {
    key: "insertGroupBy",
    value: function insertGroupBy(at, column) {
      var props = this.props;
      var order = (0, _toConsumableArray2.default)(props.computedGroupBy);
      order.splice(at, 0, column.id);
      this.setGroupBy(order);
    }
  }]);
  return InovuaDataGridHeaderLayout;
}(_reactClass.default);
exports["default"] = InovuaDataGridHeaderLayout;
InovuaDataGridHeaderLayout.propTypes = {
  i18n: _propTypes.default.func.isRequired,
  renderGroupToolbar: _propTypes.default.func,
  renderDragGroupItem: _propTypes.default.func,
  getScrollLeftMax: _propTypes.default.func.isRequired,
  setScrollLeft: _propTypes.default.func.isRequired,
  renderColumnReorderProxy: _propTypes.default.func,
  stickyHeader: _propTypes.default.bool
};

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/setupColumnDrag.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/setupColumnDrag.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _dragHelper = _interopRequireDefault(__webpack_require__(/*! ../../../packages/drag-helper */ "./node_modules/@inovua/reactdatagrid-community/packages/drag-helper/index.js"));
var emptyFn = function emptyFn() {};
var _default = function _default(_ref) {
  var constrainTo = _ref.constrainTo,
    region = _ref.region;
  var cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var event = arguments.length > 2 ? arguments[2] : undefined;
  var _onDrag = cfg.onDrag || emptyFn;
  var _onDrop = cfg.onDrop || emptyFn;
  (0, _dragHelper.default)(event, {
    constrainTo: constrainTo,
    region: region,
    onDrag: function onDrag(event, config) {
      event.preventDefault();
      _onDrag({
        left: config.diff.left || 0,
        top: config.diff.top || 0
      }, event);
    },
    onDrop: function onDrop(event, config) {
      _onDrop(config.diff);
    }
  });
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/ResizeOverlay.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/ResizeOverlay.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../packages/join */ "./node_modules/@inovua/reactdatagrid-community/packages/join/index.js"));
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var ResizeOverlay = function (_React$Component) {
  (0, _inherits2.default)(ResizeOverlay, _React$Component);
  var _super = _createSuper(ResizeOverlay);
  function ResizeOverlay(props) {
    var _this;
    (0, _classCallCheck2.default)(this, ResizeOverlay);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setConstrained", function (constrained) {
      if (_this.state.constrained != constrained) {
        _this.setState({
          constrained: constrained
        });
      }
      return (0, _assertThisInitialized2.default)(_this);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setOffset", function (offset) {
      _this.setState({
        offset: offset
      });
      return (0, _assertThisInitialized2.default)(_this);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setActive", function (active, cfg) {
      _this.setState({
        active: active,
        offsetTop: cfg ? cfg.offsetTop || 0 : 0
      });
      return (0, _assertThisInitialized2.default)(_this);
    });
    _this.state = {
      offset: 0,
      constrained: false,
      active: false
    };
    return _this;
  }
  (0, _createClass2.default)(ResizeOverlay, [{
    key: "render",
    value: function render() {
      var _proxyStyle;
      var props = this.props;
      var state = this.state;
      var constrained = state.constrained;
      var active = props.active !== undefined ? props.active : state.active;
      var rtl = props.rtl,
        columnResizeProxyWidth = props.columnResizeProxyWidth,
        columnResizeHandleWidth = props.columnResizeHandleWidth;
      var style = props.style;
      if (active && props.activeStyle) {
        style = Object.assign({}, style, props.activeStyle);
      }
      var className = (0, _join.default)(props.className, 'InovuaReactDataGrid__resize-overlay', active && 'InovuaReactDataGrid__resize-overlay--active');
      var proxyClassName = (0, _join.default)('InovuaReactDataGrid__resize-proxy', constrained && 'InovuaReactDataGrid__resize-proxy--constrained');
      var offset = this.state.offset + (columnResizeHandleWidth - columnResizeProxyWidth) / 2;
      var proxyStyle = (_proxyStyle = {
        transform: "translate3d(".concat((rtl ? -1 : 1) * offset, "px,0px, 0px)")
      }, (0, _defineProperty2.default)(_proxyStyle, rtl ? 'right' : 'left', 0), (0, _defineProperty2.default)(_proxyStyle, rtl ? 'left' : 'right', 'unset'), (0, _defineProperty2.default)(_proxyStyle, "width", columnResizeProxyWidth), (0, _defineProperty2.default)(_proxyStyle, "top", this.state.active ? this.state.offsetTop || 0 : 0), (0, _defineProperty2.default)(_proxyStyle, "bottom", 0), (0, _defineProperty2.default)(_proxyStyle, "height", 'initial'), _proxyStyle);
      if (this.props.resizeProxyStyle) {
        proxyStyle = Object.assign({}, this.props.resizeProxyStyle, proxyStyle);
      }
      return _react.default.createElement("div", {
        style: style,
        className: className
      }, _react.default.createElement("div", {
        className: proxyClassName,
        style: proxyStyle
      }));
    }
  }]);
  return ResizeOverlay;
}(_react.default.Component);
exports["default"] = ResizeOverlay;
ResizeOverlay.propTypes = {
  resizeProxyStyle: _propTypes.default.shape({})
};

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _region = _interopRequireDefault(__webpack_require__(/*! ../../packages/region */ "./node_modules/@inovua/reactdatagrid-community/packages/region/index.js"));
var _ResizeOverlay = _interopRequireDefault(__webpack_require__(/*! ./ResizeOverlay */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/ResizeOverlay.js"));
var _setupColumnResize = _interopRequireDefault(__webpack_require__(/*! ./setupColumnResize */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/setupColumnResize.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../packages/join */ "./node_modules/@inovua/reactdatagrid-community/packages/join/index.js"));
var _FakeFlex = _interopRequireDefault(__webpack_require__(/*! ../../FakeFlex */ "./node_modules/@inovua/reactdatagrid-community/FakeFlex.js"));
var _HeaderLayout = _interopRequireDefault(__webpack_require__(/*! ./HeaderLayout */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/index.js"));
var _Content = _interopRequireDefault(__webpack_require__(/*! ./Content */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/index.js"));
var _context = __webpack_require__(/*! ../../context */ "./node_modules/@inovua/reactdatagrid-community/context.js");
var _isMobile = _interopRequireDefault(__webpack_require__(/*! ../../packages/isMobile */ "./node_modules/@inovua/reactdatagrid-community/packages/isMobile/index.js"));
var _getGlobal = __webpack_require__(/*! ../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var globalObject = (0, _getGlobal.getGlobal)();
var height100 = {
  height: '100%'
};
var InovuaDataGridColumnLayout = function (_React$Component) {
  (0, _inherits2.default)(InovuaDataGridColumnLayout, _React$Component);
  var _super = _createSuper(InovuaDataGridColumnLayout);
  function InovuaDataGridColumnLayout(props) {
    var _this;
    (0, _classCallCheck2.default)(this, InovuaDataGridColumnLayout);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "scrollTop", 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "lastComputedProps", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "headerLayout", null);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getDOMNode", function () {
      return _this.columnLayoutRef.current;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderScrollingTopRegion", function () {
      return null;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderScrollingBottomRegion", function () {
      return null;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getContentRows", function () {
      return _this.content.getRows();
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getScrollTop", function () {
      return _this.scrollTop || 0;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderHeaderLayout", function (computedProps) {
      return _react.default.createElement(_HeaderLayout.default, _objectSpread(_objectSpread({}, computedProps), {}, {
        onResizeMouseDown: _this.onResizeMouseDown.bind((0, _assertThisInitialized2.default)(_this), computedProps),
        onResizeTouchStart: _this.onResizeTouchStart.bind((0, _assertThisInitialized2.default)(_this), computedProps),
        onFilterValueChange: computedProps.computedOnColumnFilterValueChange,
        ref: _this.refHeaderLayout,
        getScrollLeftMax: _this.getScrollLeftMax,
        setScrollLeft: _this.setScrollLeft
      }));
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderContent", function (computedProps) {
      var groupBy = computedProps.groupBy;
      var groupByValue = groupBy && groupBy.length ? groupBy : null;
      return _react.default.createElement(_Content.default, _objectSpread(_objectSpread({
        key: "content"
      }, computedProps), {}, {
        getScrollLeftMax: _this.getScrollLeftMax,
        groupBy: groupByValue,
        before: _this.renderLockedStartRows(computedProps),
        after: _this.renderLockedEndRows(computedProps),
        ref: _this.refContent,
        columns: computedProps.visibleColumns,
        minWidth: computedProps.minWidth,
        maxWidth: computedProps.maxWidth,
        onDragRowMouseDown: _this.onDragRowMouseDownHandle,
        onContainerScrollHorizontal: _this.onContainerScrollHorizontal.bind((0, _assertThisInitialized2.default)(_this), computedProps),
        onContainerScrollVertical: _this.onContainerScrollVertical.bind((0, _assertThisInitialized2.default)(_this), computedProps),
        onColumnRenderStartIndexChange: _this.onColumnRenderStartIndexChange
      }));
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onDragRowMouseDownHandle", function (ev, index, cellNode) {});
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderLockedEndRows", function (computedProps) {
      return null;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderLockedStartRows", function (computedProps) {
      return null;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderLockedRows", function (rows, position, computedProps) {
      return null;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderResizeOverlay", function (computedProps) {
      return _react.default.createElement(_ResizeOverlay.default, {
        resizeProxyStyle: computedProps.resizeProxyStyle,
        columnResizeProxyWidth: computedProps.columnResizeProxyWidth,
        columnResizeHandleWidth: computedProps.columnResizeHandleWidth,
        rtl: computedProps.rtl,
        ref: _this.refResizeOverlay
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onColumnRenderStartIndexChange", function (columnRenderStartIndex) {
      if (_this.headerLayout) {
        _this.headerLayout.setColumnRenderStartIndex(columnRenderStartIndex);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onContainerScrollVertical", function (computedProps, scrollTop) {
      _this.scrollTop = scrollTop;
      var computedLockedRows = computedProps.computedLockedRows,
        rowHeight = computedProps.rowHeight,
        stickyHeaders = computedProps.stickyHeaders,
        groupBy = computedProps.groupBy;
      if (rowHeight && stickyHeaders && groupBy && groupBy.length) {
        _this.updateStickyHeader(scrollTop);
      }
      if (computedLockedRows && computedLockedRows.length) {
        _this.updateLockedRows(scrollTop);
      }
      if (computedProps.onScroll) {
        computedProps.onScroll();
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onContainerScrollHorizontal", function (computedProps, scrollLeft, scrollLeftMax) {
      _this.scrollLeft = scrollLeft;
      if (_this.headerLayout) {
        _this.headerLayout.onContainerScrollHorizontal(scrollLeft, scrollLeftMax);
      }
      if (computedProps.onScroll) {
        computedProps.onScroll();
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getScrollLeft", function () {
      return _this.scrollLeft || 0;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getScrollLeftMax", function () {
      var vl = _this.getVirtualList();
      if (!vl) {
        return 0;
      }
      return vl.scrollContainer.scrollLeftMax;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getScrollTopMax", function () {
      var vl = _this.getVirtualList();
      if (!vl) {
        return;
      }
      return vl.scrollContainer.scrollTopMax;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setScrollLeft", function (scrollLeft) {
      var vl = _this.getVirtualList();
      if (!vl) {
        return;
      }
      vl.scrollLeft = scrollLeft;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setScrollTop", function (scrollTop) {
      var vl = _this.getVirtualList();
      if (!vl) {
        return;
      }
      vl.scrollTop = scrollTop;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getVirtualList", function () {
      return _this.content ? _this.content.getVirtualList() : null;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "startEdit", function (args) {
      return _this.content.startEdit(args);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "cancelEdit", function (args) {
      return _this.content.cancelEdit(args);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "completeEdit", function (args) {
      return _this.content.completeEdit(args);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getRenderRange", function () {
      return _this.content.getRenderRange();
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getHeaderLayout", function () {
      return _this.headerLayout;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getHeaderCells", function () {
      return _this.getHeaderLayout().getHeaderCells();
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getHeader", function () {
      return _this.headerLayout.getHeader();
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getGroupToolbar", function () {
      return _this.headerLayout.getGroupToolbar();
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getDOMColumnHeaderAt", function (index) {
      return _this.headerLayout.getCellDOMNodeAt(index);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onResizeMouseDown", function () {
      var _this2;
      if (_isMobile.default) {
        return;
      }
      (_this2 = _this).onResizeDownAction.apply(_this2, arguments);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onResizeDownAction", function (computedProps, config, _ref) {
      var colHeaderNode = _ref.colHeaderNode,
        event = _ref.event,
        groupColumns = _ref.groupColumns;
      var visibleIndex = config.computedVisibleIndex;
      _this.setupColumnResize(computedProps, {
        groupColumns: groupColumns,
        visibleIndex: visibleIndex !== undefined ? visibleIndex : config.visibleIndex,
        colHeaderNode: colHeaderNode,
        headerNode: _this.getHeader().getDOMNode(),
        event: event
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onResizeTouchStart", function () {
      var _this3;
      (_this3 = _this).onResizeDownAction.apply(_this3, arguments);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setupColumnResize", function (computedProps, _ref2) {
      var visibleIndex = _ref2.visibleIndex,
        groupColumns = _ref2.groupColumns,
        colHeaderNode = _ref2.colHeaderNode,
        event = _ref2.event;
      event.stopPropagation();
      if (event.ctrlKey) {
        return;
      }
      var rtl = computedProps.rtl;
      var region = _region.default.from(event.currentTarget.firstChild || event.currentTarget);
      var columns = computedProps.visibleColumns;
      var firstFlexIndex = columns.reduce(function (index, col, i) {
        if (col.flex != null && index == -1) {
          return i;
        }
        return index;
      }, -1);
      var index = visibleIndex;
      var headerRegion = _region.default.from(_this.getHeaderLayout().headerDomNode.current);
      var constrainTo = _region.default.from(headerRegion.get());
      constrainTo.set((0, _defineProperty2.default)({}, _this.props.rtl ? 'left' : 'right', (_this.props.rtl ? -1 : 1) * (globalObject.screen ? globalObject.screen.width * 3 : _region.default.from(document.documentElement).getRight() * 2)));
      var column = columns[index];
      var columnRegion = _region.default.from(colHeaderNode);
      var extraOffset = column.lastInGroup ? region.width : region.width / 2;
      var maxPos;
      if (groupColumns) {
        var columnsMap = computedProps.columnsMap;
        var groupCols = groupColumns.map(function (colId) {
          return columnsMap[colId];
        });
        var firstColumnRegion = _region.default.from(_this.getDOMColumnHeaderAt(groupCols[0].computedVisibleIndex));
        var minWidth = groupCols.reduce(function (acc, col) {
          return acc + col.computedMinWidth;
        }, 0);
        var maxWidth = groupCols.reduce(function (acc, col) {
          return acc + (col.computedMaxWidth || Infinity);
        }, 0);
        var pos = rtl ? firstColumnRegion.right - minWidth - extraOffset : minWidth + firstColumnRegion.left - extraOffset;
        constrainTo.set((0, _defineProperty2.default)({}, rtl ? 'right' : 'left', pos));
        if (maxWidth !== Infinity) {
          maxPos = rtl ? firstColumnRegion.right - maxWidth : firstColumnRegion.left + maxWidth + extraOffset;
        }
      } else {
        var _minWidth = column.computedMinWidth;
        if (_this.props.rtl) {
          var right = columnRegion.right - _minWidth - extraOffset;
          constrainTo.set({
            right: right
          });
          if (column.computedMaxWidth) {
            maxPos = columnRegion.right - column.computedMaxWidth;
          }
        } else {
          var left = _minWidth + columnRegion.left - extraOffset;
          constrainTo.set({
            left: left
          });
          if (column.computedMaxWidth) {
            maxPos = columnRegion.left + column.computedMaxWidth;
          }
        }
      }
      var shareSpace = computedProps.shareSpaceOnResize;
      var nextCol = columns[index + 1];
      var nextColHeaderNode = _this.getDOMColumnHeaderAt(index + 1);
      var nextColumnRegion = nextCol ? _region.default.from(nextColHeaderNode) : null;
      if (column && column.computedResizable === false || nextCol && nextCol.computedResizable === false) {
        shareSpace = false;
      }
      if (shareSpace && nextColHeaderNode) {
        if (_this.props.rtl) {
          var nextColLeft = nextColumnRegion.left + nextCol.computedMinWidth;
          if (!maxPos || nextColLeft > maxPos) {
            maxPos = nextColLeft;
          }
        } else {
          var nextColRight = nextColumnRegion.right - nextCol.computedMinWidth;
          if (!maxPos || nextColRight < maxPos) {
            maxPos = nextColRight;
          }
        }
      }
      if (maxPos != null) {
        constrainTo.set((0, _defineProperty2.default)({}, _this.props.rtl ? 'left' : 'right', maxPos));
      }
      if (_this.props.rtl) {
        if (nextCol) {
          constrainTo.set({
            left: constrainTo.left - computedProps.columnResizeHandleWidth / 2
          });
        }
        constrainTo.set({
          right: constrainTo.right + computedProps.columnResizeHandleWidth
        });
      }
      _this.props.coverHandleRef.current.setCursor('col-resize');
      (0, _setupColumnResize.default)({
        headerRegion: headerRegion,
        constrainTo: constrainTo,
        region: region,
        columns: columns,
        index: index,
        rtl: _this.props.rtl,
        extraOffset: 0,
        firstFlexIndex: firstFlexIndex,
        groupColumns: groupColumns,
        shareSpaceOnResize: computedProps.shareSpaceOnResize,
        shareSpace: shareSpace,
        nextColumnSize: nextColumnRegion ? nextColumnRegion.width : null,
        initialSize: columnRegion.width
      }, {
        onResizeDragInit: _this.onResizeDragInit.bind((0, _assertThisInitialized2.default)(_this), computedProps),
        onResizeDrag: _this.onResizeDrag.bind((0, _assertThisInitialized2.default)(_this), computedProps),
        onResizeDrop: _this.onResizeDrop.bind((0, _assertThisInitialized2.default)(_this), computedProps)
      }, event);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onResizeDragInit", function (computedProps, _ref3) {
      var offset = _ref3.offset,
        constrained = _ref3.constrained;
      var offsetTop = _this.getHeaderLayout().getHeader().domRef.current.offsetTop;
      _this.props.coverHandleRef.current.setActive(true);
      _this.resizeOverlay.setOffset(offset).setActive(true, {
        offsetTop: offsetTop
      }).setConstrained(constrained);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onResizeDrop", function (computedProps, _ref4) {
      var index = _ref4.index,
        offset = _ref4.offset,
        diff = _ref4.diff,
        groupColumns = _ref4.groupColumns,
        constrained = _ref4.constrained,
        size = _ref4.size,
        nextColumnSize = _ref4.nextColumnSize,
        firstFlexIndex = _ref4.firstFlexIndex,
        shareSpace = _ref4.shareSpace;
      _this.props.coverHandleRef.current.setActive(false);
      if (_this.resizeOverlay) {
        _this.resizeOverlay.setOffset(offset).setConstrained(constrained).setActive(false);
      }
      if (computedProps.virtualizeColumns) {
        setTimeout(function () {
          _this.headerLayout.header.updateColumns();
        }, 10);
      }
      computedProps.computedOnColumnResize({
        groupColumns: groupColumns,
        diff: diff,
        index: index,
        size: size,
        nextColumnSize: nextColumnSize,
        firstFlexIndex: firstFlexIndex,
        shareSpace: shareSpace
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onResizeDrag", function (computedProps, _ref5) {
      var offset = _ref5.offset,
        constrained = _ref5.constrained;
      if (_this.resizeOverlay) {
        _this.resizeOverlay.setOffset(offset).setConstrained(constrained);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "isRowFullyVisible", function (index) {
      return _this.content.isRowFullyVisible(index);
    });
    _this.refResizeOverlay = function (r) {
      _this.resizeOverlay = r;
    };
    _this.refHeaderLayout = function (layout) {
      _this.headerLayout = layout;
    };
    _this.columnLayoutRef = (0, _react.createRef)();
    _this.refContent = function (c) {
      _this.content = c;
    };
    return _this;
  }
  (0, _createClass2.default)(InovuaDataGridColumnLayout, [{
    key: "tryStartEdit",
    value: function tryStartEdit(args) {
      return this.content.tryStartEdit(args);
    }
  }, {
    key: "render",
    value: function render() {
      var _this4 = this;
      var className = (0, _join.default)('InovuaReactDataGrid__column-layout');
      return _react.default.createElement(_context.Consumer, null, function (computedProps) {
        var flexIndex = 1;
        var useNativeFlex = computedProps.useNativeFlex;
        _this4.lastComputedProps = computedProps;
        return _react.default.createElement("div", {
          ref: _this4.columnLayoutRef,
          className: className,
          style: _objectSpread(_objectSpread({}, height100), _this4.props.style)
        }, _react.default.createElement(_FakeFlex.default, {
          useNativeFlex: useNativeFlex,
          flexIndex: flexIndex,
          getNode: _this4.getDOMNode
        }, _this4.renderHeaderLayout(computedProps), _this4.renderContent(computedProps)), computedProps && computedProps.rowReorderAutoScroll && _this4.renderScrollingTopRegion(), _this4.renderReorderRowProxy(computedProps), _this4.renderResizeOverlay(computedProps), _this4.renderDragRowArrow(computedProps), computedProps && computedProps.rowReorderAutoScroll && _this4.renderScrollingBottomRegion());
      });
    }
  }, {
    key: "renderReorderRowProxy",
    value: function renderReorderRowProxy() {
      return null;
    }
  }, {
    key: "renderDragRowArrow",
    value: function renderDragRowArrow() {
      return null;
    }
  }, {
    key: "updateLockedRows",
    value: function updateLockedRows(scrollTop) {
      return;
    }
  }, {
    key: "updateStickyHeader",
    value: function updateStickyHeader() {}
  }]);
  return InovuaDataGridColumnLayout;
}(_react.default.Component);
exports["default"] = InovuaDataGridColumnLayout;
InovuaDataGridColumnLayout.defaultProps = {
  reorderProxySize: 3
};
InovuaDataGridColumnLayout.propTypes = {
  minRowWidth: _propTypes.default.number,
  onMount: _propTypes.default.func,
  onUnmount: _propTypes.default.func,
  onRowMouseEnter: _propTypes.default.func,
  onRowMouseLeave: _propTypes.default.func,
  reorderProxySize: _propTypes.default.number.isRequired
};

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/setupColumnResize.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/setupColumnResize.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = _default;
var _dragHelper = _interopRequireDefault(__webpack_require__(/*! ../../packages/drag-helper */ "./node_modules/@inovua/reactdatagrid-community/packages/drag-helper/index.js"));
var emptyFn = function emptyFn() {};
function _default(_ref, _ref2, event) {
  var region = _ref.region,
    headerRegion = _ref.headerRegion,
    constrainTo = _ref.constrainTo,
    columnHeaderNodes = _ref.columnHeaderNodes,
    columns = _ref.columns,
    rtl = _ref.rtl,
    index = _ref.index,
    firstFlexIndex = _ref.firstFlexIndex,
    shareSpace = _ref.shareSpace,
    shareSpaceOnResize = _ref.shareSpaceOnResize,
    initialSize = _ref.initialSize,
    nextColumnSize = _ref.nextColumnSize,
    extraOffset = _ref.extraOffset,
    groupColumns = _ref.groupColumns;
  var _ref2$onResizeDragIni = _ref2.onResizeDragInit,
    onResizeDragInit = _ref2$onResizeDragIni === void 0 ? emptyFn : _ref2$onResizeDragIni,
    _ref2$onResizeDragSta = _ref2.onResizeDragStart,
    onResizeDragStart = _ref2$onResizeDragSta === void 0 ? emptyFn : _ref2$onResizeDragSta,
    _ref2$onResizeDrag = _ref2.onResizeDrag,
    onResizeDrag = _ref2$onResizeDrag === void 0 ? emptyFn : _ref2$onResizeDrag,
    _ref2$onResizeDrop = _ref2.onResizeDrop,
    onResizeDrop = _ref2$onResizeDrop === void 0 ? emptyFn : _ref2$onResizeDrop;
  var column = columns[index];
  var nextColumn = columns[index + 1];
  var initialPosition = rtl ? headerRegion.right - region.right : region.left - headerRegion.left;
  var isContrained = function isContrained(dragRegion) {
    var constrained = dragRegion.left <= constrainTo.left || dragRegion.right >= constrainTo.right;
    return constrained;
  };
  (0, _dragHelper.default)(event, {
    constrainTo: constrainTo,
    region: region,
    onDragInit: onResizeDragInit.bind(this, {
      offset: initialPosition,
      region: region,
      initialPosition: initialPosition,
      constrained: isContrained(region)
    }),
    onDragStart: function onDragStart(e, config) {
      var constrained = isContrained(config.dragRegion);
      onResizeDragStart({
        initialPosition: initialPosition,
        offset: initialPosition,
        constrained: constrained,
        resizing: true,
        region: region,
        column: column
      });
    },
    onDrag: function onDrag(e, config) {
      var diff = config.diff.left;
      var offset = initialPosition + (rtl ? -1 : 1) * diff;
      var constrained = isContrained(config.dragRegion);
      e.preventDefault();
      onResizeDrag({
        constrained: constrained,
        initialPosition: initialPosition,
        diff: diff,
        offset: offset,
        region: region,
        column: column
      });
    },
    onDrop: function onDrop(e, config) {
      var diff = (rtl ? -1 : 1) * Math.round(config.diff.left);
      var offset = initialPosition + diff;
      var constrained = isContrained(config.dragRegion);
      var size = initialSize + diff;
      var doShare = shareSpace;
      var nextColSize;
      if (doShare) {
        nextColSize = nextColumnSize - diff;
      }
      onResizeDrop({
        index: index,
        constrained: constrained,
        initialPosition: initialPosition,
        region: region,
        diff: diff,
        offset: offset,
        size: size,
        shareSpaceOnResize: shareSpaceOnResize,
        groupColumns: groupColumns,
        initialSize: initialSize,
        firstFlexIndex: firstFlexIndex,
        shareSpace: doShare,
        column: column,
        nextColumn: nextColumn,
        nextColumnSize: nextColSize
      });
    }
  });
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/Layout/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/Layout/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _reactDom = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _PaginationToolbar = _interopRequireDefault(__webpack_require__(/*! ../packages/PaginationToolbar */ "./node_modules/@inovua/reactdatagrid-community/packages/PaginationToolbar/index.js"));
var _shouldComponentUpdate2 = _interopRequireDefault(__webpack_require__(/*! ../packages/shouldComponentUpdate */ "./node_modules/@inovua/reactdatagrid-community/packages/shouldComponentUpdate/index.js"));
var _ColumnLayout = _interopRequireDefault(__webpack_require__(/*! ./ColumnLayout */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/index.js"));
var _FakeFlex = _interopRequireDefault(__webpack_require__(/*! ../FakeFlex */ "./node_modules/@inovua/reactdatagrid-community/FakeFlex.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../packages/join */ "./node_modules/@inovua/reactdatagrid-community/packages/join/index.js"));
var _context = __webpack_require__(/*! ../context */ "./node_modules/@inovua/reactdatagrid-community/context.js");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var stopPropagation = function stopPropagation(e) {
  return e.stopPropagation();
};
var InovuaDataGridLayout = function (_Component) {
  (0, _inherits2.default)(InovuaDataGridLayout, _Component);
  var _super = _createSuper(InovuaDataGridLayout);
  function InovuaDataGridLayout(props) {
    var _this;
    (0, _classCallCheck2.default)(this, InovuaDataGridLayout);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "ref", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "domNode", null);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "refColumnLayout", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "columnLayout", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "dragHeader", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getDOMNode", function () {
      return _this.domNode;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderPageList", function (list) {
      if (!_reactDom.createPortal) {
        return list;
      }
      return _this.props.renderInPortal(list);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onRowMouseEnter", function (event, rowProps) {
      _this.props.onRowMouseEnter && _this.props.onRowMouseEnter(event, rowProps);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onRowMouseLeave", function (event, rowProps) {
      _this.props.onRowMouseLeave && _this.props.onRowMouseLeave(event, rowProps);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getVirtualList", function () {
      return _this.columnLayout && _this.columnLayout.getVirtualList();
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getRenderRange", function () {
      return _this.columnLayout.getRenderRange();
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "isRowFullyVisible", function (index) {
      return _this.columnLayout.isRowFullyVisible(index);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getScrollLeft", function () {
      return _this.columnLayout ? _this.columnLayout.scrollLeft || 0 : 0;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getColumnLayout", function () {
      return _this.columnLayout;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setScrollLeft", function (scrollLeft) {
      if (_this.columnLayout) {
        _this.columnLayout.setScrollLeft(scrollLeft);
        if (_this.dragHeader) {
          _this.dragHeader.setScrollLeft(scrollLeft);
        }
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getScrollTop", function () {
      return _this.columnLayout ? _this.columnLayout.scrollTop || 0 : 0;
    });
    _this.ref = function (domNode) {
      _this.domNode = domNode;
    };
    _this.refColumnLayout = function (layout) {
      _this.columnLayout = layout;
    };
    return _this;
  }
  (0, _createClass2.default)(InovuaDataGridLayout, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps, nextState) {
      return (0, _shouldComponentUpdate2.default)(this, nextProps, nextState);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;
      var Footer = this.props.Footer;
      return _react.default.createElement(_context.Consumer, null, function (computedProps) {
        var ColumnLayoutCmp = computedProps && computedProps.ColumnLayout || _ColumnLayout.default;
        return _react.default.createElement("div", {
          className: 'InovuaReactDataGrid__body',
          ref: _this2.ref
        }, _react.default.createElement(_FakeFlex.default, {
          flexIndex: 0,
          getNode: _this2.getDOMNode,
          useNativeFlex: computedProps.useNativeFlex
        }, _react.default.createElement(ColumnLayoutCmp, {
          key: "collayout",
          ref: _this2.refColumnLayout,
          rtl: computedProps.rtl,
          coverHandleRef: computedProps.coverHandleRef
        }), _this2.renderPaginationToolbar(computedProps), computedProps.computedFooterRows && Footer ? _react.default.createElement(Footer, {
          key: "footer",
          rows: computedProps.computedFooterRows
        }) : null));
      });
    }
  }, {
    key: "renderPaginationToolbar",
    value: function renderPaginationToolbar(computedProps) {
      var pagination = computedProps.pagination,
        paginationProps = computedProps.paginationProps,
        i18n = computedProps.i18n,
        theme = computedProps.theme,
        pageSizes = computedProps.pageSizes;
      if (!pagination) {
        return null;
      }
      if (!paginationProps || paginationProps.livePagination) {
        return null;
      }
      var result;
      if (computedProps.renderPaginationToolbar) {
        result = computedProps.renderPaginationToolbar(paginationProps);
      }
      var paginationToolbarProps = _objectSpread(_objectSpread({
        perPageText: i18n('perPageText'),
        pageText: i18n('pageText'),
        ofText: i18n('ofText'),
        showingText: i18n('showingText'),
        rtl: computedProps.rtl
      }, paginationProps), {}, {
        pageSizes: pageSizes,
        onClick: stopPropagation,
        theme: theme,
        className: (0, _join.default)(paginationProps.className, this.props.useNativeFlex ? 'InovuaReactDataGrid-modifier--relative' : '')
      });
      paginationToolbarProps.bordered = false;
      delete paginationToolbarProps.livePagination;
      if (result === undefined) {
        result = _react.default.createElement(_PaginationToolbar.default, _objectSpread(_objectSpread({
          key: "paginationtoolbar"
        }, paginationToolbarProps), {}, {
          constrainTo: this.props.constrainTo,
          renderPageList: this.renderPageList
        }));
      }
      return result;
    }
  }]);
  return InovuaDataGridLayout;
}(_react.Component);
(0, _defineProperty2.default)(InovuaDataGridLayout, "defaultProps", void 0);
(0, _defineProperty2.default)(InovuaDataGridLayout, "propTypes", void 0);
InovuaDataGridLayout.defaultProps = {
  defaultScrollTop: 0,
  onRowMouseEnter: function onRowMouseEnter() {},
  onRowMouseLeave: function onRowMouseLeave() {},
  rowPlaceholderDelay: 300
};
InovuaDataGridLayout.propTypes = {
  i18n: _propTypes.default.func,
  shouldComponentUpdate: _propTypes.default.func,
  constrainTo: _propTypes.default.any,
  Footer: _propTypes.default.any,
  loading: _propTypes.default.bool,
  onScroll: _propTypes.default.func,
  onRowMouseEnter: _propTypes.default.func,
  onRowMouseLeave: _propTypes.default.func
};
var _default = InovuaDataGridLayout;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/LoadMask.js":
/*!******************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/LoadMask.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _LoadMask = _interopRequireDefault(__webpack_require__(/*! ./packages/LoadMask */ "./node_modules/@inovua/reactdatagrid-community/packages/LoadMask/index.js"));
var _reactCleanProps = _interopRequireDefault(__webpack_require__(/*! ./packages/react-clean-props */ "./node_modules/@inovua/reactdatagrid-community/packages/react-clean-props/index.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ./packages/join */ "./node_modules/@inovua/reactdatagrid-community/packages/join/index.js"));
var _renderEmptyContent = _interopRequireDefault(__webpack_require__(/*! ./renderEmptyContent */ "./node_modules/@inovua/reactdatagrid-community/renderEmptyContent.js"));
var _getGlobal = __webpack_require__(/*! ./getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var globalObject = (0, _getGlobal.getGlobal)();
var stop = function stop(e) {
  if (e.cancelable === false) {
    return;
  }
  e.preventDefault();
};
var DEFAULT_CLASSNAME = 'InovuaReactDataGrid__load-mask';
var DataGridLoadMask = function (_React$Component) {
  (0, _inherits2.default)(DataGridLoadMask, _React$Component);
  var _super = _createSuper(DataGridLoadMask);
  function DataGridLoadMask(props) {
    var _this;
    (0, _classCallCheck2.default)(this, DataGridLoadMask);
    _this = _super.call(this, props);
    _this.visible = props.visible;
    _this.maskRef = (0, _react.createRef)();
    return _this;
  }
  (0, _createClass2.default)(DataGridLoadMask, [{
    key: "setVisible",
    value: function setVisible(visible) {
      var _this2 = this;
      if (this.props.livePagination) {
        this.visible = visible;
        var fn = function fn() {
          var node = _this2.maskRef.current;
          if (!node || !_this2.scroller) {
            return;
          }
          node.style.visibility = visible ? 'visible' : 'hidden';
          if (visible === false) {
            _this2.scroller.scrollTop = 0;
          }
        };
        if (!visible) {
          globalObject.requestAnimationFrame(fn);
        } else {
          fn();
        }
      }
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      this.setVisible(this.props.visible);
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.props;
      var livePagination = props.livePagination,
        loadingText = props.loadingText,
        visible = props.visible;
      var style = props.style;
      var cleanProps = (0, _reactCleanProps.default)(props, DataGridLoadMask.propTypes);
      var className = (0, _join.default)(DEFAULT_CLASSNAME, props.className, livePagination && "".concat(DEFAULT_CLASSNAME, "--live-pagination"));
      return _react.default.createElement(_LoadMask.default, _objectSpread(_objectSpread({}, cleanProps), {}, {
        ref: this.maskRef,
        style: style,
        visible: visible,
        className: className,
        onWheel: livePagination ? stop : null
      }), (0, _renderEmptyContent.default)(loadingText, 'loading'));
    }
  }]);
  return DataGridLoadMask;
}(_react.default.Component);
exports["default"] = DataGridLoadMask;
DataGridLoadMask.defaultProps = {
  livePagination: false,
  visible: false
};
DataGridLoadMask.propTypes = {
  visible: _propTypes.default.bool,
  loadingText: _propTypes.default.node,
  livePagination: _propTypes.default.bool
};

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/SelectFilter/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/SelectFilter/index.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _debounce = _interopRequireDefault(__webpack_require__(/*! ../packages/debounce */ "./node_modules/@inovua/reactdatagrid-community/packages/debounce/index.js"));
var _ComboBox = _interopRequireDefault(__webpack_require__(/*! ../packages/ComboBox */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/index.js"));
var _src = _interopRequireDefault(__webpack_require__(/*! ../packages/react-scroll-container-pro/src */ "./node_modules/@inovua/reactdatagrid-community/packages/react-scroll-container-pro/src/index.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var renderScroller = function renderScroller(props) {
  delete props.tabIndex;
  return _react.default.createElement("div", _objectSpread(_objectSpread({}, props), {}, {
    className: "".concat(props.className, " InovuaReactDataGrid__column-header__filter--select__scroller")
  }));
};
var renderListScroller = function renderListScroller(props) {
  return _react.default.createElement(_src.default, _objectSpread(_objectSpread({}, props), {}, {
    showScrollbars: true,
    applyCSSContainOnScroll: false,
    renderScroller: renderScroller,
    viewStyle: {
      width: '100%'
    }
  }));
};
var stopPropagation = function stopPropagation(e) {
  return e.stopPropagation();
};
var defaultProps = {
  nativeScroll: false
};
var SelectFilter = function (_React$Component) {
  (0, _inherits2.default)(SelectFilter, _React$Component);
  var _super = _createSuper(SelectFilter);
  function SelectFilter(props) {
    var _this;
    (0, _classCallCheck2.default)(this, SelectFilter);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "selectRef", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getInputRef", function () {
      var _this$selectRef;
      return (_this$selectRef = _this.selectRef) === null || _this$selectRef === void 0 ? void 0 : _this$selectRef.current;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "componentDidUpdate", function (_ref) {
      var value = _ref.filterValue.value;
      if (value && String(value).localeCompare(String(_this.props.filterValue && _this.props.filterValue.value))) {
        if (_this.props.filterValue) {
          _this.setValue(_this.props.filterValue.value);
        }
      }
    });
    var filterValue = props.filterValue;
    _this.state = {
      value: filterValue ? filterValue.value || null : null
    };
    _this.selectRef = (0, _react.createRef)();
    _this.onChange = _this.onChange.bind((0, _assertThisInitialized2.default)(_this));
    _this.onValueChange = _this.onValueChange.bind((0, _assertThisInitialized2.default)(_this));
    if (props.filterDelay && props.filterDelay >= 1) {
      _this.onValueChange = (0, _debounce.default)(_this.onValueChange, props.filterDelay);
    }
    return _this;
  }
  (0, _createClass2.default)(SelectFilter, [{
    key: "onChange",
    value: function onChange(value) {
      this.onValueChange(value);
      this.setValue(value);
    }
  }, {
    key: "setValue",
    value: function setValue(value) {
      this.setState({
        value: value
      });
    }
  }, {
    key: "onValueChange",
    value: function onValueChange(value) {
      this.props.onChange && this.props.onChange(_objectSpread(_objectSpread({}, this.props.filterValue), {}, {
        value: value
      }));
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
        filterValue = _this$props.filterValue,
        readOnly = _this$props.readOnly,
        disabled = _this$props.disabled,
        style = _this$props.style,
        nativeScroll = _this$props.nativeScroll,
        filterEditorProps = _this$props.filterEditorProps,
        rtl = _this$props.rtl,
        theme = _this$props.theme;
      var comboProps = {
        readOnly: readOnly,
        disabled: disabled,
        theme: theme,
        rtl: rtl,
        style: _objectSpread({
          minWidth: 0
        }, style)
      };
      if (filterValue) {
        comboProps.value = this.state.value;
      }
      var finalEditorProps = typeof filterEditorProps === 'function' ? filterEditorProps(this.props) : filterEditorProps;
      var finalProps = _objectSpread(_objectSpread({
        collapseOnSelect: true,
        renderListScroller: nativeScroll ? undefined : renderListScroller,
        dataSource: filterValue && filterValue.dataSource ? filterValue.dataSource : []
      }, finalEditorProps), {}, {
        onChange: this.onChange,
        ref: this.selectRef,
        className: 'InovuaReactDataGrid__column-header__filter InovuaReactDataGrid__column-header__filter--select'
      }, comboProps);
      var onKeyDown = finalProps.onKeyDown;
      finalProps.onKeyDown = function (e) {
        if (onKeyDown) {
          onKeyDown(e);
        }
        stopPropagation(e);
      };
      return this.props.render && this.props.render(_react.default.createElement(_ComboBox.default, _objectSpread({}, finalProps)));
    }
  }]);
  return SelectFilter;
}(_react.default.Component);
(0, _defineProperty2.default)(SelectFilter, "defaultProps", defaultProps);
var _default = SelectFilter;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/StringFilter/StringFilter.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/StringFilter/StringFilter.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _TextInput = _interopRequireDefault(__webpack_require__(/*! ../packages/TextInput */ "./node_modules/@inovua/reactdatagrid-community/packages/TextInput/index.js"));
var _debounce = _interopRequireDefault(__webpack_require__(/*! ../packages/debounce */ "./node_modules/@inovua/reactdatagrid-community/packages/debounce/index.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var StringFilter = function (_React$Component) {
  (0, _inherits2.default)(StringFilter, _React$Component);
  var _super = _createSuper(StringFilter);
  function StringFilter(props) {
    var _this;
    (0, _classCallCheck2.default)(this, StringFilter);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "input", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "refInput", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "componentDidUpdate", function (_ref) {
      var value = _ref.filterValue.value;
      if (String(value).localeCompare(String(_this.props.filterValue && _this.props.filterValue.value))) {
        if (_this.props.filterValue) {
          _this.onChange(_this.props.filterValue.value);
        }
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getInputRef", function () {
      return _this.input;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderClearIcon", function (_ref2) {
      var width = _ref2.width,
        height = _ref2.height;
      return _react.default.createElement("svg", {
        style: {
          width: width,
          height: height
        },
        viewBox: "0 0 10 10"
      }, _react.default.createElement("path", {
        fill: "none",
        fillRule: "evenodd",
        strokeLinecap: "round",
        strokeWidth: "1.33",
        d: "M1 1l8 8m0-8L1 9"
      }));
    });
    _this.refInput = function (i) {
      var _props$filterEditorPr;
      var inputRef = props.inputRef || ((_props$filterEditorPr = props.filterEditorProps) === null || _props$filterEditorPr === void 0 ? void 0 : _props$filterEditorPr.inputRef);
      if (inputRef) {
        if (typeof inputRef === 'function') {
          inputRef(i);
        } else {
          inputRef.current = i;
        }
      }
      _this.input = i;
    };
    var filterValue = props.filterValue;
    _this.state = {
      value: filterValue ? filterValue.value || '' : ''
    };
    _this.onChange = _this.onChange.bind((0, _assertThisInitialized2.default)(_this));
    _this.onValueChange = _this.onValueChange.bind((0, _assertThisInitialized2.default)(_this));
    if (props.filterDelay && props.filterDelay >= 1) {
      _this.onValueChange = (0, _debounce.default)(_this.onValueChange, props.filterDelay, {
        leading: false,
        trailing: true
      });
    }
    return _this;
  }
  (0, _createClass2.default)(StringFilter, [{
    key: "onChange",
    value: function onChange(value) {
      this.onValueChange(value);
      this.setValue(value);
    }
  }, {
    key: "setValue",
    value: function setValue(value) {
      this.setState({
        value: value
      });
    }
  }, {
    key: "onValueChange",
    value: function onValueChange(value) {
      this.props.onChange && this.props.onChange(_objectSpread(_objectSpread({}, this.props.filterValue), {}, {
        value: value
      }));
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
        filterValue = _this$props.filterValue,
        readOnly = _this$props.readOnly,
        disabled = _this$props.disabled,
        style = _this$props.style,
        rtl = _this$props.rtl,
        theme = _this$props.theme,
        placeholder = _this$props.placeholder;
      var inputProps = {
        readOnly: readOnly,
        disabled: disabled,
        theme: theme,
        rtl: rtl,
        value: this.state.value,
        placeholder: placeholder,
        style: _objectSpread({
          minWidth: 0
        }, style)
      };
      var filterEditorProps;
      if (filterValue) {
        filterEditorProps = filterValue.filterEditorProps;
        inputProps.value = this.state.value;
      }
      return this.props.render && this.props.render(_react.default.createElement(_TextInput.default, _objectSpread(_objectSpread({}, filterEditorProps), {}, {
        type: "text",
        ref: this.refInput,
        onChange: this.onChange,
        renderClearIcon: this.renderClearIcon,
        className: "InovuaReactDataGrid__column-header__filter InovuaReactDataGrid__column-header__filter--string"
      }, inputProps)));
    }
  }]);
  return StringFilter;
}(_react.default.Component);
var _default = StringFilter;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/bemFactory.js":
/*!********************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/bemFactory.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = function _default(className) {
  return function (element, modifier) {
    var el = element ? "-".concat(element) : '';
    var mod = modifier ? "--".concat(modifier) : '';
    return "".concat(className).concat(el).concat(mod);
  };
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/common/ToggleIcon.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/common/ToggleIcon.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/objectWithoutProperties */ "./node_modules/@babel/runtime/helpers/objectWithoutProperties.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _excluded = ["onClick", "className", "expanded", "size"];
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function ToggleIcon(_ref) {
  var onClick = _ref.onClick,
    className = _ref.className,
    expanded = _ref.expanded,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? 17 : _ref$size,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  return _react.default.createElement("div", _objectSpread(_objectSpread({}, rest), {}, {
    className: className,
    onClick: onClick
  }), _react.default.createElement("svg", {
    height: size,
    width: size,
    viewBox: "0 0 24 24"
  }, expanded ? _react.default.createElement("path", {
    d: "M7.41,15.41L12,10.83L16.59,15.41L18,14L12,8L6,14L7.41,15.41Z"
  }) : _react.default.createElement("path", {
    d: "M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z"
  })));
}
var _default = ToggleIcon;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/common/assign.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/common/assign.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.assign = assign;
exports["default"] = void 0;
function assign(target) {
  if (target === null || target === undefined) {
    throw new TypeError('Object.assign cannot be called with null or undefined');
  }
  for (var _len = arguments.length, to = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    to[_key - 1] = arguments[_key];
  }
  to.forEach(function (toItem) {
    toItem = Object(toItem);
    Object.keys(toItem).forEach(function (key) {
      target[key] = toItem[key];
    });
  });
  return target;
}
var _default = typeof Object.assign === 'function' ? Object.assign : assign;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/common/clamp.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/common/clamp.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
function clamp(value, min, max) {
  if (isNaN(value)) {
    return value;
  }
  var minUndefined = typeof min === 'undefined';
  var maxUndefined = typeof max === 'undefined';
  if (minUndefined && maxUndefined) {
    return value;
  }
  if (minUndefined) {
    if (!maxUndefined) {
      return value > max ? max : value;
    }
  }
  if (maxUndefined) {
    if (!minUndefined) {
      return value < min ? min : value;
    }
  }
  if (min > max) {
    return clamp(value, max, min);
  }
  if (value < min) {
    return min;
  }
  if (value > max) {
    return max;
  }
  return value;
}
var _default = clamp;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/common/cleanProps.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/common/cleanProps.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
function cleanProps(props, propTypes) {
  if (!props || !propTypes) {
    return Object.assign({}, props);
  }
  var newProps = Object.keys(props).reduce(function (acc, propName) {
    if (!propTypes[propName]) {
      acc[propName] = props[propName];
    }
    return acc;
  }, {});
  return newProps;
}
var _default = cleanProps;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/common/containsNode.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/common/containsNode.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _getGlobal = __webpack_require__(/*! ../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
var globalObject = (0, _getGlobal.getGlobal)();
function containsNode(parent, child) {
  if (!parent || !child || !(parent instanceof Element) || !(child instanceof Element)) {
    return false;
  }
  if (!globalObject.document.body.contains(child)) {
    return false;
  }
  var result = true;
  if (parent !== child && !parent.contains(child)) {
    result = false;
  }
  return result;
}
var _default = containsNode;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/common/debounce.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/common/debounce.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
function debounce(func, wait) {
  var _this = this;
  var immediate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  var timeout;
  var args;
  var context;
  var timestamp;
  var result;
  var later = function later() {
    var last = Date.now() - timestamp;
    if (last < wait && last >= 0) {
      timeout = setTimeout(later, wait - last);
    } else {
      timeout = null;
      if (!immediate) {
        result = func.apply(context, args);
        if (!timeout) {
          context = null;
          args = null;
        }
      }
    }
  };
  return function () {
    var callNow = immediate && !timeout;
    context = _this;
    for (var _len = arguments.length, internalArgs = new Array(_len), _key = 0; _key < _len; _key++) {
      internalArgs[_key] = arguments[_key];
    }
    args = internalArgs;
    timestamp = Date.now();
    if (!timeout) {
      timeout = setTimeout(later, wait);
    }
    if (callNow) {
      result = func.apply(context, args);
      context = args = null;
    }
    return result;
  };
}
var _default = debounce;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/common/eventNames.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/common/eventNames.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _isMobile = _interopRequireDefault(__webpack_require__(/*! ./isMobile */ "./node_modules/@inovua/reactdatagrid-community/common/isMobile.js"));
var _default = _isMobile.default ? {
  onMouseDown: 'onTouchStart',
  onMouseUp: 'onTouchEnd',
  onMouseMove: 'onTouchMove'
} : {
  onMouseDown: 'onMouseDown',
  onMouseUp: 'onMouseUp',
  onMouseMove: 'onMouseMove'
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/common/getConstrainRegion.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/common/getConstrainRegion.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _regionAlign = _interopRequireDefault(__webpack_require__(/*! ../packages/region-align */ "./node_modules/@inovua/reactdatagrid-community/packages/region-align/index.js"));
var _selectParent = _interopRequireDefault(__webpack_require__(/*! ./selectParent */ "./node_modules/@inovua/reactdatagrid-community/common/selectParent.js"));
var _getViewportRegion = _interopRequireDefault(__webpack_require__(/*! ./getViewportRegion */ "./node_modules/@inovua/reactdatagrid-community/common/getViewportRegion.js"));
var _default = function _default(constrainTo, domNode) {
  var constrainRegion;
  if (constrainTo === true) {
    constrainRegion = (0, _getViewportRegion.default)();
  }
  if (!constrainRegion && typeof constrainTo === 'function') {
    constrainTo = constrainTo(domNode);
  }
  if (!constrainRegion && typeof constrainTo === 'string') {
    constrainTo = (0, _selectParent.default)(constrainTo, domNode);
  }
  if (!constrainRegion && constrainTo) {
    constrainRegion = _regionAlign.default.from(constrainTo);
  }
  return constrainRegion;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/common/getFocusableElements.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/common/getFocusableElements.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "default", ({
  enumerable: true,
  get: function get() {
    return _getFocusableElements.default;
  }
}));
var _getFocusableElements = _interopRequireDefault(__webpack_require__(/*! ../packages/getFocusableElements */ "./node_modules/@inovua/reactdatagrid-community/packages/getFocusableElements/index.js"));

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/common/getMinMaxSize.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/common/getMinMaxSize.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js"));
function getMinMaxSize(props) {
  var sizeType;
  var single;
  var style = props.style || {};
  var result = {};
  if (props.minSize) {
    sizeType = (0, _typeof2.default)(props.minSize);
    single = sizeType == 'number' || sizeType == 'string';
    if (single) {
      result.minWidth = props.minSize;
      result.minHeight = props.minSize;
    } else {
      if (props.minSize.width) {
        result.minWidth = props.minSize.width;
      }
      if (props.minSize.height) {
        result.minHeight = props.minSize.height;
      }
    }
  }
  if (props.maxSize) {
    sizeType = (0, _typeof2.default)(props.maxSize);
    single = sizeType == 'number' || sizeType == 'string';
    if (single) {
      result.maxWidth = props.maxSize;
      result.maxHeight = props.maxSize;
    } else {
      if (props.maxSize.width) {
        result.maxWidth = props.maxSize.width;
      }
      if (props.maxSize.height) {
        result.maxHeight = props.maxSize.height;
      }
    }
  }
  if (result.minWidth == undefined && style.minWidth != undefined) {
    result.minWidth = style.minWidth;
  }
  if (result.maxWidth == undefined && style.maxWidth != undefined) {
    result.maxWidth = style.maxWidth;
  }
  if (result.minHeight == undefined && style.minHeight != undefined) {
    result.minHeight = style.minHeight;
  }
  if (result.maxHeight == undefined && style.maxHeight != undefined) {
    result.maxHeight = style.maxHeight;
  }
  return result;
}
var _default = getMinMaxSize;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/common/getPositionRelativeToElement/getArrowPosition.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/common/getPositionRelativeToElement/getArrowPosition.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _getArrowPositionDirection = _interopRequireDefault(__webpack_require__(/*! ./getArrowPositionDirection */ "./node_modules/@inovua/reactdatagrid-community/common/getPositionRelativeToElement/getArrowPositionDirection.js"));
var _clamp = _interopRequireDefault(__webpack_require__(/*! ../clamp */ "./node_modules/@inovua/reactdatagrid-community/common/clamp.js"));
function getLeftPosition(overlayRegion, targetRegion) {
  return targetRegion.left - overlayRegion.left + targetRegion.width / 2;
}
function getTopPosition(overlayRegion, targetRegion) {
  return targetRegion.top - overlayRegion.top + targetRegion.height / 2;
}
function getArrowPosition(_ref) {
  var overlayRegion = _ref.overlayRegion,
    targetRegion = _ref.targetRegion,
    position = _ref.position,
    arrowSize = _ref.arrowSize;
  var arrowPosition = null;
  var positionDirection = (0, _getArrowPositionDirection.default)(position);
  var left = (0, _clamp.default)(getLeftPosition(overlayRegion, targetRegion), arrowSize / 2, overlayRegion.width - arrowSize / 2);
  var top = (0, _clamp.default)(getTopPosition(overlayRegion, targetRegion), arrowSize / 2, overlayRegion.height - arrowSize / 2);
  arrowPosition = {
    top: {
      position: {
        left: left,
        top: 'calc(100% - 1px)'
      },
      location: 'top'
    },
    bottom: {
      position: {
        left: left,
        bottom: 'calc(100% - 1px)'
      },
      location: 'bottom'
    },
    right: {
      position: {
        top: top,
        right: 'calc(100% - 1px)'
      },
      location: 'right'
    },
    left: {
      position: {
        top: top,
        left: 'calc(100% - 1px)'
      },
      location: 'left'
    }
  }[positionDirection];
  return arrowPosition;
}
var _default = getArrowPosition;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/common/getPositionRelativeToElement/getArrowPositionDirection.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/common/getPositionRelativeToElement/getArrowPositionDirection.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var topPositions = ['top', 'bc-tc', 'bl-tl', 'br-tr'];
var bottomPositions = ['bottom', 'tc-bc', 'tl-bl', 'tr-br'];
var rightPositions = ['right', 'lc-rc', 'tl-tr', 'bl-br'];
var leftPositions = ['left', 'rc-lc', 'tr-tl', 'br-bl'];
var noArrowPositions = ['br-tl', 'tl-br', 'tr-bl'];
function isTopPosition(position) {
  return topPositions.indexOf(position) !== -1;
}
function isBottomPosition(position) {
  return bottomPositions.indexOf(position) !== -1;
}
function isLeftPosition(position) {
  return leftPositions.indexOf(position) !== -1;
}
function isRightPosition(position) {
  return rightPositions.indexOf(position) !== -1;
}
function getArrowPositionDirection(position) {
  var positionTest = {
    top: isTopPosition(position),
    bottom: isBottomPosition(position),
    right: isRightPosition(position),
    left: isLeftPosition(position)
  };
  return Object.keys(positionTest).filter(function (position) {
    return !!positionTest[position];
  })[0];
}
var _default = getArrowPositionDirection;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/common/getPositionRelativeToElement/getConstrainRegion.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/common/getPositionRelativeToElement/getConstrainRegion.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = _default;
var _regionAlign = _interopRequireDefault(__webpack_require__(/*! ../../packages/region-align */ "./node_modules/@inovua/reactdatagrid-community/packages/region-align/index.js"));
var _selectParent = _interopRequireDefault(__webpack_require__(/*! ../selectParent */ "./node_modules/@inovua/reactdatagrid-community/common/selectParent.js"));
var _getViewportRegion = _interopRequireDefault(__webpack_require__(/*! ../getViewportRegion */ "./node_modules/@inovua/reactdatagrid-community/common/getViewportRegion.js"));
function _default(constrainTo, domNode) {
  var constrainRegion;
  if (constrainTo === true) {
    constrainRegion = (0, _getViewportRegion.default)();
  }
  if (!constrainRegion && typeof constrainTo === 'function') {
    constrainTo = _regionAlign.default.from(constrainTo(domNode));
  }
  if (!constrainRegion && typeof constrainTo === 'string') {
    constrainTo = (0, _selectParent.default)(constrainTo, domNode);
  }
  if (!constrainRegion && constrainTo) {
    constrainRegion = _regionAlign.default.from(constrainTo);
  }
  return constrainRegion;
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/common/getPositionRelativeToElement/getPosition.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/common/getPositionRelativeToElement/getPosition.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _regionAlign = _interopRequireDefault(__webpack_require__(/*! ../../packages/region-align */ "./node_modules/@inovua/reactdatagrid-community/packages/region-align/index.js"));
var _assign = _interopRequireDefault(__webpack_require__(/*! ../assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var _getPositionOffsets = _interopRequireDefault(__webpack_require__(/*! ./getPositionOffsets */ "./node_modules/@inovua/reactdatagrid-community/common/getPositionRelativeToElement/getPositionOffsets.js"));
var _positionsMap = _interopRequireDefault(__webpack_require__(/*! ./positionsMap */ "./node_modules/@inovua/reactdatagrid-community/common/getPositionRelativeToElement/positionsMap.js"));
var _getArrowPosition = _interopRequireDefault(__webpack_require__(/*! ./getArrowPosition */ "./node_modules/@inovua/reactdatagrid-community/common/getPositionRelativeToElement/getArrowPosition.js"));
var _getConstrainRegion = _interopRequireDefault(__webpack_require__(/*! ./getConstrainRegion */ "./node_modules/@inovua/reactdatagrid-community/common/getPositionRelativeToElement/getConstrainRegion.js"));
var _isPositionBottom = _interopRequireDefault(__webpack_require__(/*! ./isPositionBottom */ "./node_modules/@inovua/reactdatagrid-community/common/getPositionRelativeToElement/isPositionBottom.js"));
var posiblePositions = Object.keys(_positionsMap.default);
function getPosition(_ref) {
  var _ref$constrainTo = _ref.constrainTo,
    constrainTo = _ref$constrainTo === void 0 ? true : _ref$constrainTo,
    targetNode = _ref.targetNode,
    overlayNode = _ref.overlayNode,
    _ref$offset = _ref.offset,
    offset = _ref$offset === void 0 ? 0 : _ref$offset,
    _ref$positions = _ref.positions,
    positions = _ref$positions === void 0 ? posiblePositions : _ref$positions,
    _ref$relativeToViewpo = _ref.relativeToViewport,
    relativeToViewport = _ref$relativeToViewpo === void 0 ? true : _ref$relativeToViewpo,
    _ref$arrowSize = _ref.arrowSize,
    arrowSize = _ref$arrowSize === void 0 ? 10 : _ref$arrowSize,
    _ref$adjustOnPosition = _ref.adjustOnPositionBottom,
    adjustOnPositionBottom = _ref$adjustOnPosition === void 0 ? true : _ref$adjustOnPosition,
    _ref$showArrow = _ref.showArrow,
    showArrow = _ref$showArrow === void 0 ? true : _ref$showArrow;
  if (!constrainTo || !overlayNode || !targetNode) {
    return null;
  }
  var constrain = (0, _getConstrainRegion.default)(constrainTo, targetNode);
  var overlayRegion = _regionAlign.default.from(overlayNode);
  var alignRegion = _regionAlign.default.from(targetNode);
  var newRegion = overlayRegion.clone();
  var positionsNormalized = positions.map(function (position) {
    var normalizedPosition;
    if (_positionsMap.default[position]) {
      normalizedPosition = _positionsMap.default[position].position;
    } else {
      normalizedPosition = position.position || position;
    }
    return normalizedPosition;
  });
  var positionsOffsets = (0, _getPositionOffsets.default)(positions, offset);
  var positionsOffsetsClone = positionsOffsets.map(function (offset) {
    return (0, _assign.default)({}, offset);
  });
  var succesfullPosition = newRegion.alignTo(alignRegion, positionsNormalized, {
    constrain: constrain,
    offset: positionsOffsetsClone
  });
  var constrainedWidth = newRegion.getWidth() != overlayRegion.getWidth();
  var constrainedHeight = newRegion.getHeight() != overlayRegion.getHeight();
  var arrowConfig = null;
  if (showArrow) {
    arrowConfig = (0, _getArrowPosition.default)({
      arrowSize: arrowSize,
      overlayRegion: newRegion,
      targetRegion: alignRegion,
      position: succesfullPosition
    });
  }
  var position = {
    top: newRegion.top,
    left: newRegion.left
  };
  if (!relativeToViewport && overlayNode.offsetParent) {
    var offsetParentRegion = _regionAlign.default.from(overlayNode.offsetParent);
    position.left -= offsetParentRegion.left;
    position.top -= offsetParentRegion.top;
  }
  if ((0, _isPositionBottom.default)(succesfullPosition) && adjustOnPositionBottom) {
    position.bottom = -(overlayRegion.height + (alignRegion.height - position.top));
    delete position.top;
  }
  return {
    alignRegion: alignRegion,
    constrainedHeight: constrainedHeight,
    constrainedWidth: constrainedWidth,
    constrained: constrainedHeight || constrainedWidth,
    positionRegion: newRegion,
    arrowConfig: arrowConfig,
    position: position,
    succesfullPosition: succesfullPosition
  };
}
var _default = getPosition;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/common/getPositionRelativeToElement/getPositionOffsets.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/common/getPositionRelativeToElement/getPositionOffsets.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js"));
var _positionsMap = _interopRequireDefault(__webpack_require__(/*! ./positionsMap */ "./node_modules/@inovua/reactdatagrid-community/common/getPositionRelativeToElement/positionsMap.js"));
function createEmptyArray(length, fn) {
  return Array.apply(null, Array(length)).map(fn);
}
function handleNumericOffset(offset, offsetCorrection) {
  var normalizedOffset = {
    x: offset * offsetCorrection.x,
    y: offset * offsetCorrection.y
  };
  if (offsetCorrection.resetNumeric) {
    normalizedOffset[offsetCorrection.resetNumeric] = 0;
  }
  return normalizedOffset;
}
function handleObjectOffset(offset, offsetCorrection) {
  var normalizedOffset = {
    x: offset.x === undefined ? 0 : offset.x * offsetCorrection.x,
    y: offset.y === undefined ? 0 : offset.y * offsetCorrection.y
  };
  return normalizedOffset;
}
function normalizeOffset(offset, positionsLength) {
  var normalizedOffsets = null;
  if (typeof offset === 'number' || !Array.isArray(offset) && (0, _typeof2.default)(offset) === 'object') {
    normalizedOffsets = createEmptyArray(positionsLength, function () {
      return offset;
    });
  } else if (Array.isArray(offset)) {
    if (offset.length < positionsLength) {
      var lastOffsetItem = offset[offset.length - 1];
      var extraOffsets = createEmptyArray(positionsLength - offset.length, function () {
        return lastOffsetItem;
      });
      normalizedOffsets = [].concat((0, _toConsumableArray2.default)(offset), (0, _toConsumableArray2.default)(extraOffsets));
    } else {
      normalizedOffsets = offset;
    }
  }
  return normalizedOffsets;
}
function getPositionOffsets(positions, offset) {
  var normalizedOffsets = normalizeOffset(offset, positions.length);
  var positionOffsets = normalizedOffsets.map(function (normalizedOffset, index) {
    var position = positions[index];
    var positionMap = _positionsMap.default[position];
    var offsetCorrection = positionMap ? positionMap.offset : position.offset || {
      x: 0,
      y: 0
    };
    if (typeof normalizedOffset === 'number') {
      return handleNumericOffset(normalizedOffset, offsetCorrection);
    }
    return handleObjectOffset(normalizedOffset, offsetCorrection);
  });
  return positionOffsets;
}
var _default = getPositionOffsets;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/common/getPositionRelativeToElement/index.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/common/getPositionRelativeToElement/index.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
Object.defineProperty(exports, "positionsMap", ({
  enumerable: true,
  get: function get() {
    return _positionsMap.default;
  }
}));
var _positionsMap = _interopRequireDefault(__webpack_require__(/*! ./positionsMap */ "./node_modules/@inovua/reactdatagrid-community/common/getPositionRelativeToElement/positionsMap.js"));
var _getPosition = _interopRequireDefault(__webpack_require__(/*! ./getPosition */ "./node_modules/@inovua/reactdatagrid-community/common/getPositionRelativeToElement/getPosition.js"));
var _default = _getPosition.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/common/getPositionRelativeToElement/isPositionBottom.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/common/getPositionRelativeToElement/isPositionBottom.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var bottomPositions = {
  'tl-br': true,
  'tc-bc': true,
  'tl-bl': true,
  'tr-br': true,
  'tr-bl': true
};
function isPositionBottom(position) {
  return !!bottomPositions[position];
}
var _default = isPositionBottom;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/common/getPositionRelativeToElement/positionsMap.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/common/getPositionRelativeToElement/positionsMap.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.posiblePositions = exports["default"] = void 0;
var positionMap = {
  top: {
    alias: 'top',
    position: 'bc-tc',
    offset: {
      x: 1,
      y: -1,
      resetNumeric: 'x'
    }
  },
  'bc-tc': {
    alias: 'top',
    position: 'bc-tc',
    offset: {
      x: 1,
      y: -1,
      resetNumeric: 'x'
    }
  },
  'bl-tl': {
    alias: 'topAlignedLeft',
    position: 'bl-tl',
    offset: {
      x: 1,
      y: -1,
      resetNumeric: 'x'
    }
  },
  'br-tr': {
    alias: 'topAlignedRight',
    position: 'br-tr',
    offset: {
      x: 1,
      y: -1,
      resetNumeric: 'x'
    }
  },
  'br-tl': {
    alias: 'topLeft',
    position: 'br-tl',
    offset: {
      x: -1,
      y: -1
    }
  },
  right: {
    position: 'lc-rc',
    alias: 'right',
    offset: {
      x: 1,
      y: 1,
      resetNumeric: 'y'
    }
  },
  'lc-rc': {
    position: 'lc-rc',
    alias: 'right',
    offset: {
      x: 1,
      y: 1,
      resetNumeric: 'y'
    }
  },
  'tl-tr': {
    position: 'tl-tr',
    alias: 'rightAlignedTop',
    offset: {
      x: 1,
      y: 1,
      resetNumeric: 'y'
    }
  },
  'bl-br': {
    position: 'bl-br',
    alias: 'rightAlignedBottom',
    offset: {
      x: 1,
      y: 1,
      resetNumeric: 'y'
    }
  },
  'tl-br': {
    position: 'tl-br',
    alias: 'bottomRight',
    offset: {
      x: 1,
      y: 1
    }
  },
  bottom: {
    position: 'tc-bc',
    alias: 'bottom',
    offset: {
      x: 1,
      y: 1,
      resetNumeric: 'x'
    }
  },
  'tc-bc': {
    position: 'tc-bc',
    alias: 'bottom',
    offset: {
      x: 1,
      y: 1,
      resetNumeric: 'x'
    }
  },
  'tl-bl': {
    position: 'tl-bl',
    alias: 'bottomAlinedLeft',
    offset: {
      x: 1,
      y: 1,
      resetNumeric: 'x'
    }
  },
  'tr-br': {
    position: 'tr-br',
    alias: 'bottomAlignedRight',
    offset: {
      x: 1,
      y: 1,
      resetNumeric: 'x'
    }
  },
  'tr-tr': {
    position: 'tr-tr',
    offset: {
      x: 1,
      y: -1
    }
  },
  'tr-bl': {
    position: 'tr-bl',
    alias: 'bottomLeft',
    offset: {
      x: -1,
      y: 1
    }
  },
  left: {
    position: 'rc-lc',
    alias: 'left',
    offset: {
      x: -1,
      y: 1,
      resetNumeric: 'y'
    }
  },
  'rc-lc': {
    position: 'rc-lc',
    alias: 'left',
    offset: {
      x: -1,
      y: 1,
      resetNumeric: 'y'
    }
  },
  'tr-tl': {
    position: 'tr-tl',
    alias: 'leftAlignedTop',
    offset: {
      x: -1,
      y: 1,
      resetNumeric: 'y'
    }
  },
  'br-bl': {
    position: 'br-bl',
    alias: 'leftAlignedBottom',
    offset: {
      x: -1,
      y: 1,
      resetNumeric: 'y'
    }
  }
};
var posiblePositions = Object.keys(positionMap);
exports.posiblePositions = posiblePositions;
var _default = positionMap;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/common/getViewportRegion.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/common/getViewportRegion.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _region = _interopRequireDefault(__webpack_require__(/*! ../packages/region */ "./node_modules/@inovua/reactdatagrid-community/packages/region/index.js"));
var _getGlobal = __webpack_require__(/*! ../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
var globalObject = (0, _getGlobal.getGlobal)();
var CACHED;
var LISTENING_WINDOW_RESIZE;
var setupWindowResize = function setupWindowResize() {
  LISTENING_WINDOW_RESIZE = true;
  globalObject.addEventListener('resize', function () {
    CACHED = null;
  });
};
function getViewportRegion() {
  if (CACHED) {
    return CACHED;
  }
  if (!LISTENING_WINDOW_RESIZE) {
    setupWindowResize();
  }
  var viewportWidth = Math.max(globalObject.document.documentElement.clientWidth, globalObject.innerWidth || 0);
  var viewportHeight = Math.max(globalObject.document.documentElement.clientHeight, globalObject.innerHeight || 0);
  return CACHED = _region.default.from({
    top: 0,
    left: 0,
    width: viewportWidth,
    height: viewportHeight
  });
}
var _default = getViewportRegion;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/common/isMobile.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/common/isMobile.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "default", ({
  enumerable: true,
  get: function get() {
    return _isMobile.default;
  }
}));
var _isMobile = _interopRequireDefault(__webpack_require__(/*! ../packages/isMobile */ "./node_modules/@inovua/reactdatagrid-community/packages/isMobile/index.js"));

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/common/join.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/common/join.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = _default;
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var notEmpty = function notEmpty(x) {
  return !!x && x !== true;
};
function _default() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  if (args.length == 1 && Array.isArray(args[0])) {
    args = args[0];
  }
  return (0, _toConsumableArray2.default)(args).filter(notEmpty).join(' ');
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/common/matchesSelector.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/common/matchesSelector.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _getGlobal = __webpack_require__(/*! ../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
var globalObject = (0, _getGlobal.getGlobal)();
var proto = globalObject && globalObject.Element ? Element.prototype : {
  matches: function matches() {
    return false;
  }
};
var vendor = proto.matches || proto.matchesSelector || proto.webkitMatchesSelector || proto.mozMatchesSelector || proto.msMatchesSelector || proto.oMatchesSelector;
var _default = match;
exports["default"] = _default;
function match(el, selector) {
  if (vendor) return vendor.call(el, selector);
  var nodes = el.parentNode.querySelectorAll(selector);
  for (var i = 0; i < nodes.length; i++) {
    if (nodes[i] == el) return true;
  }
  return false;
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/common/raf.js":
/*!********************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/common/raf.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _getGlobal = __webpack_require__(/*! ../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
var globalObject = (0, _getGlobal.getGlobal)();
var _default = globalObject.requestAnimationFrame;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/common/range.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/common/range.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
function range() {
  var start = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  var end = arguments.length > 1 ? arguments[1] : undefined;
  var step = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
  var collection = [];
  for (var i = start; i < end; i += step) {
    collection.push(i);
  }
  return collection;
}
var _default = range;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/common/selectParent.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/common/selectParent.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _matchesSelector = _interopRequireDefault(__webpack_require__(/*! ./matchesSelector */ "./node_modules/@inovua/reactdatagrid-community/common/matchesSelector.js"));
function selectParent(selector, node) {
  node = node.parentElement;
  while (node) {
    if ((0, _matchesSelector.default)(node, selector)) {
      return node;
    }
    node = node.parentElement;
  }
  return false;
}
var _default = selectParent;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/common/shallowequal.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/common/shallowequal.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "default", ({
  enumerable: true,
  get: function get() {
    return _shallowequal.default;
  }
}));
var _shallowequal = _interopRequireDefault(__webpack_require__(/*! ../packages/shallowequal */ "./node_modules/@inovua/reactdatagrid-community/packages/shallowequal/index.js"));

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/common/shouldComponentUpdate.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/common/shouldComponentUpdate.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "default", ({
  enumerable: true,
  get: function get() {
    return _shouldComponentUpdate.default;
  }
}));
var _shouldComponentUpdate = _interopRequireDefault(__webpack_require__(/*! ../packages/shouldComponentUpdate */ "./node_modules/@inovua/reactdatagrid-community/packages/shouldComponentUpdate/index.js"));

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/common/throttle.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/common/throttle.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
function throttle(func, wait) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var context;
  var args;
  var result;
  var timeout = null;
  var previous = 0;
  var later = function later() {
    previous = options.leading === false ? 0 : Date.now();
    timeout = null;
    result = func.apply(context, args);
    if (!timeout) {
      context = null;
      args = null;
    }
  };
  return function () {
    var now = Date.now();
    if (!previous && options.leading === false) {
      previous = now;
    }
    var remaining = wait - (now - previous);
    context = this;
    args = arguments;
    if (remaining <= 0 || remaining > wait) {
      if (timeout) {
        clearTimeout(timeout);
        timeout = null;
      }
      previous = now;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    } else if (!timeout && options.trailing !== false) {
      timeout = setTimeout(later, remaining);
    }
    return result;
  };
}
var _default = throttle;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/common/ua.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/common/ua.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.IS_MS_BROWSER = exports.IS_IE = exports.IS_FF = exports.IS_EDGE = void 0;
var _getGlobal = __webpack_require__(/*! ../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
var globalObject = (0, _getGlobal.getGlobal)();
var ua = globalObject.navigator ? globalObject.navigator.userAgent || '' : '';
var IS_EDGE = ua.indexOf('Edge/') !== -1;
exports.IS_EDGE = IS_EDGE;
var IS_MS_BROWSER = IS_EDGE || ua.indexOf('Trident') !== -1;
exports.IS_MS_BROWSER = IS_MS_BROWSER;
var IS_IE = IS_MS_BROWSER && !IS_EDGE;
exports.IS_IE = IS_IE;
var IS_FF = ua.toLowerCase().indexOf('firefox') > -1;
exports.IS_FF = IS_FF;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/common/whitespace.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/common/whitespace.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var WHITESPACE = "\xA0";
var _default = WHITESPACE;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/context.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/context.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = exports.Provider = exports.Consumer = void 0;
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var DataGridContext = _react.default.createContext(null);
var Provider = DataGridContext.Provider;
exports.Provider = Provider;
var Consumer = DataGridContext.Consumer;
exports.Consumer = Consumer;
var _default = DataGridContext;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/detect-ua.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/detect-ua.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.IS_MS_BROWSER = exports.IS_IE = exports.IS_EDGE = void 0;
var _getGlobal = __webpack_require__(/*! ./getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
var globalObject = (0, _getGlobal.getGlobal)();
var ua = globalObject.navigator ? globalObject.navigator.userAgent || '' : '';
var IS_EDGE = ua.indexOf('Edge/') !== -1;
exports.IS_EDGE = IS_EDGE;
var IS_MS_BROWSER = IS_EDGE || ua.indexOf('Trident') !== -1;
exports.IS_MS_BROWSER = IS_MS_BROWSER;
var IS_IE = IS_MS_BROWSER && !IS_EDGE;
exports.IS_IE = IS_IE;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/factory.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/factory.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof3 = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
Object.defineProperty(exports, "filterTypes", ({
  enumerable: true,
  get: function get() {
    return _filterTypes.default;
  }
}));
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js"));
var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/objectWithoutProperties */ "./node_modules/@babel/runtime/helpers/objectWithoutProperties.js"));
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js"));
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _reactDom = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
var _src = _interopRequireDefault(__webpack_require__(/*! ./packages/react-notify-resize/src */ "./node_modules/@inovua/reactdatagrid-community/packages/react-notify-resize/src/index.js"));
var _uglified = _interopRequireDefault(__webpack_require__(/*! ./packages/uglified */ "./node_modules/@inovua/reactdatagrid-community/packages/uglified/index.js"));
var _useProperty13 = _interopRequireDefault(__webpack_require__(/*! ./hooks/useProperty */ "./node_modules/@inovua/reactdatagrid-community/hooks/useProperty.js"));
var _getScrollbarWidth = _interopRequireDefault(__webpack_require__(/*! ./packages/getScrollbarWidth */ "./node_modules/@inovua/reactdatagrid-community/packages/getScrollbarWidth/index.js"));
var _clamp = _interopRequireDefault(__webpack_require__(/*! ./utils/clamp */ "./node_modules/@inovua/reactdatagrid-community/utils/clamp.js"));
var _isMobile = _interopRequireDefault(__webpack_require__(/*! ./packages/isMobile */ "./node_modules/@inovua/reactdatagrid-community/packages/isMobile/index.js"));
var _Layout = _interopRequireDefault(__webpack_require__(/*! ./Layout */ "./node_modules/@inovua/reactdatagrid-community/Layout/index.js"));
var _LoadMask = _interopRequireDefault(__webpack_require__(/*! ./LoadMask */ "./node_modules/@inovua/reactdatagrid-community/LoadMask.js"));
var _filterTypes = _interopRequireDefault(__webpack_require__(/*! ./filterTypes */ "./node_modules/@inovua/reactdatagrid-community/filterTypes.js"));
var _useColumns = _interopRequireDefault(__webpack_require__(/*! ./hooks/useColumns */ "./node_modules/@inovua/reactdatagrid-community/hooks/useColumns.js"));
var _useSize3 = _interopRequireDefault(__webpack_require__(/*! ./hooks/useSize */ "./node_modules/@inovua/reactdatagrid-community/hooks/useSize.js"));
var _useNamedState5 = _interopRequireDefault(__webpack_require__(/*! ./hooks/useNamedState */ "./node_modules/@inovua/reactdatagrid-community/hooks/useNamedState.js"));
var _useHeader = _interopRequireDefault(__webpack_require__(/*! ./hooks/useHeader */ "./node_modules/@inovua/reactdatagrid-community/hooks/useHeader.js"));
var _useEditable = _interopRequireDefault(__webpack_require__(/*! ./hooks/useEditable */ "./node_modules/@inovua/reactdatagrid-community/hooks/useEditable/index.js"));
var _useDataSource = _interopRequireDefault(__webpack_require__(/*! ./hooks/useDataSource */ "./node_modules/@inovua/reactdatagrid-community/hooks/useDataSource/index.js"));
var _useScrollProps = _interopRequireDefault(__webpack_require__(/*! ./hooks/useScrollProps */ "./node_modules/@inovua/reactdatagrid-community/hooks/useScrollProps.js"));
var _useColumnsSizing = _interopRequireDefault(__webpack_require__(/*! ./hooks/useColumnsSizing */ "./node_modules/@inovua/reactdatagrid-community/hooks/useColumnsSizing.js"));
var _useGroups = _interopRequireDefault(__webpack_require__(/*! ./hooks/useGroups */ "./node_modules/@inovua/reactdatagrid-community/hooks/useGroups.js"));
var _useSelection = _interopRequireDefault(__webpack_require__(/*! ./hooks/useSelection */ "./node_modules/@inovua/reactdatagrid-community/hooks/useSelection/index.js"));
var _useRow2 = _interopRequireDefault(__webpack_require__(/*! ./hooks/useRow */ "./node_modules/@inovua/reactdatagrid-community/hooks/useRow/index.js"));
var _RowHeightManager = _interopRequireDefault(__webpack_require__(/*! ./packages/react-virtual-list-pro/src/RowHeightManager */ "./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-list-pro/src/RowHeightManager.js"));
var _ua = __webpack_require__(/*! ./common/ua */ "./node_modules/@inovua/reactdatagrid-community/common/ua.js");
var _prepareClassName = _interopRequireDefault(__webpack_require__(/*! ./utils/prepareClassName */ "./node_modules/@inovua/reactdatagrid-community/utils/prepareClassName.js"));
var _context = __webpack_require__(/*! ./context */ "./node_modules/@inovua/reactdatagrid-community/context.js");
var _Cover = _interopRequireDefault(__webpack_require__(/*! ./Cover */ "./node_modules/@inovua/reactdatagrid-community/Cover.js"));
var _useActiveIndex = _interopRequireDefault(__webpack_require__(/*! ./hooks/useActiveIndex */ "./node_modules/@inovua/reactdatagrid-community/hooks/useActiveIndex.js"));
var _batchUpdate = _interopRequireDefault(__webpack_require__(/*! ./utils/batchUpdate */ "./node_modules/@inovua/reactdatagrid-community/utils/batchUpdate.js"));
var _empty = _interopRequireDefault(__webpack_require__(/*! ./plugins/empty */ "./node_modules/@inovua/reactdatagrid-community/plugins/empty.js"));
var _ActiveRowIndicator = _interopRequireDefault(__webpack_require__(/*! ./ActiveRowIndicator */ "./node_modules/@inovua/reactdatagrid-community/ActiveRowIndicator/index.js"));
var _warn = __webpack_require__(/*! ./warn */ "./node_modules/@inovua/reactdatagrid-community/warn.js");
var _StickyRowsContainer = __webpack_require__(/*! ./packages/react-virtual-list-pro/src/StickyRowsContainer */ "./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-list-pro/src/StickyRowsContainer.js");
var _getGlobal = __webpack_require__(/*! ./getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
var _useColumnHover = _interopRequireDefault(__webpack_require__(/*! ./hooks/useColumnHover */ "./node_modules/@inovua/reactdatagrid-community/hooks/useColumnHover.js"));
var _notifier = __webpack_require__(/*! ./utils/notifier */ "./node_modules/@inovua/reactdatagrid-community/utils/notifier.js");
var _excluded = ["computedOnKeyDown", "computedOnFocus", "computedOnBlur"];
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof3(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var GRID_ID = 0;
var globalObject = (0, _getGlobal.getGlobal)();
var DEFAULT_I18N = {
  pageText: 'Page ',
  ofText: ' of ',
  perPageText: 'Results per page',
  showingText: 'Showing ',
  clearAll: 'Clear all',
  clear: 'Clear',
  showFilteringRow: 'Show filtering row',
  hideFilteringRow: 'Hide filtering row',
  enable: 'Enable',
  disable: 'Disable',
  sortAsc: 'Sort ascending',
  sortDesc: 'Sort descending',
  unsort: 'Unsort',
  group: 'Group',
  ungroup: 'Ungroup',
  lockStart: 'Lock start',
  lockEnd: 'Lock end',
  unlock: 'Unlock',
  columns: 'Columns',
  autoresizeThisColumn: 'Autoresize this column',
  autoresizeAllColumns: 'Autoresize all columns',
  autoSizeToFit: 'Autosize to fit',
  contains: 'Contains',
  startsWith: 'Starts with',
  endsWith: 'Ends with',
  notContains: 'Does not contain',
  inlist: 'In list',
  notinlist: 'Not in list',
  neq: 'Does not equal',
  inrange: 'In range',
  notinrange: 'Not in range',
  eq: 'Equals',
  notEmpty: 'Not empty',
  empty: 'Empty',
  lt: 'Less than',
  lte: 'Less than or equal',
  gt: 'Greater than',
  gte: 'Greater than or equal',
  before: 'Before',
  beforeOrOn: 'Before or on',
  afterOrOn: 'After or on',
  after: 'After',
  start: 'Start',
  end: 'End',
  dragHeaderToGroup: 'Drag header to group',
  noRecords: 'No records available',
  'calendar.todayButtonText': 'Today',
  'calendar.clearButtonText': 'Clear',
  'calendar.okButtonText': 'OK',
  'calendar.cancelButtonText': 'Cancel'
};
var renderLoadMask = function renderLoadMask(props) {
  var loadMaskProps = {
    visible: props.computedLoading,
    livePagination: props.computedLivePagination,
    loadingText: props.loadingText || 'Loading',
    zIndex: 10000,
    theme: props.theme
  };
  var loadMask;
  if (props.renderLoadMask) {
    loadMask = props.renderLoadMask(loadMaskProps);
  }
  if (loadMask !== undefined) {
    return loadMask;
  }
  return _react.default.createElement(_LoadMask.default, _objectSpread({}, loadMaskProps));
};
var reducePlugins = function reducePlugins(acc, plugin) {
  if (!plugin.name || typeof plugin.hook !== 'function') {
    return acc;
  }
  acc[plugin.name] = plugin;
  return acc;
};
var GridFactory = function GridFactory() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
    plugins = _ref.plugins;
  var edition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'community';
  plugins = plugins || [];
  var maybeAddColumns;
  var defaultSize = {
    width: 0,
    height: 0
  };
  var emptyCoverHandle = {
    setActive: function setActive() {},
    setCursor: function setCursor() {}
  };
  plugins = [].concat((0, _toConsumableArray2.default)(_empty.default), (0, _toConsumableArray2.default)(plugins));
  var pluginsMap = plugins.reduce(reducePlugins, {});
  var Grid = _react.default.memo(function (props) {
    var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      computedFocused = _useState2[0],
      computedSetFocused = _useState2[1];
    var computedPropsRef = (0, _react.useRef)(null);
    var warnRef = (0, _react.useMemo)(function () {
      return {};
    }, []);
    var context = (0, _react.useContext)(props.context);
    (0, _react.useEffect)(function () {
      if (computedFocused && props.activateRowOnFocus) {
        var _computedProps = computedPropsRef.current;
        if (!_computedProps) {
          return;
        }
        var count = _computedProps.count;
        if (!count) {
          return;
        }
        var _activeItem = _computedProps.getActiveItem();
        if (!_activeItem) {
          var index = _computedProps.computedLastActiveIndex || _computedProps.getFirstVisibleIndex();
          _computedProps.setActiveIndex(index);
        }
      }
    }, [computedFocused]);
    var bodyRef = (0, _react.useRef)(null);
    var domRef = (0, _react.useRef)(null);
    var portalRef = (0, _react.useRef)(null);
    var getDOMNode = function getDOMNode() {
      return domRef.current;
    };
    var getBodyDOMNode = function getBodyDOMNode() {
      var _bodyRef$current;
      return bodyRef === null || bodyRef === void 0 ? void 0 : (_bodyRef$current = bodyRef.current) === null || _bodyRef$current === void 0 ? void 0 : _bodyRef$current.getDOMNode();
    };
    var getVirtualList = function getVirtualList() {
      return bodyRef.current != null ? bodyRef.current.getVirtualList() : null;
    };
    var getColumnLayout = function getColumnLayout() {
      return bodyRef.current != null ? bodyRef.current.columnLayout : null;
    };
    var getDefaultSize = function getDefaultSize() {
      if (props.viewportSize) {
        return props.viewportSize;
      }
      return defaultSize;
    };
    var _useProperty = (0, _useProperty13.default)(props, 'loading'),
      _useProperty2 = (0, _slicedToArray2.default)(_useProperty, 2),
      computedLoading = _useProperty2[0],
      doSetLoading = _useProperty2[1];
    var loadingTimeoutIdRef = (0, _react.useRef)();
    var setLoading = function setLoading(loading) {
      var computedProps = computedPropsRef.current;
      var isLoading = loading instanceof Function ? loading(computedProps ? computedProps.computedLoading : false) : loading;
      if (!computedProps) {
        doSetLoading(isLoading);
        return;
      }
      if (loadingTimeoutIdRef.current) {
        clearTimeout(loadingTimeoutIdRef.current);
      }
      if (computedProps.computedLivePagination && !isLoading && computedProps.livePaginationLoadMaskHideDelay) {
        loadingTimeoutIdRef.current = setTimeout(function () {
          doSetLoading(isLoading);
          loadingTimeoutIdRef.current = null;
        }, computedProps.livePaginationLoadMaskHideDelay);
      } else {
        doSetLoading(isLoading);
      }
    };
    var _useNamedState = (0, _useNamedState5.default)({}, props.context, 'columnSizes'),
      _useNamedState2 = (0, _slicedToArray2.default)(_useNamedState, 2),
      columnSizes = _useNamedState2[0],
      setColumnSizes = _useNamedState2[1];
    var _useNamedState3 = (0, _useNamedState5.default)({}, props.context, 'columnFlexes'),
      _useNamedState4 = (0, _slicedToArray2.default)(_useNamedState3, 2),
      columnFlexes = _useNamedState4[0],
      setColumnFlexes = _useNamedState4[1];
    var _useState3 = (0, _react.useState)({}),
      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
      lockedColumnsState = _useState4[0],
      setLockedColumnsState = _useState4[1];
    var _useState5 = (0, _react.useState)({
        vertical: false,
        horizontal: false
      }),
      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),
      scrollbars = _useState6[0],
      setScrollbars = _useState6[1];
    var _useProperty3 = (0, _useProperty13.default)(props, 'reservedViewportWidth', 0),
      _useProperty4 = (0, _slicedToArray2.default)(_useProperty3, 2),
      reservedViewportWidth = _useProperty4[0],
      setReservedViewportWidth = _useProperty4[1];
    var _useSize = (0, _useSize3.default)(getDefaultSize()),
      _useSize2 = (0, _slicedToArray2.default)(_useSize, 2),
      size = _useSize2[0],
      setSize = _useSize2[1];
    var _useState7 = (0, _react.useState)(0),
      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),
      viewportAvailableWidth = _useState8[0],
      setViewportAvailableWidth = _useState8[1];
    (0, _react.useEffect)(function () {
      if (props.viewportSize) {
        setSize(props.viewportSize);
      }
    }, [props.viewportSize]);
    var onResize = function onResize(size) {
      (0, _batchUpdate.default)().commit(function () {
        if (_ua.IS_MS_BROWSER || _ua.IS_FF) {
          size.width -= 2;
        }
        setSize(size);
        updateViewportAvailableWidth(size.width);
        var rowHeight = typeof props.rowHeight !== 'number' ? props.minRowHeight : props.rowHeight;
        if (rowHeight) {
          setMaxVisibleRows(Math.ceil(size.height / rowHeight));
        }
      });
    };
    var updateViewportAvailableWidth = function updateViewportAvailableWidth(newViewportAvailableWidth) {
      var scrolls = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scrollbars;
      if (props.nativeScroll && scrolls.vertical) {
        newViewportAvailableWidth -= (0, _getScrollbarWidth.default)();
      }
      setViewportAvailableWidth(Math.round(newViewportAvailableWidth));
    };
    var _useState9 = (0, _react.useState)({
        virtualListBorderLeft: 0,
        virtualListBorderRight: 0,
        virtualListExtraWidth: 0
      }),
      _useState10 = (0, _slicedToArray2.default)(_useState9, 2),
      _useState10$ = _useState10[0],
      virtualListBorderLeft = _useState10$.virtualListBorderLeft,
      virtualListBorderRight = _useState10$.virtualListBorderRight,
      virtualListExtraWidth = _useState10$.virtualListExtraWidth,
      setVirtualListState = _useState10[1];
    var onScrollbarsChange = function onScrollbarsChange(scrollbars) {
      var onChange = function onChange() {
        var vl = getVirtualList();
        var computedStyle = vl && globalObject.getComputedStyle(vl.getDOMNode());
        if (!computedStyle) {
          return;
        }
        var virtualListBorderLeft = parseInt(computedStyle.borderLeftWidth, 10);
        var virtualListBorderRight = parseInt(computedStyle.borderRightWidth, 10);
        var virtualListExtraWidth = virtualListBorderLeft + virtualListBorderRight;
        (0, _batchUpdate.default)().commit(function () {
          setScrollbars(scrollbars);
          if (size.width) {
            updateViewportAvailableWidth(size.width, scrollbars);
          }
          setVirtualListState({
            virtualListBorderLeft: virtualListBorderLeft,
            virtualListBorderRight: virtualListBorderRight,
            virtualListExtraWidth: virtualListExtraWidth
          });
        });
      };
      if (!bodyRef.current) {
        requestAnimationFrame(onChange);
      } else {
        onChange();
      }
    };
    var _useProperty5 = (0, _useProperty13.default)(props, 'showCellBorders'),
      _useProperty6 = (0, _slicedToArray2.default)(_useProperty5, 2),
      computedShowCellBorders = _useProperty6[0],
      setShowCellBorders = _useProperty6[1];
    var showHorizontalCellBorders = computedShowCellBorders === true || computedShowCellBorders === 'horizontal';
    var showVerticalCellBorders = computedShowCellBorders === true || computedShowCellBorders === 'vertical';
    var _useState11 = (0, _react.useState)(false),
      _useState12 = (0, _slicedToArray2.default)(_useState11, 2),
      listenOnCellEnter = _useState12[0],
      updateListenOnCellEnter = _useState12[1];
    var _useState13 = (0, _react.useState)(null),
      _useState14 = (0, _slicedToArray2.default)(_useState13, 2),
      selectionFixedCell = _useState14[0],
      setSelectionFixedCell = _useState14[1];
    var setListenOnCellEnter = function setListenOnCellEnter(value, callback) {
      if (value) {
        globalObject.addEventListener('mouseup', callback);
      } else {
        globalObject.removeEventListener('mouseup', callback);
      }
      updateListenOnCellEnter(value);
    };
    var renderCallbacks = (0, _react.useRef)([]);
    var onNextRender = function onNextRender(fn) {
      renderCallbacks.current.push(fn);
    };
    (0, _react.useEffect)(function () {
      renderCallbacks.current.forEach(function (fn) {
        return fn();
      });
      renderCallbacks.current.length = 0;
    });
    var _useState15 = (0, _react.useState)(''),
      _useState16 = (0, _slicedToArray2.default)(_useState15, 2),
      lastCellInRange = _useState16[0],
      setLastCellInRange = _useState16[1];
    var _useState17 = (0, _react.useState)(null),
      _useState18 = (0, _slicedToArray2.default)(_useState17, 2),
      lastSelectedCell = _useState18[0],
      setLastSelectedCell = _useState18[1];
    var renderInPortal = (0, _react.useMemo)(function () {
      return props.renderInPortal || function (el) {
        return portalRef.current ? (0, _reactDom.createPortal)(el, portalRef.current) : null;
      };
    }, [props.renderInPortal]);
    var cProps = _objectSpread(_objectSpread({}, props), {}, {
      initialProps: props,
      selectionFixedCell: selectionFixedCell,
      setSelectionFixedCell: setSelectionFixedCell,
      bodyRef: bodyRef,
      domRef: domRef,
      portalRef: portalRef,
      renderInPortal: renderInPortal,
      listenOnCellEnter: listenOnCellEnter,
      setListenOnCellEnter: setListenOnCellEnter,
      lastCellInRange: lastCellInRange,
      setLastCellInRange: setLastCellInRange,
      setLastSelectedCell: setLastSelectedCell,
      lastSelectedCell: lastSelectedCell,
      onScrollbarsChange: onScrollbarsChange,
      virtualListBorderLeft: virtualListBorderLeft,
      virtualListBorderRight: virtualListBorderRight,
      virtualListExtraWidth: virtualListExtraWidth,
      scrollbars: scrollbars,
      reservedViewportWidth: reservedViewportWidth,
      setReservedViewportWidth: setReservedViewportWidth,
      getColumnLayout: getColumnLayout,
      getDOMNode: getDOMNode,
      computedLoading: computedLoading,
      computedFocused: computedFocused,
      computedSetFocused: computedSetFocused,
      columnFlexes: columnFlexes,
      columnSizes: columnSizes,
      setColumnFlexes: setColumnFlexes,
      setColumnSizes: setColumnSizes,
      lockedColumnsState: lockedColumnsState,
      setLockedColumnsState: setLockedColumnsState,
      setLoading: setLoading,
      isLoading: function isLoading() {
        return computedProps.computedLoading;
      },
      size: size,
      setSize: setSize,
      viewportAvailableWidth: viewportAvailableWidth,
      availableWidth: viewportAvailableWidth,
      maxAvailableWidthForColumns: viewportAvailableWidth - reservedViewportWidth,
      showHorizontalCellBorders: showHorizontalCellBorders,
      showVerticalCellBorders: showVerticalCellBorders,
      shareSpaceOnResize: props.shareSpaceOnResize || false,
      onNextRender: onNextRender,
      computedEnableColumnHover: props.enableColumnHover || undefined
    });
    cProps.i18n = function (key, defaultLabel) {
      return props.i18n[key] || DEFAULT_I18N[key] || defaultLabel;
    };
    Object.assign(cProps, (0, _useActiveIndex.default)(props, cProps, computedPropsRef));
    Object.assign(cProps, pluginsMap['sortable-columns'].hook(props, cProps, computedPropsRef));
    if (pluginsMap['group-and-pivot'] && pluginsMap['group-and-pivot'].hook) {
      Object.assign(cProps, pluginsMap['group-and-pivot'].hook(props, cProps, computedPropsRef));
    }
    Object.assign(cProps, (0, _useGroups.default)(props, cProps, computedPropsRef));
    if (pluginsMap.tree && pluginsMap.tree.hook) {
      Object.assign(cProps, pluginsMap.tree.hook(props, cProps, computedPropsRef));
    }
    if (pluginsMap.filters && pluginsMap.filters.hook) {
      Object.assign(cProps, pluginsMap.filters.hook(props, cProps, computedPropsRef));
    }
    Object.assign(cProps, (0, _useEditable.default)(props, cProps, computedPropsRef));
    cProps.maybeAddColumns = maybeAddColumns;
    var columnInfo = (0, _useColumns.default)(props, cProps, computedPropsRef);
    Object.assign(cProps, columnInfo);
    if (edition === 'enterprise') {
      var columnsSizing = (0, _useColumnsSizing.default)(props, cProps, computedPropsRef);
      Object.assign(cProps, columnsSizing);
    }
    Object.assign(cProps, (0, _useColumnHover.default)(props, cProps, computedPropsRef));
    cProps.wasMountedRef = (0, _react.useRef)(false);
    cProps.wasUnmountedRef = (0, _react.useRef)(false);
    var dataInfo = (0, _useDataSource.default)(props, cProps, computedPropsRef);
    Object.assign(cProps, pluginsMap['live-pagination'].hook(props, cProps, computedPropsRef));
    var rowHeightManager = (0, _react.useMemo)(function () {
      return new _RowHeightManager.default({
        rowHeight: props.rowHeight || props.minRowHeight,
        minRowHeight: props.minRowHeight
      }, {}, {
        cache: !!props.rowHeight
      });
    }, []);
    var i18nFn = (0, _react.useCallback)(function (key, defaultLabel) {
      if (!props.i18n) {
        return defaultLabel;
      }
      return props.i18n[key] || DEFAULT_I18N[key] || defaultLabel;
    }, [props.i18n]);
    var getItemId = (0, _react.useCallback)(function (item) {
      if (!item) return;
      if (item.__group && Array.isArray(item.keyPath)) {
        return item.keyPath.join(props.groupPathSeparator);
      }
      var itemId = computeIdProperty() ? compoundItemId(item) : simpleItemId(item);
      return itemId;
    }, []);
    var simpleItemId = (0, _react.useCallback)(function (item) {
      return item[props.idProperty];
    }, []);
    var compoundItemId = (0, _react.useCallback)(function (item) {
      var parts = props.idProperty.split(props.idPropertySeparator);
      return parts.reduce(function (itemObj, id) {
        if (itemObj) {
          return itemObj[id] ? itemObj[id] : itemObj;
        }
      }, item);
    }, []);
    var getItemIndexBy = function getItemIndexBy(fn) {
      var data = computedProps.data;
      if (!data || typeof fn != 'function') {
        return -1;
      }
      if (data.findIndex) {
        return data.findIndex(fn);
      }
      for (var i = 0, len = data.length; i < len; i++) {
        if (fn(data[i]) === true) {
          return i;
        }
      }
      return -1;
    };
    var getItemAt = function getItemAt(index) {
      if (!computedPropsRef.current) {
        return undefined;
      }
      var item = computedPropsRef.current.data[index];
      if (!item) {
        return;
      }
      return getItemWithCache(item);
    };
    var getItemWithCache = function getItemWithCache(item) {
      if (item && computedPropsRef.current && computedPropsRef.current.computedDataSourceCache) {
        var itemId = getItemId(item);
        var cachedItem = computedPropsRef.current.computedDataSourceCache[itemId];
        if (cachedItem) {
          item = _objectSpread(_objectSpread({}, item), cachedItem);
        }
      }
      return item;
    };
    var getItemIndex = function getItemIndex(item) {
      var computedProps = computedPropsRef.current;
      if (!computedProps) {
        return -1;
      }
      var data = computedProps.data;
      var itemId = getItemId(item);
      for (var i = 0; i < data.length; i++) {
        var dataItem = data[i];
        var dataItemId = getItemId(dataItem);
        if (dataItemId === itemId) {
          return i;
        }
      }
      return -1;
    };
    var getItemIdAt = function getItemIdAt(index) {
      if (index === -1) return;
      return getItemId(getItemAt(index));
    };
    var isRowExpandedById = function isRowExpandedById() {
      return false;
    };
    var isCellVisible = function isCellVisible(_ref2) {
      var rowIndex = _ref2.rowIndex,
        columnIndex = _ref2.columnIndex;
      var computedProps = computedPropsRef.current;
      if (!computedProps) {
        return false;
      }
      var column = computedProps.visibleColumns[columnIndex];
      if (!computedProps.rowHeightManager) {
        throw 'You need fixed row height for this method to work';
      }
      var columnStart = column.computedOffset;
      var columnEnd = columnStart + column.computedWidth;
      var rowStart = computedProps.rowHeightManager.getRowOffset(rowIndex);
      var rowEnd = rowStart + computedProps.rowHeightManager.getRowHeight(rowIndex);
      var virtualList = getVirtualList();
      var visibleTop = virtualList.scrollTop;
      var visibleBottom = visibleTop + computedProps.size.height;
      var visibleLeft = virtualList.scrollLeft;
      var visibleRight = visibleLeft + computedProps.size.width;
      var leftDiff = columnStart - visibleLeft;
      var rightDiff = visibleRight - columnEnd;
      var topDiff = rowStart - visibleTop;
      var bottomDiff = visibleBottom - rowEnd;
      if (topDiff >= 0 && bottomDiff >= 0 && leftDiff >= 0 && rightDiff >= 0) {
        return true;
      }
      return {
        topDiff: topDiff,
        bottomDiff: bottomDiff,
        leftDiff: leftDiff,
        rightDiff: rightDiff
      };
    };
    var setScrollTop = function setScrollTop(scrollTop) {
      var virtualList = getVirtualList();
      if (virtualList) {
        virtualList.scrollTop = scrollTop;
      }
    };
    var incrementScrollTop = function incrementScrollTop(increment) {
      var virtualList = getVirtualList();
      if (virtualList) {
        virtualList.scrollTop += increment;
      }
    };
    var getScrollTop = function getScrollTop() {
      var body = bodyRef.current;
      if (body && body.columnLayout) {
        return body.columnLayout.scrollTop || 0;
      }
      return 0;
    };
    var getScrollLeft = function getScrollLeft() {
      var body = bodyRef.current;
      if (body && body.columnLayout) {
        return body.columnLayout.scrollLeft || 0;
      }
      return 0;
    };
    var getScrollLeftMax = function getScrollLeftMax() {
      var virtualList = getVirtualList();
      if (virtualList) {
        return virtualList.scrollLeftMax || 0;
      }
      return 0;
    };
    var setScrollLeft = function setScrollLeft(scrollLeft) {
      var virtualList = getVirtualList();
      if (virtualList) {
        virtualList.scrollLeft = scrollLeft;
      }
    };
    var incrementScrollLeft = function incrementScrollLeft(increment) {
      var virtualList = getVirtualList();
      if (virtualList) {
        virtualList.scrollLeft += increment;
      }
    };
    var getRows = function getRows() {
      var vl = getVirtualList();
      return vl.getRows();
    };
    var getDOMNodeForRowIndex = function getDOMNodeForRowIndex(index) {
      var rows = getRows();
      var row = rows.find(function (row) {
        return row.index === index;
      });
      var rowInstance = row.getInstance();
      return rowInstance.getDOMNode ? rowInstance.getDOMNode() : rowInstance.domRef ? rowInstance.domRef.current : null;
    };
    var getHeader = function getHeader() {
      var body = bodyRef.current;
      var columnLayout = body && body.getColumnLayout();
      var header = columnLayout.getHeader();
      return header;
    };
    var scrollToId = function scrollToId(id, config, callback) {
      var index = computedProps.getRowIndexById(id);
      scrollToIndex(index, config, callback);
    };
    var scrollToIndex = function scrollToIndex(index, config, callback) {
      var computedProps = computedPropsRef.current;
      if (!computedProps) {
        return;
      }
      index = (0, _clamp.default)(index, 0, computedProps.data.length - 1);
      config = config || {};
      var top = config.top;
      var force = config.force;
      var direction = config.direction;
      var duration = config.duration;
      var offset = config.offset;
      top = !!top;
      force = !!force;
      direction = direction || (top ? 'top' : 'bottom');
      getVirtualList().scrollToIndex(index, {
        direction: direction,
        force: force,
        duration: duration,
        offset: offset
      }, callback);
    };
    var scrollToCell = function scrollToCell(_ref3) {
      var rowIndex = _ref3.rowIndex,
        columnIndex = _ref3.columnIndex;
      var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        offset = _ref4.offset,
        left = _ref4.left,
        right = _ref4.right,
        top = _ref4.top;
      var computedProps = computedPropsRef.current;
      if (!computedProps) {
        return;
      }
      if (offset === undefined) {
        offset = (computedProps.rowHeight || 50) / 2;
      }
      var columnDirection = left === true ? 'left' : left === false || right === true ? 'right' : undefined;
      var col = computedProps.visibleColumns[columnIndex];
      var scrollToRow = function scrollToRow() {
        var maxIndex = computedProps.computedTreeEnabled ? computedProps.data.length - 1 : computedProps.count - 1;
        computedProps.scrollToIndex((0, _clamp.default)(rowIndex + (top ? -0 : 0), 0, maxIndex), {
          top: top,
          offset: 0
        });
      };
      if (!col) {
        return;
      }
      if (col.computedLocked) {
        scrollToRow();
        return;
      }
      computedProps.scrollToColumn(columnIndex, {
        offset: offset,
        direction: columnDirection
      }, function () {
        scrollToRow();
      });
    };
    var smoothScrollTo = (0, _react.useCallback)(function (value, config) {
      var virtualList = getVirtualList();
      virtualList.smoothScrollTo(value, config);
    }, []);
    var scrollToColumn = (0, _react.useCallback)(function (index, config, callback) {
      var computedProps = computedPropsRef.current;
      if (!computedProps) {
        return;
      }
      if (!computedProps.size.width) {
        return requestAnimationFrame(function () {
          scrollToColumn(index, config, callback);
        });
      }
      config = config || {};
      var _config = config,
        direction = _config.direction,
        force = _config.force,
        duration = _config.duration,
        offset = _config.offset;
      if (offset === undefined) {
        offset = (computedProps.rowHeight || 50) / 2;
      }
      var col = computedProps.getColumnBy(index);
      if (col.computedLocked) {
        if (callback) {
          callback();
        }
        return;
      }
      var virtualList = getVirtualList();
      var scrollLeft = virtualList.scrollLeft;
      var scrollWidth = computedProps.size.width;
      if (direction) {
        if (direction != 'left' && direction != 'right') {
          direction = null;
        }
      }
      if (force && !direction) {
        force = false;
      }
      if (typeof callback != 'function') {
        callback = function callback() {};
      }
      var getColumnOffset = function getColumnOffset() {
        return direction === 'left' || !direction ? col.computedOffset : col.computedOffset + col.computedWidth;
      };
      var getLeftDiff = function getLeftDiff() {
        return getColumnOffset() - scrollLeft - (computedProps.totalLockedStartWidth || 0);
      };
      var getRightDiff = function getRightDiff() {
        return scrollLeft + scrollWidth - getColumnOffset() - (computedProps.totalLockedEndWidth || 0);
      };
      var leftDiff = getLeftDiff();
      var rightDiff = getRightDiff();
      var toLeft = leftDiff < 0;
      var toRight = rightDiff < 0;
      var visible = !toLeft && !toRight;
      if (!visible) {
        if (!direction) {
          direction = leftDiff < 0 ? 'left' : 'right';
          force = true;
          leftDiff = getLeftDiff();
          rightDiff = getRightDiff();
        }
      }
      if (!visible || direction && force) {
        var newScrollLeft;
        if (direction == 'left' || leftDiff < 0) {
          newScrollLeft = scrollLeft + leftDiff - offset;
        } else if (direction == 'right' || rightDiff < 0) {
          newScrollLeft = scrollLeft - rightDiff + offset;
        }
        if (newScrollLeft != null) {
          if (duration) {
            virtualList.smoothScrollTo(newScrollLeft, {
              duration: duration,
              orientation: 'horizontal'
            }, callback);
            return;
          }
          virtualList.scrollLeft = newScrollLeft;
        }
      }
      callback();
    }, []);
    var getStickyContainerHeight = function getStickyContainerHeight() {
      var _getDOMNode, _stickyContainer$scro;
      var stickyContainer = (_getDOMNode = getDOMNode()) === null || _getDOMNode === void 0 ? void 0 : _getDOMNode.querySelector(".".concat(_StickyRowsContainer.StickyRowsContainerClassName));
      var stickyContainerHeight = (_stickyContainer$scro = stickyContainer === null || stickyContainer === void 0 ? void 0 : stickyContainer.scrollHeight) !== null && _stickyContainer$scro !== void 0 ? _stickyContainer$scro : 0;
      return stickyContainerHeight;
    };
    var scrollToIndexIfNeeded = (0, _react.useCallback)(function (index, config, callback) {
      var needed = !isRowFullyVisible(index);
      if (!needed) {
        var _computedProps2 = computedPropsRef.current;
        if (_computedProps2 !== null && _computedProps2 !== void 0 && _computedProps2.computedStickyRows) {
          if (_computedProps2.computedStickyRows[index]) {
            needed = false;
          } else {
            var stickyContainerHeight = getStickyContainerHeight();
            var scrollTop = getScrollTop();
            var relativeScrollTop = scrollTop + stickyContainerHeight;
            var rowOffset = _computedProps2.rowHeightManager.getRowOffset(index);
            if (relativeScrollTop > rowOffset) {
              needed = true;
              config = config || {
                direction: 'top'
              };
              config.offset = relativeScrollTop - rowOffset + rowHeightManager.getRowHeight(index);
            }
          }
        }
      } else {
        if (computedProps !== null && computedProps !== void 0 && computedProps.computedStickyRows) {
          config = config || {
            direction: 'top'
          };
          config.offset = config.offset || 0;
          if (config.direction === 'top' || config.top) {
            config.offset += getStickyContainerHeight();
          }
        }
      }
      if (needed) {
        scrollToIndex(index, config, callback);
      } else {
        if (callback) {
          callback();
        }
      }
      return needed;
    }, []);
    var isRowFullyVisible = function isRowFullyVisible(rowIndex) {
      var list = getVirtualList();
      if (!list) {
        return false;
      }
      return list.isRowVisible(rowIndex);
    };
    var getRenderRange = function getRenderRange() {
      return bodyRef.current != null ? bodyRef.current.getRenderRange() : {
        from: 0,
        to: 0
      };
    };
    var isRowRendered = function isRowRendered(index) {
      var _getRenderRange = getRenderRange(),
        from = _getRenderRange.from,
        to = _getRenderRange.to;
      return index >= from && index < to;
    };
    var focus = function focus() {
      var virtualList = getVirtualList();
      if (!virtualList) {
        return;
      }
      var scrollContainer = virtualList.scrollContainer;
      if (!scrollContainer) {
        return;
      }
      scrollContainer.focus();
    };
    var blur = function blur() {
      var virtualList = getVirtualList();
      if (!virtualList) {
        return;
      }
      var scrollContainer = virtualList.scrollContainer;
      if (!scrollContainer) {
        return;
      }
      scrollContainer.blur();
    };
    var computeIdProperty = (0, _react.useCallback)(function () {
      var idProperty = props.idProperty;
      if (idProperty.includes(props.idPropertySeparator)) {
        return true;
      }
      return false;
    }, []);
    var computedProps = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, cProps), {}, {
      gridId: (0, _react.useMemo)(function () {
        return ++GRID_ID;
      }, []),
      isRowFullyVisible: isRowFullyVisible,
      bodyRef: bodyRef,
      notifyColumnFilterVisibleStateChange: (0, _react.useMemo)(function () {
        return (0, _notifier.notifier)(false);
      }, []),
      getMenuPortalContainer: getDOMNode,
      scrollToIndexIfNeeded: scrollToIndexIfNeeded,
      scrollToIndex: scrollToIndex,
      scrollToId: scrollToId,
      scrollToColumn: scrollToColumn,
      scrollToCell: scrollToCell,
      setScrollTop: setScrollTop,
      setScrollLeft: setScrollLeft,
      smoothScrollTo: smoothScrollTo,
      incrementScrollLeft: incrementScrollLeft,
      incrementScrollTop: incrementScrollTop,
      getScrollTop: getScrollTop,
      getScrollLeft: getScrollLeft,
      getScrollLeftMax: getScrollLeftMax,
      getHeader: getHeader,
      isCellVisible: isCellVisible,
      naturalRowHeight: typeof props.rowHeight !== 'number',
      isRowRendered: isRowRendered,
      getRenderRange: getRenderRange,
      computedShowCellBorders: computedShowCellBorders,
      setShowCellBorders: setShowCellBorders,
      groupCounts: [],
      computedLoading: computedLoading,
      setLoading: setLoading
    }, dataInfo), columnInfo), {}, {
      rowHeightManager: rowHeightManager,
      isRowExpandedById: isRowExpandedById,
      getItemId: getItemId,
      getRowId: getItemIdAt,
      getItemIndexBy: getItemIndexBy,
      getItemIndex: getItemIndex,
      getItemAt: getItemAt,
      getItemIdAt: getItemIdAt,
      getRows: getRows,
      focus: focus,
      getDOMNodeForRowIndex: getDOMNodeForRowIndex,
      blur: blur,
      computedShowHeaderBorderRight: columnInfo.totalComputedWidth < viewportAvailableWidth || props.nativeScroll && (0, _getScrollbarWidth.default)() && scrollbars.vertical,
      i18n: i18nFn,
      totalColumnCount: columnInfo.allColumns.length,
      totalComputedWidth: columnInfo.totalComputedWidth,
      minRowWidth: columnInfo.totalComputedWidth,
      columnResizeHandleWidth: (0, _clamp.default)(props.columnResizeHandleWidth, 2, 25),
      compoundIdProperty: computeIdProperty()
    });
    computedProps.rtlOffset = props.rtl ? Math.min(computedProps.size.width - computedProps.totalComputedWidth, 0) : 0;
    computedPropsRef.current = computedProps;
    var menusRef = (0, _react.useRef)([]);
    computedProps.menusRef = menusRef;
    computedProps.updateMenuPositions = function () {
      menusRef.current.forEach(function (menu) {
        if (menu && menu.updatePosition) {
          menu.updatePosition();
        }
      });
    };
    computedProps.updateMainMenuPosition = function (alignTo) {
      menusRef.current.forEach(function (menu) {
        if (menu && menu.updatePosition && !menu.props.subMenu) {
          menu.updateAlignment(alignTo);
        }
      });
    };
    computedProps.onScroll = function () {
      if (computedProps.initialProps.onScroll) {
        computedProps.initialProps.onScroll();
      }
      if (computedProps.updateMenuPositionOnScroll) {
        computedProps.updateMenuPositions();
      }
    };
    if (pluginsMap['row-details'] && pluginsMap['row-details'].hook) {
      Object.assign(computedProps, pluginsMap['row-details'].hook(props, computedProps, computedPropsRef));
    }
    computedProps.useCellSelection = pluginsMap['cell-selection'].hook;
    Object.assign(computedProps, (0, _useSelection.default)(props, computedProps, computedPropsRef));
    Object.assign(computedProps, (0, _useHeader.default)(props, computedProps));
    computedProps.scrollProps = (0, _useScrollProps.default)(props, computedProps);
    var _useState19 = (0, _react.useState)(0),
      _useState20 = (0, _slicedToArray2.default)(_useState19, 2),
      maxVisibleRows = _useState20[0],
      setMaxVisibleRows = _useState20[1];
    var _useProperty7 = (0, _useProperty13.default)(props, 'showZebraRows'),
      _useProperty8 = (0, _slicedToArray2.default)(_useProperty7, 2),
      computedShowZebraRows = _useProperty8[0],
      setShowZebraRows = _useProperty8[1];
    var _useProperty9 = (0, _useProperty13.default)(props, 'showHoverRows'),
      _useProperty10 = (0, _slicedToArray2.default)(_useProperty9, 2),
      computedShowHoverRows = _useProperty10[0],
      setShowHoverRows = _useProperty10[1];
    var _useProperty11 = (0, _useProperty13.default)(props, 'showEmptyRows'),
      _useProperty12 = (0, _slicedToArray2.default)(_useProperty11, 2),
      computedShowEmptyRows = _useProperty12[0],
      setShowEmptyRows = _useProperty12[1];
    computedProps.getVirtualList = getVirtualList;
    computedProps.computedShowZebraRows = computedShowZebraRows;
    computedProps.computedShowHoverRows = computedShowHoverRows;
    computedProps.computedShowEmptyRows = computedShowEmptyRows;
    computedProps.setShowZebraRows = setShowZebraRows;
    computedProps.setShowHoverRows = setShowHoverRows;
    computedProps.setShowEmptyRows = setShowEmptyRows;
    computedProps.maxVisibleRows = maxVisibleRows;
    var className = (0, _prepareClassName.default)(computedProps);
    var _useRow = (0, _useRow2.default)(props, computedProps, computedPropsRef),
      onKeyDown = _useRow.computedOnKeyDown,
      onFocus = _useRow.computedOnFocus,
      onBlur = _useRow.computedOnBlur,
      useRowProps = (0, _objectWithoutProperties2.default)(_useRow, _excluded);
    if (pluginsMap['locked-rows'] && pluginsMap['locked-rows'].hook) {
      Object.assign(computedProps, pluginsMap['locked-rows'].hook(props, computedProps, computedPropsRef));
    }
    if (pluginsMap['locked-columns'] && pluginsMap['locked-columns'].hook) {
      Object.assign(computedProps, pluginsMap['locked-columns'].hook(props, computedProps, computedPropsRef));
    } else if (computedProps.lockedEndColumns && computedProps.lockedEndColumns.length || computedProps.lockedStartColumns && computedProps.lockedStartColumns.length) {
      (0, _warn.communityFeatureWarn)("Locked columns", warnRef);
    }
    if (pluginsMap['footer-rows'] && pluginsMap['footer-rows'].hook) {
      Object.assign(computedProps, pluginsMap['footer-rows'].hook(props, computedProps, computedPropsRef));
    }
    if ((props.renderRowDetails || props.expandedRows || props.defaultExpandedRows) && !pluginsMap['row-details']) {
      (0, _warn.communityFeatureWarn)("Row Details and Master Details", warnRef);
    }
    if (props.lockedRows && !pluginsMap['locked-rows']) {
      (0, _warn.communityFeatureWarn)("Locked rows", warnRef);
    }
    if (props.footerRows && !pluginsMap['footer-rows']) {
      (0, _warn.communityFeatureWarn)("Footer rows", warnRef);
    }
    Object.assign(computedProps, useRowProps);
    Object.assign(computedProps, pluginsMap['menus'].hook(props, computedProps, computedPropsRef));
    var computedWillReceiveFocusRef = (0, _react.useRef)(false);
    computedProps.getState = function () {
      return context.state;
    };
    computedProps.setStateProperty = function (name, value) {
      context.state[name] = value;
    };
    computedProps.computedWillReceiveFocusRef = computedWillReceiveFocusRef;
    delete computedProps.style;
    var getScrollingElement = function getScrollingElement() {
      var scrollingElement = getVirtualList().getScrollingElement();
      if (!scrollingElement.scrollerNode) {
        scrollingElement = scrollingElement.scroller;
      }
      return scrollingElement.scrollerNode;
    };
    computedProps.getScrollingElement = getScrollingElement;
    var onGridScrollIntoView = function onGridScrollIntoView(event) {
      var gridNode = getBodyDOMNode();
      var eventTarget = event.target;
      if (event.target != gridNode) {
        return;
      }
      var scrollLeft = gridNode.scrollLeft,
        scrollTop = gridNode.scrollTop;
      if (scrollLeft) {
        gridNode.scrollLeft = computedProps.rtl ? getScrollLeftMax() : 0;
        requestAnimationFrame(function () {
          if (computedProps.wasUnmountedRef.current) {
            return;
          }
          incrementScrollLeft(scrollLeft);
        });
      }
      if (scrollTop && eventTarget) {
        eventTarget.scrollTop = 0;
        globalObject.requestAnimationFrame(function () {
          if (computedProps.wasUnmountedRef.current) {
            return;
          }
          incrementScrollTop(scrollTop);
        });
      }
    };
    var setupPassiveScrollListener = function setupPassiveScrollListener(node) {
      node.addEventListener('scroll', onGridScrollIntoView, {
        passive: true
      });
    };
    var removePassiveScrollListener = function removePassiveScrollListener(node) {
      if (node) {
        node.removeEventListener('scroll', onGridScrollIntoView, {
          passive: true
        });
      }
    };
    (0, _react.useEffect)(function () {
      computedProps.wasMountedRef.current = true;
      if (props.onDidMount) {
        props.onDidMount(computedPropsRef);
      }
      var initialScrollLeft = props.initialScrollLeft,
        initialScrollTop = props.initialScrollTop;
      if (props.skipLoadOnMount) {
        if (initialScrollTop) {
          setScrollTop(initialScrollTop);
        }
        if (initialScrollLeft) {
          setScrollLeft(initialScrollLeft);
        }
      }
      var bodyNode = getBodyDOMNode();
      setupPassiveScrollListener(bodyNode);
      return function () {
        removePassiveScrollListener(bodyNode);
        if (props.onWillUnmount) {
          props.onWillUnmount(computedPropsRef);
        }
        computedProps.wasUnmountedRef.current = true;
      };
    }, []);
    (0, _react.useEffect)(function () {
      if (props.handle) {
        props.handle(computedPropsRef);
      }
      return function () {
        if (props.handle) {
          props.handle(null);
        }
      };
    }, [props.handle]);
    (0, _react.useEffect)(function () {
      if (props.onReady && size.width) {
        props.onReady(computedPropsRef);
      }
    }, [size.width !== 0]);
    computedProps.cellNavigationRef = (0, _react.useRef)(null);
    Object.assign(computedProps, pluginsMap['row-index-column'].hook(props, computedProps, computedPropsRef));
    computedProps.coverHandleRef = (0, _react.useRef)(emptyCoverHandle);
    computedProps.rowResizeIndexRef = (0, _react.useRef)(null);
    var coverHandle = function coverHandle(_ref5) {
      var setActive = _ref5.setActive,
        setCursor = _ref5.setCursor;
      computedPropsRef.current.coverHandleRef.current = {
        setActive: setActive,
        setCursor: setCursor
      };
    };
    var activeItem = getItemAt(computedProps.computedActiveIndex);
    var activeRowHeight = computedProps.computedRowHeights && activeItem ? computedProps.computedRowHeights[getItemId(activeItem)] : computedProps.rowHeight == null ? rowHeightManager.getRowHeight(computedProps.computedActiveIndex) : computedPropsRef.rowHeight;
    computedProps.activeRowHeight = activeRowHeight || computedProps.rowHeight;
    var emptyData = computedProps.data && computedProps.data.length;
    if (computedFocused && computedProps.showActiveRowIndicator && emptyData) {
      computedProps.renderActiveRowIndicator = function (handle) {
        return _react.default.createElement(_ActiveRowIndicator.default, {
          handle: handle,
          rtl: computedProps.rtl,
          rtlOffset: computedProps.rtlOffset,
          getDOMNode: computedProps.getDOMNode,
          dataSourceCount: computedProps.data.length,
          width: computedProps.minRowWidth || 0,
          computedRowHeights: computedProps.computedRowHeights,
          computedExpandedRows: computedProps.computedExpandedRows,
          computedExpandedNodes: computedProps.computedExpandedNodes,
          activeRowHeight: computedProps.activeRowHeight,
          activeIndex: computedProps.computedActiveIndex,
          activeRowRef: computedProps.activeRowRef,
          activeRowIndicatorClassName: computedProps.activeRowIndicatorClassName
        });
      };
    }
    computedProps.computedLicenseValid = false;
    if (pluginsMap.license && pluginsMap.license.hook) {
      Object.assign(computedProps, pluginsMap.license.hook(props, computedProps, computedPropsRef));
    }
    Object.assign(computedProps, pluginsMap['clipboard'].hook(props, computedProps, computedPropsRef));
    if (edition !== 'enterprise') {
      if (props.rowIndexColumn) {
        (0, _warn.communityFeatureWarn)('Row resize (row index column)', warnRef);
      }
      if (props.livePagination) {
        (0, _warn.communityFeatureWarn)('Live pagination', warnRef);
      }
      if (props.onRowReorder != null || props.rowReorderColumn != null) {
        (0, _warn.communityFeatureWarn)('Row reorder', warnRef);
      }
      if (props.enableClipboard) {
        (0, _warn.communityFeatureWarn)('Clipboard', warnRef);
      }
    }
    delete computedProps.renderLockedStartCells;
    delete computedProps.renderLockedEndCells;
    if (pluginsMap['locked-columns']) {
      computedProps.renderLockedStartCells = pluginsMap['locked-columns'].renderLockedStartCells;
      computedProps.renderLockedEndCells = pluginsMap['locked-columns'].renderLockedEndCells;
    }
    Object.defineProperty(computedProps, 'scrollTop', {
      get: function get() {
        return getScrollTop();
      },
      set: function set(newValue) {
        setScrollTop(newValue);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(computedProps, 'scrollLeft', {
      get: function get() {
        return getScrollLeft();
      },
      set: function set(newValue) {
        setScrollLeft(newValue);
      },
      enumerable: true,
      configurable: true
    });
    computedProps.edition = edition;
    return _react.default.createElement("div", {
      style: props.style,
      className: className,
      onKeyDown: onKeyDown,
      onFocus: onFocus,
      onBlur: onBlur,
      ref: domRef
    }, _react.default.createElement(_context.Provider, {
      value: computedProps
    }, pluginsMap['row-index-column'].renderRowResizeIndicator(computedProps, computedPropsRef), _react.default.createElement(_Layout.default, {
      Footer: pluginsMap['footer-rows'] ? pluginsMap['footer-rows'].Footer : null,
      ref: bodyRef,
      renderInPortal: renderInPortal
    }), _react.default.createElement(_Cover.default, {
      handle: coverHandle
    })), computedProps.computedLicenseValid === false && edition === 'enterprise' ? pluginsMap['license'].renderLicenseNotice(computedProps, computedPropsRef) : null, _react.default.createElement(_src.default, {
      onResize: onResize,
      notifyOnMount: true
    }), renderLoadMask(computedProps), typeof pluginsMap['menus'].renderColumnContextMenu === 'function' ? pluginsMap['menus'].renderColumnContextMenu(computedProps, computedPropsRef) : null, typeof pluginsMap['menus'].renderRowContextMenu === 'function' ? pluginsMap['menus'].renderRowContextMenu(computedProps, computedPropsRef) : null, typeof pluginsMap['filters'].renderColumnFilterContextMenu === 'function' ? pluginsMap['filters'].renderColumnFilterContextMenu(computedProps, computedPropsRef) : null, _react.default.createElement("div", {
      ref: portalRef,
      className: "InovuaReactDataGrid__portal-host"
    }));
  });
  var defaultProps = {
    idProperty: 'id',
    rowHeight: 40,
    headerHeight: 40,
    filterRowHeight: 40,
    minRowHeight: 20,
    nativeScroll: false,
    autoCheckboxColumn: false,
    activateRowOnFocus: true,
    checkboxOnlyRowSelect: false,
    checkboxSelectEnableShiftKey: false,
    renderScroller: function renderScroller(domProps) {
      domProps.tabIndex = 0;
    },
    stickyHeader: false,
    enableCellBulkUpdate: false,
    enableKeyboardNavigation: true,
    scrollTopOnFilter: true,
    scrollTopOnSort: true,
    scrollTopOnGroupBy: true,
    defaultShowHeader: true,
    defaultShowEmptyRows: false,
    defaultShowHoverRows: true,
    defaultShowZebraRows: true,
    defaultShowCellBorders: true,
    allowRowTabNavigation: false,
    cellSelectionByIndex: false,
    columnResizeHandleWidth: _isMobile.default ? 15 : 5,
    columnResizeProxyWidth: 5,
    virtualizeColumnsThreshold: 15,
    shareSpaceOnResize: false,
    enableColumnFilterContextMenu: true,
    copySpreadsheetCompatibleString: false,
    clipboardSeparator: '\t',
    resizable: true,
    virtualized: true,
    allowUnsort: true,
    rtl: false,
    theme: 'default-light',
    filterTypes: _filterTypes.default,
    keyPageStep: 10,
    expandGroupTitle: true,
    allowGroupSplitOnReorder: true,
    defaultCollapsedGroups: {},
    groupPathSeparator: '/',
    nodePathSeparator: '/',
    idPropertySeparator: '.',
    groupNestingSize: 22,
    treeNestingSize: 22,
    columnMinWidth: 40,
    enableTreeRowReorderNestingChange: true,
    enableTreeRowReorderParentChange: true,
    columnReorderScrollByAmount: 20,
    rowReorderScrollByAmount: 20,
    rowReorderAutoScroll: false,
    rowReorderAutoScrollSpeed: 40,
    allowRowReorderBetweenGroups: false,
    reorderProxySize: 3,
    expandOnMouseDown: false,
    columnMaxWidth: null,
    editStartEvent: 'dblclick',
    hideGroupByColumns: true,
    defaultColumnOrder: undefined,
    columnUserSelect: false,
    columnHeaderUserSelect: false,
    stickyGroupRows: false,
    showWarnings: !_uglified.default,
    toggleRowSelectOnClick: false,
    toggleCellSelectOnClick: true,
    clearNodeCacheOnDataSourceChange: true,
    clearDataSourceCacheOnChange: true,
    preventDefaultTextSelectionOnShiftMouseDown: true,
    preventRowSelectionOnClickWithMouseMove: true,
    showColumnMenuSortOptions: true,
    showColumnMenuLockOptions: true,
    showColumnMenuFilterOptions: true,
    showColumnMenuGroupOptions: true,
    autoFocusOnEditComplete: true,
    autoFocusOnEditEscape: true,
    showActiveRowIndicator: true,
    showPivotSummaryColumns: true,
    showColumnMenuToolOnHover: !_isMobile.default,
    columnFilterContextMenuConstrainTo: true,
    columnFilterContextMenuPosition: 'absolute',
    generateIdFromPath: true,
    collapseChildrenOnAsyncNodeCollapse: true,
    collapseChildrenRecursive: true,
    selectNodesRecursive: true,
    isExpandKeyPressed: function isExpandKeyPressed(_ref6) {
      var event = _ref6.event;
      return event.key === 'ArrowRight' && event.altKey;
    },
    isCollapseKeyPressed: function isCollapseKeyPressed(_ref7) {
      var event = _ref7.event;
      return event.key === 'ArrowLeft' && event.altKey;
    },
    isStartEditKeyPressed: function isStartEditKeyPressed(_ref8) {
      var event = _ref8.event;
      return event.key === 'e' && event.ctrlKey;
    },
    rowExpandHeight: 80,
    growExpandHeightWithDetails: true,
    livePaginationLoadNextDelay: true,
    livePaginationLoadMaskHideDelay: 50,
    checkResizeDelay: 0,
    multiRowExpand: true,
    useNativeFlex: false,
    disableGroupByToolbar: false,
    updateMenuPositionOnScroll: true,
    updateMenuPositionOnColumnsChange: true,
    useRowHeightForLockedRows: true,
    nodesProperty: 'nodes',
    rowDetailsWidth: 'max-viewport-width',
    contain: 'style layout',
    rowContain: 'style layout',
    groupToString: function groupToString(obj) {
      var type = (0, _typeof2.default)(obj);
      return type == 'string' || type === 'number' || type === 'boolean' ? "".concat(obj) : JSON.stringify(obj);
    },
    scrollProps: {
      autoHide: true,
      scrollThumbMargin: 4,
      scrollThumbWidth: 6,
      scrollThumbOverWidth: 8
    },
    detailsGridCacheKey: true,
    sortFunctions: {
      date: function date(v1, v2, column) {
        if (window.moment && column.dateFormat) {
          return window.moment(v1, column.dateFormat) - window.moment(v2, column.dateFormat);
        }
        return v1 - v2;
      }
    },
    i18n: DEFAULT_I18N,
    emptyText: 'noRecords',
    isBinaryOperator: function isBinaryOperator(operator) {
      return operator === 'inrange' || operator === 'notinrange';
    },
    skipHeaderOnAutoSize: false,
    enableColumnAutosize: true
  };
  var maybeAddCols = [];
  plugins.forEach(function (plugin) {
    if (!plugin.name) {
      return;
    }
    if (typeof plugin.defaultProps === 'function') {
      var result = plugin.defaultProps(Grid.defaultProps);
      if (result != null) {
        Grid.defaultProps = _objectSpread(_objectSpread({}, Grid.defaultProps), result);
      }
    }
    if (typeof plugin.maybeAddColumns === 'function') {
      maybeAddCols.push(plugin.maybeAddColumns);
    }
  });
  if (maybeAddCols.length) {
    maybeAddColumns = function maybeAddColumns(columns, props) {
      var result = columns;
      maybeAddCols.forEach(function (fn) {
        result = fn(result, props);
      });
      return result;
    };
  }
  var TheGrid = function TheGrid(props) {
    var contextValue = (0, _react.useMemo)(function () {
      return {
        state: props.initialState || {}
      };
    }, []);
    var Context = (0, _react.useMemo)(function () {
      return _react.default.createContext(contextValue);
    }, []);
    return _react.default.createElement(Context.Provider, {
      value: contextValue
    }, _react.default.createElement(Grid, _objectSpread(_objectSpread({}, props), {}, {
      context: Context
    })));
  };
  TheGrid.defaultProps = defaultProps;
  return TheGrid;
};
var _default = GridFactory;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/filter.js":
/*!****************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/filter.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.validateFilters = exports.hasTypeOperators = exports.hasTypeOperator = exports["default"] = exports.checkForEmptyValue = exports.buildTypeOperators = exports.buildFilterParam = void 0;
var _filterTypes = _interopRequireDefault(__webpack_require__(/*! ./filterTypes */ "./node_modules/@inovua/reactdatagrid-community/filterTypes.js"));
var buildTypeOperators = function buildTypeOperators(filterTypes) {
  return Object.keys(filterTypes).reduce(function (acc, filterTypeName) {
    var filterType = filterTypes[filterTypeName];
    if (!filterType || !filterType.operators) {
      return acc;
    }
    var operators = filterType.operators.reduce(function (operatorAccumulator, operator) {
      operatorAccumulator[operator.name] = operator;
      return operatorAccumulator;
    }, {});
    acc[filterTypeName] = operators;
    return acc;
  }, {});
};
exports.buildTypeOperators = buildTypeOperators;
var buildFilterParam = function buildFilterParam(item, fv) {
  var filterTypes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _filterTypes.default;
  var columnsMap = arguments.length > 3 ? arguments[3] : undefined;
  var filterParam = {};
  var name = fv.name,
    getFilterValue = fv.getFilterValue,
    filterValue = fv.value,
    type = fv.type;
  filterParam.emptyValue = fv.hasOwnProperty('emptyValue') ? fv.emptyValue : filterTypes[type].emptyValue;
  filterParam.filterValue = filterValue;
  if (columnsMap) {
    filterParam.column = columnsMap[name];
  }
  filterParam.data = item;
  filterParam.value = typeof getFilterValue === 'function' ? getFilterValue({
    data: item,
    value: item[name]
  }) : item[name];
  return filterParam;
};
exports.buildFilterParam = buildFilterParam;
var hasTypeOperators = function hasTypeOperators(fn, currentTypeOperators, type) {
  if (!fn && !currentTypeOperators) {
    console.error("No filter of type \"".concat(type, "\" found!"));
    return true;
  }
  return false;
};
exports.hasTypeOperators = hasTypeOperators;
var hasTypeOperator = function hasTypeOperator(fn, currentTypeOperators, type, operator) {
  if (!fn && !currentTypeOperators[operator]) {
    console.error("No operator \"".concat(operator, "\" found for filter type \"").concat(type, "\"!"));
    return true;
  }
  return false;
};
exports.hasTypeOperator = hasTypeOperator;
var checkForEmptyValue = function checkForEmptyValue(filterValue, emptyValue, filterOnEmptyValue) {
  if (filterValue === emptyValue && !filterOnEmptyValue) {
    return true;
  }
  return false;
};
exports.checkForEmptyValue = checkForEmptyValue;
var validateFilters = function validateFilters(fv) {
  var _currentTypeOperators;
  var filterTypes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _filterTypes.default;
  var currentTypeOperators = arguments.length > 2 ? arguments[2] : undefined;
  var active = fv.active,
    fn = fv.fn,
    type = fv.type,
    operator = fv.operator;
  var emptyValue = fv.hasOwnProperty('emptyValue') ? fv.emptyValue : filterTypes[type].emptyValue;
  var filterOnEmptyValue = currentTypeOperators ? (_currentTypeOperators = currentTypeOperators[operator]) === null || _currentTypeOperators === void 0 ? void 0 : _currentTypeOperators.filterOnEmptyValue : undefined;
  if (active === false) {
    return true;
  }
  if (!filterTypes[type]) {
    return true;
  }
  if (hasTypeOperators(fn, currentTypeOperators, type)) {
    return true;
  }
  if (hasTypeOperator(fn, currentTypeOperators, type, operator)) {
    return true;
  }
  if (checkForEmptyValue(fv.value, emptyValue, filterOnEmptyValue)) {
    return true;
  }
  return false;
};
exports.validateFilters = validateFilters;
var doFilter = function doFilter(item, filterValueArray) {
  var filterTypes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _filterTypes.default;
  var columnsMap = arguments.length > 3 ? arguments[3] : undefined;
  var typeOperators = buildTypeOperators(filterTypes);
  for (var i = 0, len = filterValueArray.length; i < len; i++) {
    var fv = filterValueArray[i];
    var type = fv.type,
      operator = fv.operator,
      fn = fv.fn;
    var currentTypeOperators = typeOperators[type];
    if (validateFilters(fv, filterTypes, currentTypeOperators)) {
      continue;
    }
    var filterParam = buildFilterParam(item, fv, filterTypes, columnsMap);
    var filterFn = fn || currentTypeOperators[operator].fn;
    if (filterFn(filterParam) !== true) {
      return false;
    }
  }
  return true;
};
var filter = function filter(data, filterValueArray, filterTypes, columnsMap) {
  filterTypes = filterTypes || _filterTypes.default;
  var filterFn = function filterFn(item) {
    var result = doFilter(item, filterValueArray, filterTypes, columnsMap);
    return result;
  };
  if (data === undefined) {
    return filterFn;
  }
  return data.filter(filterFn);
};
var _default = filter;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/filterTypes.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/filterTypes.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.stringTypes = exports.string = exports.selectTypes = exports.select = exports.numberTypes = exports.number = exports["default"] = exports.dateTypes = exports.date = exports.booleanTypes = exports.boolean = exports.boolTypes = exports.bool = void 0;
var emptyObject = {};
var stringTypes = {
  type: 'string',
  emptyValue: '',
  operators: [{
    name: 'contains',
    fn: function fn(_ref) {
      var value = _ref.value,
        filterValue = _ref.filterValue;
      value = value || '';
      return !filterValue ? true : value.toLowerCase().indexOf(filterValue.toLowerCase()) != -1;
    }
  }, {
    name: 'notContains',
    fn: function fn(_ref2) {
      var value = _ref2.value,
        filterValue = _ref2.filterValue;
      return !filterValue ? true : (value || '').toLowerCase().indexOf(filterValue.toLowerCase()) === -1;
    }
  }, {
    name: 'eq',
    fn: function fn(_ref3) {
      var value = _ref3.value,
        filterValue = _ref3.filterValue;
      return !filterValue ? true : (value || '').toLowerCase() === filterValue.toLowerCase();
    }
  }, {
    name: 'neq',
    fn: function fn(_ref4) {
      var value = _ref4.value,
        filterValue = _ref4.filterValue;
      return !filterValue ? true : (value || '').toLowerCase() !== filterValue.toLowerCase();
    }
  }, {
    name: 'empty',
    fn: function fn(_ref5) {
      var value = _ref5.value;
      return value === '';
    },
    filterOnEmptyValue: true,
    valueOnOperatorSelect: '',
    disableFilterEditor: true
  }, {
    name: 'notEmpty',
    fn: function fn(_ref6) {
      var value = _ref6.value;
      return value !== '';
    },
    filterOnEmptyValue: true,
    valueOnOperatorSelect: '',
    disableFilterEditor: true
  }, {
    name: 'startsWith',
    fn: function fn(_ref7) {
      var value = _ref7.value,
        filterValue = _ref7.filterValue;
      return !filterValue ? true : (value || '').toLowerCase().startsWith(filterValue.toLowerCase());
    }
  }, {
    name: 'endsWith',
    fn: function fn(_ref8) {
      var value = _ref8.value,
        filterValue = _ref8.filterValue;
      return !filterValue ? true : (value || '').toLowerCase().endsWith(filterValue.toLowerCase());
    }
  }]
};
exports.string = exports.stringTypes = stringTypes;
var boolTypes = {
  type: 'bool',
  emptyValue: null,
  operators: [{
    name: 'eq',
    fn: function fn(_ref9) {
      var value = _ref9.value,
        filterValue = _ref9.filterValue;
      return filterValue != null ? filterValue === value : true;
    }
  }, {
    name: 'neq',
    fn: function fn(_ref10) {
      var value = _ref10.value,
        filterValue = _ref10.filterValue;
      return filterValue != null ? filterValue !== value : true;
    }
  }]
};
exports.boolean = exports.bool = exports.boolTypes = boolTypes;
var selectTypes = {
  type: 'select',
  emptyValue: null,
  operators: [{
    name: 'inlist',
    fn: function fn(_ref11) {
      var value = _ref11.value,
        filterValue = _ref11.filterValue;
      return !filterValue || !filterValue.length ? true : filterValue.indexOf(value) !== -1;
    }
  }, {
    name: 'notinlist',
    fn: function fn(_ref12) {
      var value = _ref12.value,
        filterValue = _ref12.filterValue;
      return !filterValue || !filterValue.length ? true : filterValue.indexOf(value) === -1;
    }
  }, {
    name: 'eq',
    fn: function fn(_ref13) {
      var value = _ref13.value,
        filterValue = _ref13.filterValue,
        emptyValue = _ref13.emptyValue;
      return filterValue !== emptyValue ? filterValue === value : true;
    }
  }, {
    name: 'neq',
    fn: function fn(_ref14) {
      var value = _ref14.value,
        filterValue = _ref14.filterValue,
        emptyValue = _ref14.emptyValue;
      return filterValue !== emptyValue ? filterValue !== value : true;
    }
  }]
};
exports.select = exports.selectTypes = selectTypes;
var booleanTypes = {
  type: 'boolean',
  emptyValue: null,
  operators: boolTypes.operators
};
exports.booleanTypes = booleanTypes;
var numberTypes = {
  type: 'number',
  emptyValue: null,
  operators: [{
    name: 'gt',
    fn: function fn(_ref15) {
      var value = _ref15.value,
        filterValue = _ref15.filterValue;
      return filterValue != null ? value > filterValue : true;
    }
  }, {
    name: 'gte',
    fn: function fn(_ref16) {
      var value = _ref16.value,
        filterValue = _ref16.filterValue;
      return filterValue != null ? value >= filterValue : true;
    }
  }, {
    name: 'lt',
    fn: function fn(_ref17) {
      var value = _ref17.value,
        filterValue = _ref17.filterValue;
      return filterValue != null ? value < filterValue : true;
    }
  }, {
    name: 'lte',
    fn: function fn(_ref18) {
      var value = _ref18.value,
        filterValue = _ref18.filterValue;
      return filterValue != null ? value <= filterValue : true;
    }
  }, {
    name: 'eq',
    fn: function fn(_ref19) {
      var value = _ref19.value,
        filterValue = _ref19.filterValue;
      return filterValue != null ? value === filterValue : true;
    }
  }, {
    name: 'neq',
    fn: function fn(_ref20) {
      var value = _ref20.value,
        filterValue = _ref20.filterValue;
      return filterValue != null ? value !== filterValue : true;
    }
  }, {
    name: 'inrange',
    fn: function fn(_ref21) {
      var value = _ref21.value,
        filterValue = _ref21.filterValue;
      var _ref22 = filterValue || emptyObject,
        start = _ref22.start,
        end = _ref22.end;
      if (start != null && end != null) {
        return value >= start && value <= end;
      }
      if (start != null) {
        return value >= start;
      }
      if (end != null) {
        return value <= end;
      }
      return true;
    }
  }, {
    name: 'notinrange',
    fn: function fn(_ref23) {
      var value = _ref23.value,
        filterValue = _ref23.filterValue;
      var _ref24 = filterValue || emptyObject,
        start = _ref24.start,
        end = _ref24.end;
      if (start != null && end != null) {
        return value < start || value > end;
      }
      if (start != null) {
        return value < start;
      }
      if (end != null) {
        return value > end;
      }
      return true;
    }
  }]
};
exports.number = exports.numberTypes = numberTypes;
var dateTypes = {
  type: 'date',
  emptyValue: '',
  operators: [{
    name: 'after',
    fn: function fn(_ref25) {
      var value = _ref25.value,
        filterValue = _ref25.filterValue,
        dateFormat = _ref25.column.dateFormat;
      return filterValue ? window.moment(window.moment(value).format(dateFormat), dateFormat).isAfter(window.moment(filterValue, dateFormat)) : true;
    }
  }, {
    name: 'afterOrOn',
    fn: function fn(_ref26) {
      var value = _ref26.value,
        filterValue = _ref26.filterValue,
        dateFormat = _ref26.column.dateFormat;
      return filterValue != null ? window.moment(window.moment(value).format(dateFormat), dateFormat).isSameOrAfter(window.moment(filterValue, dateFormat)) : true;
    }
  }, {
    name: 'before',
    fn: function fn(_ref27) {
      var value = _ref27.value,
        filterValue = _ref27.filterValue,
        dateFormat = _ref27.column.dateFormat;
      return filterValue != null ? window.moment(window.moment(value).format(dateFormat), dateFormat).isBefore(window.moment(filterValue, dateFormat)) : true;
    }
  }, {
    name: 'beforeOrOn',
    fn: function fn(_ref28) {
      var value = _ref28.value,
        filterValue = _ref28.filterValue,
        dateFormat = _ref28.column.dateFormat;
      return filterValue != null ? window.moment(window.moment(value).format(dateFormat), dateFormat).isSameOrBefore(window.moment(filterValue, dateFormat)) : true;
    }
  }, {
    name: 'eq',
    fn: function fn(_ref29) {
      var value = _ref29.value,
        filterValue = _ref29.filterValue,
        dateFormat = _ref29.column.dateFormat;
      return filterValue ? window.moment(window.moment(value).format(dateFormat), dateFormat).isSame(window.moment(filterValue, dateFormat)) : true;
    }
  }, {
    name: 'neq',
    fn: function fn(_ref30) {
      var value = _ref30.value,
        filterValue = _ref30.filterValue,
        dateFormat = _ref30.column.dateFormat;
      return filterValue ? !window.moment(window.moment(value).format(dateFormat), dateFormat).isSame(window.moment(filterValue, dateFormat)) : true;
    }
  }, {
    name: 'inrange',
    fn: function fn(_ref31) {
      var value = _ref31.value,
        filterValue = _ref31.filterValue,
        dateFormat = _ref31.column.dateFormat;
      var _ref32 = filterValue || emptyObject,
        start = _ref32.start,
        end = _ref32.end;
      if (start && end) {
        return window.moment(window.moment(value).format(dateFormat), dateFormat).isSameOrAfter(window.moment(start, dateFormat)) && window.moment(window.moment(value).format(dateFormat), dateFormat).isSameOrBefore(window.moment(end, dateFormat));
      }
      if (start) {
        return window.moment(window.moment(value).format(dateFormat), dateFormat).isSameOrAfter(window.moment(start, dateFormat));
      }
      if (end) {
        return window.moment(window.moment(value).format(dateFormat), dateFormat).isSameOrBefore(window.moment(end, dateFormat));
      }
      return true;
    }
  }, {
    name: 'notinrange',
    fn: function fn(_ref33) {
      var value = _ref33.value,
        filterValue = _ref33.filterValue,
        dateFormat = _ref33.column.dateFormat;
      var _ref34 = filterValue || emptyObject,
        start = _ref34.start,
        end = _ref34.end;
      if (start && end) {
        return window.moment(window.moment(value).format(dateFormat), dateFormat).isBefore(window.moment(start, dateFormat)) || window.moment(window.moment(value).format(dateFormat), dateFormat).isAfter(window.moment(end, dateFormat));
      }
      if (start) {
        return window.moment(window.moment(value).format(dateFormat), dateFormat).isBefore(window.moment(start, dateFormat));
      }
      if (end) {
        return window.moment(window.moment(value).format(dateFormat), dateFormat).isAfter(window.moment(end, dateFormat));
      }
      return true;
    }
  }]
};
exports.date = exports.dateTypes = dateTypes;
var defaultFilterTypes = {
  select: selectTypes,
  string: stringTypes,
  number: numberTypes,
  bool: boolTypes,
  boolean: booleanTypes,
  date: dateTypes
};
var _default = defaultFilterTypes;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/getColumnRenderCount.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/getColumnRenderCount.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _default = function _default(_ref) {
  var visibleColumns = _ref.visibleColumns,
    availableWidth = _ref.availableWidth,
    lockedStartColumns = _ref.lockedStartColumns,
    lockedEndColumns = _ref.lockedEndColumns,
    virtualizeColumns = _ref.virtualizeColumns;
  if (virtualizeColumns === false) {
    return visibleColumns.length;
  }
  var columns = (0, _toConsumableArray2.default)(visibleColumns).sort(function (a, b) {
    return a.computedWidth - b.computedWidth;
  });
  var columnWidthPrefixSums = [];
  var widthSum = 0;
  var accumulateWidth = 0;
  var columnRenderCount = 0;
  columns.forEach(function (col) {
    columnWidthPrefixSums.push(widthSum);
    widthSum += col.computedWidth;
    if (accumulateWidth <= availableWidth) {
      columnRenderCount++;
      accumulateWidth += col.computedWidth;
    }
  });
  columnRenderCount += 1;
  if (lockedStartColumns && lockedStartColumns.length) {
    columnRenderCount -= lockedStartColumns.length;
  }
  if (lockedEndColumns && lockedEndColumns.length) {
    columnRenderCount -= lockedEndColumns.length;
  }
  return columnRenderCount;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/getGlobal.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.getGlobal = getGlobal;
function getGlobal() {
  return typeof globalThis !== 'undefined' ? globalThis : window;
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/hooks/mapGroups.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/hooks/mapGroups.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var _default = function _default(groups, props) {
  var map = groups.reduce(function (acc, group) {
    if (group.name) {
      acc[group.name] = _objectSpread({}, group);
    }
    return acc;
  }, {});
  if (props.showWarnings) {
    groups.forEach(function (group) {
      if (group.group && !map[group.group]) {
        console.error("You have referred group \"".concat(group.group, "\", but it is not defined in your groups prop."));
      }
    });
  }
  Object.keys(map).map(function (groupName) {
    var count = -1;
    var group;
    var itGroupName = groupName;
    while (group = map[itGroupName]) {
      count++;
      itGroupName = group.group;
      if (!itGroupName) {
        break;
      }
    }
    map[groupName].computedDepth = count;
  });
  return map;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/hooks/useActiveIndex.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/hooks/useActiveIndex.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js"));
var _useProperty5 = _interopRequireDefault(__webpack_require__(/*! ./useProperty */ "./node_modules/@inovua/reactdatagrid-community/hooks/useProperty.js"));
var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _clamp = _interopRequireDefault(__webpack_require__(/*! ../utils/clamp */ "./node_modules/@inovua/reactdatagrid-community/utils/clamp.js"));
var _usePrevious = _interopRequireDefault(__webpack_require__(/*! ./usePrevious */ "./node_modules/@inovua/reactdatagrid-community/hooks/usePrevious.js"));
var _throttle = _interopRequireDefault(__webpack_require__(/*! @inovua/reactdatagrid-community/packages/throttle */ "./node_modules/@inovua/reactdatagrid-community/packages/throttle/index.js"));
var _getGlobal = __webpack_require__(/*! ../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
var globalObject = (0, _getGlobal.getGlobal)();
var useActiveIndex = function useActiveIndex(props, computedProps, computedPropsRef) {
  var _useProperty = (0, _useProperty5.default)(props, 'activeIndex', -1),
    _useProperty2 = (0, _slicedToArray2.default)(_useProperty, 2),
    computedActiveIndex = _useProperty2[0],
    doSetActiveIndex = _useProperty2[1];
  var _useProperty3 = (0, _useProperty5.default)(props, 'lastActiveIndex', null),
    _useProperty4 = (0, _slicedToArray2.default)(_useProperty3, 2),
    computedLastActiveIndex = _useProperty4[0],
    doSetLastActiveIndex = _useProperty4[1];
  if (!props.enableKeyboardNavigation) {
    computedActiveIndex = -1;
  }
  var setActiveIndex = (0, _react.useCallback)(function (activeIndex) {
    var computedProps = computedPropsRef.current;
    if (!computedProps || !computedProps.computedHasRowNavigation || globalObject.isNaN(activeIndex)) {
      return;
    }
    var data = computedProps.data;
    if (activeIndex >= 0) {
      activeIndex = (0, _clamp.default)(activeIndex, 0, data.length - 1);
    } else {
      activeIndex = -1;
    }
    if (activeIndex === computedProps.computedActiveIndex) {
      return;
    }
    doSetActiveIndex(activeIndex);
  }, []);
  var incrementActiveIndex = (0, _react.useCallback)(function (inc) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var computedActiveIndex = computedProps.computedActiveIndex;
    if (computedProps.activeIndexThrottle) {
      (0, _throttle.default)(function () {
        return setActiveIndex(computedActiveIndex + inc);
      }, computedProps.activeIndexThrottle, {
        trailing: true,
        leading: false
      });
    } else {
      setActiveIndex(computedActiveIndex + inc);
    }
  }, []);
  var getActiveItem = (0, _react.useCallback)(function () {
    var computedProps = computedPropsRef.current;
    return computedProps ? computedProps.data[computedProps.computedActiveIndex] : null;
  }, []);
  var getFirstVisibleIndex = (0, _react.useCallback)(function () {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return -1;
    }
    var scrollTop = computedProps.getScrollTop();
    var rowHeight = props.rowHeight;
    return Math.ceil(scrollTop / rowHeight);
  }, [props.rowHeight]);
  var oldActiveIndex = (0, _usePrevious.default)(computedActiveIndex, -1);
  (0, _react.useEffect)(function () {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    if (!computedProps.computedFocused) {
      return;
    }
    if (oldActiveIndex !== computedActiveIndex) {
      var top = computedActiveIndex < oldActiveIndex;
      computedProps.scrollToIndexIfNeeded(computedActiveIndex, {
        top: top
      });
    }
  }, [computedActiveIndex, oldActiveIndex]);
  computedProps.activeRowRef = (0, _react.useRef)(null);
  return {
    computedActiveIndex: computedActiveIndex,
    setActiveIndex: setActiveIndex,
    incrementActiveIndex: incrementActiveIndex,
    getActiveItem: getActiveItem,
    getFirstVisibleIndex: getFirstVisibleIndex,
    computedLastActiveIndex: computedLastActiveIndex,
    doSetLastActiveIndex: doSetLastActiveIndex
  };
};
var _default = useActiveIndex;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/hooks/useColumnHover.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/hooks/useColumnHover.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js"));
var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var useColumnHover = function useColumnHover(_props, _computedProps, computedPropsRef) {
  var _useState = (0, _react.useState)(-1),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    columnIndexHovered = _useState2[0],
    setColumnIndexHovered = _useState2[1];
  var onColumnMouseEnter = (0, _react.useCallback)(function (cellProps) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    if (computedProps.computedEnableColumnHover || cellProps.computedEnableColumnHover) {
      var columnIndex = cellProps.columnIndex;
      if (columnIndex != null) {
        setColumnIndexHovered(columnIndex);
      }
    }
  }, []);
  var onColumnMouseLeave = (0, _react.useCallback)(function (cellProps) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    if (computedProps.computedEnableColumnHover || cellProps.computedEnableColumnHover) {
      setColumnIndexHovered(-1);
    }
  }, []);
  return {
    columnIndexHovered: columnIndexHovered,
    onColumnMouseEnter: onColumnMouseEnter,
    onColumnMouseLeave: onColumnMouseLeave
  };
};
var _default = useColumnHover;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/hooks/useColumns.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/hooks/useColumns.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js"));
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js"));
var _columnResize = _interopRequireDefault(__webpack_require__(/*! ../utils/columnResize */ "./node_modules/@inovua/reactdatagrid-community/utils/columnResize/index.js"));
var _useColumnInfo2 = _interopRequireDefault(__webpack_require__(/*! ../normalizeColumns/useColumnInfo */ "./node_modules/@inovua/reactdatagrid-community/normalizeColumns/useColumnInfo.js"));
var _getColumnRenderCount = _interopRequireDefault(__webpack_require__(/*! ../getColumnRenderCount */ "./node_modules/@inovua/reactdatagrid-community/getColumnRenderCount.js"));
var _batchUpdate = _interopRequireDefault(__webpack_require__(/*! ../utils/batchUpdate */ "./node_modules/@inovua/reactdatagrid-community/utils/batchUpdate.js"));
var _useProperty3 = _interopRequireDefault(__webpack_require__(/*! ./useProperty */ "./node_modules/@inovua/reactdatagrid-community/hooks/useProperty.js"));
var _useNamedState3 = _interopRequireDefault(__webpack_require__(/*! ./useNamedState */ "./node_modules/@inovua/reactdatagrid-community/hooks/useNamedState.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var setColumnSizes = function setColumnSizes(newColumnSizes, columnFlexes, reservedViewportWidth, _ref) {
  var columnSizes = _ref.columnSizes,
    getColumnBy = _ref.getColumnBy,
    setColumnFlexes = _ref.setColumnFlexes,
    setColumnSizes = _ref.setColumnSizes,
    onBatchColumnResize = _ref.onBatchColumnResize,
    onColumnResize = _ref.onColumnResize;
  var reservedViewportWidthWrapper = {
    reservedViewportWidth: reservedViewportWidth
  };
  var batchColumns = onBatchColumnResize ? [] : null;
  Object.keys(newColumnSizes).forEach(function (colId) {
    var size = newColumnSizes[colId];
    var column = getColumnBy(colId, {
      initial: true
    });
    if (column != null) {
      if (batchColumns) {
        batchColumns.push({
          column: column,
          width: size,
          flex: undefined
        });
      }
      if (onColumnResize) {
        onColumnResize({
          column: column,
          width: size,
          flex: undefined
        }, reservedViewportWidthWrapper);
      }
    }
  });
  Object.keys(columnFlexes || {}).forEach(function (colId) {
    var size = columnFlexes[colId];
    var column = getColumnBy(colId, {
      initial: true
    });
    if (column) {
      if (batchColumns) {
        batchColumns.push({
          column: column,
          size: size,
          width: undefined,
          flex: size
        });
      }
      if (onColumnResize) {
        onColumnResize({
          column: column,
          size: size,
          width: undefined,
          flex: size
        }, reservedViewportWidthWrapper);
      }
    }
  });
  if (onBatchColumnResize) {
    onBatchColumnResize(batchColumns, reservedViewportWidthWrapper);
  }
  setColumnSizes(Object.assign({}, columnSizes, newColumnSizes));
  setColumnFlexes(columnFlexes);
};
var getColumnBy = function getColumnBy(propColumns, visibleColumns, columnsMap) {
  return function (idNameOrIndex, config) {
    var column;
    if ((0, _typeof2.default)(idNameOrIndex) === 'object') {
      idNameOrIndex = idNameOrIndex.id == null ? idNameOrIndex.name : idNameOrIndex.id;
    }
    if (typeof idNameOrIndex === 'number') {
      column = visibleColumns[idNameOrIndex];
    } else {
      column = columnsMap[idNameOrIndex];
    }
    if (!config || !config.initial || column && column.pivotColumn) {
      return column;
    }
    return propColumns.filter(function (c) {
      return c.id === column.id || c.name === column.id;
    })[0];
  };
};
var _default = function _default(props, _ref2, computedPropsRef) {
  var maxAvailableWidthForColumns = _ref2.maxAvailableWidthForColumns,
    lockedColumnsState = _ref2.lockedColumnsState,
    computedPivotUniqueValuesPerColumn = _ref2.computedPivotUniqueValuesPerColumn,
    computedGroups = _ref2.computedGroups,
    computedSortInfo = _ref2.computedSortInfo,
    computedFilterValueMap = _ref2.computedFilterValueMap,
    computedGroupBy = _ref2.computedGroupBy,
    computedFilterable = _ref2.computedFilterable,
    columnFlexes = _ref2.columnFlexes,
    columnSizes = _ref2.columnSizes,
    maybeAddColumns = _ref2.maybeAddColumns;
  var _useProperty = (0, _useProperty3.default)(props, 'columnOrder'),
    _useProperty2 = (0, _slicedToArray2.default)(_useProperty, 2),
    columnOrder = _useProperty2[0],
    setColumnOrder = _useProperty2[1];
  var _useNamedState = (0, _useNamedState3.default)(props.columns.reduce(function (acc, col) {
      if (col.defaultVisible === false || col.visible === false) {
        acc[col.id || col.name] = false;
      }
      return acc;
    }, {}), props.context, 'stateColumnVisibilityMap'),
    _useNamedState2 = (0, _slicedToArray2.default)(_useNamedState, 2),
    stateColumnVisibilityMap = _useNamedState2[0],
    setStateColumnVisibilityMap = _useNamedState2[1];
  var _useColumnInfo = (0, _useColumnInfo2.default)({
      showPivotSummaryColumns: props.showPivotSummaryColumns,
      lockedColumnsState: lockedColumnsState,
      columnOrder: columnOrder,
      columnFlexes: columnFlexes,
      columnSizes: columnSizes,
      pivotGrandSummaryColumn: props.pivotGrandSummaryColumn,
      columnVisibilityMap: stateColumnVisibilityMap,
      columnMinWidth: props.columnMinWidth,
      columnMaxWidth: props.columnMaxWidth,
      resizable: props.resizable,
      pivot: props.pivot,
      computedGroups: computedGroups,
      filterable: computedFilterable,
      filterValueMap: computedFilterValueMap,
      groupBy: computedGroupBy,
      groupColumn: props.groupColumn,
      rowIndexColumn: props.rowIndexColumn,
      checkboxColumn: props.checkboxColumn,
      computedPivotUniqueValuesPerColumn: computedPivotUniqueValuesPerColumn,
      editable: props.editable,
      sortable: props.sortable,
      columns: props.columns,
      rtl: props.rtl,
      sortInfo: computedSortInfo,
      availableWidth: maxAvailableWidthForColumns,
      columnDefaultWidth: props.columnDefaultWidth,
      inTransition: false,
      hideGroupByColumns: props.hideGroupByColumns,
      groupNestingSize: props.groupNestingSize,
      groupForGroupColumns: props.groupForGroupColumns || '__',
      enableRowExpand: props.enableRowExpand,
      expandedRows: props.expandedRows,
      defaultExpandedRows: props.defaultExpandedRows,
      renderRowDetails: props.renderRowDetails,
      renderDetailsGrid: props.renderDetailsGrid,
      maybeAddColumns: maybeAddColumns,
      rowExpandColumn: props.rowExpandColumn,
      onRowReorder: props.onRowReorder,
      rowReorderColumn: props.rowReorderColumn,
      renderRowDetailsExpandIcon: props.renderRowDetailsExpandIcon,
      renderRowDetailsCollapsedIcon: props.renderRowDetailsCollapsedIcon
    }),
    groupColumnSummaryReducers = _useColumnInfo.groupColumnSummaryReducers,
    pivotColumnSummaryReducers = _useColumnInfo.pivotColumnSummaryReducers,
    visibleColumns = _useColumnInfo.visibleColumns,
    lockedStartColumns = _useColumnInfo.lockedStartColumns,
    lockedEndColumns = _useColumnInfo.lockedEndColumns,
    unlockedColumns = _useColumnInfo.unlockedColumns,
    columnWidthPrefixSums = _useColumnInfo.columnWidthPrefixSums,
    columnsMap = _useColumnInfo.columnsMap,
    columnVisibilityMap = _useColumnInfo.columnVisibilityMap,
    allColumns = _useColumnInfo.allColumns,
    computedEnableRowspan = _useColumnInfo.computedEnableRowspan,
    totalComputedWidth = _useColumnInfo.totalComputedWidth,
    totalLockedStartWidth = _useColumnInfo.totalLockedStartWidth,
    totalFlexColumnCount = _useColumnInfo.totalFlexColumnCount,
    totalLockedEndWidth = _useColumnInfo.totalLockedEndWidth,
    totalUnlockedWidth = _useColumnInfo.totalUnlockedWidth,
    minColumnsSize = _useColumnInfo.minColumnsSize,
    computedHasColSpan = _useColumnInfo.computedHasColSpan,
    hasValueSetter = _useColumnInfo.hasValueSetter;
  var virtualizeColumns = props.virtualizeColumns !== undefined ? props.virtualizeColumns : visibleColumns.length >= props.virtualizeColumnsThreshold;
  if (typeof props.rowHeight !== 'number') {
    virtualizeColumns = false;
  }
  var columnRenderCount = (0, _getColumnRenderCount.default)({
    availableWidth: maxAvailableWidthForColumns,
    visibleColumns: visibleColumns,
    lockedStartColumns: lockedStartColumns,
    lockedEndColumns: lockedEndColumns,
    virtualizeColumns: virtualizeColumns
  });
  var hasLockedStart = !!lockedStartColumns.length;
  var hasLockedEnd = !!lockedEndColumns.length;
  var hasUnlocked = !!unlockedColumns.length;
  var firstUnlockedIndex = hasUnlocked ? unlockedColumns[0].computedVisibleIndex : -1;
  var firstLockedStartIndex = hasLockedStart ? lockedStartColumns[0].computedVisibleIndex : -1;
  var firstLockedEndIndex = hasLockedEnd ? lockedEndColumns[0].computedVisibleIndex : -1;
  var lastLockedEndIndex = hasLockedEnd ? lockedEndColumns[lockedEndColumns.length - 1].computedVisibleIndex : -1;
  var lastLockedStartIndex = hasLockedStart ? lockedStartColumns[lockedStartColumns.length - 1].computedVisibleIndex : -1;
  var lastUnlockedIndex = hasUnlocked ? unlockedColumns[unlockedColumns.length - 1].computedVisibleIndex : -1;
  var computedOnColumnResize = function computedOnColumnResize(_ref3) {
    var index = _ref3.index,
      groupColumns = _ref3.groupColumns,
      diff = _ref3.diff;
    var computedProps = computedPropsRef.current;
    if (computedProps == null) {
      return;
    }
    var maxAvailableWidthForColumns = computedProps.maxAvailableWidthForColumns,
      shareSpaceOnResize = computedProps.shareSpaceOnResize,
      totalComputedWidth = computedProps.totalComputedWidth;
    var result = (0, _columnResize.default)({
      columns: computedProps.visibleColumns,
      groupColumns: groupColumns,
      maxAvailableWidthForColumns: maxAvailableWidthForColumns,
      shareSpaceOnResize: shareSpaceOnResize,
      totalComputedWidth: totalComputedWidth,
      index: index,
      diff: diff
    });
    if (computedProps.rtl && diff) {
      var _totalComputedWidth = computedProps.totalComputedWidth;
      var oldScrollLeft = computedProps.getScrollLeft();
      computedProps.onNextRender(function () {
        var computedProps = computedPropsRef.current;
        if (computedProps == null) {
          return;
        }
        if (computedProps.totalComputedWidth === _totalComputedWidth + diff) {
          var newScrollLeft = oldScrollLeft + diff;
          computedProps.setScrollLeft(newScrollLeft);
        }
      });
    }
    (0, _batchUpdate.default)().commit(function () {
      var newReservedViewportWidth = computedProps.reservedViewportWidth;
      if (typeof result.maxAvailableWidthForColumns == 'number' && result.maxAvailableWidthForColumns !== maxAvailableWidthForColumns) {
        var widthDiff = result.maxAvailableWidthForColumns - maxAvailableWidthForColumns;
        newReservedViewportWidth = computedProps.reservedViewportWidth - widthDiff;
        computedProps.setReservedViewportWidth(newReservedViewportWidth);
      }
      setColumnSizes(result.newColumnSizes || {}, result.newColumnFlexes, newReservedViewportWidth, {
        getColumnBy: computedProps.getColumnBy,
        onColumnResize: computedProps.initialProps.onColumnResize,
        onBatchColumnResize: computedProps.initialProps.onBatchColumnResize,
        columnSizes: computedProps.columnSizes,
        setColumnSizes: computedProps.setColumnSizes,
        setColumnFlexes: computedProps.setColumnFlexes
      });
    });
  };
  var getColumn = getColumnBy(props.columns, visibleColumns, columnsMap);
  var setColumnVisible = function setColumnVisible(indexOrColumn, visible) {
    var column = getColumn(indexOrColumn);
    if (!column) {
      return;
    }
    if (isColumnVisible(column) === visible) {
      return;
    }
    var col = getColumn(column, {
      initial: true
    });
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    if (typeof computedProps.initialProps.onColumnVisibleChange === 'function') {
      computedProps.initialProps.onColumnVisibleChange({
        column: col,
        visible: visible
      });
    }
    if (col.visible === undefined) {
      setStateColumnVisibilityMap(_objectSpread(_objectSpread({}, stateColumnVisibilityMap), {}, (0, _defineProperty2.default)({}, column.id, !!visible)));
    } else if (computedProps.showWarnings && !computedProps.initialProps.onColumnVisibleChange) {
      console.warn("Column \"".concat(column.id, "\" has controlled visible prop set to \"").concat(column.visible, "\" but you have no \"onColumnVisibleChange\" callback prop to update column.visible prop. Use uncontrolled \"defaultVisible\" instead."));
    }
  };
  var isColumnVisible = function isColumnVisible(nameOrId) {
    var column = getColumn(nameOrId);
    if (!column) {
      return false;
    }
    return column.computedVisible === true;
  };
  var setColumnLocked = function setColumnLocked(indexOrColumn, locked) {
    var column = getColumn(indexOrColumn);
    if (locked === null) {
      locked = false;
    }
    locked = locked === true ? 'start' : locked;
    if (column.lockable === false) {
      if (props.showWarnings) {
        console.error("You are trying to lock the \"".concat(column.id, "\" column, but it is lockable===false, so it cannot be locked."));
      }
      return;
    }
    var initialColumn = getColumn(column, {
      initial: true
    });
    if (props.onColumnLockedChange) {
      props.onColumnLockedChange({
        column: initialColumn,
        locked: locked
      });
    }
    if (initialColumn.locked !== undefined) {
      return;
    }
    var computedProps = computedPropsRef.current;
    if (computedProps == null) {
      return;
    }
    var setLockedColumnsState = computedProps.setLockedColumnsState;
    setLockedColumnsState(function (lockedColumnsState) {
      return _objectSpread(_objectSpread({}, lockedColumnsState), {}, (0, _defineProperty2.default)({}, column.id, locked));
    });
  };
  var getColumnsInOrder = function getColumnsInOrder() {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return [];
    }
    var computedColumnOrder = computedProps.computedColumnOrder;
    if (!computedColumnOrder || !computedColumnOrder.length) {
      return computedProps.initialProps.columns.map(function (cId) {
        return computedProps.getColumnBy(cId);
      });
    }
    return computedColumnOrder.map(function (cId) {
      return computedProps.getColumnBy(cId);
    });
  };
  return {
    getColumnsInOrder: getColumnsInOrder,
    groupColumnSummaryReducers: groupColumnSummaryReducers,
    pivotColumnSummaryReducers: pivotColumnSummaryReducers,
    groupColumn: props.pivot ? props.groupColumn || true : props.groupColumn,
    firstLockedStartIndex: firstLockedStartIndex,
    firstLockedEndIndex: firstLockedEndIndex,
    firstUnlockedIndex: firstUnlockedIndex,
    lastLockedStartIndex: lastLockedStartIndex,
    lastUnlockedIndex: lastUnlockedIndex,
    lastLockedEndIndex: lastLockedEndIndex,
    visibleColumns: visibleColumns,
    columnWidthPrefixSums: columnWidthPrefixSums,
    lockedStartColumns: lockedStartColumns,
    lockedEndColumns: lockedEndColumns,
    unlockedColumns: unlockedColumns,
    columnVisibilityMap: columnVisibilityMap,
    computedHasColSpan: computedHasColSpan,
    setColumnLocked: setColumnLocked,
    computedColumnOrder: columnOrder,
    setColumnOrder: setColumnOrder,
    setColumnVisible: setColumnVisible,
    computeColumnSizes: setColumnSizes,
    computedPivot: props.pivot,
    totalFlexColumnCount: totalFlexColumnCount,
    showColumnMenuTool: props.pivot ? false : props.showColumnMenuTool,
    columnsMap: columnsMap,
    allColumns: allColumns,
    totalComputedWidth: totalComputedWidth,
    totalLockedStartWidth: totalLockedStartWidth,
    totalLockedEndWidth: totalLockedEndWidth,
    totalUnlockedWidth: totalUnlockedWidth,
    minColumnsSize: minColumnsSize,
    hasLockedStart: hasLockedStart,
    hasLockedEnd: hasLockedEnd,
    hasUnlocked: hasUnlocked,
    computedEnableRowspan: computedEnableRowspan,
    columnRenderCount: columnRenderCount,
    virtualizeColumns: virtualizeColumns,
    computedOnColumnResize: computedOnColumnResize,
    getColumnBy: getColumn,
    isColumnVisible: isColumnVisible,
    hasValueSetter: hasValueSetter
  };
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/hooks/useColumnsSizing.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/hooks/useColumnsSizing.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _getScrollbarWidth = _interopRequireDefault(__webpack_require__(/*! ../packages/getScrollbarWidth */ "./node_modules/@inovua/reactdatagrid-community/packages/getScrollbarWidth/index.js"));
var _defaultCheckColumnId = __webpack_require__(/*! ../normalizeColumns/defaultCheckColumnId */ "./node_modules/@inovua/reactdatagrid-community/normalizeColumns/defaultCheckColumnId.js");
var _defaultRowReorderColumnId = __webpack_require__(/*! ../normalizeColumns/defaultRowReorderColumnId */ "./node_modules/@inovua/reactdatagrid-community/normalizeColumns/defaultRowReorderColumnId.js");
var _defaultRowIndexColumnId = __webpack_require__(/*! ../normalizeColumns/defaultRowIndexColumnId */ "./node_modules/@inovua/reactdatagrid-community/normalizeColumns/defaultRowIndexColumnId.js");
var _defaultRowExpandColumnId = __webpack_require__(/*! ../normalizeColumns/defaultRowExpandColumnId */ "./node_modules/@inovua/reactdatagrid-community/normalizeColumns/defaultRowExpandColumnId.js");
var EMPTY_OBJECT = {};
var removeItemFromArray = function removeItemFromArray(array, obj) {
  var index = array.indexOf(obj);
  if (index >= 0) {
    array.splice(index, 1);
  }
};
var getColumnsWidths = function getColumnsWidths(columns) {
  return columns.reduce(function (width, column) {
    return width + column.computedWidth;
  }, 0);
};
var checkForSpecialColumns = function checkForSpecialColumns(id) {
  var specialColumns = [_defaultCheckColumnId.id, _defaultRowReorderColumnId.id, _defaultRowIndexColumnId.id, _defaultRowExpandColumnId.id];
  if (specialColumns.indexOf(id) === -1) {
    return false;
  }
  return true;
};
var useColumnsSizing = function useColumnsSizing(_props, _computedProps, computedPropsRef) {
  var computeColumnSizesToFit = function computeColumnSizesToFit(gridWidth) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var visibleColumns = computedProps.visibleColumns;
    if (gridWidth <= 0 || !visibleColumns.length) {
      return;
    }
    var columnsToSize = [];
    var columnsNotToSize = [];
    visibleColumns.forEach(function (column) {
      if (column.resizable === false) {
        columnsNotToSize.push(column);
      } else {
        columnsToSize.push(column);
      }
    });
    var columnsToResize = columnsToSize.slice(0);
    var finished = false;
    var updateColumnsNotToSize = function updateColumnsNotToSize(column) {
      removeItemFromArray(columnsToResize, column);
      columnsNotToSize.push(column);
    };
    var newColumnSizes = {};
    while (!finished) {
      finished = true;
      var availableSpace = gridWidth - getColumnsWidths(columnsNotToSize);
      var scale = availableSpace / getColumnsWidths(columnsToResize);
      var spaceForLastColumn = availableSpace;
      for (var i = columnsToResize.length - 1; i >= 0; i--) {
        var column = columnsToResize[i];
        var minWidth = column.computedMinWidth;
        var maxWidth = column.computedMaxWidth;
        var newWidth = Math.round(column.computedWidth * scale);
        if (minWidth && newWidth < minWidth) {
          newWidth = minWidth;
          updateColumnsNotToSize(column);
          finished = false;
        } else if (maxWidth && newWidth > maxWidth) {
          newWidth = maxWidth;
          updateColumnsNotToSize(column);
          finished = false;
        } else if (i === 0) {
          newWidth = spaceForLastColumn;
        }
        var columnId = column.id;
        Object.assign(newColumnSizes, (0, _defineProperty2.default)({}, columnId, newWidth));
        spaceForLastColumn -= newWidth;
      }
    }
    if (computedProps.virtualizeColumns) {
      var bodyRef = computedProps.bodyRef.current;
      var columnLayout = bodyRef.columnLayout;
      var headerLayout = columnLayout.headerLayout;
      var header = headerLayout.header;
      setTimeout(function () {
        header.updateColumns();
      }, 10);
    }
    var newReservedViewportWidth = computedProps.reservedViewportWidth;
    var columnFlexes = computedProps.columnFlexes;
    computedProps.computeColumnSizes(newColumnSizes || {}, columnFlexes || {}, newReservedViewportWidth, {
      getColumnBy: computedProps.getColumnBy,
      onColumnResize: computedProps.initialProps.onColumnResize,
      onBatchColumnResize: computedProps.initialProps.onBatchColumnResize,
      columnSizes: computedProps.columnSizes,
      setColumnSizes: computedProps.setColumnSizes,
      setColumnFlexes: computedProps.setColumnFlexes
    });
  };
  var checkForAvaibleWidth = function checkForAvaibleWidth() {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var scrollbars = computedProps.scrollbars;
    var hasVerticalScrollbar = scrollbars.vertical;
    var scrollbarWidth = hasVerticalScrollbar ? (0, _getScrollbarWidth.default)() : 0;
    var computedAvailableWidth = computedProps.availableWidth || 0;
    var availableWidth = computedAvailableWidth - scrollbarWidth;
    if (availableWidth > 0) {
      computeColumnSizesToFit(availableWidth);
    }
  };
  var computeColumnSizesAuto = function computeColumnSizesAuto(columns, callback) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    if (!columns.length) {
      return;
    }
    columns.forEach(function (column) {
      if (column.resizable === false || checkForSpecialColumns(column.id)) {} else {
        callback(column);
      }
    });
  };
  var getCellForColumn = function getCellForColumn(column, row) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var result;
    var columnId = column.id;
    var cells = row.getCells();
    if (!cells.length) {
      return;
    }
    cells.forEach(function (cell) {
      var cellProps = cell.props;
      var cellId = cellProps.id;
      if (columnId === cellId) {
        result = cell.domRef ? cell.domRef.current : cell.getDOMNode ? cell.getDOMNode() : null;
      }
    });
    return result;
  };
  var getCellsForColumn = function getCellsForColumn(column) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var result = [];
    if (computedProps.getRows) {
      computedProps.getRows().forEach(function (rowInstance) {
        var row = rowInstance.row;
        var cell = getCellForColumn(column, row);
        result.push(cell);
      });
    }
    return result;
  };
  var cloneIntoDummyContainer = function cloneIntoDummyContainer(cell, dummyContainer, skipSortTool) {
    var cellClone = cell && cell.cloneNode(true);
    if (!cellClone) {
      return;
    }
    cellClone.style.width = '';
    cellClone.style.minWidth = '';
    cellClone.style.maxWidth = '';
    cellClone.style.position = 'static';
    cellClone.style.left = '';
    var rowClassName = 'InovuaReactDataGrid__row';
    var headerClassName = 'InovuaReactDataGrid__header';
    var headerCellClassName = 'InovuaReactDataGrid__column-header';
    var sortToolClassName = 'InovuaReactDataGrid__sort-icon-wrapper';
    var isHeader = cellClone.classList.contains(headerCellClassName);
    var cellContent;
    cellContent = (0, _toConsumableArray2.default)(cellClone.children).find(function (cell) {
      var className = isHeader ? 'InovuaReactDataGrid__column-header__content' : 'InovuaReactDataGrid__cell__content';
      return cell.classList.contains(className);
    });
    if (isHeader && skipSortTool) {
      var sortTool = cellContent.querySelector(".".concat(sortToolClassName));
      if (sortTool) {
        cellContent = cellContent.removeChild(sortTool);
      }
    }
    if (cellContent) {
      cellContent.style.width = 'fit-content';
    } else {
      cellClone.style.width = 'fit-content';
    }
    var cloneRow = document.createElement('div');
    var cloneRowClassList = cloneRow.classList;
    if (isHeader) {
      cloneRowClassList.add(headerClassName);
      cloneRow.style.position = 'static';
    } else {
      cloneRowClassList.add(rowClassName);
    }
    var rowElement = cell.parentElement;
    while (rowElement) {
      var isRow = [rowClassName, headerClassName].some(function (cls) {
        return rowElement.classList.contains(cls);
      });
      if (isRow) {
        for (var i = 0; i < rowElement.classList.length; i++) {
          var item = rowElement.classList[i];
          cloneRowClassList.add(item);
        }
        break;
      }
      rowElement = rowElement.parentElement;
    }
    cloneRow.appendChild(cellClone);
    dummyContainer.appendChild(cloneRow);
  };
  var computeOptimizedWidth = function computeOptimizedWidth(column, skipHeader, skipSortTool) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return -1;
    }
    var cells = getCellsForColumn(column);
    if (!cells || !cells.length) {
      return -1;
    }
    if (!skipHeader) {
      var headerCell;
      var header = computedProps.getHeader();
      var headerCells = header.getCells();
      headerCells.find(function (cell) {
        var cellProps = cell.props;
        if (cellProps.id === column.id) {
          headerCell = cell.getDOMNode();
        }
      });
      if (headerCell && headerCell.classList.contains('InovuaReactDataGrid__column-header__resize-wrapper')) {
        headerCell = (0, _toConsumableArray2.default)(headerCell.children).find(function (cell) {
          return cell.classList.contains('InovuaReactDataGrid__column-header');
        });
      }
      cells.push(headerCell);
    }
    return addCellsToContainer(cells, skipHeader, skipSortTool);
  };
  var addCellsToContainer = function addCellsToContainer(cells, skipHeader, skipSortTool) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return -1;
    }
    var dummyContainer = document.createElement('span');
    dummyContainer.style.position = 'fixed';
    var vl = computedProps.getVirtualList();
    var container = vl.getContainerNode();
    container.appendChild(dummyContainer);
    (0, _toConsumableArray2.default)(cells).map(function (cell) {
      return cloneIntoDummyContainer(cell, dummyContainer, skipSortTool);
    });
    var dummyContainerWidth = dummyContainer.offsetWidth;
    if (!skipHeader) {
      dummyContainerWidth += 3;
    } else {
      dummyContainerWidth += 1;
    }
    container.removeChild(dummyContainer);
    return dummyContainerWidth;
  };
  var normaliseWidth = function normaliseWidth(column, width) {
    var minWidth = column.minWidth;
    var maxWidth = column.maxWidth;
    if (minWidth && width < minWidth) {
      width = minWidth;
    }
    if (maxWidth && width > maxWidth) {
      width = maxWidth;
    }
    return width;
  };
  var setColumnSizesToFit = function setColumnSizesToFit() {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var enableColumnAutosize = computedProps.enableColumnAutosize;
    if (!enableColumnAutosize) {
      showWarning('setColumnSizesToFit');
      return;
    }
    checkForAvaibleWidth();
  };
  var setColumnsSizesAuto = function setColumnsSizesAuto() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : EMPTY_OBJECT,
      columnIds = _ref.columnIds,
      skipHeader = _ref.skipHeader,
      skipSortTool = _ref.skipSortTool;
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var enableColumnAutosize = computedProps.enableColumnAutosize;
    if (!enableColumnAutosize) {
      showWarning('setColumnsSizesAuto');
      return;
    }
    var shouldSkipHeader = skipHeader != null ? skipHeader : computedProps.skipHeaderOnAutoSize;
    var shouldSkipSortTool = skipSortTool != null ? skipSortTool : false;
    var allIds = [];
    var columns = [];
    if (columnIds !== undefined) {
      if (Array.isArray(columnIds)) {
        allIds = columnIds;
      }
    }
    for (var i = 0; i < allIds.length; i++) {
      var id = allIds[i];
      var column = computedProps.getColumnBy(id);
      columns.push(column);
    }
    if (columns && columns.length === 0) {
      columns = computedProps.visibleColumns;
    }
    if (!columns || columns.length === 0) {
      return;
    }
    var columnsToSize = [];
    var counter = -1;
    var newColumnSizes = {};
    while (counter !== 0) {
      counter = 0;
      computeColumnSizesAuto(columns, function (column) {
        if (columnsToSize.indexOf(column) >= 0) {
          return false;
        }
        var optimizedWidth = computeOptimizedWidth(column, shouldSkipHeader, shouldSkipSortTool);
        if (optimizedWidth > 0) {
          var newWidth = normaliseWidth(column, optimizedWidth);
          var columnId = column.id;
          columnsToSize.push(column);
          Object.assign(newColumnSizes, (0, _defineProperty2.default)({}, columnId, newWidth));
          counter++;
        }
        return true;
      });
    }
    if (computedProps.virtualizeColumns) {
      var bodyRef = computedProps.bodyRef.current;
      var columnLayout = bodyRef.columnLayout;
      var headerLayout = columnLayout.headerLayout;
      var header = headerLayout.header;
      setTimeout(function () {
        header.updateColumns();
      }, 10);
    }
    var newReservedViewportWidth = computedProps.reservedViewportWidth;
    var columnFlexes = computedProps.columnFlexes;
    computedProps.computeColumnSizes(newColumnSizes || {}, columnFlexes || {}, newReservedViewportWidth, {
      getColumnBy: computedProps.getColumnBy,
      onColumnResize: computedProps.initialProps.onColumnResize,
      onBatchColumnResize: computedProps.initialProps.onBatchColumnResize,
      columnSizes: computedProps.columnSizes,
      setColumnSizes: computedProps.setColumnSizes,
      setColumnFlexes: computedProps.setColumnFlexes
    });
  };
  var setColumnSizeAuto = function setColumnSizeAuto(id, skipHeader) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var enableColumnAutosize = computedProps.enableColumnAutosize;
    if (!enableColumnAutosize) {
      showWarning('setColumnSizeAuto');
      return;
    }
    if (id) {
      setColumnsSizesAuto({
        columnIds: [id],
        skipHeader: skipHeader
      });
    }
    return;
  };
  var showWarning = function showWarning(method) {
    return console.error("In order for ".concat(method, " to work, the 'enableColumnAutosize' prop should be 'true'."));
  };
  return {
    setColumnSizesToFit: setColumnSizesToFit,
    setColumnsSizesAuto: setColumnsSizesAuto,
    setColumnSizeAuto: setColumnSizeAuto
  };
};
var _default = useColumnsSizing;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/hooks/useDataSource/computeData.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/hooks/useDataSource/computeData.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js"));
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/objectWithoutProperties */ "./node_modules/@babel/runtime/helpers/objectWithoutProperties.js"));
var _filter = _interopRequireDefault(__webpack_require__(/*! ../../filter */ "./node_modules/@inovua/reactdatagrid-community/filter.js"));
var _treeFilter = _interopRequireDefault(__webpack_require__(/*! ../../treeFilter */ "./node_modules/@inovua/reactdatagrid-community/treeFilter.js"));
var _paginate = _interopRequireDefault(__webpack_require__(/*! ../../utils/paginate */ "./node_modules/@inovua/reactdatagrid-community/utils/paginate.js"));
var _getFilterValueForColumns = _interopRequireDefault(__webpack_require__(/*! ./getFilterValueForColumns */ "./node_modules/@inovua/reactdatagrid-community/hooks/useDataSource/getFilterValueForColumns.js"));
var _getSortInfoForColumns = _interopRequireDefault(__webpack_require__(/*! ./getSortInfoForColumns */ "./node_modules/@inovua/reactdatagrid-community/hooks/useDataSource/getSortInfoForColumns.js"));
var _excluded = ["originalData"];
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var filterData = function filterData(data, _ref, config) {
  var filterValue = _ref.filterValue,
    remoteFilter = _ref.remoteFilter,
    filterTypes = _ref.filterTypes,
    columnsMap = _ref.columnsMap;
  if (!Array.isArray(filterValue) || !filterValue.length) {
    return data;
  }
  if (remoteFilter) {
    return data;
  }
  var filterValueForColumns = (0, _getFilterValueForColumns.default)(filterValue, columnsMap);
  if (!filterValueForColumns.length) {
    return data;
  }
  if (config.treeEnabled) {
    return (0, _treeFilter.default)(data, filterValueForColumns, filterTypes, columnsMap, {
      props: config.computedProps
    });
  }
  return (0, _filter.default)(data, filterValueForColumns, filterTypes, columnsMap);
};
var flow = function flow(_ref2) {
  var originalData = _ref2.originalData,
    rest = (0, _objectWithoutProperties2.default)(_ref2, _excluded);
  var input = _objectSpread(_objectSpread({}, rest), {}, {
    data: originalData,
    originalData: originalData,
    previousData: []
  });
  for (var _len = arguments.length, transforms = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    transforms[_key - 1] = arguments[_key];
  }
  return transforms.reduce(function (acc, transform) {
    acc = transform(acc);
    acc.previousData.push(acc.data);
    return acc;
  }, input);
};
var computeData = function computeData(config, computedProps, batchUpdateQueue) {
  var columnsMap = computedProps.columnsMap;
  var originalData = config.originalData || computedProps.originalData;
  var dataCountAfterFilter = undefined;
  var loading = config.loading === undefined ? computedProps.computedLoading : config.loading;
  var filterValue = config.filterValue === undefined ? computedProps.computedFilterValue : config.filterValue;
  var remoteFilter = config.remoteFilter === undefined ? computedProps.computedRemoteFilter : config.remoteFilter;
  var dataSourceCache = config.dataSourceCache === undefined ? computedProps.computedDataSourceCache : config.dataSourceCache;
  var filterTypes = computedProps.filterTypes;
  var localPagination = config.localPagination === undefined ? computedProps.computedLocalPagination : config.localPagination;
  var remoteData = config.remoteData === undefined ? computedProps.computedRemoteData : config.remoteData;
  var sortInfo = config.sortInfo === undefined ? computedProps.computedSortInfo : config.sortInfo;
  var skip = config.skip === undefined ? computedProps.computedSkip : config.skip;
  var limit = config.limit === undefined ? computedProps.computedLimit : config.limit;
  var groupBy = config.groupBy === undefined ? computedProps.computedGroupBy : config.groupBy;
  var treeEnabled = computedProps.computedTreeEnabled;
  var pivot = computedProps.pivot;
  var computedSummary = !!computedProps.summaryReducer;
  if (remoteData) {
    return {
      data: undefined,
      dataCountAfterFilter: dataCountAfterFilter
    };
  }
  var result = flow({
    originalData: originalData
  }, function (config) {
    if (dataSourceCache && Object.keys(dataSourceCache).length) {
      config.data = config.data.map(function (item) {
        var id = computedProps.getItemId(item);
        if (dataSourceCache[id]) {
          item = _objectSpread(_objectSpread({}, item), dataSourceCache[id]);
        }
        return item;
      });
    }
    return config;
  }, function (config) {
    if (filterValue && !computedProps.filterValue) {
      filterValue = (0, _getFilterValueForColumns.default)(filterValue, columnsMap);
      config.data = filterData(config.data, {
        filterValue: filterValue,
        filterTypes: filterTypes,
        remoteFilter: remoteFilter,
        columnsMap: columnsMap
      }, {
        treeEnabled: treeEnabled,
        computedProps: computedProps
      });
    }
    dataCountAfterFilter = config.data.length;
    return config;
  }, function (config) {
    if (!computedProps.sortInfo) {
      sortInfo = (0, _getSortInfoForColumns.default)(sortInfo, columnsMap);
      if (sortInfo && computedProps.sorty) {
        config.data = (0, _toConsumableArray2.default)(config.data);
        computedProps.sorty(sortInfo, config.data);
      }
    }
    return config;
  }, function (config) {
    if (treeEnabled && computedProps.computeTreeData) {
      var expandedNodes = computedProps.computedExpandedNodes;
      config.data = computedProps.computeTreeData(config.data, {
        expandedNodes: expandedNodes,
        isNodeLeaf: computedProps.isNodeLeaf,
        isNodeAsync: computedProps.isNodeAsync,
        pathSeparator: computedProps.nodePathSeparator,
        loadingNodes: computedProps.computedLoadingNodes,
        nodesName: computedProps.nodesProperty,
        nodeCache: computedProps.computedNodeCache,
        dataSourceCache: computedProps.computedDataSourceCache,
        generateIdFromPath: computedProps.generateIdFromPath,
        collapsingNodes: computedProps.collapsingNodesRef.current,
        idProperty: !computedProps.compoundIdProperty ? computedProps.idProperty : 'id'
      });
    }
    dataCountAfterFilter = config.data.length;
    return config;
  }, function (config) {
    if (computedSummary) {
      var summary = computedProps.summaryReducer.initialValue;
      var reducerFn = computedProps.summaryReducer.reducer || computedProps.summaryReducer.reduce;
      if (summary && (0, _typeof2.default)(summary) === 'object') {
        summary = _objectSpread({}, summary);
      }
      var data = config.data;
      var item;
      for (var i = 0, len = data.length; i < len; i++) {
        item = data[i];
        summary = reducerFn(summary, item, computedProps);
      }
      if (computedProps.summaryReducer.complete) {
        summary = computedProps.summaryReducer.complete(summary, data || [], computedProps);
      }
      batchUpdateQueue(function () {
        computedProps.setSummary(summary);
      });
    }
    return config;
  }, function (config) {
    if (localPagination && limit) {
      skip = skip || 0;
      config.data = (0, _paginate.default)(config.data, {
        skip: skip,
        limit: limit
      });
    }
    return config;
  }, function (config) {
    batchUpdateQueue(function () {
      computedProps.setUngroupedData(config.data);
    });
    var length = config.data.length;
    if (Array.isArray(groupBy) && groupBy.length && computedProps.computeDataStep && length) {
      config = computedProps.computeDataStep({
        groupBy: groupBy,
        batchUpdateQueue: batchUpdateQueue,
        columnsMap: columnsMap,
        computedProps: computedProps,
        config: config
      });
    }
    return config;
  });
  return {
    data: result.data,
    dataCountAfterFilter: dataCountAfterFilter || 0
  };
};
var _default = computeData;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/hooks/useDataSource/getFilterValueForColumns.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/hooks/useDataSource/getFilterValueForColumns.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var getFilterValueForColumns = function getFilterValueForColumns(filterValue, columnsMap) {
  return (filterValue || []).map(function (filterValueObject) {
    if (filterValueObject) {
      var column = columnsMap[filterValueObject.name];
      if (column) {
        if (column.type && !filterValueObject.type) {
          filterValueObject = _objectSpread(_objectSpread({}, filterValueObject), {}, {
            type: column.filterType || column.type
          });
        }
        if (typeof column.getFilterValue == 'function') {
          filterValueObject = _objectSpread(_objectSpread({}, filterValueObject), {}, {
            getFilterValue: column.getFilterValue
          });
        }
        if (typeof column.filterName === 'string') {
          filterValueObject = _objectSpread(_objectSpread({}, filterValueObject), {}, {
            name: column.filterName
          });
        }
      }
    }
    return filterValueObject;
  });
};
var _default = getFilterValueForColumns;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/hooks/useDataSource/getSortInfoForColumns.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/hooks/useDataSource/getSortInfoForColumns.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var getCol = function getCol(name, columnsMap) {
  var col = columnsMap[name];
  if (!col) {
    Object.keys(columnsMap).forEach(function (colId) {
      if (col) {
        return;
      }
      var theCol = columnsMap[colId];
      if (theCol.sortName === name) {
        col = theCol;
      }
    });
  }
  return col;
};
var getSortInfoForColumns = function getSortInfoForColumns(sortInfo, columnsMap) {
  if (!columnsMap) {
    return sortInfo;
  }
  if (!Array.isArray(sortInfo)) {
    if (sortInfo && sortInfo.name) {
      var col = getCol(sortInfo.name, columnsMap);
      sortInfo = _objectSpread({}, sortInfo);
      if (col) {
        if (typeof col.sortName === 'string') {
          sortInfo.name = col.sortName;
        }
        if (col.type) {
          sortInfo.type = col.type;
        }
        if (col.sort) {
          sortInfo.fn = function (one, two, data1, data2, sortInfo) {
            return col.sort ? col.sort(one, two, col, data1, data2, sortInfo) : 0;
          };
        }
      }
    }
    return sortInfo;
  } else {
    return sortInfo.map(function (sortInfo) {
      var col = getCol(sortInfo.name, columnsMap);
      sortInfo = _objectSpread({}, sortInfo);
      if (col && typeof col.sortName === 'string') {
        sortInfo.name = col.sortName;
      }
      if (col.type) {
        sortInfo.type = col.type;
      }
      if (col.sort) {
        sortInfo.fn = function (one, two, data1, data2, sortInfo) {
          return col.sort ? col.sort(one, two, col, data1, data2, sortInfo) : 0;
        };
      }
      return sortInfo;
    });
  }
};
var _default = getSortInfoForColumns;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/hooks/useDataSource/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/hooks/useDataSource/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.isLivePagination = exports["default"] = void 0;
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js"));
var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _clamp = _interopRequireDefault(__webpack_require__(/*! ../../utils/clamp */ "./node_modules/@inovua/reactdatagrid-community/utils/clamp.js"));
var _getIndexBy = _interopRequireDefault(__webpack_require__(/*! ../../utils/getIndexBy */ "./node_modules/@inovua/reactdatagrid-community/utils/getIndexBy.js"));
var _fastDeepEqual = _interopRequireDefault(__webpack_require__(/*! fast-deep-equal */ "./node_modules/fast-deep-equal/index.js"));
var _useLoadDataEffect = _interopRequireDefault(__webpack_require__(/*! ../useLoadDataEffect */ "./node_modules/@inovua/reactdatagrid-community/hooks/useLoadDataEffect/index.js"));
var _useProperty7 = _interopRequireDefault(__webpack_require__(/*! ../useProperty */ "./node_modules/@inovua/reactdatagrid-community/hooks/useProperty.js"));
var _useNamedState9 = _interopRequireDefault(__webpack_require__(/*! ../useNamedState */ "./node_modules/@inovua/reactdatagrid-community/hooks/useNamedState.js"));
var _computeData = _interopRequireDefault(__webpack_require__(/*! ./computeData */ "./node_modules/@inovua/reactdatagrid-community/hooks/useDataSource/computeData.js"));
var _batchUpdate = _interopRequireDefault(__webpack_require__(/*! ../../utils/batchUpdate */ "./node_modules/@inovua/reactdatagrid-community/utils/batchUpdate.js"));
var _usePrevious = _interopRequireDefault(__webpack_require__(/*! ../usePrevious */ "./node_modules/@inovua/reactdatagrid-community/hooks/usePrevious.js"));
var _isControlledProperty = _interopRequireDefault(__webpack_require__(/*! ../../utils/isControlledProperty */ "./node_modules/@inovua/reactdatagrid-community/utils/isControlledProperty.js"));
var _getGlobal = __webpack_require__(/*! ../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var globalObject = (0, _getGlobal.getGlobal)();
var raf = globalObject.requestAnimationFrame;
var isRemoteData = function isRemoteData(props) {
  if (props.dataSource == null) {
    return false;
  }
  return typeof props.dataSource.then === 'function' || typeof props.dataSource === 'function';
};
var isRemoteSort = function isRemoteSort(props) {
  var remoteSort = props.remoteSort;
  return remoteSort === true || remoteSort === undefined && isRemoteData(props);
};
var isRemoteFilter = function isRemoteFilter(props) {
  var remoteFilter = props.remoteFilter;
  return remoteFilter === true || remoteFilter === undefined && isRemoteData(props);
};
var isPagination = function isPagination(props) {
  return !!props.pagination;
};
var isLocalPagination = function isLocalPagination(props) {
  return isPagination(props) && !isRemotePagination(props);
};
var isLivePagination = function isLivePagination(props) {
  return !!props.livePagination && isRemotePagination(props);
};
exports.isLivePagination = isLivePagination;
var isRemotePagination = function isRemotePagination(props) {
  var remotePagination = props.remotePagination,
    pagination = props.pagination,
    livePagination = props.livePagination;
  if (pagination === false || pagination === 'local') {
    return false;
  }
  if (pagination === 'remote' || isRemoteData(props)) {
    return true;
  }
  if (remotePagination !== undefined) {
    return remotePagination;
  }
  return !!livePagination;
};
var loadDataSource = function loadDataSource(dataSource, _ref) {
  var skip = _ref.skip,
    limit = _ref.limit,
    currentData = _ref.currentData,
    sortInfo = _ref.sortInfo,
    filterValue = _ref.filterValue,
    groupBy = _ref.groupBy;
  if (typeof dataSource === 'function') {
    dataSource = loadDataSource(dataSource({
      skip: skip,
      limit: limit,
      sortInfo: sortInfo,
      currentData: currentData,
      filterValue: filterValue,
      groupBy: groupBy
    }), {
      skip: skip,
      limit: limit,
      sortInfo: sortInfo,
      groupBy: groupBy,
      filterValue: filterValue,
      currentData: currentData
    });
  }
  if (dataSource instanceof Promise) {
    return dataSource.then(function (result) {
      if (Array.isArray(result)) {
        return {
          data: result,
          count: result.length
        };
      }
      return {
        data: result.data,
        count: result.count
      };
    });
  }
  return Promise.resolve({
    data: dataSource,
    count: dataSource.length
  });
};
var useData = function useData(_ref2, context) {
  var dataSource = _ref2.dataSource,
    skip = _ref2.skip,
    limit = _ref2.limit,
    localPagination = _ref2.localPagination;
  var data;
  var silentSetData;
  var _useNamedState = (0, _useNamedState9.default)([], context, 'data');
  var _useNamedState2 = (0, _slicedToArray2.default)(_useNamedState, 2);
  data = _useNamedState2[0];
  silentSetData = _useNamedState2[1];
  var _useState = (0, _react.useState)(null),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    dataMap = _useState2[0],
    setDataMap = _useState2[1];
  var _useState3 = (0, _react.useState)(null),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    dataIndexMap = _useState4[0],
    setDataIndexMap = _useState4[1];
  var originalData;
  var setOriginalData;
  var _useNamedState3 = (0, _useNamedState9.default)(Array.isArray(dataSource) ? dataSource : [], context, 'originalData');
  var _useNamedState4 = (0, _slicedToArray2.default)(_useNamedState3, 2);
  originalData = _useNamedState4[0];
  setOriginalData = _useNamedState4[1];
  var _useNamedState5 = (0, _useNamedState9.default)(data.length, context, 'count'),
    _useNamedState6 = (0, _slicedToArray2.default)(_useNamedState5, 2),
    count = _useNamedState6[0],
    setCount = _useNamedState6[1];
  var _useNamedState7 = (0, _useNamedState9.default)(0, context, 'dataCountAfterFilter'),
    _useNamedState8 = (0, _slicedToArray2.default)(_useNamedState7, 2),
    dataCountAfterFilter = _useNamedState8[0],
    setDataCountAfterFilter = _useNamedState8[1];
  return {
    setDataMap: setDataMap,
    dataMap: dataMap,
    dataIndexMap: dataIndexMap,
    setDataIndexMap: setDataIndexMap,
    originalData: originalData,
    setOriginalData: setOriginalData,
    data: data,
    count: count,
    dataCountAfterFilter: dataCountAfterFilter,
    silentSetData: silentSetData,
    setDataCountAfterFilter: setDataCountAfterFilter,
    setCount: setCount
  };
};
var getDataCountForPagination = function getDataCountForPagination(props) {
  var paginationCount = props.remotePagination ? props.count : props.dataCountAfterFilter != null ? props.dataCountAfterFilter : props.originalData.length;
  return paginationCount;
};
var getCurrentPage = function getCurrentPage(props) {
  return Math.floor(props.skip / props.limit) + 1;
};
var getPageCount = function getPageCount(_ref3) {
  var count = _ref3.count,
    limit = _ref3.limit;
  return Math.ceil(count / limit);
};
var getSkipForPage = function getSkipForPage(_ref4) {
  var page = _ref4.page,
    limit = _ref4.limit;
  return Math.max(0, limit * (page - 1));
};
var hasNextPage = function hasNextPage(_ref5) {
  var skip = _ref5.skip,
    limit = _ref5.limit,
    count = _ref5.count;
  return getCurrentPage({
    skip: skip,
    limit: limit
  }) < getPageCount({
    count: count,
    limit: limit
  });
};
var hasPrevPage = function hasPrevPage(_ref6) {
  var skip = _ref6.skip,
    limit = _ref6.limit,
    count = _ref6.count;
  var currentPage = getCurrentPage({
    skip: skip,
    limit: limit
  });
  return currentPage > 1 && currentPage - 1 < getPageCount({
    count: count,
    limit: limit
  });
};
var usePagination = function usePagination(_ref7, computedPropsRef) {
  var append = _ref7.append,
    reload = _ref7.reload,
    setAppend = _ref7.setAppend,
    skip = _ref7.skip,
    limit = _ref7.limit,
    count = _ref7.count,
    silentSetSkip = _ref7.setSkip,
    silentSetLimit = _ref7.setLimit,
    remotePagination = _ref7.remotePagination,
    localPagination = _ref7.localPagination,
    pagination = _ref7.pagination,
    lastSkipRef = _ref7.lastSkipRef,
    lastLimitRef = _ref7.lastLimitRef,
    dataCountAfterFilter = _ref7.dataCountAfterFilter,
    livePagination = _ref7.livePagination,
    originalData = _ref7.originalData,
    data = _ref7.data;
  var paginationCount = getDataCountForPagination({
    originalData: originalData,
    remotePagination: remotePagination,
    count: count,
    dataCountAfterFilter: dataCountAfterFilter
  });
  var setLimitOrSkip = function setLimitOrSkip(computedProps, config, queue) {
    return (0, _computeData.default)(_objectSpread(_objectSpread({
      skip: skip,
      limit: limit
    }, config), {}, {
      localPagination: localPagination
    }), computedProps, queue);
  };
  var setSkip = function setSkip(skip, config) {
    var computedProps = computedPropsRef.current;
    var queue = (0, _batchUpdate.default)();
    var computedRemoteData = computedProps.computedRemoteData;
    queue.commit(function () {
      if (config && config.append !== undefined) {
        setAppend(config.append);
      }
      if (computedRemoteData) {
        computedProps.setLoadDataTrigger(function (loadDataTrigger) {
          return [].concat((0, _toConsumableArray2.default)(loadDataTrigger), ['skip']);
        });
      }
      silentSetSkip(skip);
    });
  };
  var setLimit = function setLimit(limit) {
    var computedProps = computedPropsRef.current;
    var queue = (0, _batchUpdate.default)();
    var computedRemoteData = computedProps.computedRemoteData;
    queue.commit(function () {
      if (computedRemoteData) {
        computedProps.setLoadDataTrigger(function (loadDataTrigger) {
          return [].concat((0, _toConsumableArray2.default)(loadDataTrigger), ['limit']);
        });
      }
      silentSetLimit(limit);
    });
  };
  var incrementSkip = function incrementSkip(amount, config) {
    setSkip(skip + amount, config);
  };
  var gotoNextPage = function gotoNextPage(config) {
    if (hasNextPage({
      skip: skip,
      limit: lastLimitRef.current,
      count: paginationCount
    })) {
      incrementSkip(lastLimitRef.current, config);
    }
  };
  var gotoPrevPage = function gotoPrevPage() {
    if (hasPrevPage({
      skip: skip,
      limit: limit,
      count: paginationCount
    })) {
      incrementSkip(-limit);
    }
  };
  var gotoPage = function gotoPage(page, config) {
    page = (0, _clamp.default)(page, 1, getPageCount({
      count: paginationCount,
      limit: limit
    }));
    var force = config ? config.force : false;
    if (page === getCurrentPage({
      skip: skip,
      limit: limit
    }) && !force) {
      return;
    }
    setSkip(getSkipForPage({
      page: page,
      limit: limit
    }));
  };
  var hasNext = function hasNext() {
    return hasNextPage({
      skip: skip,
      limit: limit,
      count: paginationCount
    });
  };
  var hasPrev = function hasPrev() {
    return hasPrevPage({
      skip: skip,
      limit: limit,
      count: paginationCount
    });
  };
  var gotoFirstPage = function gotoFirstPage() {
    return gotoPage(1);
  };
  var gotoLastPage = function gotoLastPage() {
    return gotoPage(getPageCount({
      count: paginationCount,
      limit: limit
    }));
  };
  var paginationProps;
  if ((localPagination || remotePagination) && !livePagination) {
    paginationProps = {
      onSkipChange: setSkip,
      onLimitChange: setLimit,
      reload: reload,
      onRefresh: reload,
      totalCount: paginationCount,
      count: count,
      skip: skip,
      limit: limit,
      remotePagination: remotePagination,
      localPagination: localPagination,
      livePagination: livePagination,
      pagination: pagination,
      gotoPage: gotoPage,
      gotoNextPage: gotoNextPage,
      gotoFirstPage: gotoFirstPage,
      gotoLastPage: gotoLastPage,
      gotoPrevPage: gotoPrevPage,
      hasNextPage: hasNext,
      hasPrevPage: hasPrev
    };
  }
  return {
    count: count,
    paginationCount: paginationCount,
    reload: reload,
    setSkip: setSkip,
    setLimit: setLimit,
    gotoNextPage: gotoNextPage,
    gotoPrevPage: gotoPrevPage,
    hasNextPage: hasNext,
    hasPrevPage: hasPrev,
    gotoFirstPage: gotoFirstPage,
    gotoLastPage: gotoLastPage,
    gotoPage: gotoPage,
    paginationProps: paginationProps
  };
};
var useDataSourceCache = function useDataSourceCache(props, computedProps, computedPropsRef) {
  var prevDataSource = (0, _usePrevious.default)(props.dataSource, props.dataSource);
  var _useProperty = (0, _useProperty7.default)(props, 'dataSourceCache', undefined, {
      onChange: function onChange(dataSourceCache, info) {
        var computedProps = computedPropsRef.current;
        if (!computedProps) {
          return;
        }
        if (computedProps.initialProps.onDataSourceCacheChange) {
          computedProps.initialProps.onDataSourceCacheChange(dataSourceCache, info);
        }
      }
    }),
    _useProperty2 = (0, _slicedToArray2.default)(_useProperty, 2),
    dataSourceCache = _useProperty2[0],
    setDataSourceCache = _useProperty2[1];
  if (props.clearDataSourceCacheOnChange && prevDataSource !== props.dataSource) {
    dataSourceCache = undefined;
  }
  (0, _react.useLayoutEffect)(function () {
    if (props.clearDataSourceCacheOnChange) {
      setDataSourceCache(undefined);
    }
  }, [props.dataSource]);
  return [dataSourceCache, setDataSourceCache];
};
var _default = function _default(props, computedProps, computedPropsRef) {
  var computedRemoteData = isRemoteData(props);
  var computedRemoteFilter = isRemoteFilter(props);
  var computedRemoteSort = isRemoteSort(props);
  var computedLivePagination = isLivePagination(props);
  var computedRemotePagination = isRemotePagination(props);
  var computedLocalPagination = isLocalPagination(props);
  var computedPagination = computedRemotePagination || computedLocalPagination;
  var _useState5 = (0, _react.useState)([]),
    _useState6 = (0, _slicedToArray2.default)(_useState5, 2),
    ungroupedData = _useState6[0],
    setUngroupedData = _useState6[1];
  var _useState7 = (0, _react.useState)([]),
    _useState8 = (0, _slicedToArray2.default)(_useState7, 2),
    loadDataTrigger = _useState8[0],
    setLoadDataTrigger = _useState8[1];
  var _useState9 = (0, _react.useState)(false),
    _useState10 = (0, _slicedToArray2.default)(_useState9, 2),
    append = _useState10[0],
    setAppend = _useState10[1];
  var _useProperty3 = (0, _useProperty7.default)(props, 'skip', 0),
    _useProperty4 = (0, _slicedToArray2.default)(_useProperty3, 2),
    computedSkip = _useProperty4[0],
    setSkip = _useProperty4[1];
  var _useProperty5 = (0, _useProperty7.default)(props, 'limit', 50),
    _useProperty6 = (0, _slicedToArray2.default)(_useProperty5, 2),
    computedLimit = _useProperty6[0],
    setLimit = _useProperty6[1];
  var _useDataSourceCache = useDataSourceCache(props, computedProps, computedPropsRef),
    _useDataSourceCache2 = (0, _slicedToArray2.default)(_useDataSourceCache, 2),
    computedDataSourceCache = _useDataSourceCache2[0],
    setDataSourceCache = _useDataSourceCache2[1];
  var _useState11 = (0, _react.useState)(props.summaryReducer ? props.summaryReducer.initialValue : null),
    _useState12 = (0, _slicedToArray2.default)(_useState11, 2),
    summary = _useState12[0],
    setSummary = _useState12[1];
  var setItemOnReorderingGroups = function setItemOnReorderingGroups(index, item, config) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    computedProps.setItemAt(index, item, config);
    computedProps.reload();
  };
  var setItemAt = function setItemAt(index, item, config) {
    var replace = config && config.replace;
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var newItem = computedProps.getItemAt(index);
    var oldId = computedProps.getItemId(newItem);
    if (!newItem) {
      return;
    }
    if (replace) {
      newItem = item;
    } else {
      if (config && config.property) {
        newItem = _objectSpread(_objectSpread({}, newItem), {}, (0, _defineProperty2.default)({}, config.property, config.value));
      } else {
        if (config && config.deepCloning && computedProps.compoundIdProperty) {
          var parts = computedProps.idProperty.split(computedProps.idPropertySeparator);
          for (var i = 0; i < parts.length; i++) {
            var part = parts[i];
            if (newItem[part]) {
              Object.assign(newItem[part], _objectSpread({}, item[part]));
            }
          }
        } else {
          newItem = _objectSpread(_objectSpread({}, newItem), item);
        }
      }
    }
    var newId = computedProps.getItemId(newItem);
    if (newId !== oldId) {
      if (computedProps.showWarnings) {
        console.error("Cannot replace the item with another one that has a different value for the idProperty!");
      }
      return;
    }
    setDataSourceCache(_objectSpread(_objectSpread({}, computedProps.computedDataSourceCache), {}, (0, _defineProperty2.default)({}, newId, newItem)));
  };
  var setItemsAt = function setItemsAt(items, config) {
    var replace = config && config.replace;
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var newIds = {};
    for (var i = 0; i < items.length; i++) {
      var item = items[i];
      var oldId = computedProps.getItemId(item);
      var index = computedProps.getItemIndex(item);
      var newItem = computedProps.getItemAt(index);
      if (!newItem) {
        continue;
      }
      if (replace) {
        newItem = item;
      } else {
        newItem = _objectSpread(_objectSpread({}, newItem), item);
      }
      var newId = computedProps.getItemId(newItem);
      if (newId !== oldId) {
        continue;
      }
      newIds[newId] = newItem;
    }
    if (!items.length) {
      return;
    }
    setDataSourceCache(_objectSpread(_objectSpread({}, computedProps.computedDataSourceCache), newIds));
  };
  var setItemPropertyAt = function setItemPropertyAt(index, property, value) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    if (property === computedProps.idProperty) {
      if (computedProps.showWarnings) {
        console.error("Cannot update the value of the \"idProperty\" property!");
      }
    }
    var item = computedProps.getItemAt(index);
    if (item) {
      item = _objectSpread({}, item);
      item[property] = value;
      setItemAt(index, item, {
        property: property,
        value: value
      });
    }
  };
  var setItemPropertyForId = function setItemPropertyForId(id, property, value) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var index = computedProps.getRowIndexById(id);
    setItemPropertyAt(index, property, value);
  };
  var _useData = useData({
      dataSource: props.dataSource,
      skip: computedSkip,
      limit: computedLimit,
      localPagination: computedLocalPagination
    }, props.context),
    data = _useData.data,
    dataMap = _useData.dataMap,
    dataIndexMap = _useData.dataIndexMap,
    setDataIndexMap = _useData.setDataIndexMap,
    setDataMap = _useData.setDataMap,
    count = _useData.count,
    silentSetData = _useData.silentSetData,
    setCount = _useData.setCount,
    originalData = _useData.originalData,
    setOriginalData = _useData.setOriginalData,
    dataCountAfterFilter = _useData.dataCountAfterFilter,
    setDataCountAfterFilter = _useData.setDataCountAfterFilter;
  var _useState13 = (0, _react.useState)(Date.now),
    _useState14 = (0, _slicedToArray2.default)(_useState13, 2),
    reloadTimestamp = _useState14[0],
    setReloadTimestamp = _useState14[1];
  var reload = function reload() {
    setReloadTimestamp(Date.now());
  };
  var getFilteredRows = (0, _react.useCallback)(function (dataCount) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var filteredRowsCount = computedProps.filteredRowsCount;
    if (dataCount === undefined) {
      return;
    }
    if (filteredRowsCount) {
      filteredRowsCount(dataCount);
    }
  }, [dataCountAfterFilter]);
  if (computedProps.filteredRowsCount) {
    getFilteredRows(dataCountAfterFilter);
  }
  var lastSkipRef = (0, _react.useRef)(computedSkip);
  var lastFilterValueRef = (0, _react.useRef)(computedProps.computedFilterValue);
  var lastLimitRef = (0, _react.useRef)(computedLimit);
  var lastGroupBy = (0, _usePrevious.default)(computedProps.computedGroupBy, computedProps.computedGroupBy);
  var lastDataSource = (0, _usePrevious.default)(props.dataSource, props.dataSource);
  var dataPromiseRef = (0, _react.useRef)(null);
  dataPromiseRef.current = (0, _useLoadDataEffect.default)({
    getDataSource: function getDataSource(_ref8) {
      var shouldReload = _ref8.shouldReload;
      var computedProps = computedPropsRef.current;
      return shouldReload ? computedProps.dataSource : computedProps.originalData;
    }
  }, function (dataToLoad, _ref9) {
    var shouldReload = _ref9.shouldReload,
      intercept = _ref9.intercept;
    var _computedPropsRef$cur = computedPropsRef.current,
      computedSortInfo = _computedPropsRef$cur.computedSortInfo,
      computedRemoteData = _computedPropsRef$cur.computedRemoteData,
      computedFilterValue = _computedPropsRef$cur.computedFilterValue,
      computedGroupBy = _computedPropsRef$cur.computedGroupBy,
      prevOriginalData = _computedPropsRef$cur.originalData,
      skipLoadOnMount = _computedPropsRef$cur.skipLoadOnMount,
      wasMountedRef = _computedPropsRef$cur.wasMountedRef,
      initialState = _computedPropsRef$cur.initialState;
    if (!prevOriginalData.length && computedRemoteData) {
      computedPropsRef.current.setLoading(true);
    }
    var initialCount;
    if (skipLoadOnMount && !wasMountedRef.current && initialState && initialState.data) {
      dataToLoad = initialState.data;
      initialCount = initialState.count;
    }
    if (computedRemoteData && !Array.isArray(dataToLoad)) {
      computedPropsRef.current.setLoading(true);
    }
    var skipControlled = (0, _isControlledProperty.default)(computedProps.initialProps, 'skip');
    var shouldResetSkip = shouldReload && typeof props.dataSource === 'function' && props.dataSource !== lastDataSource && !skipControlled && computedPropsRef.current.computedSkip !== 0;
    if (!shouldResetSkip) {
      if (shouldReload && typeof props.dataSource === 'function' && computedPropsRef.current.computedSkip !== 0 && computedPropsRef.current.computedFilterable && (!(0, _fastDeepEqual.default)(computedPropsRef.current.computedFilterValue, lastFilterValueRef.current) || computedPropsRef.current.computedGroupBy !== lastGroupBy)) {
        shouldResetSkip = true;
      }
    }
    if (shouldResetSkip) {
      setSkip(0);
      return Promise.resolve(true);
    }
    return intercept(loadDataSource(dataToLoad, {
      sortInfo: computedSortInfo,
      currentData: computedPropsRef.current.data,
      skip: computedSkip,
      limit: computedLimit,
      filterValue: computedFilterValue,
      groupBy: computedGroupBy
    }), dataToLoad).then(function (_ref10) {
      var originalData = _ref10.data,
        count = _ref10.count;
      if (initialCount) {
        count = initialCount;
      }
      var computedProps = computedPropsRef.current;
      var queue = (0, _batchUpdate.default)();
      var data = originalData;
      var shouldAppend = computedLivePagination && !shouldReload ? computedSkip > lastSkipRef.current : append;
      if (shouldAppend) {
        originalData = prevOriginalData.concat(originalData);
        data = originalData;
      }
      var computeDataResult = (0, _computeData.default)({
        remoteData: false,
        originalData: originalData
      }, computedProps, queue);
      data = computeDataResult.data || originalData;
      var dataCountAfterFilter = computeDataResult.dataCountAfterFilter;
      var prevComputedSkip = lastSkipRef.current;
      lastSkipRef.current = computedSkip;
      lastFilterValueRef.current = computedFilterValue;
      lastLimitRef.current = computedLimit;
      var shouldIndexData = computedProps.computedRowSelectionEnabled || computedProps.computedRowExpandEnabled || computedProps.treeColumn || computedProps.treeEnabled || computedProps.rowIndexColumn || computedProps.computedRowHeights || computedProps.computedGroupBy && props.stickyGroupRows;
      var dataIndexMap = shouldIndexData && Array.isArray(data) ? {} : null;
      var stickyGroupsIndexes = props.stickyGroupRows === true || props.stickyTreeNodes === true ? {} : null;
      var dataMap = shouldIndexData && Array.isArray(data) ? data.reduce(function (acc, item, index) {
        var id = computedProps.getItemId(item);
        if (stickyGroupsIndexes) {
          if (item.__group) {
            stickyGroupsIndexes[index] = item.depth;
          }
          if (item.__nodeProps && !item.__nodeProps.leafNode) {
            stickyGroupsIndexes[index] = item.__nodeProps.depth + 1;
          }
        }
        acc[id] = item;
        dataIndexMap[id] = index;
        return acc;
      }, {}) : null;
      return queue.commit(function () {
        var computedProps = computedPropsRef.current;
        setOriginalData(originalData);
        if (computedProps.scrollTopOnSort === true && computedProps.loadDataTrigger.find(function (s) {
          return s == 'sortInfo';
        }) || computedProps.scrollTopOnSort === 'always') {
          raf(function () {
            computedProps.setScrollTop(0);
          });
        }
        if (computedSkip === 0 && prevComputedSkip > 0) {
          raf(function () {
            computedProps.setScrollTop(0);
          });
        }
        if (computedProps.scrollTopOnFilter && computedProps.loadDataTrigger.find(function (s) {
          return s == 'filterValue';
        })) {
          raf(function () {
            computedProps.setScrollTop(0);
          });
        }
        setLoadDataTrigger([]);
        if (append) {
          setAppend(false);
        }
        computedProps.setDataMap(dataMap);
        computedProps.setDataIndexMap(dataIndexMap);
        if (stickyGroupsIndexes && computedProps.setStickyGroupsIndexes) {
          computedProps.setStickyGroupsIndexes(stickyGroupsIndexes);
        }
        setDataCountAfterFilter(dataCountAfterFilter);
        if (dataCountAfterFilter != null && computedSkip >= dataCountAfterFilter && !computedRemoteData) {
          setSkip(0);
        }
        silentSetData(data || []);
        computedProps.setLoading(false);
        if (shouldReload) {
          setCount(count);
        }
      });
    }, function (_err) {});
  }, {
    reloadDeps: [props.dataSource, computedRemoteData ? computedSkip : null, computedRemoteData && !computedLivePagination ? computedLimit : null, reloadTimestamp, props.pagination, props.remotePagination, props.pivot, props.livePagination, computedRemoteData || props.groupBy ? computedProps.computedGroupBy : null, computedRemoteData ? JSON.stringify(computedProps.computedSortInfo) : null, computedRemoteData ? JSON.stringify(computedProps.computedFilterValue) : null, computedRemoteFilter ? JSON.stringify(computedProps.computedFilterValue) : null, JSON.stringify(computedProps.computedCollapsedGroups || ''), JSON.stringify(computedProps.computedExpandedGroups || '')],
    noReloadDeps: [originalData, computedProps.computedGroupBy, computedProps.groupColumn, computedProps.renderRowDetails, computedProps.treeColumn, computedProps.showGroupSummaryRow, !computedRemoteData ? computedSkip : null, !computedRemoteData ? computedLimit : null, !computedRemoteData ? JSON.stringify(computedProps.computedSortInfo) : null, !computedRemoteFilter ? JSON.stringify(computedProps.computedFilterValue) : null, computedProps.computedExpandedNodes ? JSON.stringify(computedProps.computedExpandedNodes) : null, computedProps.computedNodeCache ? JSON.stringify(computedProps.computedNodeCache) : null, computedProps.computedLoadingNodes ? JSON.stringify(computedProps.computedLoadingNodes) : null, computedDataSourceCache, computedProps.stickyGroupRows, computedProps.stickyTreeNodes]
  });
  var paginationProps = usePagination({
    append: append,
    reload: reload,
    setAppend: setAppend,
    lastSkipRef: lastSkipRef,
    lastLimitRef: lastLimitRef,
    skip: computedSkip,
    limit: computedLimit,
    count: count,
    setSkip: setSkip,
    setLimit: setLimit,
    pagination: computedPagination,
    livePagination: computedLivePagination,
    localPagination: computedLocalPagination,
    remotePagination: computedRemotePagination,
    dataCountAfterFilter: dataCountAfterFilter,
    originalData: originalData,
    data: data
  }, computedPropsRef);
  var getRowIndexById = (0, _react.useCallback)(function (rowId, data) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return -1;
    }
    var dataIndexMap = computedProps.dataIndexMap;
    if (dataIndexMap) {
      return dataIndexMap[rowId];
    }
    data = data || computedProps.data;
    return (0, _getIndexBy.default)(data, computedProps.idProperty, rowId, computedProps.getItemId, computedProps.compoundIdProperty);
  }, []);
  var getItemIndexById = (0, _react.useCallback)(function (id, data) {
    return getRowIndexById(id, data);
  }, []);
  var getData = (0, _react.useCallback)(function () {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return [];
    }
    return computedProps.data;
  }, []);
  return _objectSpread({
    getData: getData,
    getRowIndexById: getRowIndexById,
    getItemIndexById: getItemIndexById,
    data: data,
    dataMap: dataMap,
    setDataMap: setDataMap,
    dataIndexMap: dataIndexMap,
    setDataIndexMap: setDataIndexMap,
    loadDataTrigger: loadDataTrigger,
    setLoadDataTrigger: setLoadDataTrigger,
    originalData: originalData,
    setOriginalData: setOriginalData,
    ungroupedData: ungroupedData,
    setUngroupedData: setUngroupedData,
    computedSkip: computedSkip,
    computedPagination: computedPagination,
    computedLimit: computedLimit,
    computedSummary: summary,
    setSummary: setSummary,
    dataPromiseRef: dataPromiseRef,
    silentSetData: silentSetData,
    computedLivePagination: computedLivePagination,
    computedLocalPagination: computedLocalPagination,
    computedRemotePagination: computedRemotePagination,
    computedRemoteData: computedRemoteData,
    computedRemoteFilter: computedRemoteFilter,
    computedRemoteSort: computedRemoteSort,
    computedDataSourceCache: computedDataSourceCache,
    setDataSourceCache: setDataSourceCache,
    setItemPropertyAt: setItemPropertyAt,
    setItemPropertyForId: setItemPropertyForId,
    setItemAt: setItemAt,
    setItemsAt: setItemsAt,
    setItemOnReorderingGroups: setItemOnReorderingGroups
  }, paginationProps);
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/hooks/useEditable/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/hooks/useEditable/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var useEditable = function useEditable(props, computedProps, computedPropsRef) {
  var editInfoRef = (0, _react.useRef)(null);
  var isInEdit = (0, _react.useRef)(false);
  var currentEditCompletePromise = (0, _react.useRef)(Promise.resolve(true));
  var onEditStop = (0, _react.useCallback)(function (editProps) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    if (computedProps.initialProps.onEditStop) {
      computedProps.initialProps.onEditStop(editProps);
    }
    setTimeout(function () {
      editInfoRef.current = null;
    }, 0);
  }, []);
  var onEditCancel = (0, _react.useCallback)(function (editProps) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    if (computedProps.initialProps.onEditCancel) {
      computedProps.initialProps.onEditCancel(editProps);
    }
    setTimeout(function () {
      computedProps.isInEdit.current = false;
    }, 50);
  }, []);
  var onEditComplete = (0, _react.useCallback)(function (editProps) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    if (computedProps.autoFocusOnEditComplete) {
      computedProps.focus();
    }
    if (computedProps.initialProps.onEditComplete) {
      currentEditCompletePromise.current = Promise.resolve(computedProps.initialProps.onEditComplete(editProps));
    }
    computedProps.isInEdit.current = false;
  }, []);
  var onEditValueChange = (0, _react.useCallback)(function (editProps) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    if (computedProps.initialProps.onEditValueChange) {
      computedProps.initialProps.onEditValueChange(editProps);
    }
  }, []);
  var onEditStart = (0, _react.useCallback)(function (editProps) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var columnId = editProps.columnId;
    editInfoRef.current = {
      columnId: columnId,
      columnIndex: editProps.columnIndex,
      rowId: editProps.rowId,
      rowIndex: editProps.rowIndex
    };
    if (computedProps.initialProps.onEditStart) {
      computedProps.initialProps.onEditStart(editProps);
    }
    requestAnimationFrame(function () {
      var computedProps = computedPropsRef.current;
      if (!computedProps) {
        return;
      }
      var col = computedProps.getColumnBy(columnId);
      if (!col) {
        return;
      }
      computedProps.scrollToColumn(col.computedVisibleIndex, {
        duration: 50
      });
    });
    computedProps.isInEdit.current = true;
  }, []);
  var tryStartEdit = (0, _react.useCallback)(function () {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        rowIndex: undefined,
        rowId: undefined,
        columnId: '',
        dir: 1
      },
      rowIndex = _ref.rowIndex,
      rowId = _ref.rowId,
      columnId = _ref.columnId,
      dir = _ref.dir;
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return Promise.reject(new Error("Grid was probably unmounted"));
    }
    var col = computedProps.getColumnBy(columnId);
    if (!col) {
      return Promise.reject(new Error("No column found for columnId: ".concat(columnId)));
    }
    if (rowIndex === undefined) {
      rowIndex = computedProps.getRowIndexById(rowId);
    }
    return new Promise(function (resolve, reject) {
      computedProps.scrollToIndex(rowIndex, undefined, function () {
        setTimeout(function () {
          computedProps.getColumnLayout().tryStartEdit({
            rowIndex: rowIndex,
            rowId: rowId,
            columnIndex: col.computedVisibleIndex,
            columnId: columnId,
            dir: dir
          }).then(resolve, reject);
        }, 50);
      });
    });
  }, []);
  var startEdit = (0, _react.useCallback)(function () {
    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        columnId: '',
        rowIndex: -1,
        value: '',
        rowId: undefined
      },
      columnId = _ref2.columnId,
      rowIndex = _ref2.rowIndex,
      value = _ref2.value,
      rowId = _ref2.rowId;
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return Promise.reject(new Error("Grid was probably unmounted"));
    }
    var col = computedProps.getColumnBy(columnId);
    if (!col) {
      return Promise.reject(new Error("No column found for columnId: ".concat(columnId)));
    }
    if (rowIndex === undefined) {
      rowIndex = computedProps.getRowIndexById(rowId);
    }
    return new Promise(function (resolve, reject) {
      computedProps.scrollToIndex(rowIndex, undefined, function () {
        setTimeout(function () {
          computedProps.getColumnLayout().startEdit({
            rowIndex: rowIndex,
            rowId: rowId,
            columnIndex: col.computedVisibleIndex,
            columnId: columnId,
            value: value
          }).then(resolve, reject);
        }, 50);
      });
    });
  }, []);
  var completeEdit = (0, _react.useCallback)(function () {
    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        rowIndex: undefined,
        rowId: undefined,
        columnId: '',
        dir: 1,
        value: ''
      },
      rowId = _ref3.rowId,
      rowIndex = _ref3.rowIndex,
      columnId = _ref3.columnId,
      value = _ref3.value;
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return Promise.reject(new Error("Grid was probably unmounted"));
    }
    var col = computedProps.getColumnBy(columnId);
    var editInfo = getCurrentEditInfo();
    if (!editInfo) {
      return;
    }
    if (!col && editInfo) {
      col = computedProps.getColumnBy(editInfo.columnId);
      rowIndex = editInfo.rowIndex;
    }
    if (!col) {
      return;
    }
    if (rowIndex === undefined) {
      rowIndex = computedProps.getRowIndexById(rowId);
    }
    computedProps.scrollToIndex(rowIndex, undefined, function () {
      setTimeout(function () {
        computedProps.getColumnLayout().completeEdit({
          rowIndex: rowIndex,
          columnIndex: col.computedVisibleIndex,
          value: value
        });
      }, 50);
    });
  }, []);
  var cancelEdit = (0, _react.useCallback)(function () {
    var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        rowIndex: undefined,
        columnId: undefined
      },
      rowIndex = _ref4.rowIndex,
      columnId = _ref4.columnId;
    var editInfo = editInfoRef.current;
    if (!editInfo) {
      return;
    }
    var col = columnId ? computedProps.getColumnBy(columnId) : null;
    if (!col && editInfo) {
      col = computedProps.getColumnBy(editInfo.columnId);
      rowIndex = editInfo.rowIndex;
    }
    if (!col) {
      return;
    }
    computedProps.getColumnLayout().cancelEdit({
      rowIndex: rowIndex,
      columnIndex: col.computedVisibleIndex
    });
  }, []);
  var getCurrentEditInfo = (0, _react.useCallback)(function () {
    return editInfoRef.current;
  }, []);
  return {
    getCurrentEditInfo: getCurrentEditInfo,
    startEdit: startEdit,
    onEditStart: onEditStart,
    onEditStop: onEditStop,
    onEditCancel: onEditCancel,
    onEditComplete: onEditComplete,
    onEditValueChange: onEditValueChange,
    completeEdit: completeEdit,
    cancelEdit: cancelEdit,
    tryStartEdit: tryStartEdit,
    isInEdit: isInEdit,
    currentEditCompletePromise: currentEditCompletePromise
  };
};
var _default = useEditable;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/hooks/useGroups.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/hooks/useGroups.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _mapGroups = _interopRequireDefault(__webpack_require__(/*! ./mapGroups */ "./node_modules/@inovua/reactdatagrid-community/hooks/mapGroups.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var getGroupsDepth = function getGroupsDepth(groupsMap) {
  if (!groupsMap) {
    return 0;
  }
  return Math.max.apply(Math, (0, _toConsumableArray2.default)(Object.keys(groupsMap).map(function (groupName) {
    return groupsMap[groupName].computedDepth || 0;
  })));
};
var getPivotGroups = function getPivotGroups(uniqueValuesRoot, parentGroup, pivotSummaryGroups) {
  var groups = [];
  var field = uniqueValuesRoot.field,
    values = uniqueValuesRoot.values;
  if (field && values) {
    Object.keys(values).forEach(function (value) {
      var groupId = "".concat(parentGroup ? parentGroup + '_' : '').concat(field, ":").concat(value);
      var defaultGroup = pivotSummaryGroups[field];
      var group = {
        name: groupId,
        header: value
      };
      if (defaultGroup) {
        if (typeof defaultGroup === 'function') {
          group = _objectSpread(_objectSpread({}, defaultGroup(_objectSpread(_objectSpread({}, group), {}, {
            field: field,
            values: values
          }))), group);
        } else {
          group = _objectSpread(_objectSpread({}, defaultGroup), group);
        }
      }
      if (parentGroup) {
        group.group = parentGroup;
      }
      groups.push(group);
      var nextRoot = values[value];
      groups.push.apply(groups, (0, _toConsumableArray2.default)(getPivotGroups(nextRoot, groupId, pivotSummaryGroups)));
    });
  }
  return groups;
};
var useGroups = function useGroups(props, computedProps) {
  var computedPivotUniqueValuesPerColumn = computedProps.computedPivotUniqueValuesPerColumn;
  var groups = props.groups;
  if (computedPivotUniqueValuesPerColumn && computedPivotUniqueValuesPerColumn.values) {
    var pivotSummaryGroups = computedProps.pivot ? computedProps.pivot.reduce(function (acc, pivot) {
      if (pivot && pivot.summaryGroup) {
        acc[pivot.name] = pivot.summaryGroup;
      }
      return acc;
    }, {}) : {};
    groups = getPivotGroups(computedPivotUniqueValuesPerColumn, undefined, pivotSummaryGroups);
  }
  var groupsMap = groups ? (0, _mapGroups.default)(groups, props) : null;
  var computedGroupsDepth = getGroupsDepth(groupsMap);
  return {
    computedGroups: groups,
    computedGroupsMap: groupsMap,
    computedGroupsDepth: computedGroupsDepth
  };
};
var _default = useGroups;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/hooks/useHeader.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/hooks/useHeader.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js"));
var _useProperty3 = _interopRequireDefault(__webpack_require__(/*! ./useProperty */ "./node_modules/@inovua/reactdatagrid-community/hooks/useProperty.js"));
var _default = function _default(props, computedProps) {
  var _useProperty = (0, _useProperty3.default)(props, 'showHeader'),
    _useProperty2 = (0, _slicedToArray2.default)(_useProperty, 2),
    computedShowHeader = _useProperty2[0],
    setShowHeader = _useProperty2[1];
  var result = {
    computedShowHeader: computedShowHeader,
    setShowHeader: setShowHeader
  };
  if (computedShowHeader) {
    result.onHeaderSortClick = function (colProps) {
      if (computedProps.toggleColumnSort) {
        computedProps.toggleColumnSort(colProps.id, colProps.defaultSortingDirection);
      }
    };
  }
  return result;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/hooks/useLoadDataEffect/index.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/hooks/useLoadDataEffect/index.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js"));
var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var diff = function diff(a1, a2) {
  if (a1.length != a2.length) {
    return true;
  }
  for (var i = 0; i < a1.length; i++) {
    if (!Object.is(a1[i], a2[i])) {
      return true;
    }
  }
  return false;
};
var resolved = Promise.resolve(true);
var useLoadDataEffect = function useLoadDataEffect(_ref, fn, _ref2) {
  var getDataSource = _ref.getDataSource;
  var reloadDeps = _ref2.reloadDeps,
    noReloadDeps = _ref2.noReloadDeps;
  var prevComputedDepsRef = (0, _react.useRef)([]);
  var reloadRef = (0, _react.useRef)();
  var noReloadRef = (0, _react.useRef)();
  var reloadDepsDifferent = !reloadRef.current || diff(reloadRef.current, reloadDeps);
  var noReloadDepsDifferent = !noReloadRef.current || diff(noReloadRef.current, noReloadDeps);
  var depsDifferent = reloadDepsDifferent || noReloadDepsDifferent;
  var shouldReload = reloadDepsDifferent;
  var shouldReloadRef = (0, _react.useRef)(false);
  var computedDeps = depsDifferent ? [{}] : prevComputedDepsRef.current;
  var resolveRef = (0, _react.useRef)(null);
  var promiseRef = (0, _react.useRef)(resolved);
  if (depsDifferent) {
    shouldReloadRef.current = shouldReload;
    promiseRef.current = new Promise(function (resolve) {
      resolveRef.current = resolve;
    });
  }
  var _useState = (0, _react.useState)(function () {
      return new Set();
    }),
    _useState2 = (0, _slicedToArray2.default)(_useState, 1),
    pendingSet = _useState2[0];
  var intercept = (0, _react.useCallback)(function (promise, dataSource) {
    var isRemote = typeof dataSource === 'function' || (dataSource === null || dataSource === void 0 ? void 0 : dataSource.then);
    if (!isRemote) {}
    pendingSet.clear();
    pendingSet.add(promise);
    return promise.then(function (r) {
      if (pendingSet.has(promise)) {
        pendingSet.delete(promise);
        return r;
      }
      return Promise.reject({
        message: "This request is discarded as it was still pending when a new request came in.",
        result: r
      });
    });
  }, []);
  (0, _react.useLayoutEffect)(function () {
    var reload = shouldReloadRef.current;
    var dataSource = getDataSource({
      shouldReload: reload
    });
    fn(dataSource, {
      shouldReload: reload,
      intercept: intercept
    }).then(function () {
      if (resolveRef.current) {
        resolveRef.current();
      }
    });
    shouldReloadRef.current = shouldReload;
  }, computedDeps);
  reloadRef.current = reloadDeps;
  noReloadRef.current = noReloadDeps;
  prevComputedDepsRef.current = computedDeps;
  return promiseRef.current;
};
var _default = useLoadDataEffect;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/hooks/useMemoWithObject/index.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/hooks/useMemoWithObject/index.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _default = function _default(fn, deps, equalityCheck) {
  var refId = (0, _react.useRef)(Number.MIN_SAFE_INTEGER);
  var depsRef = (0, _react.useRef)(deps);
  var prevDeps = depsRef.current;
  if (!equalityCheck(deps, prevDeps)) {
    refId.current++;
  }
  depsRef.current = deps;
  return (0, _react.useMemo)(fn, [refId.current]);
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/hooks/useNamedState.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/hooks/useNamedState.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js"));
var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _default = function _default(defaultValue, theContext, name) {
  var context = (0, _react.useContext)(theContext);
  if (context.state[name] !== undefined) {
    defaultValue = context.state[name];
  }
  var _useState = (0, _react.useState)(defaultValue),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    value = _useState2[0],
    setValue = _useState2[1];
  return [value, function (newValue) {
    if (typeof newValue === 'function') {
      newValue = newValue(value);
    }
    context.state[name] = newValue;
    setValue(newValue);
  }];
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/hooks/usePrevious.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/hooks/usePrevious.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var usePrevious = function usePrevious(value, initialValue) {
  var ref = (0, _react.useRef)(initialValue);
  (0, _react.useEffect)(function () {
    ref.current = value;
  });
  return ref.current;
};
var _default = usePrevious;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/hooks/useProperty.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/hooks/useProperty.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js"));
var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _isControlledValue = _interopRequireDefault(__webpack_require__(/*! ../utils/isControlledValue */ "./node_modules/@inovua/reactdatagrid-community/utils/isControlledValue.js"));
var _toUpperFirst = _interopRequireDefault(__webpack_require__(/*! ../utils/toUpperFirst */ "./node_modules/@inovua/reactdatagrid-community/utils/toUpperFirst.js"));
var emptyFn = function emptyFn() {};
var useProperty = function useProperty(props, propName, defaultValue, config) {
  var context = (0, _react.useContext)(props.context);
  var PropName = (0, _toUpperFirst.default)(propName);
  var defaultValueFromProps = props["default".concat(PropName)];
  var defaultValueFromRestoredState = context.state[propName];
  if (defaultValueFromRestoredState !== undefined) {
    defaultValueFromProps = defaultValueFromRestoredState;
  }
  defaultValue = defaultValueFromProps === undefined ? defaultValue : defaultValueFromProps;
  var _useState = (0, _react.useState)(defaultValue),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    stateValue = _useState2[0],
    setStateProperty = _useState2[1];
  var value = props[propName];
  var controlled = (0, _isControlledValue.default)(value);
  var onChange = config && config.onChange ? config.onChange : props["on".concat(PropName, "Change")] || emptyFn;
  var setter = function setter(value) {
    context.state[propName] = value;
    if (!controlled) {
      setStateProperty(value);
    }
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    onChange.apply(void 0, [value].concat(args));
  };
  if (!controlled) {
    value = stateValue;
  }
  return [value, setter];
};
var _default = useProperty;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/hooks/useRow/handleCellNavigation.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/hooks/useRow/handleCellNavigation.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _lodash = _interopRequireDefault(__webpack_require__(/*! lodash.throttle */ "./node_modules/lodash.throttle/index.js"));
var waitFn = _lodash.default;
var WAIT_TIME = 36;
var WAIT_PARAMS = {
  maxWait: 100,
  leading: true
};
var handleCellNavigation = function handleCellNavigation(event, computedProps) {
  var key = event.key;
  var cellNavigationRef = computedProps.cellNavigationRef;
  if (!cellNavigationRef.current) {
    cellNavigationRef.current = {
      onArrowUp: function onArrowUp() {
        var computedProps = cellNavigationRef.current.computedProps;
        if (computedProps.incrementActiveCell) {
          computedProps.incrementActiveCell([-1, 0]);
        }
      },
      onArrowDown: function onArrowDown() {
        var computedProps = cellNavigationRef.current.computedProps;
        if (computedProps.incrementActiveCell) {
          computedProps.incrementActiveCell([1, 0]);
        }
      },
      onArrowRight: function onArrowRight() {
        var computedProps = cellNavigationRef.current.computedProps;
        if (computedProps.incrementActiveCell) {
          computedProps.incrementActiveCell([0, 1]);
        }
      },
      onArrowLeft: function onArrowLeft() {
        var computedProps = cellNavigationRef.current.computedProps;
        if (computedProps.incrementActiveCell) {
          computedProps.incrementActiveCell([0, -1]);
        }
      },
      onHome: function onHome() {
        var computedProps = cellNavigationRef.current.computedProps;
        if (computedProps.setActiveCell && activeCell) {
          computedProps.setActiveCell([0, activeCell[1]]);
        }
      },
      onEnd: function onEnd() {
        var computedProps = cellNavigationRef.current.computedProps;
        if (computedProps.setActiveCell && activeCell) {
          computedProps.setActiveCell([computedProps.data.length - 1, activeCell[1]]);
        }
      },
      onPageUp: function onPageUp() {
        var computedProps = cellNavigationRef.current.computedProps;
        if (computedProps.incrementActiveCell) {
          computedProps.incrementActiveCell([-computedProps.keyPageStep, 0]);
        }
      },
      onPageDown: function onPageDown() {
        var computedProps = cellNavigationRef.current.computedProps;
        if (computedProps.incrementActiveCell) {
          computedProps.incrementActiveCell([computedProps.keyPageStep, 0]);
        }
      },
      onEnter: function onEnter() {
        var computedProps = cellNavigationRef.current.computedProps;
        if (computedProps.toggleActiveCellSelection) {
          computedProps.toggleActiveCellSelection(event);
        }
      }
    };
    Object.keys(cellNavigationRef.current).forEach(function (key) {
      var fn = cellNavigationRef.current[key];
      cellNavigationRef.current[key] = waitFn(fn, WAIT_TIME, WAIT_PARAMS);
    });
  }
  cellNavigationRef.current.computedProps = computedProps;
  var activeCell = computedProps.computedActiveCell;
  var options = {
    ArrowUp: cellNavigationRef.current.onArrowUp,
    ArrowDown: cellNavigationRef.current.onArrowDown,
    ArrowRight: cellNavigationRef.current.onArrowRight,
    ArrowLeft: cellNavigationRef.current.onArrowLeft,
    Home: cellNavigationRef.current.onHome,
    End: cellNavigationRef.current.onEnd,
    PageUp: cellNavigationRef.current.onPageUp,
    PageDown: cellNavigationRef.current.onPageDown,
    Enter: cellNavigationRef.current.onEnter
  };
  var fn = options[key];
  if (fn) {
    fn({
      shiftKey: event.shiftKey,
      ctrlKey: event.ctrlKey,
      metaKey: event.metaKey
    });
    return true;
  }
  return false;
};
var _default = handleCellNavigation;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/hooks/useRow/handleRowNavigation.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/hooks/useRow/handleRowNavigation.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _contains = _interopRequireDefault(__webpack_require__(/*! ../../packages/contains */ "./node_modules/@inovua/reactdatagrid-community/packages/contains/index.js"));
var handleRowNavigation = function handleRowNavigation(event, computedProps) {
  var key = event.key;
  var activeItem = computedProps.computedActiveItem;
  var isGroup = computedProps.isGroup(activeItem);
  var options = {
    ArrowUp: function ArrowUp() {
      return computedProps.incrementActiveIndex(-1);
    },
    ArrowDown: function ArrowDown() {
      return computedProps.incrementActiveIndex(1);
    },
    Home: function Home() {
      return computedProps.setActiveIndex(0);
    },
    Enter: function Enter(event) {
      if (!activeItem) {
        return;
      }
      if (isGroup) {
        computedProps.toggleGroup(activeItem);
        return;
      }
      computedProps.toggleActiveRowSelection(event);
    },
    End: function End() {
      return computedProps.setActiveIndex(computedProps.data.length - 1);
    },
    PageUp: function PageUp() {
      return computedProps.incrementActiveIndex(-computedProps.keyPageStep);
    },
    PageDown: function PageDown() {
      return computedProps.incrementActiveIndex(computedProps.keyPageStep);
    }
  };
  var fn = options[key];
  if (fn) {
    fn(event);
    return true;
  }
  if (computedProps.allowRowTabNavigation) {
    if (key === 'Tab') {
      var dir = event.shiftKey ? -1 : 1;
      var rowNode = computedProps.getDOMNodeForRowIndex(computedProps.computedActiveIndex);
      if (document.activeElement && rowNode && (0, _contains.default)(rowNode, document.activeElement)) {
        return false;
      }
      var nextIndex = computedProps.computedActiveIndex + dir;
      var validNextIndex = nextIndex >= 0 && nextIndex < computedProps.count;
      if (validNextIndex) {
        computedProps.incrementActiveIndex(dir);
        return true;
      }
    }
  }
  return false;
};
var _default = handleRowNavigation;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/hooks/useRow/handleSelection.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/hooks/useRow/handleSelection.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.notifySelection = exports.handleSingleSelection = exports.handleSelection = exports.handleMultiSelectionRowToggle = exports.handleMultiSelection = exports.findInitialSelectionIndex = void 0;
var _isControlledProperty = _interopRequireDefault(__webpack_require__(/*! ../../utils/isControlledProperty */ "./node_modules/@inovua/reactdatagrid-community/utils/isControlledProperty.js"));
var _batchUpdate = _interopRequireDefault(__webpack_require__(/*! ../../utils/batchUpdate */ "./node_modules/@inovua/reactdatagrid-community/utils/batchUpdate.js"));
var _getGlobal = __webpack_require__(/*! ../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
var globalObject = (0, _getGlobal.getGlobal)();
var ua = globalObject.navigator ? globalObject.navigator.userAgent : '';
var isSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;
var delay35 = function delay35(fn) {
  return function () {
    return setTimeout(fn, 35);
  };
};
var now = function now(fn) {
  return function () {
    return fn();
  };
};
var findInitialSelectionIndex = function findInitialSelectionIndex(computedProps) {
  var selected = computedProps.getSelectedMap();
  var index = null;
  if (!selected || !Object.keys(selected).length) {
    return index;
  }
  var i = 0;
  var data = computedProps.data;
  var len = data.length;
  var id;
  for (; i < len; i++) {
    id = computedProps.getItemId(data[i]);
    if (selected[id]) {
      index = i;
    }
  }
  return index;
};
exports.findInitialSelectionIndex = findInitialSelectionIndex;
var notifySelection = function notifySelection(computedProps, selected, data, unselected, queue) {
  var queueDefined = !!queue;
  queue = queue || (0, _batchUpdate.default)();
  var onSelectionChange = (isSafari ? delay35 : now)(function () {
    if (typeof computedProps.onSelectionChange == 'function') {
      computedProps.onSelectionChange({
        selected: selected,
        data: data,
        unselected: unselected,
        originalData: (computedProps === null || computedProps === void 0 ? void 0 : computedProps.originalData) || null
      });
    }
  });
  if (!(0, _isControlledProperty.default)(computedProps.initialProps, 'unselected')) {
    queue(function () {
      computedProps.setUnselected(unselected);
    });
  }
  if (!(0, _isControlledProperty.default)(computedProps.initialProps, 'selected')) {
    queue(function () {
      computedProps.setSelected(selected, {
        silent: true
      });
    });
  }
  onSelectionChange();
  if (!queueDefined) {
    queue.commit();
  }
};
exports.notifySelection = notifySelection;
var handleSingleSelection = function handleSingleSelection(rowProps, computedProps, event, queue) {
  var data = rowProps.data;
  var rowSelected = computedProps.isRowSelected(data);
  var newSelected = !rowSelected;
  var ctrlKey = event.metaKey || event.ctrlKey;
  if (!computedProps.toggleRowSelectOnClick && rowSelected && event && !ctrlKey) {
    newSelected = true;
  }
  var selectedId = newSelected ? computedProps.getItemId(data) : null;
  notifySelection(computedProps, selectedId, data, null, queue);
};
exports.handleSingleSelection = handleSingleSelection;
var handleMultiSelection = function handleMultiSelection(computedProps, data, config, queue) {
  var selIndex = config.selIndex;
  var prevShiftKeyIndex = config.prevShiftKeyIndex;
  var map = selIndex == null ? {} : Object.assign({}, computedProps.computedSelected);
  if (prevShiftKeyIndex != null && selIndex != null) {
    var min = Math.min(prevShiftKeyIndex, selIndex);
    var max = Math.max(prevShiftKeyIndex, selIndex);
    var removeArray = computedProps.data.slice(min, max + 1) || [];
    removeArray.forEach(function (item) {
      if (item) {
        var id = computedProps.getItemId(item);
        delete map[id];
      }
    });
  }
  data.forEach(function (item) {
    if (item) {
      var id = computedProps.getItemId(item);
      map[id] = item;
    }
  });
  notifySelection(computedProps, map, data, null, queue);
};
exports.handleMultiSelection = handleMultiSelection;
var handleMultiSelectionRowToggle = function handleMultiSelectionRowToggle(computedProps, data, queue) {
  var selected = computedProps.computedSelected;
  var isSelected = computedProps.isRowSelected(data);
  if (selected !== true) {
    var clone = Object.assign({}, selected);
    var id = computedProps.getItemId(data);
    if (isSelected) {
      delete clone[id];
    } else {
      clone[id] = data;
    }
    notifySelection(computedProps, clone, data, null, queue);
  } else {
    var _id = computedProps.getItemId(data);
    var unselected = Object.assign({}, computedProps.computedUnselected);
    if (isSelected) {
      unselected[_id] = data;
    } else {
      delete unselected[_id];
    }
    notifySelection(computedProps, true, data, unselected, queue);
  }
  return isSelected;
};
exports.handleMultiSelectionRowToggle = handleMultiSelectionRowToggle;
var handleSelection = function handleSelection(rowProps, computedProps, event, queue) {
  var queueDefined = !!queue;
  if (!queue) {
    queue = (0, _batchUpdate.default)();
  }
  if (!computedProps.computedRowSelectionEnabled) {
    return;
  }
  if (!computedProps.computedRowMultiSelectionEnabled) {
    handleSingleSelection(rowProps, computedProps, event, queue);
    if (!queueDefined) {
      queue.commit();
    }
    return;
  }
  var selIndex = computedProps.selectionIndexRef.current;
  if (selIndex === null) {
    selIndex = findInitialSelectionIndex(computedProps);
  }
  var index = rowProps.rowIndex;
  var prevShiftKeyIndex = computedProps.shiftKeyIndexRef.current;
  var start;
  var end;
  var data;
  if (event.metaKey || event.ctrlKey || computedProps.toggleRowSelectOnClick && computedProps.getSelectedCount() === 1 && computedProps.isRowSelected(computedProps.data[index])) {
    computedProps.selectionIndexRef.current = index;
    computedProps.shiftKeyIndexRef.current = null;
    var unselect = handleMultiSelectionRowToggle(computedProps, computedProps.data[index], queue);
    if (!queueDefined) {
      queue.commit();
    }
    if (unselect) {
      computedProps.selectionIndexRef.current++;
      computedProps.shiftKeyIndexRef.current = prevShiftKeyIndex;
      return false;
    }
    return;
  }
  if (!event.shiftKey) {
    computedProps.selectionIndexRef.current = index;
    computedProps.shiftKeyIndexRef.current = null;
    selIndex = null;
  } else {
    computedProps.shiftKeyIndexRef.current = index;
  }
  if (selIndex == null) {
    data = [computedProps.data[index]];
  } else {
    start = Math.min(index, selIndex);
    end = Math.max(index, selIndex) + 1;
    data = computedProps.data.slice(start, end);
  }
  handleMultiSelection(computedProps, data, {
    selIndex: selIndex,
    prevShiftKeyIndex: prevShiftKeyIndex
  }, queue);
  if (!queueDefined) {
    queue.commit();
  }
};
exports.handleSelection = handleSelection;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/hooks/useRow/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/hooks/useRow/index.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _batchUpdate = _interopRequireDefault(__webpack_require__(/*! ../../utils/batchUpdate */ "./node_modules/@inovua/reactdatagrid-community/utils/batchUpdate.js"));
var _handleSelection = __webpack_require__(/*! ./handleSelection */ "./node_modules/@inovua/reactdatagrid-community/hooks/useRow/handleSelection.js");
var _handleRowNavigation = _interopRequireDefault(__webpack_require__(/*! ./handleRowNavigation */ "./node_modules/@inovua/reactdatagrid-community/hooks/useRow/handleRowNavigation.js"));
var _handleCellNavigation = _interopRequireDefault(__webpack_require__(/*! ./handleCellNavigation */ "./node_modules/@inovua/reactdatagrid-community/hooks/useRow/handleCellNavigation.js"));
var _containsNode = _interopRequireDefault(__webpack_require__(/*! ../../common/containsNode */ "./node_modules/@inovua/reactdatagrid-community/common/containsNode.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var _default = function _default(props, computedProps, computedPropsRef) {
  var computedOnKeyDown = function computedOnKeyDown(event) {
    if (props.onKeyDown) {
      props.onKeyDown(event);
    }
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    if (event.nativeEvent && event.nativeEvent.__handled_in_details) {
      return;
    }
    var sameElement = event.target === computedProps.getScrollingElement();
    var handled = false;
    if (event.key === 'Escape' && !sameElement && computedProps.autoFocusOnEditEscape) {
      handled = true;
      computedProps.focus();
    }
    if (!sameElement) {
      return;
    }
    if (computedProps.computedHasRowNavigation) {
      handled = (0, _handleRowNavigation.default)(event, computedProps);
    } else if (computedProps.computedCellNavigationEnabled) {
      handled = (0, _handleCellNavigation.default)(event, computedProps);
    }
    var activeItem = computedProps.computedActiveItem;
    var activeIndex = computedProps.computedActiveIndex;
    var isGroup = computedProps.isGroup(activeItem);
    var rowExpandEnabled = computedProps.computedRowExpandEnabled;
    var rowExpandable = activeItem && computedProps.isRowExpandableAt ? computedProps.isRowExpandableAt(activeIndex) : false;
    var rowExpanded = rowExpandable && activeItem ? computedProps.isRowExpanded(activeItem) : false;
    var treeEnabled = computedProps.computedTreeEnabled;
    var nodeExpandable = treeEnabled && activeItem && computedProps.isNodeExpandableAt ? computedProps.isNodeExpandableAt(activeIndex) : false;
    var nodeExpanded = treeEnabled && activeItem && computedProps.isNodeExpanded ? computedProps.isNodeExpanded(activeItem) : false;
    var rowSelectionEnabled = computedProps.computedRowSelectionEnabled;
    var keyShortcutArg = {
      event: event,
      data: activeItem,
      index: activeIndex,
      activeItem: activeItem,
      activeIndex: activeIndex,
      handle: computedPropsRef,
      isGroup: isGroup,
      treeEnabled: treeEnabled,
      rowSelectionEnabled: rowSelectionEnabled,
      nodeExpandable: nodeExpandable,
      nodeExpanded: nodeExpanded,
      rowExpandEnabled: rowExpandEnabled,
      rowExpandable: rowExpandable,
      rowExpanded: rowExpanded
    };
    var editKeyPressed = !!computedProps.isStartEditKeyPressed(keyShortcutArg);
    var expandKeyPressed = !!computedProps.isExpandKeyPressed(keyShortcutArg);
    var collapseKeyPressed = !expandKeyPressed ? computedProps.isCollapseKeyPressed(keyShortcutArg) : false;
    if (expandKeyPressed) {
      handled = true;
    }
    if (expandKeyPressed && activeItem) {
      if (rowExpandEnabled && rowExpandable && !rowExpanded) {
        computedProps.setRowExpandedAt(activeIndex, true);
      } else {
        if (isGroup) {
          computedProps.expandGroup(activeItem);
        } else if (treeEnabled && nodeExpandable && !nodeExpanded) {
          computedProps.setNodeExpandedAt(activeIndex, true);
        }
      }
    }
    if (collapseKeyPressed) {
      handled = true;
    }
    if (collapseKeyPressed && activeItem) {
      if (rowExpandEnabled && rowExpandable && rowExpanded) {
        computedProps.setRowExpandedAt(activeIndex, false);
      } else {
        if (isGroup) {
          computedProps.collapseGroup(activeItem);
        } else if (treeEnabled && nodeExpandable && nodeExpanded) {
          computedProps.setNodeExpandedAt(activeIndex, false);
        }
      }
    }
    if (editKeyPressed) {
      handled = true;
      if (computedProps.visibleColumns && computedProps.visibleColumns.length) {
        if (computedProps.tryStartEdit) {
          computedProps.tryStartEdit({
            rowIndex: activeItem ? activeIndex : 0,
            columnId: computedProps.visibleColumns[0].id,
            dir: 1
          });
        }
      }
    }
    if (activeItem && event.key === 'Enter') {
      if (rowExpandEnabled && rowExpandable) {
        if (!rowSelectionEnabled) {
          computedProps.toggleRowExpand(activeIndex);
          handled = true;
        }
      } else {
        if (isGroup) {
          computedProps.toggleGroup(activeItem);
          handled = true;
        } else if (nodeExpandable && !rowSelectionEnabled && computedProps.computedTreeEnabled) {
          computedProps.toggleNodeExpand(activeItem);
          handled = true;
        }
      }
    }
    if (handled) {
      event.preventDefault();
      if (event.nativeEvent) {
        event.nativeEvent.__handled_in_details = true;
      }
    }
    if (computedProps.enableClipboard) {
      var cellSelection = !!computedProps.computedCellSelection;
      var checkboxColumn = !!computedProps.checkboxColumn;
      var selected = !!computedProps.computedSelected;
      if ((event.ctrlKey || event.metaKey) && event.key == 'c') {
        if (checkboxColumn || selected) {
          computedProps.copySelectedRowsToClipboard && computedProps.copySelectedRowsToClipboard();
        } else if (cellSelection) {
          computedProps.copySelectedCellsToClipboard && computedProps.copySelectedCellsToClipboard();
        } else {
          computedProps.copyActiveRowToClipboard && computedProps.copyActiveRowToClipboard();
        }
      }
      if ((event.ctrlKey || event.metaKey) && event.key == 'v') {
        if (checkboxColumn || selected) {
          computedProps.pasteSelectedRowsFromClipboard && computedProps.pasteSelectedRowsFromClipboard();
        } else if (cellSelection) {
          computedProps.pasteSelectedCellsFromClipboard && computedProps.pasteSelectedCellsFromClipboard();
        } else {
          computedProps.pasteActiveRowFromClipboard && computedProps.pasteActiveRowFromClipboard();
        }
      }
    }
  };
  var onFullBlur = (0, _react.useCallback)(function (_event) {}, []);
  var isGroup = (0, _react.useCallback)(function (item) {
    return !!item && !!item.__group;
  }, []);
  var computedOnFocus = (0, _react.useCallback)(function (event) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    event.preventDefault();
    if (props.onFocus) {
      props.onFocus(event);
    }
    if (event.nativeEvent.preventParentFocus) {
      onFullBlur(event);
      return;
    }
    event.nativeEvent.preventParentFocus = true;
    if (computedProps.computedWillReceiveFocusRef.current) {
      computedProps.computedWillReceiveFocusRef.current = false;
      return;
    }
    if (!computedProps.computedFocused) {
      computedProps.computedSetFocused(true);
    }
  }, []);
  var computedOnBlur = (0, _react.useCallback)(function (event) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    if (computedProps.isInEdit.current) {
      return;
    }
    event.preventDefault();
    if (computedProps.preventBlurOnContextMenuOpen && computedProps.preventBlurOnContextMenuOpen.current) {
      return;
    }
    var domNode = computedProps.getDOMNode();
    if (event.relatedTarget && (0, _containsNode.default)(domNode, event.relatedTarget)) {
      return;
    }
    if (props.onBlur) {
      props.onBlur(event);
    }
    var computedActiveIndex = computedProps.computedActiveIndex;
    if (computedActiveIndex >= 0) {
      computedProps.doSetLastActiveIndex(computedActiveIndex);
    }
    computedProps.setActiveIndex(-1);
    computedProps.computedSetFocused(false);
  }, []);
  var onGroupRowClick = (0, _react.useCallback)(function (rowProps, _ref, queue) {
    var enableKeyboardNavigation = _ref.enableKeyboardNavigation,
      setActiveIndex = _ref.setActiveIndex;
    if (rowProps.groupProps || rowProps.data && rowProps.data.__group) {
      if (enableKeyboardNavigation) {
        queue(function () {
          setActiveIndex(rowProps.rowIndex);
        });
      }
      queue.commit();
      return true;
    }
    return false;
  }, []);
  var handleRowSelectionOnClick = function handleRowSelectionOnClick(event, rowProps, computedProps, queue) {
    if (event.nativeEvent.skipSelect) {
      if (computedProps.enableKeyboardNavigation) {
        queue(function () {
          computedProps.setActiveIndex(rowProps.rowIndex);
        });
      }
      queue.commit();
      return;
    }
    var shiftKey = event.shiftKey,
      metaKey = event.metaKey,
      ctrlKey = event.ctrlKey;
    var multiSelectKey = shiftKey || metaKey || ctrlKey;
    var autoCheckboxColumn = props.autoCheckboxColumn;
    if (autoCheckboxColumn && multiSelectKey) {
      return;
    }
    if ((0, _handleSelection.handleSelection)(rowProps, computedProps, event, queue) !== false) {
      queue(function () {
        computedProps.setActiveIndex(rowProps.rowIndex);
      });
    }
  };
  var computedOnRowMouseDown = (0, _react.useCallback)(function () {}, []);
  var computedOnRowClick = (0, _react.useCallback)(function (event, rowProps) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var preventRowSelectionOnClickWithMouseMove = computedProps.preventRowSelectionOnClickWithMouseMove,
      initialProps = computedProps.initialProps;
    if (initialProps.onRowClick) {
      initialProps.onRowClick({
        rowIndex: rowProps.rowIndex,
        remoteRowIndex: rowProps.remoteRowIndex,
        groupProps: rowProps.groupProps,
        empty: rowProps.empty,
        columns: rowProps.columns,
        dataSourceArray: rowProps.dataSourceArray,
        data: rowProps.data
      }, event);
    }
    var queue = (0, _batchUpdate.default)();
    var lastMouseDownEventProps = computedProps.lastMouseDownEventPropsRef.current;
    var mouseDidNotMove = event.type !== 'click';
    if (lastMouseDownEventProps && event.type === 'click') {
      var pageX = lastMouseDownEventProps.pageX,
        pageY = lastMouseDownEventProps.pageY,
        rowIndex = lastMouseDownEventProps.rowIndex;
      mouseDidNotMove = pageX === Math.floor(event.pageX) && pageY === Math.floor(event.pageY) && rowIndex === rowProps.rowIndex;
    }
    if (!computedProps.computedFocused) {
      queue(function () {
        computedProps.computedSetFocused(true);
      });
    }
    if (computedProps.computedCellSelectionEnabled) {
      queue.commit();
      return;
    }
    if (onGroupRowClick(rowProps, computedProps, queue)) {
      queue.commit();
      return;
    }
    var threshold = 20;
    var preventRowSelection = preventRowSelectionOnClickWithMouseMove ? mouseDidNotMove : true;
    if (preventRowSelection === false && Math.abs(lastMouseDownEventProps.pageX - event.pageX) < threshold || Math.abs(lastMouseDownEventProps.pageY - event.pageY) < threshold) {
      preventRowSelection = true;
    }
    if ((!props.checkboxOnlyRowSelect || event.type !== 'click') && preventRowSelection) {
      handleRowSelectionOnClick(event, rowProps, computedProps, queue);
    } else {
      if (computedProps.enableKeyboardNavigation && computedProps.computedHasRowNavigation) {
        queue(function () {
          computedProps.setActiveIndex(rowProps.rowIndex);
        });
      }
    }
    queue.commit();
  }, []);
  var computedRowDoubleClick = (0, _react.useCallback)(function (event, rowProps) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    if (computedProps.onRowDoubleClick) {
      computedProps.onRowDoubleClick(event, rowProps);
    }
  }, []);
  var computedCellDoubleClick = (0, _react.useCallback)(function (event, cellProps) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    if (computedProps.onCellDoubleClick) {
      computedProps.onCellDoubleClick(event, cellProps);
    }
  }, []);
  var onCellClickAction = (0, _react.useCallback)(function (event, cellProps) {
    if (cellProps.groupProps || cellProps.cellSelectable === false) {
      return;
    }
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var hasCellSelection = computedProps.computedCellSelectionEnabled;
    var cellMultiSelect = computedProps.computedCellMultiSelectionEnabled;
    var queue = (0, _batchUpdate.default)();
    if (hasCellSelection) {
      var ctrlKey = event.ctrlKey || event.metaKey;
      var append = cellMultiSelect && ctrlKey;
      var cellCoords = [cellProps.rowIndex, cellProps.columnIndex];
      var key = computedProps.getCellSelectionKey(cellProps);
      var shiftKey = event.shiftKey && (computedProps.computedActiveCell || computedProps.lastSelectedCell);
      if (shiftKey && cellMultiSelect) {
        var cellSelection = computedProps.getCellSelectionBetween(computedProps.computedActiveCell || computedProps.lastSelectedCell || undefined, cellCoords);
        queue(function () {
          computedProps.setLastCellInRange(Object.keys(cellSelection).pop() || '');
          computedProps.setCellSelection(cellSelection);
        });
      } else {
        var cellSelectionMap = computedProps.computedCellSelection;
        var isSelected = !!cellSelectionMap[key];
        var newCellSelectionMap = append ? Object.assign({}, cellSelectionMap) : {};
        if (isSelected && (cellMultiSelect || computedProps.initialProps.toggleCellSelectOnClick || ctrlKey)) {
          delete newCellSelectionMap[key];
        } else {
          if (!shiftKey) {
            queue(function () {
              computedProps.setLastSelectedCell(cellCoords);
            });
          }
          newCellSelectionMap[key] = true;
        }
        queue(function () {
          computedProps.setCellSelection(newCellSelectionMap);
        });
      }
    }
    var shouldSetActiveCell = computedProps.computedCellNavigationEnabled && (!event.shiftKey || !cellMultiSelect);
    queue(function () {
      if (shouldSetActiveCell) {
        computedProps.setActiveCell([cellProps.rowIndex, cellProps.columnIndex]);
      }
    });
    queue.commit();
  }, []);
  var setItemAtAsSelected = (0, _react.useCallback)(function (index, event) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var computedRowSelectionEnabled = computedProps.computedRowSelectionEnabled,
      getItemAt = computedProps.getItemAt,
      getItemId = computedProps.getItemId;
    var item = getItemAt(index);
    var itemId = item ? getItemId(item) : undefined;
    if (itemId === undefined) {
      return;
    }
    if (computedRowSelectionEnabled) {
      (0, _handleSelection.handleSelection)({
        rowIndex: index,
        data: item
      }, computedProps, event || {
        nativeEvent: null
      });
    }
  }, []);
  var selectionIndexRef = (0, _react.useRef)(null);
  var shiftKeyIndexRef = (0, _react.useRef)(null);
  var lastMouseDownEventPropsRef = (0, _react.useRef)({
    rowIndex: -1,
    pageX: -1,
    pageY: -1
  });
  var computedOnCellMouseDown = (0, _react.useCallback)(function (event, cellProps) {
    lastMouseDownEventPropsRef.current = {
      rowIndex: cellProps.rowIndex,
      pageX: Math.floor(event.pageX),
      pageY: Math.floor(event.pageY)
    };
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    if (computedProps.columnUserSelect && event.shiftKey && computedProps.preventDefaultTextSelectionOnShiftMouseDown) {
      event.preventDefault();
    }
    computedProps.onCellClickAction(event, cellProps);
    if (computedProps.onCellSelectionDraggerMouseDown) {
      computedProps.onCellSelectionDraggerMouseDown(event, cellProps);
    }
  }, []);
  var computedActiveIndex = computedProps.computedActiveIndex;
  return {
    selectionIndexRef: selectionIndexRef,
    shiftKeyIndexRef: shiftKeyIndexRef,
    onCellClickAction: onCellClickAction,
    computedCellDoubleClick: computedCellDoubleClick,
    computedOnKeyDown: computedOnKeyDown,
    computedOnFocus: computedOnFocus,
    computedOnBlur: computedOnBlur,
    computedOnRowClick: computedOnRowClick,
    computedRowDoubleClick: computedRowDoubleClick,
    computedOnRowMouseDown: computedOnRowMouseDown,
    computedOnCellMouseDown: computedOnCellMouseDown,
    isGroup: isGroup,
    computedActiveItem: computedActiveIndex !== -1 && computedProps.data ? computedProps.data[computedActiveIndex] : null,
    lastMouseDownEventPropsRef: lastMouseDownEventPropsRef,
    toggleActiveRowSelection: function toggleActiveRowSelection(event) {
      var computedProps = computedPropsRef.current;
      if (!computedProps) {
        return;
      }
      var computedActiveIndex = computedProps.computedActiveIndex;
      if (computedActiveIndex == -1) {
        return;
      }
      setItemAtAsSelected(computedActiveIndex, event);
    },
    rowProps: _objectSpread(_objectSpread({}, computedProps.initialProps.rowProps), {}, {
      onMouseDown: function onMouseDown(event) {
        if (computedProps.initialProps.rowProps && computedProps.initialProps.rowProps.onMouseDown) {
          computedProps.initialProps.rowProps.onMouseDown(event);
        }
        if (!computedProps.computedFocused && computedProps.enableKeyboardNavigation) {
          computedProps.computedWillReceiveFocusRef.current = true;
        }
      }
    })
  };
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/hooks/useScrollProps.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/hooks/useScrollProps.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _getScrollbarWidth = _interopRequireDefault(__webpack_require__(/*! ../packages/getScrollbarWidth */ "./node_modules/@inovua/reactdatagrid-community/packages/getScrollbarWidth/index.js"));
var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var _default = function _default(props, computedProps) {
  var SCROLLBAR_WIDTH = (0, _react.useMemo)(function () {
    return (0, _getScrollbarWidth.default)();
  }, []);
  var scrollProps = _objectSpread({
    scrollMaxDelta: SCROLLBAR_WIDTH ? 1 : 1,
    scrollThreshold: computedProps.scrollThreshold,
    scrollDebounceDelay: 1
  }, props.scrollProps);
  if (computedProps.livePagination) {
    var loadNextPage = function loadNextPage() {
      if (!computedProps.computedLoading && computedProps.gotoNextPage) {
        computedProps.gotoNextPage({
          append: true
        });
      }
    };
    scrollProps.onContainerScrollVerticalMax = function () {
      if (props.scrollProps && props.scrollProps.onContainerScrollVerticalMax) {
        var _props$scrollProps;
        (_props$scrollProps = props.scrollProps).onContainerScrollVerticalMax.apply(_props$scrollProps, arguments);
      }
      loadNextPage();
    };
  }
  return scrollProps;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/hooks/useSelection/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/hooks/useSelection/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js"));
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js"));
var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _useProperty5 = _interopRequireDefault(__webpack_require__(/*! ../useProperty */ "./node_modules/@inovua/reactdatagrid-community/hooks/useProperty.js"));
var _isSelectionEnabled = _interopRequireDefault(__webpack_require__(/*! ./isSelectionEnabled */ "./node_modules/@inovua/reactdatagrid-community/hooks/useSelection/isSelectionEnabled.js"));
var _isMultiSelect = _interopRequireDefault(__webpack_require__(/*! ./isMultiSelect */ "./node_modules/@inovua/reactdatagrid-community/hooks/useSelection/isMultiSelect.js"));
var _isSelectionControlled = _interopRequireDefault(__webpack_require__(/*! ./isSelectionControlled */ "./node_modules/@inovua/reactdatagrid-community/hooks/useSelection/isSelectionControlled.js"));
var _handleSelection = __webpack_require__(/*! ../useRow/handleSelection */ "./node_modules/@inovua/reactdatagrid-community/hooks/useRow/handleSelection.js");
var _batchUpdate = _interopRequireDefault(__webpack_require__(/*! ../../utils/batchUpdate */ "./node_modules/@inovua/reactdatagrid-community/utils/batchUpdate.js"));
var _usePrevious = _interopRequireDefault(__webpack_require__(/*! ../usePrevious */ "./node_modules/@inovua/reactdatagrid-community/hooks/usePrevious.js"));
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
var EMPTY_OBJECT = {};
var getUnselectedFromProps = function getUnselectedFromProps(computedProps) {
  if (!computedProps) {
    return null;
  }
  if (computedProps.computedUnselected === undefined) {
    return null;
  }
  return computedProps.computedUnselected;
};
var getUnselectedCountFromProps = function getUnselectedCountFromProps(computedProps, unselected) {
  if (!computedProps) {
    return 0;
  }
  if (!computedProps.computedRowSelectionEnabled) {
    return 0;
  }
  if (!computedProps.computedRowMultiSelectionEnabled) {
    return 0;
  }
  unselected = unselected === undefined ? getUnselectedFromProps(computedProps) : unselected;
  return unselected ? Object.keys(unselected).length : 0;
};
var getSelectedCountFromProps = function getSelectedCountFromProps(computedProps, selected, unselected) {
  if (!computedProps) {
    return 0;
  }
  if (!computedProps.computedRowSelectionEnabled) {
    return 0;
  }
  var multiSelect = computedProps.computedRowMultiSelectionEnabled;
  selected = selected === undefined ? computedProps.computedSelected : selected;
  if (multiSelect && selected === true) {
    var unselectedCount = getUnselectedCountFromProps(computedProps, unselected);
    return computedProps.paginationCount - unselectedCount;
  }
  return multiSelect ? selected ? Object.keys(selected).length : 0 : !selected || Object.keys(selected).length === 0 ? 0 : 1;
};
var useUnselected = function useUnselected(props, _ref, _computedPropsRef) {
  var rowSelectionEnabled = _ref.rowSelectionEnabled,
    rowMultiSelectionEnabled = _ref.rowMultiSelectionEnabled;
  var _useProperty = (0, _useProperty5.default)(props, 'unselected'),
    _useProperty2 = (0, _slicedToArray2.default)(_useProperty, 2),
    unselected = _useProperty2[0],
    setUnselected = _useProperty2[1];
  if (!rowSelectionEnabled) {
    return {
      unselected: null,
      setUnselected: setUnselected
    };
  }
  if (!rowMultiSelectionEnabled) {
    return {
      unselected: null,
      setUnselected: setUnselected
    };
  }
  return {
    unselected: unselected,
    setUnselected: setUnselected
  };
};
var useSelected = function useSelected(props, _computedProps, computedPropsRef) {
  var _useProperty3 = (0, _useProperty5.default)(props, 'selected', undefined, {
      onChange: function onChange(selected) {
        var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          silent = _ref2.silent,
          unselected = _ref2.unselected,
          data = _ref2.data;
        var computedProps = computedPropsRef.current;
        if (props.onSelectionChange && !silent) {
          props.onSelectionChange({
            selected: selected,
            data: data,
            unselected: unselected !== undefined ? unselected : computedProps != null ? computedProps.computedUnselected : null
          });
        }
      }
    }),
    _useProperty4 = (0, _slicedToArray2.default)(_useProperty3, 2),
    selected = _useProperty4[0],
    setSelected = _useProperty4[1];
  var rowSelectionEnabled = (0, _isSelectionEnabled.default)(props);
  var rowMultiSelectionEnabled = (0, _isMultiSelect.default)(props);
  if (!rowSelectionEnabled) {
    return {
      selected: null,
      setSelected: setSelected,
      rowSelectionEnabled: rowSelectionEnabled,
      rowMultiSelectionEnabled: rowMultiSelectionEnabled
    };
  }
  if ((0, _isSelectionControlled.default)(props)) {
    return {
      selected: selected,
      setSelected: setSelected,
      rowSelectionEnabled: rowSelectionEnabled,
      rowMultiSelectionEnabled: rowMultiSelectionEnabled
    };
  }
  if (rowMultiSelectionEnabled && ((0, _typeof2.default)(selected) != 'object' || !selected) && selected !== true) {
    selected = EMPTY_OBJECT;
  }
  return {
    selected: selected,
    setSelected: setSelected,
    rowSelectionEnabled: rowSelectionEnabled,
    rowMultiSelectionEnabled: rowMultiSelectionEnabled
  };
};
var _default = function _default(props, computedProps, computedPropsRef) {
  var _useSelected = useSelected(props, computedProps, computedPropsRef),
    computedSelected = _useSelected.selected,
    setSelected = _useSelected.setSelected,
    rowMultiSelectionEnabled = _useSelected.rowMultiSelectionEnabled,
    rowSelectionEnabled = _useSelected.rowSelectionEnabled;
  var previousRowMultiSelectionEnabled = (0, _usePrevious.default)(rowMultiSelectionEnabled, rowMultiSelectionEnabled);
  (0, _react.useEffect)(function () {
    if (previousRowMultiSelectionEnabled === true && rowMultiSelectionEnabled === false) {
      setSelected({});
    }
  }, [previousRowMultiSelectionEnabled, rowMultiSelectionEnabled]);
  var computedRowSelectionEnabled = rowSelectionEnabled;
  var computedRowMultiSelectionEnabled = rowMultiSelectionEnabled;
  var _useUnselected = useUnselected(props, {
      rowSelectionEnabled: rowSelectionEnabled,
      rowMultiSelectionEnabled: rowMultiSelectionEnabled
    }, computedPropsRef),
    computedUnselected = _useUnselected.unselected,
    setUnselected = _useUnselected.setUnselected;
  var computedSelectedCount = getSelectedCountFromProps({
    computedPagination: computedProps.computedPagination,
    computedRemoteData: computedProps.computedRemoteData,
    paginationCount: computedProps.paginationCount,
    computedRowMultiSelectionEnabled: computedRowMultiSelectionEnabled,
    computedRowSelectionEnabled: computedRowSelectionEnabled
  }, computedSelected, computedUnselected);
  var computedUnselectedCount = getUnselectedCountFromProps({
    computedRowMultiSelectionEnabled: computedRowMultiSelectionEnabled,
    computedRowSelectionEnabled: computedRowSelectionEnabled
  }, computedUnselected);
  var isSelectionEmpty = (0, _react.useCallback)(function () {
    var selected = computedSelected;
    var selectionEmpty = false;
    if (selected == null) {
      selectionEmpty = true;
    }
    if ((0, _typeof2.default)(selected) === 'object' && selected !== null) {
      selectionEmpty = Object.keys(selected).length === 0;
    }
    return selectionEmpty;
  }, [computedSelected]);
  var getSelectedMap = (0, _react.useCallback)(function () {
    if (computedRowMultiSelectionEnabled) {
      return computedSelected;
    }
    return (0, _defineProperty2.default)({}, computedSelected, true);
  }, [computedRowMultiSelectionEnabled, computedSelected]);
  var getUnselected = (0, _react.useCallback)(function () {
    return getUnselectedFromProps(computedPropsRef.current);
  }, []);
  var getUnselectedMap = (0, _react.useCallback)(function () {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return {};
    }
    var unselected = getUnselected();
    if (computedProps.computedRowMultiSelectionEnabled) {
      return unselected || {};
    }
    return {};
  }, [getUnselected]);
  var getUnselectedCount = function getUnselectedCount(unselected) {
    return getUnselectedCountFromProps(computedPropsRef.current, unselected);
  };
  var getSelectedCount = function getSelectedCount(selected, unselected) {
    return getSelectedCountFromProps(computedPropsRef.current, selected, unselected);
  };
  var isRowSelected = (0, _react.useCallback)(function (data) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return false;
    }
    if (typeof data == 'number') {
      data = computedProps.getItemAt(data);
    }
    var selectedMap = getSelectedMap();
    var id = computedProps.getItemId(data);
    if (selectedMap === true) {
      var unselectedMap = getUnselectedMap();
      return !unselectedMap[id];
    }
    return !!selectedMap[id];
  }, [getSelectedMap, getUnselectedMap]);
  var cellSelectionTmp = props.cellSelection || props.defaultCellSelection;
  var activeCellDefined = props.activeCell !== undefined || props.defaultActiveCell !== undefined;
  var computedHasRowNavigation = (computedRowSelectionEnabled || !cellSelectionTmp) && computedProps.computedActiveIndex > -1 ? true : props.enableKeyboardNavigation !== false && !cellSelectionTmp && !activeCellDefined;
  if (props.enableKeyboardNavigation === false) {
    computedHasRowNavigation = false;
  }
  var _computedProps$useCel = computedProps.useCellSelection(props, {
      rowSelectionEnabled: rowSelectionEnabled,
      listenOnCellEnter: computedProps.listenOnCellEnter,
      hasRowNavigation: computedHasRowNavigation
    }, computedPropsRef),
    computedCellSelection = _computedProps$useCel.computedCellSelection,
    setCellSelection = _computedProps$useCel.setCellSelection,
    computedCellSelectionEnabled = _computedProps$useCel.cellSelectionEnabled,
    computedCellMultiSelectionEnabled = _computedProps$useCel.cellMultiSelectionEnabled,
    computedCellNavigationEnabled = _computedProps$useCel.cellNavigationEnabled,
    computedActiveCell = _computedProps$useCel.computedActiveCell,
    incrementActiveCell = _computedProps$useCel.incrementActiveCell,
    getCellSelectionIdKey = _computedProps$useCel.getCellSelectionIdKey,
    getCellSelectionBetween = _computedProps$useCel.getCellSelectionBetween,
    toggleActiveCellSelection = _computedProps$useCel.toggleActiveCellSelection,
    onCellEnter = _computedProps$useCel.onCellEnter,
    setActiveCell = _computedProps$useCel.setActiveCell,
    getCellSelectionKey = _computedProps$useCel.getCellSelectionKey,
    cellDragStartRowIndex = _computedProps$useCel.cellDragStartRowIndex,
    setCellDragStartRowIndex = _computedProps$useCel.setCellDragStartRowIndex,
    onCellSelectionDraggerMouseDown = _computedProps$useCel.onCellSelectionDraggerMouseDown,
    computedCellBulkUpdateMouseDown = _computedProps$useCel.computedCellBulkUpdateMouseDown,
    bulkUpdateMouseDown = _computedProps$useCel.bulkUpdateMouseDown,
    computedCellBulkUpdateMouseUp = _computedProps$useCel.computedCellBulkUpdateMouseUp;
  var selectAll = (0, _react.useCallback)(function () {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    if (!computedProps.computedRowSelectionEnabled) {
      return;
    }
    var data = computedProps.data;
    var dataMap = computedProps.dataMap;
    if (computedProps.computedGroupBy) {
      dataMap = {};
      data = data.map(function (d) {
        var id = computedProps.getItemId(d);
        dataMap[id] = id;
      });
    }
    if (computedProps.computedTreeEnabled && computedProps.stickyTreeNodes) {
      var vl = computedProps.getVirtualList();
      vl.updateStickyRows(undefined, undefined, {
        force: true
      });
    }
    (0, _handleSelection.notifySelection)(computedProps, computedProps.computedRemoteData || computedProps.computedPagination ? data.length === 0 ? false : true : dataMap, data, null);
  }, []);
  var deselectAll = (0, _react.useCallback)(function () {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    if (computedProps.computedTreeEnabled && computedProps.stickyTreeNodes) {
      var vl = computedProps.getVirtualList();
      vl.updateStickyRows(undefined, undefined, {
        force: true
      });
    }
    (0, _handleSelection.notifySelection)(computedProps, {}, [], null);
  }, []);
  var setRowSelected = (0, _react.useCallback)(function (index, selected, event) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var queue = (0, _batchUpdate.default)();
    if (computedProps.checkboxSelectEnableShiftKey && computedProps.computedRowMultiSelectionEnabled) {
      if (event && event.target) {
        var shiftKey = event.shiftKey,
          metaKey = event.metaKey,
          ctrlKey = event.ctrlKey;
        if (shiftKey) {
          var rowProps = {
            data: computedProps.getItemAt(index),
            rowIndex: index
          };
          (0, _handleSelection.handleSelection)(rowProps, computedProps, {
            shiftKey: shiftKey,
            metaKey: metaKey,
            ctrlKey: ctrlKey
          }, queue);
          return;
        }
        computedProps.shiftKeyIndexRef.current = index;
        computedProps.selectionIndexRef.current = index;
      }
    }
    computedProps.setSelectedAt(index, selected, queue);
    queue.commit();
  }, [computedProps.initialProps.checkboxSelectEnableShiftKey]);
  var setSelectedAt = (0, _react.useCallback)(function (index, selected, queue) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var data = computedProps.data[index];
    if (!data) {
      return;
    }
    var id = computedProps.getItemId(data);
    computedProps.setSelectedById(id, selected, queue);
  }, []);
  var treeGridChildrenSelection = function treeGridChildrenSelection(dataArray, id, selected, clone, treeGridChildrenDeselectionEnabled, parentNode) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var idProperty = computedProps.idProperty;
    var nodesName = computedProps.nodesProperty;
    var pathSeparator = computedProps.nodePathSeparator;
    var expandedNodes = computedProps.computedExpandedNodes || EMPTY_OBJECT;
    var generateIdFromPath = computedProps.generateIdFromPath;
    for (var i = 0; i < dataArray.length; i++) {
      var item = dataArray[i];
      if (item) {
        var _id$split;
        var itemId = item[idProperty];
        var itemNodes = item[nodesName];
        var parentNodeId = parentNode ? "".concat(parentNode[idProperty]) : undefined;
        var path = parentNode ? "".concat(parentNodeId).concat(pathSeparator).concat(itemId) : "".concat(itemId);
        if (generateIdFromPath) {
          item[idProperty] = path;
        }
        var idLength = (_id$split = id.split(pathSeparator)) === null || _id$split === void 0 ? void 0 : _id$split.length;
        var idFromPath = path.split(pathSeparator).slice(0, idLength).join(pathSeparator);
        if (idFromPath === id) {
          var treeData = computedProps.dataMap ? computedProps.dataMap[path] : null;
          if (!treeData) {
            continue;
          }
          if (selected) {
            clone[path] = treeData;
          } else {
            if (treeGridChildrenDeselectionEnabled) {
              delete clone[path];
            } else {
              delete clone[id];
            }
          }
        }
        if (expandedNodes && expandedNodes[idFromPath]) {
          if (Array.isArray(itemNodes)) {
            treeGridChildrenSelection(itemNodes, id, selected, clone, treeGridChildrenDeselectionEnabled, item);
          }
        }
      }
    }
    return clone;
  };
  var groupChildrenSelection = function groupChildrenSelection(_ref4) {
    var clone = _ref4.clone,
      id = _ref4.id,
      selected = _ref4.selected,
      dataMap = _ref4.dataMap,
      idProperty = _ref4.idProperty;
    if (!dataMap) {
      return;
    }
    for (var key in dataMap) {
      if (!key) {
        break;
      }
      if (!key.includes(id)) {
        continue;
      }
      var data = dataMap[key];
      if (data.__group) {
        if (selected) {
          if (!clone[key]) {
            clone[key] = data;
          }
        } else {
          delete clone[key];
        }
        if (data.array && Array.isArray(data.array)) {
          var _iterator = _createForOfIteratorHelper(data.array),
            _step;
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done;) {
              var item = _step.value;
              var itemId = item[idProperty];
              if (selected) {
                if (!clone[itemId]) clone[itemId] = item;
              } else {
                delete clone[itemId];
              }
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
        }
      } else {
        var dataId = data[idProperty];
        if (dataId === id) {
          if (selected) {
            if (!clone[id]) clone[id] = data;
          } else {
            delete clone[id];
          }
        }
      }
    }
    return clone;
  };
  var setSelectedById = (0, _react.useCallback)(function (id, selected, queue) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var data = computedProps.dataMap ? computedProps.dataMap[id] : null;
    if (!data) {
      return;
    }
    var isSelected = computedProps.isRowSelected(data);
    var multiSelect = computedProps.computedRowMultiSelectionEnabled;
    if (isSelected === selected) {
      return;
    }
    if (multiSelect) {
      var selectedMap = computedProps.computedSelected;
      var unselectedMap = selectedMap === true ? computedProps.computedUnselected || {} : null;
      var clone = selectedMap;
      if (selectedMap === true) {
        if (unselectedMap) {
          unselectedMap = Object.assign({}, unselectedMap);
        }
        if (!selected && unselectedMap) {
          unselectedMap[id] = true;
          var totalCount = computedProps.paginationCount;
          if (Object.keys(unselectedMap).length === totalCount) {
            computedProps.deselectAll();
            return;
          }
        } else {
          if (unselectedMap) {
            delete unselectedMap[id];
          }
          if (getUnselectedCountFromProps(computedProps, unselectedMap) === 0) {
            unselectedMap = null;
          }
        }
      } else {
        clone = Object.assign({}, selectedMap);
        if (computedProps.computedTreeEnabled && computedProps.treeGridChildrenSelectionEnabled) {
          var originalData = JSON.stringify(computedProps.originalData || []);
          var cloneOriginalData = (0, _toConsumableArray2.default)(JSON.parse(originalData));
          var treeGridChildrenDeselectionEnabled = computedProps.treeGridChildrenDeselectionEnabled;
          treeGridChildrenSelection(cloneOriginalData, id, selected, clone, treeGridChildrenDeselectionEnabled);
        } else if (computedProps.groupColumn) {
          groupChildrenSelection({
            clone: clone,
            id: id,
            selected: selected,
            dataMap: computedProps.dataMap,
            idProperty: computedProps.idProperty
          });
        } else {
          if (selected) {
            clone[id] = data;
          } else {
            delete clone[id];
          }
        }
      }
      (0, _handleSelection.notifySelection)(computedProps, clone, data, unselectedMap, queue);
    } else {
      (0, _handleSelection.notifySelection)(computedProps, selected ? id : null, data, null, queue);
    }
  }, []);
  return {
    selectAll: selectAll,
    deselectAll: deselectAll,
    setRowSelected: setRowSelected,
    setSelectedAt: setSelectedAt,
    setSelectedById: setSelectedById,
    setCellSelection: setCellSelection,
    computedCellSelection: computedCellSelection,
    computedCellSelectionEnabled: computedCellSelectionEnabled,
    computedCellMultiSelectionEnabled: computedCellMultiSelectionEnabled,
    computedCellNavigationEnabled: computedCellNavigationEnabled,
    computedActiveCell: computedActiveCell,
    getCellSelectionBetween: getCellSelectionBetween,
    incrementActiveCell: incrementActiveCell,
    cellDragStartRowIndex: cellDragStartRowIndex,
    setCellDragStartRowIndex: setCellDragStartRowIndex,
    onCellEnter: onCellEnter,
    onCellSelectionDraggerMouseDown: onCellSelectionDraggerMouseDown,
    toggleActiveCellSelection: toggleActiveCellSelection,
    computedHasRowNavigation: computedHasRowNavigation,
    computedRowSelectionEnabled: computedRowSelectionEnabled,
    computedRowMultiSelectionEnabled: computedRowMultiSelectionEnabled,
    computedSelected: computedSelected,
    setSelected: setSelected,
    computedUnselected: computedUnselected,
    setUnselected: setUnselected,
    isSelectionEmpty: isSelectionEmpty,
    getSelectedMap: getSelectedMap,
    getUnselectedMap: getUnselectedMap,
    isRowSelected: isRowSelected,
    getUnselectedCount: getUnselectedCount,
    getSelectedCount: getSelectedCount,
    computedUnselectedCount: computedUnselectedCount,
    computedSelectedCount: computedSelectedCount,
    getCellSelectionIdKey: getCellSelectionIdKey,
    setActiveCell: setActiveCell,
    getCellSelectionKey: getCellSelectionKey,
    computedCellBulkUpdateMouseDown: computedCellBulkUpdateMouseDown,
    computedCellBulkUpdateMouseUp: computedCellBulkUpdateMouseUp,
    bulkUpdateMouseDown: bulkUpdateMouseDown
  };
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/hooks/useSelection/isMultiSelect.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/hooks/useSelection/isMultiSelect.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js"));
var _isSelectionEnabled = _interopRequireDefault(__webpack_require__(/*! ./isSelectionEnabled */ "./node_modules/@inovua/reactdatagrid-community/hooks/useSelection/isSelectionEnabled.js"));
var _isSelectionControlled = _interopRequireDefault(__webpack_require__(/*! ./isSelectionControlled */ "./node_modules/@inovua/reactdatagrid-community/hooks/useSelection/isSelectionControlled.js"));
var isMultiSelect = function isMultiSelect(props) {
  if (!(0, _isSelectionEnabled.default)(props)) {
    return false;
  }
  if (props.multiSelect !== undefined) {
    return !!props.multiSelect;
  }
  var controlled = (0, _isSelectionControlled.default)(props);
  var isMulti = controlled ? !!((0, _typeof2.default)(props.selected) == 'object' && props.selected) || typeof props.selected === 'boolean' : !!((0, _typeof2.default)(props.defaultSelected) == 'object' && props.defaultSelected) || typeof props.defaultSelected === 'boolean' || props.checkboxColumn;
  return !!isMulti;
};
var _default = isMultiSelect;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/hooks/useSelection/isSelectionControlled.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/hooks/useSelection/isSelectionControlled.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _isControlledProperty = _interopRequireDefault(__webpack_require__(/*! ../../utils/isControlledProperty */ "./node_modules/@inovua/reactdatagrid-community/utils/isControlledProperty.js"));
var isSelectionControlled = function isSelectionControlled(props) {
  return (0, _isControlledProperty.default)(props, 'selected');
};
var _default = isSelectionControlled;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/hooks/useSelection/isSelectionEnabled.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/hooks/useSelection/isSelectionEnabled.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var isSelectionEnabled = function isSelectionEnabled(props) {
  var selected = props.selected,
    defaultSelected = props.defaultSelected,
    enableSelection = props.enableSelection,
    cellSelection = props.cellSelection,
    checkboxColumn = props.checkboxColumn;
  if (enableSelection !== undefined) {
    return !!enableSelection;
  }
  return selected !== undefined || defaultSelected !== undefined && cellSelection === undefined || !!checkboxColumn;
};
var _default = isSelectionEnabled;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/hooks/useSize.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/hooks/useSize.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js"));
var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _default = function _default(defaultSize) {
  var size;
  var setSize;
  var _useState = (0, _react.useState)(defaultSize);
  var _useState2 = (0, _slicedToArray2.default)(_useState, 2);
  size = _useState2[0];
  setSize = _useState2[1];
  return [size, function (newSize) {
    setSize({
      width: Math.round(newSize.width || size.width || 0),
      height: Math.round(newSize.height || size.height || 0)
    });
  }];
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.plugins = exports["default"] = void 0;
var _factory = _interopRequireDefault(__webpack_require__(/*! ./factory */ "./node_modules/@inovua/reactdatagrid-community/factory.js"));
var _sortableColumns = _interopRequireDefault(__webpack_require__(/*! ./plugins/sortable-columns */ "./node_modules/@inovua/reactdatagrid-community/plugins/sortable-columns/index.js"));
var _filters = _interopRequireDefault(__webpack_require__(/*! ./plugins/filters */ "./node_modules/@inovua/reactdatagrid-community/plugins/filters/index.js"));
var _menus = _interopRequireDefault(__webpack_require__(/*! ./plugins/menus */ "./node_modules/@inovua/reactdatagrid-community/plugins/menus/index.js"));
var _cellSelection = _interopRequireDefault(__webpack_require__(/*! ./plugins/cell-selection */ "./node_modules/@inovua/reactdatagrid-community/plugins/cell-selection/index.js"));
var plugins = [_sortableColumns.default, _filters.default, _menus.default, _cellSelection.default];
exports.plugins = plugins;
var ReactDataGrid = (0, _factory.default)({
  plugins: plugins
}, 'community');
var _default = ReactDataGrid;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/mapColumns.js":
/*!********************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/mapColumns.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var emptyObject = {};
var _default = function _default(columns) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : emptyObject,
    showWarnings = _ref.showWarnings;
  return columns.reduce(function (acc, col) {
    if (col.id) {
      if (showWarnings && acc[col.id]) {
        console.error("Duplicate column with id \"".concat(col.id, "\" found!"));
      }
      acc[col.id] = col;
    }
    if (col.name && col.name != col.id) {
      if (showWarnings && !col.id && acc[col.name]) {
        console.error("Duplicate column with name \"".concat(col.name, "\" found!"));
      }
      if (!col.id) {
        acc[col.name] = col;
      }
    }
    if (typeof col.groupBy == 'string' || col.groupByName) {
      var key = col.groupBy || col.groupByName;
      acc[key] = col;
    }
    return acc;
  }, {});
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/normalizeColumns/defaultCheckColumn.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/normalizeColumns/defaultCheckColumn.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "checkboxColumnId", ({
  enumerable: true,
  get: function get() {
    return _defaultCheckColumnId.id;
  }
}));
exports["default"] = void 0;
var _renderCheckbox = _interopRequireDefault(__webpack_require__(/*! ./renderCheckbox */ "./node_modules/@inovua/reactdatagrid-community/normalizeColumns/renderCheckbox.js"));
var _defaultCheckColumnId = __webpack_require__(/*! ./defaultCheckColumnId */ "./node_modules/@inovua/reactdatagrid-community/normalizeColumns/defaultCheckColumnId.js");
var _default = {
  id: _defaultCheckColumnId.id,
  checkboxColumn: true,
  autoLock: true,
  cellSelectable: false,
  headerAlign: 'center',
  textAlign: 'center',
  render: function render(_ref) {
    var cellProps = _ref.cellProps;
    return (0, _renderCheckbox.default)(cellProps);
  },
  header: _renderCheckbox.default,
  showColumnMenuSortOptions: false,
  showColumnMenuGroupOptions: false,
  showColumnMenuTool: false,
  showInContextMenu: false,
  sortable: false,
  editable: false,
  draggable: false,
  groupBy: false,
  checkboxTabIndex: null,
  defaultWidth: 40,
  minWidth: 40,
  isCheckboxColumn: true
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/normalizeColumns/defaultCheckColumnId.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/normalizeColumns/defaultCheckColumnId.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.id = void 0;
var id = '__checkbox-column';
exports.id = id;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/normalizeColumns/defaultGroupColumnId.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/normalizeColumns/defaultGroupColumnId.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.id = void 0;
var id = '__group-column';
exports.id = id;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/normalizeColumns/defaultRowExpandColumnId.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/normalizeColumns/defaultRowExpandColumnId.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.id = void 0;
var id = '__row-expand-column';
exports.id = id;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/normalizeColumns/defaultRowIndexColumnId.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/normalizeColumns/defaultRowIndexColumnId.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.id = void 0;
var id = '__row-index-column';
exports.id = id;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/normalizeColumns/defaultRowReorderColumnId.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/normalizeColumns/defaultRowReorderColumnId.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.id = void 0;
var id = '__reorder-column';
exports.id = id;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/normalizeColumns/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/normalizeColumns/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _setColumnId = _interopRequireDefault(__webpack_require__(/*! ../setColumnId */ "./node_modules/@inovua/reactdatagrid-community/setColumnId.js"));
var _computeFlexWidths = _interopRequireDefault(__webpack_require__(/*! ../utils/flex/computeFlexWidths */ "./node_modules/@inovua/reactdatagrid-community/utils/flex/computeFlexWidths.js"));
var _mapColumns = _interopRequireDefault(__webpack_require__(/*! ../mapColumns */ "./node_modules/@inovua/reactdatagrid-community/mapColumns.js"));
var _defaultCheckColumnId = __webpack_require__(/*! ./defaultCheckColumnId */ "./node_modules/@inovua/reactdatagrid-community/normalizeColumns/defaultCheckColumnId.js");
var _defaultRowExpandColumnId = __webpack_require__(/*! ./defaultRowExpandColumnId */ "./node_modules/@inovua/reactdatagrid-community/normalizeColumns/defaultRowExpandColumnId.js");
var _defaultRowIndexColumnId = __webpack_require__(/*! ./defaultRowIndexColumnId */ "./node_modules/@inovua/reactdatagrid-community/normalizeColumns/defaultRowIndexColumnId.js");
var _defaultGroupColumnId = __webpack_require__(/*! ./defaultGroupColumnId */ "./node_modules/@inovua/reactdatagrid-community/normalizeColumns/defaultGroupColumnId.js");
var _defaultRowReorderColumnId = __webpack_require__(/*! ./defaultRowReorderColumnId */ "./node_modules/@inovua/reactdatagrid-community/normalizeColumns/defaultRowReorderColumnId.js");
var _setComputedColumnWidths = _interopRequireDefault(__webpack_require__(/*! ./setComputedColumnWidths */ "./node_modules/@inovua/reactdatagrid-community/normalizeColumns/setComputedColumnWidths.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var DEFAULT_COLUMN_PROPS = {
  isColumn: true,
  keepFlex: true
};
var defaultPivotGrandSummaryColumn = {
  sortable: false,
  draggable: false,
  filterable: false
};
var defaultPivotSummaryColumn = defaultPivotGrandSummaryColumn;
var emptyArray = [];
var emptyObject = Object.freeze ? Object.freeze({}) : {};
var _default = function _default(_ref) {
  var _ref$generatedColumns = _ref.generatedColumnsLength,
    generatedColumnsLength = _ref$generatedColumns === void 0 ? 0 : _ref$generatedColumns,
    columns = _ref.columns,
    columnMinWidth = _ref.columnMinWidth,
    columnMaxWidth = _ref.columnMaxWidth,
    columnDefaultWidth = _ref.columnDefaultWidth,
    columnWidth = _ref.columnWidth,
    _ref$columnSizes = _ref.columnSizes,
    columnSizes = _ref$columnSizes === void 0 ? emptyObject : _ref$columnSizes,
    _ref$columnVisibility = _ref.columnVisibilityMap,
    columnVisibilityMap = _ref$columnVisibility === void 0 ? emptyObject : _ref$columnVisibility,
    _ref$columnFlexes = _ref.columnFlexes,
    columnFlexes = _ref$columnFlexes === void 0 ? emptyObject : _ref$columnFlexes,
    _ref$lockedColumnsSta = _ref.lockedColumnsState,
    lockedColumnsState = _ref$lockedColumnsSta === void 0 ? emptyObject : _ref$lockedColumnsSta,
    columnOrder = _ref.columnOrder,
    computedPivotUniqueValuesPerColumn = _ref.computedPivotUniqueValuesPerColumn,
    editable = _ref.editable,
    pivot = _ref.pivot,
    sortable = _ref.sortable,
    filterable = _ref.filterable,
    resizable = _ref.resizable,
    pivotGrandSummaryColumn = _ref.pivotGrandSummaryColumn,
    lockable = _ref.lockable,
    checkboxColumn = _ref.checkboxColumn,
    rowIndexColumn = _ref.rowIndexColumn,
    filter = _ref.filter,
    rtl = _ref.rtl,
    filterValueMap = _ref.filterValueMap,
    sortInfo = _ref.sortInfo,
    showPivotSummaryColumns = _ref.showPivotSummaryColumns,
    _ref$availableWidth = _ref.availableWidth,
    availableWidth = _ref$availableWidth === void 0 ? 0 : _ref$availableWidth,
    onRowReorder = _ref.onRowReorder,
    rowReorderColumn = _ref.rowReorderColumn,
    computedGroupColumn = _ref.groupColumn;
  if (columnVisibilityMap) {
    columnVisibilityMap = _objectSpread({}, columnVisibilityMap);
  }
  var groupColumnSummaryReducers = {};
  var pivotColumnSummaryReducers = {};
  var addSortInfo = function addSortInfo(col) {
    col.computedSortable = (typeof col.sortable === 'boolean' ? col.sortable : sortable) || false;
    col.computedSortInfo = null;
    if (col.computedSortable && sortInfo) {
      col.computedSortInfo = Array.isArray(sortInfo) ? sortInfo.filter(function (info) {
        return info.name === col.id || info.id === col.id || info.name === col.sortName;
      })[0] : sortInfo.name === col.id || sortInfo.id === col.id || sortInfo.name === col.sortName ? sortInfo : null;
    }
  };
  var addFilterValue = function addFilterValue(col) {
    col.computedFilterable = (typeof col.filterable === 'boolean' ? col.filterable : filterable) || undefined;
    col.computedFilterValue = null;
    if (col.computedFilterable && filterValueMap) {
      col.computedFilterValue = filterValueMap[col.id];
    }
    if (col.computedFilterable === undefined && col.computedFilterValue) {
      col.computedFilterable = true;
    }
    col.computedFilterable = !!col.computedFilterable;
  };
  var hasLockedStart = false;
  var hasLockedEnd = false;
  var hasValueSetter = false;
  var rowExpandColumn;
  var setComputedColumnWidthsParam = {
    columnFlexes: columnFlexes,
    columnSizes: columnSizes,
    columnDefaultWidth: columnDefaultWidth,
    columnWidth: columnWidth,
    columnMinWidth: columnMinWidth,
    columnMaxWidth: columnMaxWidth
  };
  var hasDedicatedGroupColumn = false;
  var normalizedColumns = columns.map(function (column) {
    return _objectSpread(_objectSpread({}, DEFAULT_COLUMN_PROPS), column);
  }).map(_setColumnId.default).map(function (col, i) {
    col.computedInitialIndex = i - generatedColumnsLength;
    (0, _setComputedColumnWidths.default)(col, setComputedColumnWidthsParam);
    col.computedVisible = col.visible !== undefined ? !!col.visible : columnVisibilityMap[col.id] === false ? false : true;
    if (col.computedVisible && pivot && !col.groupSummaryReducer && col.id !== _defaultGroupColumnId.id) {
      col.computedVisible = false;
    }
    if (col.computedVisible === false) {
      columnVisibilityMap[col.id] = false;
    } else {
      delete columnVisibilityMap[col.id];
      if (col.id === _defaultGroupColumnId.id) {
        hasDedicatedGroupColumn = true;
      }
    }
    col.computedHeader = col.header === undefined ? col.name || '' : col.header;
    col.computedLocked = col.locked;
    if (col.computedLocked === undefined && lockedColumnsState[col.id] !== undefined) {
      col.computedLocked = lockedColumnsState[col.id];
    }
    if (col.computedLocked === undefined && col.defaultLocked !== undefined) {
      col.computedLocked = col.defaultLocked;
    }
    if (!filter || filter(col)) {
      if (col.computedLocked === true || col.computedLocked === 'start') {
        col.computedLocked = 'start';
        hasLockedStart = true;
      }
      if (col.computedLocked === 'end') {
        hasLockedEnd = true;
      }
    }
    col.computedLocked = col.computedLocked || false;
    if (col.id === _defaultRowExpandColumnId.id) {
      rowExpandColumn = col;
    }
    if (col.enableColumnHover != null) {
      col.computedEnableColumnHover = col.enableColumnHover;
      delete col.enableColumnHover;
    }
    if (col.setValue) {
      hasValueSetter = true;
    }
    return col;
  });
  if (hasLockedStart) {
    if (rowExpandColumn != null) {
      rowExpandColumn.computedLocked = 'start';
    }
    if (checkboxColumn) {
      var normalizedCheckboxColumn = normalizedColumns.filter(function (c) {
        return c.checkboxColumn && c.id == _defaultCheckColumnId.id;
      })[0];
      if (normalizedCheckboxColumn) {
        normalizedCheckboxColumn.computedLocked = 'start';
      }
    }
    if (hasDedicatedGroupColumn) {
      var normalizedGroupColumn = normalizedColumns.filter(function (c) {
        return c.groupColumn && c.id == _defaultGroupColumnId.id;
      })[0];
      if (normalizedGroupColumn) {
        normalizedGroupColumn.computedLocked = 'start';
      }
    }
    var autoLockColumns = normalizedColumns.filter(function (c) {
      return !!c.autoLock;
    });
    if (autoLockColumns.length) {
      autoLockColumns.forEach(function (c) {
        c.computedLocked = 'start';
      });
    }
    if (rowReorderColumn || onRowReorder && (typeof onRowReorder === 'function' || typeof onRowReorder === 'boolean')) {
      var normalizedRowReorderColumn = normalizedColumns.filter(function (c) {
        return c.id === _defaultRowReorderColumnId.id;
      })[0];
      if (normalizedRowReorderColumn) {
        normalizedRowReorderColumn.computedLocked = 'start';
      }
    }
  }
  var computedEnableRowspan = false;
  normalizedColumns.forEach(function (col, index) {
    col.computedAbsoluteIndex = index;
    addSortInfo(col);
    addFilterValue(col);
    if (typeof col.rowspan === 'function') {
      computedEnableRowspan = true;
    }
    col.computedResizable = (typeof col.resizable !== 'boolean' ? resizable : col.resizable) || false;
    col.computedLockable = (typeof col.lockable !== 'boolean' ? lockable : col.lockable) || false;
  });
  var columnsMap = (0, _mapColumns.default)(normalizedColumns, {
    showWarnings: true
  });
  var visibleColumns = normalizedColumns.filter(function (c) {
    return c.computedVisible !== false;
  });
  if (columnOrder) {
    if (checkboxColumn) {
      var checkboxColumnIndex = columnOrder.indexOf(_defaultCheckColumnId.id);
      if (checkboxColumnIndex == -1) {
        columnOrder = [_defaultCheckColumnId.id].concat((0, _toConsumableArray2.default)(columnOrder));
      }
    }
  }
  if (rowExpandColumn) {
    if (!columnOrder) {
      columnOrder = visibleColumns.map(function (c) {
        return c.id;
      });
    }
    var rowExpandColumnIndex = columnOrder.indexOf(_defaultRowExpandColumnId.id);
    if (rowExpandColumnIndex !== 0) {
      columnOrder = [_defaultRowExpandColumnId.id].concat((0, _toConsumableArray2.default)(columnOrder.filter(function (id) {
        return id != _defaultRowExpandColumnId.id;
      })));
    }
  }
  if (rowReorderColumn || onRowReorder && (typeof onRowReorder === 'function' || typeof onRowReorder === 'boolean')) {
    if (!columnOrder) {
      columnOrder = visibleColumns.map(function (c) {
        return c.id;
      });
    }
    var rowReorderColumnIndex = columnOrder.indexOf(_defaultRowReorderColumnId.id);
    if (rowReorderColumnIndex !== 0) {
      columnOrder = [_defaultRowReorderColumnId.id].concat((0, _toConsumableArray2.default)(columnOrder.filter(function (id) {
        return id !== _defaultRowReorderColumnId.id;
      })));
    }
  }
  if (rowIndexColumn) {
    if (!columnOrder) {
      columnOrder = visibleColumns.map(function (c) {
        return c.id;
      });
    }
    var rowIndexColumnIndex = columnOrder.indexOf(_defaultRowIndexColumnId.id);
    if (rowIndexColumnIndex != 0) {
      columnOrder = [].concat((0, _toConsumableArray2.default)(columnOrder.filter(function (id) {
        var col = columnsMap[id];
        return col && col.groupSpacerColumn;
      })), [_defaultRowIndexColumnId.id], (0, _toConsumableArray2.default)(columnOrder.filter(function (id) {
        var col = columnsMap[id];
        if (!col) {
          return false;
        }
        return id != _defaultRowIndexColumnId.id && !col.groupSpacerColumn;
      })));
    }
  }
  if (generatedColumnsLength) {
    if (!columnOrder) {
      columnOrder = visibleColumns.map(function (c) {
        return c.id;
      });
    }
    var generatedColumns = visibleColumns.filter(function (c) {
      return c.groupSpacerColumn;
    });
    var generatedColumnIds = generatedColumns.reduce(function (acc, col) {
      acc[col.id] = true;
      return acc;
    }, {});
    columnOrder = [].concat((0, _toConsumableArray2.default)(generatedColumns.map(function (c) {
      return c.id;
    })), (0, _toConsumableArray2.default)(columnOrder.filter(function (id) {
      return !generatedColumnIds[id];
    })));
  }
  if (columnOrder) {
    var groupSpacerColumns = visibleColumns.filter(function (col) {
      return col.groupSpacerColumn;
    });
    var _checkboxColumn = visibleColumns.filter(function (col) {
      return col.checkboxColumn;
    });
    var groupColumns = visibleColumns.filter(function (col) {
      return col.groupColumn && !col.groupSpacerColumn;
    });
    var ungroupColumns = visibleColumns.filter(function (col) {
      if (computedGroupColumn) {
        return !col.groupColumn && !col.groupSpacerColumn && !col.checkboxColumn;
      } else {
        return !col.groupColumn && !col.groupSpacerColumn;
      }
    });
    visibleColumns = columnOrder.map(function (colId) {
      return ungroupColumns.find(function (col) {
        return col.id == colId;
      });
    }).filter(function (x) {
      return !!x;
    });
    if (computedGroupColumn) {
      visibleColumns = [].concat((0, _toConsumableArray2.default)(_checkboxColumn), (0, _toConsumableArray2.default)(groupSpacerColumns), (0, _toConsumableArray2.default)(groupColumns), (0, _toConsumableArray2.default)(visibleColumns));
    } else {
      visibleColumns = [].concat((0, _toConsumableArray2.default)(groupSpacerColumns), (0, _toConsumableArray2.default)(groupColumns), (0, _toConsumableArray2.default)(visibleColumns));
    }
  }
  if (typeof filter == 'function') {
    visibleColumns = visibleColumns.filter(filter);
  }
  normalizedColumns.forEach(function (col) {
    if (col.groupSummaryReducer) {
      groupColumnSummaryReducers[col.id] = col.groupSummaryReducer;
      if (!col.groupSummaryReducer.reducer && col.groupSummaryReducer.reduce) {
        groupColumnSummaryReducers[col.id].reducer = col.groupSummaryReducer.reduce;
      }
    }
  });
  var groupColumn = visibleColumns.filter(function (col) {
    return !!col.groupColumn;
  })[0];
  if (pivot && computedPivotUniqueValuesPerColumn && groupColumn) {
    var aggregateColumns = visibleColumns.filter(function (col) {
      return !!col.groupSummaryReducer;
    });
    var newColumns = [groupColumn].concat((0, _toConsumableArray2.default)(getPivotColumns(aggregateColumns, computedPivotUniqueValuesPerColumn, columnSizes, pivot, pivotGrandSummaryColumn, showPivotSummaryColumns))).map(function (col) {
      (0, _setComputedColumnWidths.default)(col, setComputedColumnWidthsParam);
      col.computedResizable = (typeof col.resizable !== 'boolean' ? resizable : col.resizable) || false;
      return col;
    });
    visibleColumns = newColumns;
    columnsMap = _objectSpread(_objectSpread({}, columnsMap), (0, _mapColumns.default)(newColumns, {
      showWarnings: true
    }));
  }
  var flexes = [];
  var maxWidths = [];
  var minWidths = [];
  var minColumnsSize = 0;
  var availableWidthForFlex = availableWidth;
  visibleColumns.forEach(function (col) {
    if (col.computedFlex == null) {
      availableWidthForFlex -= col.computedWidth || col.computedDefaultWidth || col.computedMinWidth || 0;
    }
    flexes.push(col.computedFlex || 0);
    maxWidths.push(col.computedMaxWidth || null);
    minWidths.push(col.computedMinWidth || null);
  });
  availableWidthForFlex = Math.max(availableWidthForFlex, 0);
  var flexWidths = (0, _computeFlexWidths.default)({
    flexes: flexes,
    availableSize: availableWidthForFlex,
    maxWidths: maxWidths,
    minWidths: minWidths
  });
  var totalFlexColumnCount = 0;
  visibleColumns.forEach(function (col, index) {
    if (col.computedFlex != null) {
      col.computedWidth = flexWidths[index] || 0;
      totalFlexColumnCount++;
      minColumnsSize += col.minWidth || 0;
    } else {
      minColumnsSize += col.computedWidth || 0;
    }
  });
  var unlockedColumns = visibleColumns;
  var lockedStartColumns = [];
  var lockedEndColumns = [];
  if (hasLockedStart || hasLockedEnd) {
    unlockedColumns = groupColumn && hasLockedStart ? visibleColumns.filter(function (col) {
      return !col.computedLocked && !col.groupColumn;
    }) : visibleColumns.filter(function (col) {
      return !col.computedLocked;
    });
    lockedStartColumns = hasLockedStart ? visibleColumns.filter(function (col) {
      return col.computedLocked === 'start' || col.groupColumn;
    }) : emptyArray;
    lockedEndColumns = hasLockedEnd ? groupColumn && hasLockedStart ? visibleColumns.filter(function (col) {
      return col.computedLocked === 'end' && !col.groupColumn;
    }) : visibleColumns.filter(function (col) {
      return col.computedLocked === 'end';
    }) : emptyArray;
    visibleColumns = [].concat((0, _toConsumableArray2.default)(lockedStartColumns), (0, _toConsumableArray2.default)(unlockedColumns), (0, _toConsumableArray2.default)(lockedEndColumns));
  }
  var visibleColumnsMap = (0, _mapColumns.default)(visibleColumns, {
    showWarnings: true
  });
  var sumPrefixWidth = 0;
  var totalLockedStartWidth = 0;
  var totalLockedEndWidth = 0;
  var totalUnlockedWidth = 0;
  var columnWidthPrefixSums = [];
  var computedHasColSpan = false;
  visibleColumns.forEach(function (col, index, arr) {
    col.computedVisibleIndex = index;
    col.computedVisibleCount = arr.length;
    if (col.colspan) {
      computedHasColSpan = true;
    }
    col.computedOffset = sumPrefixWidth;
    var computedLocked = col.computedLocked,
      computedWidth = col.computedWidth;
    if (computedLocked === 'start') {
      totalLockedStartWidth += computedWidth || 0;
    } else if (computedLocked === 'end') {
      totalLockedEndWidth += computedWidth || 0;
    } else {
      totalUnlockedWidth += computedWidth || 0;
    }
    addSortInfo(col);
    if (editable && col.editable === undefined) {
      col.computedEditable = true;
    }
    if (col.editable !== undefined) {
      col.computedEditable = col.editable;
    }
    columnWidthPrefixSums.push(col.computedOffset || 0);
    sumPrefixWidth += computedWidth || 0;
  });
  if (pivot) {
    pivot.forEach(function (pivotCol) {
      if (typeof pivotCol !== 'string' && pivotCol.summaryReducer) {
        pivotColumnSummaryReducers[pivotCol.name] = pivotCol.summaryReducer;
      }
    });
  }
  return {
    pivotColumnSummaryReducers: pivotColumnSummaryReducers,
    minColumnsSize: minColumnsSize,
    totalFlexColumnCount: totalFlexColumnCount,
    groupColumnSummaryReducers: Object.keys(groupColumnSummaryReducers).length ? groupColumnSummaryReducers : undefined,
    totalComputedWidth: sumPrefixWidth,
    totalLockedStartWidth: totalLockedStartWidth,
    totalLockedEndWidth: totalLockedEndWidth,
    totalUnlockedWidth: totalUnlockedWidth,
    lockedStartColumns: lockedStartColumns,
    lockedEndColumns: lockedEndColumns,
    unlockedColumns: unlockedColumns,
    columnWidthPrefixSums: columnWidthPrefixSums,
    columnVisibilityMap: columnVisibilityMap,
    computedEnableRowspan: computedEnableRowspan,
    computedHasColSpan: computedHasColSpan,
    visibleColumns: visibleColumns,
    allColumns: normalizedColumns,
    columnsMap: columnsMap,
    visibleColumnsMap: visibleColumnsMap,
    hasValueSetter: hasValueSetter
  };
};
exports["default"] = _default;
var getPivotGroupColumnForPath = function getPivotGroupColumnForPath(columnConfig, _ref2) {
  var pivot = _ref2.pivot,
    pivotGrandSummaryColumn = _ref2.pivotGrandSummaryColumn;
  var pivotMap = pivot.reduce(function (acc, p) {
    if (!p.summaryReducer) {
      return acc;
    }
    var col = p ? p.summaryColumn || {} : {};
    acc[p.name || p] = col;
    return acc;
  }, {});
  if (pivotGrandSummaryColumn === true) {
    pivotGrandSummaryColumn = {};
  }
  if (pivotGrandSummaryColumn) {
    pivotGrandSummaryColumn.pivotGrandSummaryColumn = true;
    pivotGrandSummaryColumn = _objectSpread(_objectSpread({}, defaultPivotGrandSummaryColumn), pivotGrandSummaryColumn);
  }
  columnConfig = _objectSpread(_objectSpread({}, defaultPivotSummaryColumn), columnConfig);
  var _columnConfig = columnConfig,
    pivotSummaryPath = _columnConfig.pivotSummaryPath;
  var lastItem = pivotSummaryPath[pivotSummaryPath.length - 1];
  var name = lastItem ? lastItem.field : null;
  var col = !lastItem ? pivotGrandSummaryColumn : pivotMap[name] || {};
  var result = columnConfig;
  if (lastItem) {
    columnConfig.header = "Summary for ".concat(lastItem.field, " ").concat(lastItem.value);
  }
  if (!pivotGrandSummaryColumn && !pivotMap[name]) {
    return null;
  }
  if (col) {
    if (typeof col === 'function') {
      result = _objectSpread(_objectSpread({}, columnConfig), col(columnConfig));
    } else {
      result = _objectSpread(_objectSpread({}, columnConfig), col);
    }
  }
  return result;
};
var getPivotColumns = function getPivotColumns(aggregateColumns, uniqueValuesRoot, columnSizes, pivot, pivotGrandSummaryColumn, showPivotSummaryColumns) {
  var parentGroups = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : [];
  var pivotColumnPath = arguments.length > 7 ? arguments[7] : undefined;
  var newColumns = [];
  var field = uniqueValuesRoot.field,
    values = uniqueValuesRoot.values;
  var parentGroup = parentGroups[parentGroups.length - 1];
  if (field && values) {
    Object.keys(values).forEach(function (value) {
      var groupId = "".concat(parentGroup ? parentGroup.name + '_' : '').concat(field, ":").concat(value);
      var group = {
        name: groupId,
        header: "".concat(field, "-").concat(value),
        pivotPath: [{
          value: value,
          field: field
        }]
      };
      if (parentGroup) {
        group.group = parentGroup.name;
        group.pivotPath = [].concat((0, _toConsumableArray2.default)(parentGroup.pivotPath || []), (0, _toConsumableArray2.default)(group.pivotPath));
      }
      var nextRoot = values[value];
      pivotColumnPath = pivotColumnPath || [];
      newColumns.push.apply(newColumns, (0, _toConsumableArray2.default)(getPivotColumns(aggregateColumns, nextRoot, columnSizes, pivot, pivotGrandSummaryColumn, showPivotSummaryColumns, [].concat((0, _toConsumableArray2.default)(parentGroups), [{
        name: groupId,
        pivotPath: group.pivotPath,
        depth: parentGroup ? parentGroup.depth + 1 : 0
      }]), [].concat((0, _toConsumableArray2.default)(pivotColumnPath), [value]))));
      if (!parentGroup && showPivotSummaryColumns) {
        var summaryCol = getPivotGroupColumnForPath({
          header: "Summary for ".concat(group.header),
          id: "__summary_".concat(group.name),
          pivotSummaryColumn: true,
          pivotSummaryPath: group.pivotPath
        }, {
          pivot: pivot
        });
        if (summaryCol) {
          newColumns.push(summaryCol);
        }
      }
    });
  } else {
    newColumns.push.apply(newColumns, (0, _toConsumableArray2.default)(aggregateColumns.map(function (col) {
      var result = _objectSpread(_objectSpread({}, col), {}, {
        sortable: false,
        showInContextMenu: false,
        draggable: false,
        pivotColumn: true,
        pivotColumnPath: [].concat((0, _toConsumableArray2.default)(pivotColumnPath || []), [col.pivotName || col.name || col.id]),
        id: "".concat(parentGroup.name, "-").concat(col.id),
        group: parentGroup.name
      });
      if (columnSizes[result.id]) {
        result.computedWidth = columnSizes[result.id];
      }
      return result;
    })));
    var prevParentGroup = parentGroups[parentGroups.length - 2];
    if (showPivotSummaryColumns && prevParentGroup) {
      var summaryCol = getPivotGroupColumnForPath({
        group: prevParentGroup ? prevParentGroup.name : undefined,
        header: "Summary for ".concat(parentGroup.name, " - ").concat(prevParentGroup ? prevParentGroup.name : ''),
        id: "__summary__".concat(parentGroup.name),
        pivotSummaryPath: parentGroup.pivotPath,
        pivotSummaryColumn: true
      }, {
        pivot: pivot
      });
      if (summaryCol) {
        newColumns.push(summaryCol);
      }
    }
  }
  if (!parentGroup && pivotGrandSummaryColumn && showPivotSummaryColumns) {
    newColumns.push(getPivotGroupColumnForPath({
      header: "Grand summary",
      id: "__summary__grand",
      pivotSummaryColumn: true,
      pivotSummaryPath: []
    }, {
      pivot: pivot,
      pivotGrandSummaryColumn: pivotGrandSummaryColumn
    }));
  }
  return newColumns;
};

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/normalizeColumns/maybeAddCheckboxColumn.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/normalizeColumns/maybeAddCheckboxColumn.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = _default;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _defaultCheckColumn = _interopRequireDefault(__webpack_require__(/*! ./defaultCheckColumn */ "./node_modules/@inovua/reactdatagrid-community/normalizeColumns/defaultCheckColumn.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _default(columns, props) {
  var checkboxColumn = props.checkboxColumn;
  if (checkboxColumn) {
    var checkCol = _objectSpread(_objectSpread(_objectSpread({}, _defaultCheckColumn.default), checkboxColumn === true ? null : checkboxColumn), {}, {
      name: null,
      id: _defaultCheckColumn.default.id
    });
    if (checkCol.visible === false) {
      checkCol.visible = true;
    }
    if (columns[0] && columns[0].group && props.groups && props.groups.length) {
      delete checkCol.nextBorderLeft;
    }
    columns = [checkCol].concat(columns);
  }
  return columns;
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/normalizeColumns/renderCheckbox.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/normalizeColumns/renderCheckbox.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _CheckBox = _interopRequireDefault(__webpack_require__(/*! ../packages/CheckBox */ "./node_modules/@inovua/reactdatagrid-community/packages/CheckBox/index.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var stopPropagation = function stopPropagation(e) {
  e.stopPropagation();
};
var emptyObject = {};
var _default = function _default(cellProps) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : emptyObject,
    headerProps = _ref.headerProps;
  var selectAll = cellProps.selectAll,
    deselectAll = cellProps.deselectAll,
    selectedCount = cellProps.selectedCount,
    unselectedCount = cellProps.unselectedCount,
    totalCount = cellProps.totalCount,
    headerCell = cellProps.headerCell,
    empty = cellProps.empty,
    rowIndex = cellProps.rowIndex,
    rowSelected = cellProps.rowSelected,
    setRowSelected = cellProps.setRowSelected,
    renderCheckbox = cellProps.renderCheckbox,
    hideIntermediateState = cellProps.hideIntermediateState;
  if (empty && !renderCheckbox) {
    return null;
  }
  var checkboxProps = {
    disabled: empty,
    tabIndex: cellProps.checkboxTabIndex,
    onClick: stopPropagation,
    supportIndeterminate: false,
    theme: cellProps.theme,
    className: 'InovuaReactDataGrid__checkbox'
  };
  if (headerCell) {
    var selected = headerProps.selected,
      unselected = headerProps.unselected;
    checkboxProps.supportIndeterminate = !hideIntermediateState;
    var checked;
    if (selected === true) {
      checked = unselected && (0, _typeof2.default)(unselected) == 'object' && Object.keys(unselected).length != 0 ? checkboxProps.supportIndeterminate ? null : false : true;
    } else {
      checked = selectedCount == 0 || !totalCount ? false : totalCount <= selectedCount && unselectedCount === 0 ? true : checkboxProps.supportIndeterminate ? null : false;
    }
    checkboxProps.checked = checked;
    checkboxProps.onChange = checked === false ? selectAll : deselectAll;
  } else {
    checkboxProps.onChange = setRowSelected ? setRowSelected.bind(null, rowIndex) : null;
    checkboxProps.checked = rowSelected;
  }
  if (renderCheckbox) {
    if (checkboxProps.checked === null && checkboxProps.supportIndeterminate) {
      checkboxProps.isIndeterminate = true;
    }
    var result = renderCheckbox(checkboxProps, cellProps);
    if (result !== undefined) {
      return result;
    }
  }
  delete checkboxProps.isIndeterminate;
  return _react.default.createElement(_CheckBox.default, _objectSpread({}, checkboxProps));
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/normalizeColumns/setComputedColumnWidths.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/normalizeColumns/setComputedColumnWidths.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var emptyObject = Object.freeze ? Object.freeze({}) : {};
var DEFAULT_WIDTH = 150;
var computeColumnWidths = function computeColumnWidths(col, _ref) {
  var columnMinWidth = _ref.columnMinWidth,
    columnWidth = _ref.columnWidth,
    columnMaxWidth = _ref.columnMaxWidth,
    _ref$columnDefaultWid = _ref.columnDefaultWidth,
    columnDefaultWidth = _ref$columnDefaultWid === void 0 ? DEFAULT_WIDTH : _ref$columnDefaultWid,
    _ref$columnSizes = _ref.columnSizes,
    columnSizes = _ref$columnSizes === void 0 ? emptyObject : _ref$columnSizes,
    _ref$columnFlexes = _ref.columnFlexes,
    columnFlexes = _ref$columnFlexes === void 0 ? emptyObject : _ref$columnFlexes;
  if (columnMinWidth && columnMaxWidth && columnMinWidth > columnMaxWidth) {
    var _ref2 = [columnMaxWidth, columnMinWidth];
    columnMinWidth = _ref2[0];
    columnMaxWidth = _ref2[1];
  }
  var computedDefaultWidth = col.defaultWidth;
  var computedWidth = col.width;
  var computedFlex = col.defaultFlex;
  var computedMinWidth = col.minWidth;
  var computedMaxWidth = col.maxWidth;
  if (col.defaultWidth == null && columnDefaultWidth != null) {
    computedDefaultWidth = columnDefaultWidth;
  }
  if (columnFlexes[col.id]) {
    computedFlex = columnFlexes[col.id];
  }
  if (col.flex) {
    computedFlex = col.flex;
  }
  if (!computedFlex && computedWidth === undefined && columnSizes[col.id] !== undefined) {
    computedFlex = null;
    computedWidth = columnSizes[col.id];
  }
  if (!computedFlex) {
    computedFlex = null;
  }
  if (computedFlex != null && computedWidth == null && columnWidth != null) {
    computedWidth = columnWidth;
  }
  if (computedMinWidth == null && columnMinWidth != null) {
    computedMinWidth = columnMinWidth;
  }
  if (computedMaxWidth == null && columnMaxWidth != null) {
    computedMaxWidth = columnMaxWidth;
  }
  if (computedDefaultWidth != null && computedMinWidth != null && computedDefaultWidth < computedMinWidth) {
    computedDefaultWidth = computedMinWidth;
  }
  if (computedDefaultWidth != null && computedMaxWidth != null && computedDefaultWidth > computedMaxWidth) {
    computedDefaultWidth = computedMaxWidth;
  }
  if (computedWidth != null && computedMinWidth != null && computedWidth < computedMinWidth) {
    computedWidth = computedMinWidth;
  }
  if (computedWidth != null && computedMaxWidth != null && computedWidth > computedMaxWidth) {
    computedWidth = computedMaxWidth;
  }
  if (computedFlex == null) {
    computedWidth = computedWidth || computedDefaultWidth || computedMinWidth;
  }
  col.computedMinWidth = computedMinWidth;
  col.computedMaxWidth = computedMaxWidth;
  col.computedWidth = computedWidth;
  col.computedFlex = computedFlex;
  return col;
};
var _default = computeColumnWidths;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/normalizeColumns/useBuildColumns.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/normalizeColumns/useBuildColumns.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = _default;
var _maybeAddCheckboxColumn = _interopRequireDefault(__webpack_require__(/*! ./maybeAddCheckboxColumn */ "./node_modules/@inovua/reactdatagrid-community/normalizeColumns/maybeAddCheckboxColumn.js"));
function _default(columns, props) {
  if (props.maybeAddColumns) {
    columns = props.maybeAddColumns(columns, props);
  }
  columns = (0, _maybeAddCheckboxColumn.default)(columns, props);
  return columns;
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/normalizeColumns/useColumnInfo.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/normalizeColumns/useColumnInfo.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _2 = _interopRequireDefault(__webpack_require__(/*! . */ "./node_modules/@inovua/reactdatagrid-community/normalizeColumns/index.js"));
var _shallowequal = __webpack_require__(/*! ../packages/shallowequal */ "./node_modules/@inovua/reactdatagrid-community/packages/shallowequal/index.js");
var _useBuildColumns = _interopRequireDefault(__webpack_require__(/*! ./useBuildColumns */ "./node_modules/@inovua/reactdatagrid-community/normalizeColumns/useBuildColumns.js"));
var _useMemoWithObject = _interopRequireDefault(__webpack_require__(/*! ../hooks/useMemoWithObject */ "./node_modules/@inovua/reactdatagrid-community/hooks/useMemoWithObject/index.js"));
var includeAll = function includeAll() {
  return true;
};
var useGroupByColumns = function useGroupByColumns(args) {
  var generatedColumnsLength = 0;
  var columns = args.columns;
  var groupBy = args.groupBy,
    groupColumn = args.groupColumn,
    filter = args.filter,
    groupForGroupColumns = args.groupForGroupColumns,
    checkboxColumn = args.checkboxColumn,
    lockedColumnsState = args.lockedColumnsState,
    groupNestingSize = args.groupNestingSize,
    inTransition = args.inTransition;
  if (groupBy && groupBy.length && !groupColumn) {
    var lockedStartCount = 0;
    var groupColumnCount = 0;
    columns.filter(filter || includeAll).forEach(function (col) {
      if (col.groupSpacerColumn) {
        groupColumnCount++;
      }
      var locked = col.locked === undefined ? col.defaultLocked : col.locked;
      var colInLocked = lockedColumnsState[col.id] || lockedColumnsState[col.name];
      if (colInLocked !== undefined) {
        locked = colInLocked;
      }
      if (locked === 'start' || locked === true) {
        lockedStartCount++;
      }
    });
    if (lockedStartCount && checkboxColumn) {
      lockedStartCount++;
    }
    var generatedColumns = (0, _toConsumableArray2.default)(Array(groupBy.length - groupColumnCount)).map(function (_, i) {
      return {
        name: "__col_generated-groupBy-".concat(groupColumnCount + i),
        header: null,
        inTransition: inTransition,
        visibilityTransitionDuration: !!inTransition,
        groupSpacerColumn: true,
        group: groupForGroupColumns,
        locked: !!lockedStartCount,
        defaultWidth: groupNestingSize,
        width: groupNestingSize,
        minWidth: groupNestingSize,
        maxWidth: groupNestingSize,
        showInContextMenu: false,
        cellSelectable: false,
        draggable: false,
        resizable: false,
        sortable: false
      };
    });
    generatedColumnsLength = generatedColumns.length;
    columns = generatedColumnsLength ? [].concat((0, _toConsumableArray2.default)(generatedColumns), (0, _toConsumableArray2.default)(columns)) : columns;
  }
  return {
    columns: columns,
    generatedColumnsLength: generatedColumnsLength
  };
};
var useColumnInfo = function useColumnInfo(params) {
  return (0, _useMemoWithObject.default)(function () {
    var columns = params.columns,
      columnMinWidth = params.columnMinWidth,
      columnMaxWidth = params.columnMaxWidth,
      columnDefaultWidth = params.columnDefaultWidth,
      columnWidth = params.columnWidth,
      groupNestingSize = params.groupNestingSize,
      columnOrder = params.columnOrder,
      onRowReorder = params.onRowReorder,
      columnVisibilityMap = params.columnVisibilityMap,
      columnSizes = params.columnSizes,
      columnFlexes = params.columnFlexes,
      _params$lockedColumns = params.lockedColumnsState,
      lockedColumnsState = _params$lockedColumns === void 0 ? {} : _params$lockedColumns,
      groupBy = params.groupBy,
      maybeAddColumns = params.maybeAddColumns,
      editable = params.editable,
      computedPivotUniqueValuesPerColumn = params.computedPivotUniqueValuesPerColumn,
      checkboxColumn = params.checkboxColumn,
      rowIndexColumn = params.rowIndexColumn,
      groupColumn = params.groupColumn,
      pivot = params.pivot,
      groupForGroupColumns = params.groupForGroupColumns,
      inTransition = params.inTransition,
      rtl = params.rtl,
      hideGroupByColumns = params.hideGroupByColumns,
      availableWidth = params.availableWidth,
      sortInfo = params.sortInfo,
      filterValueMap = params.filterValueMap,
      sortable = params.sortable,
      filterable = params.filterable,
      resizable = params.resizable,
      pivotGrandSummaryColumn = params.pivotGrandSummaryColumn,
      lockable = params.lockable,
      groups = params.groups,
      enableRowExpand = params.enableRowExpand,
      showPivotSummaryColumns = params.showPivotSummaryColumns,
      expandedRows = params.expandedRows,
      defaultExpandedRows = params.defaultExpandedRows,
      renderRowDetails = params.renderRowDetails,
      renderDetailsGrid = params.renderDetailsGrid,
      rowExpandColumn = params.rowExpandColumn,
      rowReorderColumn = params.rowReorderColumn,
      renderRowDetailsExpandIcon = params.renderRowDetailsExpandIcon,
      renderRowDetailsCollapsedIcon = params.renderRowDetailsCollapsedIcon;
    if (pivot) {
      groupColumn = groupColumn || true;
    }
    columns = (0, _useBuildColumns.default)(columns, {
      groups: groups,
      checkboxColumn: checkboxColumn,
      groupBy: groupBy,
      groupColumn: groupColumn,
      rowIndexColumn: rowIndexColumn,
      enableRowExpand: enableRowExpand,
      expandedRows: expandedRows,
      maybeAddColumns: maybeAddColumns,
      defaultExpandedRows: defaultExpandedRows,
      renderRowDetails: renderRowDetails,
      renderDetailsGrid: renderDetailsGrid,
      rowExpandColumn: rowExpandColumn,
      onRowReorder: onRowReorder,
      rowReorderColumn: rowReorderColumn,
      renderRowDetailsExpandIcon: renderRowDetailsExpandIcon,
      renderRowDetailsCollapsedIcon: renderRowDetailsCollapsedIcon
    });
    var filter = !hideGroupByColumns || !groupBy || !groupBy.length ? null : function (col) {
      return groupBy.indexOf(col.id || col.name) == -1;
    };
    var generatedColumnsLength;
    var res = useGroupByColumns({
      groupBy: groupBy,
      groupColumn: groupColumn,
      columns: columns,
      filter: filter,
      groupForGroupColumns: groupForGroupColumns,
      checkboxColumn: checkboxColumn,
      lockedColumnsState: lockedColumnsState,
      groupNestingSize: groupNestingSize,
      inTransition: inTransition
    });
    columns = res.columns;
    generatedColumnsLength = res.generatedColumnsLength;
    return (0, _2.default)({
      pivotGrandSummaryColumn: pivotGrandSummaryColumn,
      generatedColumnsLength: generatedColumnsLength,
      columns: columns,
      columnMinWidth: columnMinWidth,
      columnMaxWidth: columnMaxWidth,
      columnDefaultWidth: columnDefaultWidth,
      columnWidth: columnWidth,
      columnSizes: columnSizes,
      columnFlexes: columnFlexes,
      columnOrder: columnOrder,
      showPivotSummaryColumns: showPivotSummaryColumns,
      computedPivotUniqueValuesPerColumn: computedPivotUniqueValuesPerColumn,
      rtl: rtl,
      filterValueMap: filterValueMap,
      pivot: pivot,
      checkboxColumn: checkboxColumn,
      rowIndexColumn: rowIndexColumn,
      columnVisibilityMap: columnVisibilityMap,
      lockedColumnsState: lockedColumnsState,
      sortable: sortable,
      filterable: filterable,
      resizable: resizable,
      lockable: lockable,
      filter: filter,
      sortInfo: sortInfo,
      editable: editable,
      availableWidth: availableWidth,
      onRowReorder: onRowReorder,
      rowReorderColumn: rowReorderColumn,
      groupColumn: groupColumn
    });
  }, params, function (a, b) {
    var _equalReturnKey = (0, _shallowequal.equalReturnKey)(a, b),
      result = _equalReturnKey.result,
      key = _equalReturnKey.key;
    return result;
  });
};
var _default = useColumnInfo;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ArrowScroller/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ArrowScroller/index.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _src = _interopRequireDefault(__webpack_require__(/*! ./src */ "./node_modules/@inovua/reactdatagrid-community/packages/ArrowScroller/src/index.js"));
var _default = _src.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ArrowScroller/src/Arrow.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ArrowScroller/src/Arrow.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _isMobile = _interopRequireDefault(__webpack_require__(/*! ../../../common/isMobile */ "./node_modules/@inovua/reactdatagrid-community/common/isMobile.js"));
var ARROWS = {
  right: _react.default.createElement("path", {
    fillRule: "evenodd",
    d: "M4.738 5.262L.632 9.368c-.144.144-.379.144-.524 0C.04 9.298 0 9.204 0 9.106V.894C0 .69.166.524.37.524c.099 0 .193.039.262.108l4.106 4.106c.145.145.145.38 0 .524z"
  }),
  left: _react.default.createElement("path", {
    fillRule: "evenodd",
    d: "M.262 4.738L4.368.632c.144-.144.379-.144.524 0C4.96.702 5 .796 5 .894v8.212c0 .204-.166.37-.37.37-.099 0-.193-.039-.262-.108L.262 5.262c-.145-.145-.145-.38 0-.524z"
  }),
  down: _react.default.createElement("path", {
    fillRule: "evenodd",
    d: "M4.738 4.738L.632.632C.488.488.488.253.632.108.702.04.796 0 .894 0h8.212c.204 0 .37.166.37.37 0 .099-.039.193-.108.262L5.262 4.738c-.145.145-.38.145-.524 0z"
  }),
  up: _react.default.createElement("path", {
    fillRule: "evenodd",
    d: "M5.262.262l4.106 4.106c.144.144.144.379 0 .524-.07.069-.164.108-.262.108H.894c-.204 0-.37-.166-.37-.37 0-.099.039-.193.108-.262L4.738.262c.145-.145.38-.145.524 0z"
  })
};
var Arrow = function Arrow(_ref) {
  var name = _ref.name,
    className = _ref.className,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? _isMobile.default ? 25 : 20 : _ref$size;
  return _react.default.createElement("svg", {
    className: "".concat(className, " ").concat(className, "--").concat(name),
    height: size.height || size,
    width: size.width || size,
    viewBox: "0 0 10 20"
  }, _react.default.createElement("g", {
    transform: "translate(2.5, 5)"
  }, ARROWS[name]));
};
var _default = Arrow;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ArrowScroller/src/ArrowScroller.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ArrowScroller/src/ArrowScroller.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _isMobile = _interopRequireDefault(__webpack_require__(/*! ../../../common/isMobile */ "./node_modules/@inovua/reactdatagrid-community/common/isMobile.js"));
var _cleanProps = _interopRequireDefault(__webpack_require__(/*! ../../../common/cleanProps */ "./node_modules/@inovua/reactdatagrid-community/common/cleanProps.js"));
var _debounce = _interopRequireDefault(__webpack_require__(/*! ../../../common/debounce */ "./node_modules/@inovua/reactdatagrid-community/common/debounce.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../packages/join */ "./node_modules/@inovua/reactdatagrid-community/packages/join/index.js"));
var _Flex = __webpack_require__(/*! ../../Flex */ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/index.js");
var _NotifyResize = __webpack_require__(/*! ../../NotifyResize */ "./node_modules/@inovua/reactdatagrid-community/packages/NotifyResize/index.js");
var _InertialScroller = __webpack_require__(/*! ../../InertialScroller */ "./node_modules/@inovua/reactdatagrid-community/packages/InertialScroller/index.js");
var _ua = __webpack_require__(/*! ../../../common/ua */ "./node_modules/@inovua/reactdatagrid-community/common/ua.js");
var _reactScrollContainerPro = _interopRequireDefault(__webpack_require__(/*! ../../../packages/react-scroll-container-pro */ "./node_modules/@inovua/reactdatagrid-community/packages/react-scroll-container-pro/index.js"));
var _Arrow = _interopRequireDefault(__webpack_require__(/*! ./Arrow */ "./node_modules/@inovua/reactdatagrid-community/packages/ArrowScroller/src/Arrow.js"));
var _getGlobal = __webpack_require__(/*! ../../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var globalObject = (0, _getGlobal.getGlobal)();
var VIEW_STYLE_VERTICAL = {
  maxHeight: '100%'
};
var VIEW_STYLE_HORIZONTAL = {
  maxWidth: '100%'
};
var observe = function observe(targetNode, callback, cfg) {
  var config = cfg || {
    attributes: false,
    childList: true,
    subtree: true
  };
  var observer = new MutationObserver(callback);
  observer.observe(targetNode, config);
  return function () {
    observer.disconnect();
  };
};
var measureScrollSize = function measureScrollSize(node) {
  return {
    width: node.scrollWidth,
    height: node.scrollHeight
  };
};
var scrollerResizerProps = {
  useNativeIfAvailable: false,
  measureSize: measureScrollSize
};
var callAll = function callAll() {
  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {
    fns[_key] = arguments[_key];
  }
  return function () {
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }
    fns.forEach(function (fn) {
      fn && fn.apply(void 0, args);
    });
  };
};
var pint = globalObject.parseInt;
var raf = globalObject.requestAnimationFrame;
var getCompStyle = globalObject.getComputedStyle;
var NO_SCROLLBARS = function NO_SCROLLBARS() {
  return false;
};
var InovuaArrowScroller = function (_Component) {
  (0, _inherits2.default)(InovuaArrowScroller, _Component);
  var _super = _createSuper(InovuaArrowScroller);
  function InovuaArrowScroller(props) {
    var _this;
    (0, _classCallCheck2.default)(this, InovuaArrowScroller);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getScrollerNodeClientSize", function (node) {
      var result = {
        width: node.firstChild.offsetWidth,
        height: node.firstChild.offsetHeight
      };
      return result;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onScrollContainerDidMount", function (scrollContainer, domNode, notifyResizer) {
      _this._unobserve = observe(domNode, function () {
        if (notifyResizer && notifyResizer.checkResize) {
          notifyResizer.checkResize();
        }
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onScrollContainerWillUnmount", function () {
      if (_this._unobserve) {
        _this._unobserve();
      }
    });
    _this.scrollInfo = {
      scrollPos: 0,
      hasStartScroll: false,
      hasEndScroll: false,
      scrollerSize: {
        start: 0,
        end: 0
      }
    };
    _this.state = {
      scrolling: false,
      activeScroll: 0
    };
    _this.handleResize = (0, _debounce.default)(_this.handleResize.bind((0, _assertThisInitialized2.default)(_this)), 50, {
      leading: false,
      trailing: true
    });
    _this.updateScrollInfo = _this.updateScrollInfo.bind((0, _assertThisInitialized2.default)(_this));
    _this.rafUpdateScrollInfo = _this.rafUpdateScrollInfo.bind((0, _assertThisInitialized2.default)(_this));
    _this.onContainerScroll = _this.onContainerScroll.bind((0, _assertThisInitialized2.default)(_this));
    _this.strip = (0, _react.createRef)();
    _this.refScrollContainer = function (scrollContainer) {
      _this.scrollerTarget = scrollContainer;
    };
    _this.setRootRef = function (ref) {
      _this.root = ref;
      if (!_this.props.nativeScroll) {
        _this.scrollerTarget = _this.root;
      }
    };
    return _this;
  }
  (0, _createClass2.default)(InovuaArrowScroller, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;
      this.componentIsMounted = true;
      raf(function () {
        var name = _this2.getOffsetSizeName();
        _this2.scrollInfo.scrollerSize = {
          start: _this2.props.scroller === ( true || 0) ? _this2.start[name] : null,
          end: _this2.props.scroller === ( true || 0) ? _this2.end[name] : null
        };
        _this2.syncScroll({
          force: true
        });
        _this2.inertialManager = new _InertialScroller.InertialManager({
          arrowSelector: ".".concat(_this2.props.rootClassName, "__arrow"),
          node: _this2.root,
          viewNode: _this2.strip.current,
          setScrollPosition: function setScrollPosition() {
            return raf(function () {
              return _this2.setScrollPosition();
            });
          },
          enableMouseDrag: false
        });
      });
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.componentIsMounted = false;
      if (this.inertialManager) {
        this.inertialManager.removeEventListeners();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.props;
      var useTransformOnScroll = props.useTransformOnScroll,
        nativeScroll = props.nativeScroll,
        vertical = props.vertical,
        rootClassName = props.rootClassName,
        rtl = props.rtl,
        theme = props.theme;
      var scrollInfo = this.scrollInfo;
      var scrollValue = rtl ? scrollInfo.scrollPos : -scrollInfo.scrollPos;
      var innerWrapperClassName = (0, _join.default)("".concat(rootClassName, "__inner-wrapper"), "".concat(rootClassName, "__inner-wrapper--direction-").concat(vertical ? 'column' : 'row'));
      var className = (0, _join.default)(props.className, rootClassName, !vertical && "".concat(rootClassName, "--direction-horizontal"), vertical && "".concat(rootClassName, "--direction-vertical"), rtl && "".concat(rootClassName, "--rtl"), nativeScroll && "".concat(rootClassName, "--native-scroll"), theme && "".concat(rootClassName, "--theme-").concat(theme));
      var transformValue;
      var moveStyle = {};
      if (useTransformOnScroll) {
        moveStyle.transform = 'translate3d(0px, 0px, 0px)';
      }
      if (vertical) {
        if (useTransformOnScroll) {
          moveStyle.transform = "translate3d(0px, ".concat(scrollValue, "px, 0px)");
        } else {
          moveStyle.top = scrollValue;
        }
      } else {
        if (useTransformOnScroll) {
          moveStyle.transform = "translate3d(".concat(scrollValue, "px, 0px, 0px)");
        } else {
          moveStyle.left = scrollValue;
        }
      }
      var resizer = _react.default.createElement(_NotifyResize.NotifyResize, {
        key: "resizer",
        notifyOnMount: true,
        onResize: this.handleResize,
        notifyResizeDelay: props.notifyResizeDelay
      });
      var children = [].concat((0, _toConsumableArray2.default)(_react.default.Children.toArray(props.children)), [resizer]);
      var content = _react.default.createElement(_Flex.Flex, _objectSpread(_objectSpread({
        key: "content",
        wrap: false
      }, props.childProps), {}, {
        className: innerWrapperClassName,
        ref: this.strip,
        children: children,
        style: nativeScroll ? null : moveStyle
      }));
      var finalChildren = [resizer, content, this.renderScroller(-1), this.renderScroller(1)];
      if (nativeScroll) {
        var scrollContainerProps = this.props.scrollContainerProps;
        var viewStyle = vertical ? VIEW_STYLE_VERTICAL : VIEW_STYLE_HORIZONTAL;
        if (scrollContainerProps && scrollContainerProps.viewStyle) {
          viewStyle = _objectSpread(_objectSpread({}, scrollContainerProps.viewStyle), viewStyle);
        }
        var style = {
          maxHeight: '100%'
        };
        var scrollerStyle;
        if (this.props.rtl) {
          viewStyle.direction = 'rtl';
          viewStyle.maxWidth = '';
          style.alignItems = 'flex-end';
          style.maxWidth = '100%';
          scrollerStyle = {
            alignItems: 'flex-end'
          };
        }
        var prevChildren = finalChildren;
        finalChildren = _react.default.createElement(_reactScrollContainerPro.default, {
          applyCSSContainOnScroll: false,
          style: style,
          scrollerStyle: scrollerStyle,
          emptyScrollOffset: 20,
          getScrollerNodeClientSize: this.props.rtl ? this.getScrollerNodeClientSize : null,
          className: "".concat(this.props.rootClassName, "__scroll-container"),
          shouldAllowScrollbars: NO_SCROLLBARS,
          dragToScroll: false,
          nativeScroll: scrollContainerProps ? scrollContainerProps.nativeScroll !== undefined ? scrollContainerProps.nativeScroll : false : false,
          viewStyle: viewStyle,
          ref: this.refScrollContainer,
          scrollerResizerProps: scrollerResizerProps,
          onDidMount: this.onScrollContainerDidMount,
          onWillUnmount: this.onScrollContainerWillUnmount,
          onResize: scrollContainerProps && scrollContainerProps.onResize ? callAll(scrollContainerProps.onResize, this.rafUpdateScrollInfo) : this.rafUpdateScrollInfo,
          children: prevChildren,
          onContainerScroll: this.onContainerScroll,
          theme: props.theme
        });
        if (this.props.rtl) {
          finalChildren = [finalChildren, resizer];
        }
      }
      return _react.default.createElement(_Flex.Flex, _objectSpread(_objectSpread({}, (0, _cleanProps.default)(props, InovuaArrowScroller.propTypes)), {}, {
        ref: this.setRootRef,
        className: className,
        alignItems: "start",
        children: finalChildren
      }));
    }
  }, {
    key: "renderScroller",
    value: function renderScroller(direction) {
      var _this3 = this;
      var _this$props = this.props,
        scroller = _this$props.scroller,
        vertical = _this$props.vertical,
        rootClassName = _this$props.rootClassName,
        nativeScroll = _this$props.nativeScroll;
      if (!scroller) {
        return null;
      }
      var arrowName = vertical ? direction == (this.props.rtl ? 1 : -1) ? 'up' : 'down' : direction == (this.props.rtl ? 1 : -1) ? 'left' : 'right';
      var scrollInfo = this.scrollInfo;
      var disabled = direction == -1 ? !scrollInfo.hasStartScroll : !scrollInfo.hasEndScroll;
      var arrowRootClassName = "".concat(rootClassName, "__arrow");
      var className = (0, _join.default)(arrowRootClassName, "".concat(arrowRootClassName, "--auto"), "".concat(arrowRootClassName, "--direction-").concat(arrowName), this.state.activeScroll == direction && "".concat(arrowRootClassName, "--active"), scroller === 'auto' && disabled && "".concat(arrowRootClassName, "--hidden"), scroller === 'auto' && !disabled && "".concat(arrowRootClassName, "--visible"), scroller === true && disabled && "".concat(arrowRootClassName, "--disabled"), nativeScroll && "".concat(arrowRootClassName, "--native-scroll"));
      var onClick = !disabled && this.props.scrollOnClick ? this.handleClick.bind(this, direction) : null;
      var onMouseDown = !disabled && (!this.props.scrollOnClick || _isMobile.default) ? this.startScroll.bind(this, direction) : null;
      var onMouseEnter = !disabled && this.props.scrollOnMouseEnter ? this.startMouseOverScroll.bind(this, direction) : null;
      var onMouseLeave = !this.props.scrollOnClick || _isMobile.default || this.props.scrollOnMouseEnter ? this.stopMouseOverScroll.bind(this, direction) : null;
      var onDoubleClick = !disabled ? this.handleScrollMax.bind(this, direction) : null;
      var scrollerName = direction == -1 ? 'start' : 'end';
      var domProps = {
        ref: function ref(_ref) {
          _this3[scrollerName] = _ref;
        },
        key: "scroller-".concat(direction),
        disabled: disabled,
        className: className,
        onClick: onClick,
        onDoubleClick: onDoubleClick,
        onMouseDown: !_isMobile.default ? onMouseDown : null,
        onTouchStart: _isMobile.default ? onMouseDown : null,
        onTouchEnd: _isMobile.default ? onMouseLeave : null,
        onMouseEnter: !_isMobile.default ? onMouseEnter : null,
        onMouseLeave: !_isMobile.default ? onMouseLeave : null,
        children: this.renderArrowIcon(arrowName)
      };
      var result;
      if (typeof this.props.renderScroller === 'function') {
        result = this.props.renderScroller({
          domProps: domProps,
          direction: direction
        });
      }
      if (result === undefined) {
        result = _react.default.createElement("div", _objectSpread({}, domProps));
      }
      return result;
    }
  }, {
    key: "renderArrowIcon",
    value: function renderArrowIcon(name) {
      var props = this.props;
      return _react.default.createElement(_Arrow.default, {
        name: name,
        size: props.arrowSize,
        height: props.arrowHeight,
        width: props.arrowWidth,
        className: "".concat(this.props.rootClassName, "__arrow-icon")
      });
    }
  }, {
    key: "getOffsetSizeName",
    value: function getOffsetSizeName() {
      return this.props.vertical ? 'offsetHeight' : 'offsetWidth';
    }
  }, {
    key: "getBorderAndPaddingSize",
    value: function getBorderAndPaddingSize() {
      var node = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.root;
      var side = arguments.length > 1 ? arguments[1] : undefined;
      var computedStyle = getCompStyle(node);
      var start;
      var end;
      if (this.props.vertical) {
        start = pint(computedStyle.borderTopWidth) + pint(computedStyle.paddingTop);
        end = pint(computedStyle.borderBottomWidth) + pint(computedStyle.paddingBottom);
        return start + end;
      } else {
        start = pint(computedStyle.borderLeftWidth) + pint(computedStyle.paddingLeft);
        end = pint(computedStyle.borderRightWidth) + pint(computedStyle.paddingRight);
      }
      return side ? side == 'start' ? start : end : start + end;
    }
  }, {
    key: "getSizeName",
    value: function getSizeName() {
      return this.props.vertical ? 'height' : 'width';
    }
  }, {
    key: "getAvailableSize",
    value: function getAvailableSize() {
      if (!this.root) {
        return null;
      }
      var size = this.availableSize || (this.props.nativeScroll ? this.props.vertical ? this.scrollerTarget.scrollTopMax : this.scrollerTarget.scrollLeftMax : this.root[this.getOffsetSizeName()] - this.getBorderAndPaddingSize());
      if (this.props.rtl && size < 0) {
        size = -size;
      }
      this.availableSize = size;
      return size;
    }
  }, {
    key: "getCurrentListSize",
    value: function getCurrentListSize() {
      if (!this.strip.current) {
        return null;
      }
      return this.currentListSize = this.currentListSize || this.strip.current[this.getOffsetSizeName()];
    }
  }, {
    key: "handleResize",
    value: function handleResize() {
      if (!this.componentIsMounted) {
        return;
      }
      delete this.currentListSize;
      delete this.availableSize;
      this.syncScroll({
        force: true
      });
    }
  }, {
    key: "handleScrollMax",
    value: function handleScrollMax(direction, event) {
      var _this4 = this;
      event.stopPropagation();
      event.preventDefault();
      var maxPos = direction == -1 ? 0 : this.scrollInfo.maxScrollPos;
      raf(function () {
        _this4.setScrollPosition(maxPos);
      });
    }
  }, {
    key: "handleClick",
    value: function handleClick(direction) {
      var offset = this.getAvailableSize();
      this.scrollBy(offset, direction);
    }
  }, {
    key: "stopScroll",
    value: function stopScroll() {
      globalObject.clearInterval(this.scrollInterval);
      this.setState({
        scrolling: false,
        activeScroll: 0
      });
    }
  }, {
    key: "rafUpdateScrollInfo",
    value: function rafUpdateScrollInfo() {
      raf(this.updateScrollInfo);
    }
  }, {
    key: "updateScrollInfo",
    value: function updateScrollInfo(count) {
      var _this5 = this;
      if (this.componentIsMounted === false) {
        return;
      }
      var availableSize = this.getAvailableSize();
      if (!availableSize) {
        if (!count || count < 5) {
          raf(function () {
            _this5.updateScrollInfo((count || 0) + 1);
          });
          return;
        }
      }
      var listSize = this.getCurrentListSize();
      var scrollInfo = Object.assign(this.scrollInfo, {
        availableSize: availableSize,
        listSize: listSize
      });
      if (this.props.nativeScroll) {
        if (this.scrollerTarget) {
          scrollInfo.maxScrollPos = this.props.vertical ? this.scrollerTarget.scrollTopMax : this.scrollerTarget.scrollLeftMax;
        }
      } else {
        if (listSize > availableSize) {
          scrollInfo.maxScrollPos = listSize - availableSize;
        } else {
          scrollInfo.maxScrollPos = 0;
        }
      }
      if (this.props.rtl && scrollInfo.maxScrollPos < 0) {
        scrollInfo.maxScrollPos = -scrollInfo.maxScrollPos;
      }
      scrollInfo.hasStartScroll = scrollInfo.scrollPos != 0;
      scrollInfo.hasEndScroll = scrollInfo.scrollPos < scrollInfo.maxScrollPos;
      var hasScroll = listSize > availableSize;
      if (hasScroll !== this.state.hasScroll) {
        this.props.onHasScrollChange(hasScroll);
      }
      this.setState({
        hasScroll: hasScroll
      });
    }
  }, {
    key: "startScroll",
    value: function startScroll(direction, event) {
      var _this6 = this;
      var eventName = _isMobile.default ? 'touchend' : 'mouseup';
      event.preventDefault();
      var mouseUpListener = function mouseUpListener() {
        _this6.stopScroll();
        globalObject.removeEventListener(eventName, mouseUpListener);
      };
      globalObject.addEventListener(eventName, mouseUpListener);
      this.scrollInterval = globalObject.setInterval(this.doScroll.bind(this, direction), this.props.scrollSpeed);
      this.setState({
        scrolling: true,
        activeScroll: direction
      });
    }
  }, {
    key: "onContainerScroll",
    value: function onContainerScroll(_ref2) {
      var scrollTop = _ref2.scrollTop,
        scrollLeft = _ref2.scrollLeft;
      this.setScrollPosition(this.props.vertical ? scrollTop : scrollLeft, {
        skip: true
      });
    }
  }, {
    key: "startMouseOverScroll",
    value: function startMouseOverScroll(direction, event) {
      event.preventDefault();
      globalObject.clearInterval(this.mouseOverScrollInterval);
      this.mouseOverScrollInterval = globalObject.setInterval(this.doScroll.bind(this, direction), this.props.mouseoverScrollSpeed);
      this.setState({
        scrolling: true,
        activeScroll: direction
      });
    }
  }, {
    key: "stopMouseOverScroll",
    value: function stopMouseOverScroll() {
      this.stopScroll();
      globalObject.clearInterval(this.mouseOverScrollInterval);
    }
  }, {
    key: "setScrollPosition",
    value: function setScrollPosition(scrollPos) {
      var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        force = _ref3.force,
        skip = _ref3.skip;
      if (!this.componentIsMounted) {
        return;
      }
      var scrollInfo = this.scrollInfo;
      if (scrollPos > scrollInfo.maxScrollPos) {
        scrollPos = scrollInfo.maxScrollPos;
      }
      if (scrollPos < 0) {
        scrollPos = 0;
      }
      if (scrollPos === scrollInfo.scrollPos && force !== true) {
        return null;
      }
      Object.assign(scrollInfo, {
        hasStartScroll: scrollPos !== 0,
        hasEndScroll: scrollPos < scrollInfo.maxScrollPos,
        scrollPos: scrollPos
      });
      if (!skip && this.props.nativeScroll && this.scrollerTarget) {
        if (this.props.vertical) {
          this.scrollerTarget.scrollTop = scrollPos;
        } else {
          this.scrollerTarget.scrollLeft = scrollPos;
        }
      }
      this.setState({});
    }
  }, {
    key: "syncScroll",
    value: function syncScroll() {
      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        force = _ref4.force;
      this.updateScrollInfo();
      this.doScroll(0, null, {
        force: force
      });
    }
  }, {
    key: "scrollIntoView",
    value: function scrollIntoView(domNode) {
      var rootNode = this.root;
      if (!domNode || !rootNode) {
        return;
      }
      var rect = domNode.getBoundingClientRect();
      var mainRect = rootNode.getBoundingClientRect();
      var vertical = this.props.vertical;
      var startSideName = vertical ? 'top' : 'left';
      var endSideName = vertical ? 'bottom' : 'right';
      var startDiff = rect[startSideName] - (mainRect[startSideName] + this.getBorderAndPaddingSize(undefined, 'start'));
      var endDiff = rect[endSideName] - (mainRect[endSideName] - this.getBorderAndPaddingSize(undefined, 'end'));
      var scrollIntoViewOffset = this.props.scrollIntoViewOffset;
      if (startDiff < 0) {
        this.doScroll(-startDiff + scrollIntoViewOffset, -1);
      } else if (endDiff > 0) {
        this.doScroll(endDiff + scrollIntoViewOffset, 1);
      }
    }
  }, {
    key: "doScroll",
    value: function doScroll(direction, step) {
      var _this7 = this;
      var _ref5 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
        force = _ref5.force;
      var scrollInfo = this.scrollInfo;
      var newScrollPos = scrollInfo.scrollPos + direction * (step || this.props.scrollStep);
      raf(function () {
        _this7.setScrollPosition(newScrollPos, {
          force: force
        });
      });
    }
  }, {
    key: "scrollBy",
    value: function scrollBy(offset, direction) {
      var _this8 = this;
      var _ref6 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
        force = _ref6.force;
      var scrollInfo = this.scrollInfo;
      var newScrollPos = scrollInfo.scrollPos + direction * offset;
      raf(function () {
        _this8.setScrollPosition(newScrollPos, {
          force: force
        });
      });
    }
  }]);
  return InovuaArrowScroller;
}(_react.Component);
var emptyFn = function emptyFn() {};
InovuaArrowScroller.defaultProps = {
  rootClassName: 'inovua-react-toolkit-arrow-scroller',
  scroller: 'auto',
  scrollStep: 15,
  mouseoverScrollSpeed: 40,
  scrollSpeed: 10,
  scrollSpringConfig: {
    stiffness: 370,
    damping: 60
  },
  scrollIntoViewOffset: 1,
  vertical: false,
  scrollOnClick: false,
  nativeScroll: !_ua.IS_IE,
  scrollOnMouseEnter: true,
  rtl: false,
  useTransformOnScroll: false,
  onHasScrollChange: emptyFn,
  theme: 'default-light'
};
InovuaArrowScroller.propTypes = {
  arrowSize: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
    width: _propTypes.default.number,
    height: _propTypes.default.number
  })]),
  theme: _propTypes.default.string,
  scrollOnClick: _propTypes.default.bool,
  childProps: _propTypes.default.object,
  scrollOnMouseEnter: _propTypes.default.bool,
  vertical: _propTypes.default.bool,
  notifyResizeDelay: _propTypes.default.number,
  scrollStep: _propTypes.default.number,
  scrollSpeed: _propTypes.default.number,
  mouseoverScrollSpeed: _propTypes.default.number,
  scrollSpringConfig: _propTypes.default.shape({
    stiffness: _propTypes.default.number,
    damping: _propTypes.default.number
  }),
  nativeScroll: _propTypes.default.bool,
  scrollIntoViewOffset: _propTypes.default.number,
  scroller: _propTypes.default.oneOf(['auto', false, true]),
  rootClassName: _propTypes.default.string,
  rtl: _propTypes.default.bool,
  scrollContainerProps: _propTypes.default.object,
  useTransformOnScroll: _propTypes.default.bool,
  onHasScrollChange: _propTypes.default.func,
  renderScroller: _propTypes.default.func
};
var _default = InovuaArrowScroller;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ArrowScroller/src/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ArrowScroller/src/index.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _ArrowScroller = _interopRequireDefault(__webpack_require__(/*! ./ArrowScroller */ "./node_modules/@inovua/reactdatagrid-community/packages/ArrowScroller/src/ArrowScroller.js"));
var _default = _ArrowScroller.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Button/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Button/index.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _src = _interopRequireDefault(__webpack_require__(/*! ./src */ "./node_modules/@inovua/reactdatagrid-community/packages/Button/src/index.js"));
var _default = _src.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Button/src/Button.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Button/src/Button.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var _cleanProps = _interopRequireDefault(__webpack_require__(/*! ../../../common/cleanProps */ "./node_modules/@inovua/reactdatagrid-community/common/cleanProps.js"));
var _prepareClassName = _interopRequireDefault(__webpack_require__(/*! ./prepareClassName */ "./node_modules/@inovua/reactdatagrid-community/packages/Button/src/prepareClassName.js"));
var _uglified = _interopRequireDefault(__webpack_require__(/*! ../../../packages/uglified */ "./node_modules/@inovua/reactdatagrid-community/packages/uglified/index.js"));
var _getGlobal = __webpack_require__(/*! ../../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var globalObject = (0, _getGlobal.getGlobal)();
var InovuaButton = function (_Component) {
  (0, _inherits2.default)(InovuaButton, _Component);
  var _super = _createSuper(InovuaButton);
  function InovuaButton(props) {
    var _this;
    (0, _classCallCheck2.default)(this, InovuaButton);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "componentDidUpdate", function (prevProps, prevState) {
      if (!prevProps.disabled && _this.props.disabled && prevState.focused) {
        _this.handleBlur();
        _this.setState({
          mouseOver: false
        });
      }
      if (prevProps.disabled && !_this.props.disabled && _this.state.focused) {
        _this.handleBlur();
      }
    });
    _this.state = {
      mouseOver: false,
      active: false,
      pressed: _this.props.defaultPressed
    };
    _this.handleClick = _this.handleClick.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleFocus = _this.handleFocus.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleBlur = _this.handleBlur.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleMouseEnter = _this.handleMouseEnter.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleMouseLeave = _this.handleMouseLeave.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleMouseDown = _this.handleMouseDown.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleMouseUp = _this.handleMouseUp.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleKeyDown = _this.handleKeyDown.bind((0, _assertThisInitialized2.default)(_this));
    _this.getRootRef = function (ref) {
      _this.rootNode = ref;
    };
    return _this;
  }
  (0, _createClass2.default)(InovuaButton, [{
    key: "handleKeyDown",
    value: function handleKeyDown(event) {
      var key = event.key;
      if (this.tagName != 'button' && key == 'Enter') {
        this.props.onClick(event);
        event.preventDefault();
      }
      if (this.props.onKeyDown) {
        this.props.onKeyDown(event);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.props;
      var buttonStates = this.getButtonStates();
      var style = this.prepareStyle(this.props, buttonStates);
      var className = (0, _prepareClassName.default)(buttonStates, props);
      var domProps = _objectSpread(_objectSpread({}, (0, _cleanProps.default)(this.props, InovuaButton.propTypes)), {}, {
        style: style,
        className: className,
        onClick: this.handleClick,
        onKeyDown: this.handleKeyDown,
        onFocus: this.handleFocus,
        onBlur: this.handleBlur,
        onMouseEnter: this.handleMouseEnter,
        onMouseLeave: this.handleMouseLeave,
        onMouseDown: this.handleMouseDown,
        onMouseUp: this.handleMouseUp,
        href: props.href
      });
      var topBottomVerticalAlign = this.props.verticalAlign == 'top' || this.props.verticalAlign == 'bottom';
      var avoidButtonTag = !!this.props.icon || topBottomVerticalAlign;
      var TagName = this.props.tagName;
      if (!TagName && !avoidButtonTag) {
        TagName = 'button';
      }
      if (TagName == 'button' && avoidButtonTag) {
        if (this.props.showWarnings && console && console.warn) {
          console.warn('Button html tags are not fully compatible with flexbox, so we\'re rendering a "div" instead. See http://stackoverflow.com/questions/35464067/flexbox-not-working-on-button-element-in-some-browsers for details.');
        }
      }
      if (props.href) {
        TagName = 'a';
      }
      TagName = TagName || 'div';
      this.tagName = TagName;
      if (TagName === 'div' && domProps.tabIndex === undefined && !this.props.disabled) {
        domProps.tabIndex = 0;
      }
      return _react.default.createElement(TagName, _objectSpread(_objectSpread({}, domProps), {}, {
        ref: this.getRootRef,
        children: this.prepareChildren(props, buttonStates)
      }));
    }
  }, {
    key: "handleFocus",
    value: function handleFocus(event) {
      if (this.props.disabled) {
        return;
      }
      this.setState({
        focused: true
      });
      this.props.onFocus(event);
    }
  }, {
    key: "handleBlur",
    value: function handleBlur(event) {
      this.setState({
        focused: false
      });
      this.props.onBlur(event);
    }
  }, {
    key: "handleClick",
    value: function handleClick(event) {
      var props = this.props;
      if (props.disabled) {
        event.preventDefault();
        event.stopPropagation();
        return;
      }
      if (this.isToggleButon()) {
        this.toggle();
      }
      this.props.onClick(event);
    }
  }, {
    key: "isToggleButon",
    value: function isToggleButon() {
      return this.isPressed() !== undefined;
    }
  }, {
    key: "toggle",
    value: function toggle() {
      var isPressed = this.isPressed();
      var newPressed = !isPressed;
      if (!this.isPressedControlled()) {
        this.setState({
          pressed: newPressed
        });
      }
      this.props.onToggle(newPressed);
    }
  }, {
    key: "isToggleButton",
    value: function isToggleButton() {
      return this.props.defaultPressed !== null || this.props.pressed !== null;
    }
  }, {
    key: "handleMouseEnter",
    value: function handleMouseEnter(event) {
      var props = this.props;
      if (props.disabled) {
        return;
      }
      this.setState({
        mouseOver: true
      });
      this.props.onMouseEnter(event);
    }
  }, {
    key: "handleMouseLeave",
    value: function handleMouseLeave(event) {
      var props = this.props;
      if (props.disabled) {
        return;
      }
      this.setState({
        mouseOver: false
      });
      this.props.onMouseLeave(event);
    }
  }, {
    key: "handleMouseUp",
    value: function handleMouseUp(event) {
      var props = this.props;
      if (props.disabled) {
        return;
      }
      this.setState({
        active: false
      });
      globalObject.removeEventListener('mouseup', this.handleMouseUp);
      props.onMouseUp(event);
      props.onDeactivate(event);
    }
  }, {
    key: "handleMouseDown",
    value: function handleMouseDown(event) {
      var props = this.props;
      if (props.disabled) {
        return;
      }
      this.setState({
        active: true
      });
      globalObject.addEventListener('mouseup', this.handleMouseUp);
      props.onMouseDown(event);
      props.onActivate(event);
    }
  }, {
    key: "isIconFirst",
    value: function isIconFirst() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;
      var iconPosition = props.iconPosition,
        rtl = props.rtl;
      var iconFirst = iconPosition == 'left' && !rtl || iconPosition == 'top' || rtl && iconPosition == 'start' || rtl && iconPosition == 'right' || !rtl && iconPosition == 'start';
      return iconFirst;
    }
  }, {
    key: "prepareChildren",
    value: function prepareChildren(props, buttonStates) {
      var _this2 = this;
      var children = props.children;
      children = _react.default.createElement("div", {
        key: "text",
        className: "".concat(this.props.rootClassName, "__text"),
        children: children
      });
      var icon = this.props.icon;
      var rtl = this.props.rtl;
      if (icon) {
        var iconPosition = this.props.iconPosition;
        var iconFirst = this.isIconFirst(this.props);
        if (typeof icon == 'function') {
          icon = icon(buttonStates);
        }
        var wrapIcon = function wrapIcon(icon) {
          return _react.default.createElement("div", {
            key: "iconWrapper",
            className: "".concat(_this2.props.rootClassName, "__icon-wrap") + (_this2.props.disabled ? " ".concat(_this2.props.rootClassName, "__icon-wrap--disabled") : ''),
            children: icon
          });
        };
        if (iconFirst) {
          children = [wrapIcon(icon), children];
        } else {
          children = [children, wrapIcon(icon)];
        }
      }
      if (this.props.renderChildren) {
        children = this.props.renderChildren(children);
      }
      return children;
    }
  }, {
    key: "getButtonStates",
    value: function getButtonStates(props) {
      props = props || this.props;
      return {
        disabled: props.disabled,
        children: props.children,
        active: this.isActive(),
        pressed: this.isPressed(),
        over: this.isOver(),
        focused: this.isFocused(),
        iconFirst: this.isIconFirst(),
        rtl: this.props.rtl,
        icon: this.props.icon,
        ellipsis: props.ellipsis,
        align: props.align,
        verticalAlign: props.verticalAlign,
        wrap: props.wrap,
        overflow: props.overflow,
        iconPosition: this.props.icon ? this.props.iconPosition : undefined
      };
    }
  }, {
    key: "prepareStyle",
    value: function prepareStyle() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;
      var buttonStates = arguments.length > 1 ? arguments[1] : undefined;
      var style = typeof props.style !== 'function' ? (0, _assign.default)({}, props.style) : props.style(props, buttonStates);
      if (props.disabled) {
        (0, _assign.default)(style, props.disabledStyle);
      } else {
        if (this.isPressed()) {
          (0, _assign.default)(style, props.pressedStyle);
        }
        if (this.isFocused()) {
          (0, _assign.default)(style, props.focusedStyle);
        }
        if (this.isOver()) {
          (0, _assign.default)(style, props.overStyle);
        }
        if (this.isActive()) {
          (0, _assign.default)(style, this.props.activeStyle);
        }
      }
      return style;
    }
  }, {
    key: "isActive",
    value: function isActive() {
      return this.props.activeState == null ? !!this.state.active : this.props.activeState;
    }
  }, {
    key: "isOver",
    value: function isOver() {
      return this.props.overState == null ? !!this.state.mouseOver : this.props.overState;
    }
  }, {
    key: "isFocused",
    value: function isFocused() {
      return this.props.focusedState == null ? !!this.state.focused : this.props.focusedState;
    }
  }, {
    key: "isPressedControlled",
    value: function isPressedControlled() {
      return this.props.pressed != null;
    }
  }, {
    key: "isPressed",
    value: function isPressed() {
      return this.isPressedControlled() ? this.props.pressed : this.state.pressed;
    }
  }, {
    key: "getRootNode",
    value: function getRootNode() {
      return this.rootNode;
    }
  }]);
  return InovuaButton;
}(_react.Component);
function emptyFn() {}
InovuaButton.defaultProps = {
  isInovuaButton: true,
  theme: 'default-light',
  rootClassName: 'inovua-react-toolkit-button',
  align: 'center',
  verticalAlign: 'middle',
  ellipsis: true,
  href: null,
  iconPosition: 'start',
  onFocus: emptyFn,
  onBlur: emptyFn,
  onToggle: emptyFn,
  onClick: emptyFn,
  onMouseEnter: emptyFn,
  onMouseUp: emptyFn,
  onMouseDown: emptyFn,
  onDeactivate: emptyFn,
  onMouseLeave: emptyFn,
  onActivate: emptyFn,
  showWarnings: !_uglified.default
};
InovuaButton.propTypes = {
  isInovuaButton: _propTypes.default.bool,
  tagName: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func]),
  primary: _propTypes.default.bool,
  disabled: _propTypes.default.bool,
  pressed: _propTypes.default.bool,
  defaultPressed: _propTypes.default.bool,
  href: _propTypes.default.string,
  align: _propTypes.default.oneOf(['start', 'end', 'center', 'left', 'right']),
  verticalAlign: _propTypes.default.oneOf(['top', 'middle', 'center', 'bottom']),
  rtl: _propTypes.default.bool,
  wrap: _propTypes.default.bool,
  overflow: _propTypes.default.bool,
  icon: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]),
  iconPosition: _propTypes.default.oneOf(['top', 'bottom', 'left', 'right', 'start', 'end']),
  style: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]),
  disabledStyle: _propTypes.default.object,
  focusedStyle: _propTypes.default.object,
  pressedStyle: _propTypes.default.object,
  overStyle: _propTypes.default.object,
  activeStyle: _propTypes.default.object,
  className: _propTypes.default.string,
  activeClassName: _propTypes.default.string,
  overClassName: _propTypes.default.string,
  focusedClassName: _propTypes.default.string,
  disabledClassName: _propTypes.default.string,
  pressedClassName: _propTypes.default.string,
  theme: _propTypes.default.string,
  rootClassName: _propTypes.default.string,
  ellipsis: _propTypes.default.bool,
  onClick: _propTypes.default.func,
  onFocus: _propTypes.default.func,
  onBlur: _propTypes.default.func,
  onToggle: _propTypes.default.func,
  onMouseEnter: _propTypes.default.func,
  onMouseUp: _propTypes.default.func,
  onMouseDown: _propTypes.default.func,
  onDeactivate: _propTypes.default.func,
  onMouseLeave: _propTypes.default.func,
  onActivate: _propTypes.default.func,
  showWarnings: _propTypes.default.bool
};
var _default = InovuaButton;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Button/src/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Button/src/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _Button = _interopRequireDefault(__webpack_require__(/*! ./Button */ "./node_modules/@inovua/reactdatagrid-community/packages/Button/src/Button.js"));
var _default = _Button.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Button/src/prepareClassName.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Button/src/prepareClassName.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
function prepareClassName() {
  var states = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var classNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var disabled = states.disabled,
    icon = states.icon,
    active = states.active,
    pressed = states.pressed,
    over = states.over,
    children = states.children,
    focused = states.focused,
    iconFirst = states.iconFirst,
    rtl = states.rtl,
    ellipsis = states.ellipsis,
    align = states.align,
    verticalAlign = states.verticalAlign,
    wrap = states.wrap,
    overflow = states.overflow,
    iconPosition = states.iconPosition;
  var className = classNames.className,
    rootClassName = classNames.rootClassName,
    disabledClassName = classNames.disabledClassName,
    activeClassName = classNames.activeClassName,
    pressedClassName = classNames.pressedClassName,
    overClassName = classNames.overClassName,
    focusedClassName = classNames.focusedClassName,
    theme = classNames.theme;
  var preparedClassname = (0, _join.default)(className, rootClassName, theme && "".concat(rootClassName, "--theme-").concat(theme), disabled && disabledClassName, disabled && "".concat(rootClassName, "--disabled"), active && activeClassName, active && "".concat(rootClassName, "--active"), pressed && pressedClassName, pressed && "".concat(rootClassName, "--pressed"), over && overClassName, over && "".concat(rootClassName, "--over"), focused && focusedClassName, focused && "".concat(rootClassName, "--focused"), rtl ? "".concat(rootClassName, "--rtl") : "".concat(rootClassName, "--ltr"), ellipsis && "".concat(rootClassName, "--ellipsis"), align && "".concat(rootClassName, "--align-").concat(align), !children && "".concat(rootClassName, "--no-children"), verticalAlign && "".concat(rootClassName, "--vertical-align-").concat(verticalAlign), overflow === true && "".concat(rootClassName, "--overflow-visible"), overflow === false && "".concat(rootClassName, "--overflow-hidden"), wrap === true && "".concat(rootClassName, "--wrap"), wrap === false && "".concat(rootClassName, "--nowrap"), icon && "".concat(rootClassName, "--has-icon"), iconPosition && "".concat(rootClassName, "--icon-position-").concat(iconPosition), iconFirst ? "".concat(rootClassName, "--icon-first") : "".concat(rootClassName, "--icon-last"));
  return preparedClassname;
}
var _default = prepareClassName;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "Calendar", ({
  enumerable: true,
  get: function get() {
    return _Calendar.default;
  }
}));
Object.defineProperty(exports, "Clock", ({
  enumerable: true,
  get: function get() {
    return _Clock.default;
  }
}));
Object.defineProperty(exports, "ClockInput", ({
  enumerable: true,
  get: function get() {
    return _ClockInput.default;
  }
}));
exports.DateEditor = void 0;
Object.defineProperty(exports, "DateFormatInput", ({
  enumerable: true,
  get: function get() {
    return _DateFormatInput.default;
  }
}));
Object.defineProperty(exports, "DateFormatSpinnerInput", ({
  enumerable: true,
  get: function get() {
    return _DateFormatSpinnerInput.default;
  }
}));
Object.defineProperty(exports, "DateInput", ({
  enumerable: true,
  get: function get() {
    return _DateInput.default;
  }
}));
Object.defineProperty(exports, "DecadeView", ({
  enumerable: true,
  get: function get() {
    return _DecadeView.default;
  }
}));
Object.defineProperty(exports, "Footer", ({
  enumerable: true,
  get: function get() {
    return _Footer.default;
  }
}));
Object.defineProperty(exports, "MonthDecadeView", ({
  enumerable: true,
  get: function get() {
    return _MonthDecadeView.default;
  }
}));
Object.defineProperty(exports, "MonthView", ({
  enumerable: true,
  get: function get() {
    return _MonthView.default;
  }
}));
Object.defineProperty(exports, "MultiMonthView", ({
  enumerable: true,
  get: function get() {
    return _MultiMonthView.default;
  }
}));
Object.defineProperty(exports, "NavBar", ({
  enumerable: true,
  get: function get() {
    return _NavBar.default;
  }
}));
Object.defineProperty(exports, "TimeInput", ({
  enumerable: true,
  get: function get() {
    return _TimeInput.default;
  }
}));
Object.defineProperty(exports, "TimePicker", ({
  enumerable: true,
  get: function get() {
    return _TimePicker.default;
  }
}));
Object.defineProperty(exports, "TransitionView", ({
  enumerable: true,
  get: function get() {
    return _TransitionView.default;
  }
}));
Object.defineProperty(exports, "YearView", ({
  enumerable: true,
  get: function get() {
    return _YearView.default;
  }
}));
exports["default"] = void 0;
var _MonthView = _interopRequireDefault(__webpack_require__(/*! ./src/MonthView */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/MonthView/index.js"));
var _TimePicker = _interopRequireDefault(__webpack_require__(/*! ./src/TimePicker */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/TimePicker.js"));
var _TimeInput = _interopRequireDefault(__webpack_require__(/*! ./src/TimeInput */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/TimeInput/index.js"));
var _TransitionView = _interopRequireDefault(__webpack_require__(/*! ./src/TransitionView */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/TransitionView.js"));
var _MultiMonthView = _interopRequireDefault(__webpack_require__(/*! ./src/MultiMonthView */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/MultiMonthView.js"));
var _MonthDecadeView = _interopRequireDefault(__webpack_require__(/*! ./src/MonthDecadeView */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/MonthDecadeView.js"));
var _YearView = _interopRequireDefault(__webpack_require__(/*! ./src/YearView */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/YearView.js"));
var _DecadeView = _interopRequireDefault(__webpack_require__(/*! ./src/DecadeView */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/DecadeView.js"));
var _NavBar = _interopRequireDefault(__webpack_require__(/*! ./src/NavBar */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/NavBar.js"));
var _Footer = _interopRequireDefault(__webpack_require__(/*! ./src/Footer */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/Footer.js"));
var _Clock = _interopRequireDefault(__webpack_require__(/*! ./src/Clock */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/Clock.js"));
var _ClockInput = _interopRequireDefault(__webpack_require__(/*! ./src/ClockInput */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/ClockInput.js"));
var _DateInput = _interopRequireDefault(__webpack_require__(/*! ./src/DateInput */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/DateInput/index.js"));
var _Calendar = _interopRequireDefault(__webpack_require__(/*! ./src/Calendar */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/Calendar.js"));
var _DateFormatInput = _interopRequireDefault(__webpack_require__(/*! ./src/DateFormatInput */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/DateFormatInput/index.js"));
var _DateFormatSpinnerInput = _interopRequireDefault(__webpack_require__(/*! ./src/DateFormatSpinnerInput */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/DateFormatSpinnerInput/index.js"));
var _default = _Calendar.default;
exports["default"] = _default;
var DateEditor = _DateInput.default;
exports.DateEditor = DateEditor;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/BasicMonthView.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/BasicMonthView.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.getWeekendStartDay = exports.getWeekStartMoment = exports.getWeekStartDay = exports.getDaysInMonthView = exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _reactClass = _interopRequireDefault(__webpack_require__(/*! ../../react-class */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/index.js"));
var _Flex = __webpack_require__(/*! ../../Flex */ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/index.js");
var _moment = _interopRequireDefault(__webpack_require__(/*! moment */ "./node_modules/moment/moment.js"));
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var _whitespace = _interopRequireDefault(__webpack_require__(/*! ../../../common/whitespace */ "./node_modules/@inovua/reactdatagrid-community/common/whitespace.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _format = _interopRequireDefault(__webpack_require__(/*! ./utils/format */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/format.js"));
var _toMoment = _interopRequireDefault(__webpack_require__(/*! ./toMoment */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/toMoment.js"));
var _getWeekDayNames = _interopRequireDefault(__webpack_require__(/*! ./utils/getWeekDayNames */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/getWeekDayNames.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var RENDER_DAY = function RENDER_DAY(props) {
  var divProps = (0, _assign.default)({}, props);
  delete divProps.date;
  delete divProps.dateMoment;
  delete divProps.day;
  delete divProps.timestamp;
  return _react.default.createElement("div", _objectSpread({}, divProps));
};
var getWeekStartDay = function getWeekStartDay(props) {
  var locale = props.locale;
  var weekStartDay = props.weekStartDay;
  if (weekStartDay == null) {
    var localeData = props.localeData || _moment.default.localeData(locale);
    weekStartDay = localeData._week ? localeData._week.dow : null;
  }
  return weekStartDay;
};
exports.getWeekStartDay = getWeekStartDay;
var getWeekendStartDay = function getWeekendStartDay(props) {
  var weekendStartDay = props.weekendStartDay;
  if (weekendStartDay == null) {
    return getWeekStartDay(props) + 5 % 7;
  }
  return weekendStartDay;
};
exports.getWeekendStartDay = getWeekendStartDay;
var getWeekStartMoment = function getWeekStartMoment(value, props) {
  var locale = props.locale;
  var dateFormat = props.dateFormat;
  var weekStartDay = getWeekStartDay(props);
  return (0, _toMoment.default)(value, {
    locale: locale,
    dateFormat: dateFormat
  }).day(weekStartDay);
};
exports.getWeekStartMoment = getWeekStartMoment;
var getDaysInMonthView = function getDaysInMonthView(value, props) {
  var locale = props.locale,
    dateFormat = props.dateFormat;
  var toMomentParam = {
    locale: locale,
    dateFormat: dateFormat
  };
  var first = (0, _toMoment.default)(value, toMomentParam).startOf('month');
  var beforeFirst = (0, _toMoment.default)(value, toMomentParam).startOf('month').add(-1, 'days');
  var start = getWeekStartMoment(first, props);
  var result = [];
  var i = 0;
  if (beforeFirst.isBefore(start) && (props.alwaysShowPrevWeek || !start.isSame(first))) {
    start.add(-1, 'weeks');
  }
  for (; i < 42; i++) {
    result.push((0, _toMoment.default)(start, toMomentParam));
    start.add(1, 'days');
  }
  return result;
};
exports.getDaysInMonthView = getDaysInMonthView;
var getWeekDayNames = function getWeekDayNames(props) {
  var weekStartDay = props.weekStartDay,
    weekDayNames = props.weekDayNames,
    locale = props.locale;
  var names = weekDayNames;
  if (typeof names == 'function') {
    names = names(weekStartDay, locale);
  } else if (Array.isArray(names)) {
    names = (0, _toConsumableArray2.default)(names);
    var index = weekStartDay;
    while (index > 0) {
      names.push(names.shift());
      index--;
    }
  }
  return names;
};
var BasicMonthView = function (_Component) {
  (0, _inherits2.default)(BasicMonthView, _Component);
  var _super = _createSuper(BasicMonthView);
  function BasicMonthView(props) {
    var _this;
    (0, _classCallCheck2.default)(this, BasicMonthView);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "componentDidUpdate", function (prevProps) {
      if (prevProps.locale !== _this.props.locale || prevProps.dateFormat !== _this.props.dateFormat) {
        _this.updateToMoment(_this.props);
      }
    });
    _this.updateToMoment(props);
    return _this;
  }
  (0, _createClass2.default)(BasicMonthView, [{
    key: "updateToMoment",
    value: function updateToMoment(props) {
      this.toMoment = function (value, dateFormat) {
        return (0, _toMoment.default)(value, {
          locale: props.locale,
          dateFormat: dateFormat || props.dateFormat
        });
      };
    }
  }, {
    key: "prepareProps",
    value: function prepareProps(thisProps) {
      var props = (0, _assign.default)({}, thisProps);
      props.viewMoment = props.viewMoment || this.toMoment(props.viewDate);
      props.weekStartDay = getWeekStartDay(props);
      props.className = this.prepareClassName(props);
      return props;
    }
  }, {
    key: "prepareClassName",
    value: function prepareClassName(props) {
      return (0, _join.default)(props.className, props.rootClassName);
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.p = this.prepareProps(this.props);
      var viewMoment = props.viewMoment;
      var daysInView = props.daysInView || getDaysInMonthView(viewMoment, props);
      var children = [this.renderWeekDayNames(), this.renderDays(props, daysInView)];
      if (props.renderChildren) {
        children = props.renderChildren(children, props);
      }
      var flexProps = (0, _assign.default)({}, props);
      delete flexProps.alwaysShowPrevWeek;
      delete flexProps.rootClassName;
      delete flexProps.cleanup;
      delete flexProps.dateFormat;
      delete flexProps.daysInView;
      delete flexProps.defaultDate;
      delete flexProps.defaultValue;
      delete flexProps.forceValidDate;
      delete flexProps.locale;
      delete flexProps.moment;
      delete flexProps.onClockEnterKey;
      delete flexProps.onClockEscapeKey;
      delete flexProps.onClockInputBlur;
      delete flexProps.onClockInputFocus;
      delete flexProps.onClockInputMouseDown;
      delete flexProps.onFooterCancelClick;
      delete flexProps.onFooterClearClick;
      delete flexProps.onFooterOkClick;
      delete flexProps.onFooterTodayClick;
      delete flexProps.onRenderDay;
      delete flexProps.renderChildren;
      delete flexProps.renderDay;
      delete flexProps.timestamp;
      delete flexProps.todayButton;
      delete flexProps.todayButtonText;
      delete flexProps.value;
      delete flexProps.viewDate;
      delete flexProps.viewMoment;
      delete flexProps.weekDayNames;
      delete flexProps.weekNumbers;
      delete flexProps.weekNumberName;
      delete flexProps.weekStartDay;
      delete flexProps.index;
      delete flexProps.cancelButton;
      delete flexProps.expanded;
      delete flexProps.clearIcon;
      delete flexProps.showClock;
      delete flexProps.enableMonthDecadeViewAnimation;
      delete flexProps.showMonthDecadeViewAnimation;
      delete flexProps.triggerChangeOnTimeChange;
      delete flexProps.cancelButtonText;
      delete flexProps.clearButtonText;
      delete flexProps.clearButton;
      delete flexProps.innerRef;
      if (typeof props.cleanup == 'function') {
        props.cleanup(flexProps);
      }
      return _react.default.createElement(_Flex.Flex, _objectSpread(_objectSpread({
        column: true,
        ref: props.innerRef,
        wrap: false,
        inline: true,
        alignItems: "stretch"
      }, flexProps), {}, {
        children: children
      }));
    }
  }, {
    key: "renderWeekNumber",
    value: function renderWeekNumber(props, days) {
      var firstDayOfWeek = days[0];
      var week = firstDayOfWeek.weeks();
      var weekNumberProps = {
        key: "week_".concat(days),
        className: "".concat(props.rootClassName, "-cell ").concat(props.rootClassName, "-week-number"),
        week: week,
        days: days,
        date: firstDayOfWeek,
        children: week
      };
      var renderWeekNumber = props.renderWeekNumber;
      var result;
      if (renderWeekNumber) {
        result = renderWeekNumber(weekNumberProps);
      }
      if (result === undefined) {
        var divProps = (0, _assign.default)({}, weekNumberProps);
        delete divProps.date;
        delete divProps.days;
        delete divProps.week;
        delete divProps.showClock;
        delete divProps.rootClassName;
        result = _react.default.createElement("div", _objectSpread({
          key: weekNumberProps.key
        }, divProps));
      }
      return result;
    }
  }, {
    key: "renderDays",
    value: function renderDays(props, days) {
      var _this2 = this;
      var nodes = days.map(function (date) {
        return _this2.renderDay(props, date);
      });
      var len = days.length;
      var buckets = [];
      var bucketsLen = Math.ceil(len / 7);
      var i = 0;
      var weekStart;
      var weekEnd;
      for (; i < bucketsLen; i++) {
        weekStart = i * 7;
        weekEnd = (i + 1) * 7;
        buckets.push([props.weekNumbers && this.renderWeekNumber(props, days.slice(weekStart, weekEnd))].concat(nodes.slice(weekStart, weekEnd)));
      }
      var rootClassName = props.rootClassName;
      return buckets.map(function (bucket, index) {
        return _react.default.createElement("div", {
          key: "row_".concat(index),
          className: "".concat(rootClassName, "-row"),
          children: bucket
        });
      });
    }
  }, {
    key: "renderDay",
    value: function renderDay(props, dateMoment) {
      var dayText = _format.default.day(dateMoment, props.dayFormat);
      var className = (0, _join.default)("".concat(props.rootClassName, "-cell"), "".concat(props.rootClassName, "-day"));
      var renderDayProps = {
        day: dayText,
        dateMoment: dateMoment,
        timestamp: +dateMoment,
        key: dayText,
        className: className,
        children: dayText
      };
      if (typeof props.onRenderDay === 'function') {
        var newRenderDayProps = props.onRenderDay(renderDayProps);
        if (newRenderDayProps !== undefined) {
          renderDayProps = newRenderDayProps;
        }
      }
      var renderFunction = props.renderDay || RENDER_DAY;
      var result = renderFunction(renderDayProps);
      if (result === undefined) {
        result = RENDER_DAY(renderDayProps);
      }
      return result;
    }
  }, {
    key: "renderWeekDayNames",
    value: function renderWeekDayNames() {
      var props = this.p;
      var weekNumbers = props.weekNumbers,
        weekNumberName = props.weekNumberName,
        weekDayNames = props.weekDayNames,
        renderWeekDayNames = props.renderWeekDayNames,
        renderWeekDayName = props.renderWeekDayName,
        weekStartDay = props.weekStartDay,
        rootClassName = props.rootClassName;
      if (weekDayNames === false) {
        return null;
      }
      var names = weekNumbers ? [weekNumberName].concat(getWeekDayNames(props)) : getWeekDayNames(props);
      var className = "".concat(rootClassName, "-row ").concat(rootClassName, "-week-day-names");
      var renderProps = {
        className: className,
        names: names
      };
      if (renderWeekDayNames) {
        return renderWeekDayNames(renderProps);
      }
      return _react.default.createElement("div", {
        key: "week_day_names",
        className: className
      }, names.map(function (name, index) {
        var props = {
          weekStartDay: weekStartDay,
          index: index,
          name: name,
          className: "".concat(rootClassName, "-cell ").concat(rootClassName, "-week-day-name"),
          children: name
        };
        if (renderWeekDayName) {
          return renderWeekDayName(props);
        }
        var divProps = (0, _assign.default)({}, props);
        var keys = "week_".concat(index);
        delete divProps.index;
        delete divProps.weekStartDay;
        delete divProps.name;
        delete divProps.showClock;
        delete divProps.rootClassName;
        return _react.default.createElement("div", _objectSpread({
          key: keys
        }, divProps));
      }));
    }
  }]);
  return BasicMonthView;
}(_reactClass.default);
BasicMonthView.propTypes = {
  rootClassName: _propTypes.default.string,
  defaultClassName: _propTypes.default.string,
  className: _propTypes.default.string,
  dateFormat: _propTypes.default.string,
  alwaysShowPrevWeek: _propTypes.default.bool,
  viewDate: _propTypes.default.any,
  viewMoment: _propTypes.default.any,
  index: _propTypes.default.number,
  showClock: _propTypes.default.bool,
  onMouseLeave: _propTypes.default.any,
  locale: _propTypes.default.string,
  weekStartDay: _propTypes.default.number,
  weekNumbers: _propTypes.default.bool,
  weekNumberName: _propTypes.default.string,
  weekDayNames: function weekDayNames(props, propName) {
    var value = props[propName];
    if (typeof value != 'function' && value !== false && !Array.isArray(value)) {
      return new Error('"weekDayNames" should be a function, an array or the boolean "false"');
    }
    return undefined;
  },
  renderWeekDayNames: _propTypes.default.func,
  renderWeekDayName: _propTypes.default.func,
  renderWeekNumber: _propTypes.default.func,
  renderDay: _propTypes.default.func,
  onRenderDay: _propTypes.default.func
};
BasicMonthView.defaultProps = {
  rootClassName: 'inovua-react-toolkit-calendar__basic-month-view',
  dateFormat: 'YYYY-MM-DD',
  alwaysShowPrevWeek: false,
  weekNumbers: true,
  weekNumberName: "".concat(_whitespace.default).concat(_whitespace.default),
  weekDayNames: _getWeekDayNames.default
};
var _default = (0, _react.forwardRef)(function (props, ref) {
  return _react.default.createElement(BasicMonthView, _objectSpread({
    innerRef: ref
  }, props));
});
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/Calendar.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/Calendar.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "NAV_KEYS", ({
  enumerable: true,
  get: function get() {
    return _MonthView.NAV_KEYS;
  }
}));
exports["default"] = void 0;
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _reactClass = _interopRequireDefault(__webpack_require__(/*! ../../react-class */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/index.js"));
var _Flex = __webpack_require__(/*! ../../Flex */ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/index.js");
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _assignDefined = _interopRequireDefault(__webpack_require__(/*! ./assignDefined */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/assignDefined.js"));
var _MonthView = _interopRequireWildcard(__webpack_require__(/*! ./MonthView */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/MonthView/index.js"));
var _toMoment = _interopRequireDefault(__webpack_require__(/*! ./toMoment */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/toMoment.js"));
var _ClockInput = _interopRequireDefault(__webpack_require__(/*! ./ClockInput */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/ClockInput.js"));
var _forwardTime = _interopRequireDefault(__webpack_require__(/*! ./utils/forwardTime */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/forwardTime.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var hasTime = function hasTime(dateFormat) {
  dateFormat = dateFormat ? dateFormat.toLowerCase() : '';
  return dateFormat.indexOf('k') != -1 || dateFormat.indexOf('h') != -1;
};
var Calendar = function (_Component) {
  (0, _inherits2.default)(Calendar, _Component);
  var _super = _createSuper(Calendar);
  function Calendar(props) {
    var _this;
    (0, _classCallCheck2.default)(this, Calendar);
    _this = _super.call(this, props);
    _this.state = {
      timeFocused: false
    };
    return _this;
  }
  (0, _createClass2.default)(Calendar, [{
    key: "getDOMNode",
    value: function getDOMNode() {
      return this.view ? this.view.getDOMNode() : null;
    }
  }, {
    key: "prepareDate",
    value: function prepareDate(props) {
      return (0, _toMoment.default)(props.date, props);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;
      var props = this.p = (0, _assign.default)({}, this.props);
      var dateFormat = props.dateFormat.toLowerCase();
      props.date = this.prepareDate(props);
      if (props.showClock === undefined) {
        props.showClock = dateFormat.indexOf('k') != -1 || dateFormat.indexOf('h') != -1;
      }
      var startTimeIndex = dateFormat.toLowerCase().indexOf('h');
      if (startTimeIndex === -1) {
        startTimeIndex = dateFormat.toLowerCase().indexOf('k');
      }
      var timeFormat = dateFormat.substring(startTimeIndex);
      props.timeFormat = timeFormat;
      var rootClassName = props.rootClassName;
      var className = (0, _join.default)(props.className, rootClassName, props.theme && "".concat(rootClassName, "--theme-").concat(props.theme));
      var monthViewProps = (0, _assign.default)({}, this.props);
      var keys = monthViewProps.date / 7;
      delete monthViewProps.onTimeChange;
      delete monthViewProps.updateOnWheel;
      delete monthViewProps.wrapTime;
      delete monthViewProps.rootClassName;
      delete monthViewProps.showClock;
      if (typeof this.props.cleanup == 'function') {
        this.props.cleanup(monthViewProps);
      }
      var monthView = _react.default.createElement(_MonthView.default, _objectSpread(_objectSpread({}, monthViewProps), {}, {
        onChange: this.onChange,
        className: null,
        style: null,
        ref: function ref(view) {
          _this2.view = view;
        },
        renderChildren: this.renderChildren,
        showClock: props.showClock
      }));
      return _react.default.createElement(_Flex.Flex, {
        inline: true,
        row: true,
        wrap: false,
        className: className,
        style: props.style
      }, monthView);
    }
  }, {
    key: "isMonthDecadeViewVisible",
    value: function isMonthDecadeViewVisible() {
      if (this.view && this.view.isMonthDecadeViewVisible) {
        return this.view.isMonthDecadeViewVisible();
      }
      return false;
    }
  }, {
    key: "renderChildren",
    value: function renderChildren(_ref) {
      var _ref2 = (0, _slicedToArray2.default)(_ref, 3),
        navBar = _ref2[0],
        inner = _ref2[1],
        footer = _ref2[2];
      var props = this.p;
      var clockInput = props.showClock ? this.renderClockInput() : null;
      return _react.default.createElement(_Flex.Flex, {
        key: "date_picker_comp",
        column: true,
        wrap: false,
        alignItems: "stretch"
      }, [navBar ? _react.default.cloneElement(navBar, {
        key: 'calendar_navBar'
      }) : null, _react.default.createElement(_Flex.Flex, {
        key: "calendar_inner",
        justifyContent: "center",
        wrap: this.props.wrap || this.props.wrapTime
      }, _react.default.createElement(_Flex.Flex, {
        flexGrow: "1",
        flexShrink: "0",
        flexBasis: "auto",
        column: true,
        wrap: false,
        alignItems: "stretch",
        children: inner
      }), clockInput), footer ? _react.default.cloneElement(footer, {
        key: 'calendar_footer'
      }) : null]);
    }
  }, {
    key: "focus",
    value: function focus() {
      if (this.view) {
        this.view.focus();
      }
    }
  }, {
    key: "isFocused",
    value: function isFocused() {
      if (this.view) {
        return this.view.isFocused();
      }
      return false;
    }
  }, {
    key: "onViewKeyDown",
    value: function onViewKeyDown() {
      if (this.view) {
        var _this$view;
        (_this$view = this.view).onViewKeyDown.apply(_this$view, arguments);
      }
    }
  }, {
    key: "isTimeInputFocused",
    value: function isTimeInputFocused() {
      return this.state.timeFocused;
    }
  }, {
    key: "renderClockInput",
    value: function renderClockInput() {
      var _this3 = this,
        _clockInputProps;
      var clockInput = null;
      var readOnly = this.props.readOnly;
      var clockInputProps = (_clockInputProps = {
        ref: function ref(clkInput) {
          _this3.clockInput = clkInput;
        },
        theme: this.props.theme,
        viewIndex: this.props.viewIndex,
        dateFormat: this.p.dateFormat
      }, (0, _defineProperty2.default)(_clockInputProps, readOnly ? 'value' : 'defaultValue', this.p.date), (0, _defineProperty2.default)(_clockInputProps, "onFocus", this.onClockInputFocus), (0, _defineProperty2.default)(_clockInputProps, "onBlur", this.onClockInputBlur), (0, _defineProperty2.default)(_clockInputProps, "onChange", this.onTimeChange), (0, _defineProperty2.default)(_clockInputProps, "onMouseDown", this.onClockInputMouseDown), _clockInputProps);
      (0, _assignDefined.default)(clockInputProps, {
        onEnterKey: this.props.onClockEnterKey,
        onEscapeKey: this.props.onClockEscapeKey,
        readOnly: readOnly,
        tabIndex: readOnly ? null : this.props.clockTabIndex,
        theme: this.props.theme,
        updateOnWheel: this.props.updateOnWheel
      });
      if (clockInput) {
        return _react.default.cloneElement(clockInput, clockInputProps);
      }
      return _react.default.createElement(_ClockInput.default, _objectSpread({}, clockInputProps));
    }
  }, {
    key: "onClockInputFocus",
    value: function onClockInputFocus() {
      this.setState({
        timeFocused: true
      });
      this.props.onClockInputFocus();
    }
  }, {
    key: "onClockInputBlur",
    value: function onClockInputBlur() {
      this.setState({
        timeFocused: false
      });
      this.props.onClockInputBlur();
    }
  }, {
    key: "onClockInputMouseDown",
    value: function onClockInputMouseDown(event) {
      event.stopPropagation();
      if (event.target && event.target.type != 'text') {
        event.preventDefault();
      }
      this.clockInput.focus();
    }
  }, {
    key: "onTimeChange",
    value: function onTimeChange(value, timeFormat) {
      this.time = value;
      this.props.onTimeChange(value, timeFormat);
      var view = this.view;
      var moment = view.p.moment;
      if (moment == null) {
        return;
      }
      if (this.props.triggerChangeOnTimeChange) {
        view.onChange({
          dateMoment: moment,
          timestamp: +moment,
          noCollapse: this.props.triggerChangeOnTimeChange
        });
      }
    }
  }, {
    key: "onChange",
    value: function onChange(dateString, _ref3, event) {
      var dateMoment = _ref3.dateMoment,
        timestamp = _ref3.timestamp,
        noCollapse = _ref3.noCollapse;
      var props = this.p;
      if (props.showClock) {
        var time = (0, _toMoment.default)(this.time || this.clockInput.getValue(), {
          dateFormat: props.timeFormat,
          locale: props.locale
        });
        (0, _forwardTime.default)(time, dateMoment);
        timestamp = +dateMoment;
        dateString = this.view.format(dateMoment);
      } else if (hasTime(props.dateFormat)) {
        (0, _forwardTime.default)(props.date, dateMoment);
        timestamp = +dateMoment;
        dateString = this.view.format(dateMoment);
      }
      if (this.props.onChange) {
        this.props.onChange(dateString, {
          dateMoment: dateMoment,
          timestamp: timestamp,
          dateString: dateString,
          noCollapse: noCollapse
        }, event);
      }
    }
  }]);
  return Calendar;
}(_reactClass.default);
exports["default"] = Calendar;
Calendar.defaultProps = {
  rootClassName: 'inovua-react-toolkit-calendar__calendar',
  dateFormat: 'YYYY-MM-DD',
  theme: 'default-light',
  isDatePicker: true,
  triggerChangeOnTimeChange: true,
  enableMonthDecadeViewAnimation: true,
  showMonthDecadeViewAnimation: 300,
  wrapTime: false,
  onTimeChange: function onTimeChange() {},
  onClockEnterKey: function onClockEnterKey() {},
  onClockInputBlur: function onClockInputBlur() {},
  onClockInputFocus: function onClockInputFocus() {},
  onFooterTodayClick: function onFooterTodayClick() {},
  onFooterCancelClick: function onFooterCancelClick() {},
  onFooterClearClick: function onFooterClearClick() {},
  onFooterOkClick: function onFooterOkClick() {}
};
Calendar.propTypes = {
  rootClassName: _propTypes.default.string,
  dateFormat: _propTypes.default.string,
  theme: _propTypes.default.string,
  clockTabIndex: _propTypes.default.number,
  updateOnWheel: _propTypes.default.bool,
  isDatePicker: _propTypes.default.bool,
  wrap: _propTypes.default.bool,
  wrapTime: _propTypes.default.bool,
  viewIndex: _propTypes.default.number,
  showClock: _propTypes.default.bool,
  onTimeChange: _propTypes.default.func,
  onClockEnterKey: _propTypes.default.func,
  onClockInputBlur: _propTypes.default.func,
  onClockInputFocus: _propTypes.default.func,
  onFooterTodayClick: _propTypes.default.func,
  onFooterCancelClick: _propTypes.default.func,
  onFooterClearClick: _propTypes.default.func,
  onClockInputMouseDown: _propTypes.default.func,
  onClockEscapeKey: _propTypes.default.func,
  onFooterOkClick: _propTypes.default.func,
  onChange: _propTypes.default.func,
  cleanup: _propTypes.default.func,
  triggerChangeOnTimeChange: _propTypes.default.bool,
  showMonthDecadeViewAnimation: _propTypes.default.number,
  enableMonthDecadeViewAnimation: _propTypes.default.bool
};

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/Clock.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/Clock.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _reactClass = _interopRequireDefault(__webpack_require__(/*! ../../react-class */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/index.js"));
var _NotifyResize = __webpack_require__(/*! ../../NotifyResize */ "./node_modules/@inovua/reactdatagrid-community/packages/NotifyResize/index.js");
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _toMoment = _interopRequireDefault(__webpack_require__(/*! ./toMoment */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/toMoment.js"));
var _Clock$propTypes;
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var MINUTES = Array.apply(void 0, (0, _toConsumableArray2.default)(new Array(60))).map(function (_, index) {
  return index;
});
var toUpperFirst = function toUpperFirst(str) {
  return str ? str.charAt(0).toUpperCase() + str.substr(1) : '';
};
var transformStyle = {
  transform: ''
};
var rotateTickStyle = function rotateTickStyle(tick, _ref, totalSize, offset) {
  var width = _ref.width,
    height = _ref.height;
  var result = (0, _assign.default)({}, transformStyle);
  var deg = tick * 6;
  var transform = "translate3d(".concat(-width / 2, "px, ").concat(-height / 2, "px, 0px) ") + "rotate(".concat(deg, "deg) translate3d(0px, -").concat(offset, "px, 0px)");
  Object.keys(result).forEach(function (name) {
    result[name] = transform;
  });
  return result;
};
var Clock = function (_Component) {
  (0, _inherits2.default)(Clock, _Component);
  var _super = _createSuper(Clock);
  function Clock(props) {
    var _this;
    (0, _classCallCheck2.default)(this, Clock);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "componentDidUpdate", function (prevProps) {
      if (prevProps.run !== _this.props.run || prevProps.defaultSeconds !== _this.props.defaultSeconds || prevProps.defaultTime !== _this.props.defaultTime) {
        var prevRun = _this.shouldRun(prevProps);
        var currentRun = _this.shouldRun(_this.props);
        if (!prevRun && currentRun) {
          _this.start();
        } else if (prevRun && !currentRun) {
          _this.stop();
        }
      }
    });
    var time;
    var seconds;
    if (props.defaultSeconds) {
      seconds = props.defaultSeconds == true ? Date.now() / 1000 : +props.defaultSeconds;
    }
    if (props.defaultTime) {
      time = props.defaultTime == true ? Date.now() : +props.defaultTime;
    }
    _this.state = {};
    if (seconds !== undefined) {
      _this.state.seconds = seconds;
      _this.state.defaultSeconds = seconds;
    }
    if (time !== undefined) {
      _this.state.time = time;
      _this.state.defaultTime = time;
    }
    return _this;
  }
  (0, _createClass2.default)(Clock, [{
    key: "shouldRun",
    value: function shouldRun(props) {
      props = props || this.props;
      if (props.run === false) {
        return false;
      }
      return !!(props.defaultSeconds || props.defaultTime);
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.shouldRun(this.props)) {
        this.start();
      }
      if (this.props.size == 'auto') {
        this.setState({
          rendered: true
        });
      }
    }
  }, {
    key: "start",
    value: function start() {
      this.startTime = Date.now ? Date.now() : +new Date();
      this.run();
    }
  }, {
    key: "stop",
    value: function stop() {
      if (this.timeoutId) {
        clearTimeout(this.timeoutId);
      }
    }
  }, {
    key: "run",
    value: function run() {
      var _this2 = this;
      this.timeoutId = setTimeout(function () {
        _this2.update();
        _this2.run();
      }, this.props.updateInterval);
    }
  }, {
    key: "update",
    value: function update() {
      var now = Date.now ? Date.now() : +new Date();
      var diff = now - this.startTime;
      var seconds = this.getPropsSeconds();
      if (seconds !== undefined) {
        this.setSeconds(seconds + diff / 1000);
        return;
      }
      var time = this.getPropsTime();
      this.setTime(time + diff);
    }
  }, {
    key: "setSeconds",
    value: function setSeconds(seconds) {
      this.setState({
        seconds: seconds
      });
      if (this.props.onSecondsChange) {
        this.props.onSecondsChange(seconds);
      }
    }
  }, {
    key: "setTime",
    value: function setTime(time) {
      this.setState({
        time: time
      });
      if (this.props.onTimeChange) {
        this.props.onTimeChange(time);
      }
    }
  }, {
    key: "getPropsTime",
    value: function getPropsTime() {
      return this.props.time || this.state.defaultTime || 0;
    }
  }, {
    key: "getPropsSeconds",
    value: function getPropsSeconds() {
      return this.props.seconds || this.state.defaultSeconds;
    }
  }, {
    key: "getSeconds",
    value: function getSeconds() {
      return this.state.seconds || this.getPropsSeconds();
    }
  }, {
    key: "getTime",
    value: function getTime() {
      return this.state.time || this.getPropsTime();
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.p = (0, _assign.default)({}, this.props);
      var size = props.size;
      if (size == 'auto') {
        this.ignoreRender = false;
        if (!this.state.rendered) {
          this.ignoreRender = true;
        }
        size = props.size = this.state.size;
      }
      var valueSeconds = this.getSeconds();
      var valueTime = this.getTime();
      var width = size;
      var height = size;
      var className = (0, _join.default)(props.className, props.rootClassName, "".concat(props.rootClassName, "--theme-").concat(props.theme));
      var seconds;
      var minutes;
      var hours;
      if (valueSeconds != undefined) {
        seconds = Math.floor(valueSeconds % 60);
        minutes = valueSeconds / 60 % 60;
        hours = valueSeconds / 3600 % 24;
      } else {
        var mom = (0, _toMoment.default)(valueTime);
        seconds = mom.seconds();
        minutes = mom.minutes() + seconds / 60;
        hours = mom.hours() + minutes / 60;
      }
      hours *= 5;
      var defaultStyle = {};
      if (props.color) {
        defaultStyle.borderColor = props.color;
      }
      var style = (0, _assign.default)(defaultStyle, props.style, {
        width: width,
        height: height,
        borderWidth: props.borderWidth
      });
      var divProps = (0, _assign.default)({}, props);
      delete divProps.rootClassName;
      delete divProps.bigTickHeight;
      delete divProps.bigTickOffset;
      delete divProps.bigTickWidth;
      delete divProps.borderColor;
      delete divProps.borderWidth;
      delete divProps.centerOverlaySize;
      delete divProps.centerSize;
      delete divProps.cleanup;
      delete divProps.defaultSeconds;
      delete divProps.defaultTime;
      delete divProps.handHeight;
      delete divProps.handOffset;
      delete divProps.handWidth;
      delete divProps.hourHandDiff;
      delete divProps.isDatePickerClock;
      delete divProps.minuteHandDiff;
      delete divProps.seconds;
      delete divProps.secondHandDiff;
      delete divProps.secondHandWidth;
      delete divProps.showHoursHand;
      delete divProps.showMinutesHand;
      delete divProps.showSecondsHand;
      delete divProps.showSmallTicks;
      delete divProps.smallTickHeight;
      delete divProps.smallTickOffset;
      delete divProps.smallTickWidth;
      delete divProps.theme;
      delete divProps.time;
      delete divProps.tickHeight;
      delete divProps.tickOffset;
      delete divProps.tickWidth;
      delete divProps.updateInterval;
      delete divProps.rootClassName;
      if (typeof props.cleanup == 'function') {
        props.cleanup(divProps);
      }
      return _react.default.createElement("div", _objectSpread(_objectSpread({}, divProps), {}, {
        className: className,
        style: style
      }), this.renderCenter(), this.renderHourHand(hours), this.renderMinuteHand(minutes), this.renderSecondHand(seconds), this.renderCenterOverlay(), MINUTES.map(this.renderTick), this.props.size == 'auto' && _react.default.createElement(_NotifyResize.NotifyResize, {
        notifyOnMount: true,
        onResize: this.onResize
      }));
    }
  }, {
    key: "renderCenter",
    value: function renderCenter() {
      var props = this.props;
      var centerSize = props.centerSize || (props.bigTickHeight || props.tickHeight) * 3;
      return _react.default.createElement("div", {
        className: "".concat(props.rootClassName, "-center"),
        style: {
          width: centerSize,
          height: centerSize
        }
      });
    }
  }, {
    key: "renderCenterOverlay",
    value: function renderCenterOverlay() {
      var props = this.props;
      var centerOverlaySize = props.centerOverlaySize || props.handWidth * 4;
      return _react.default.createElement("div", {
        className: "".concat(props.rootClassName, "-overlay"),
        style: {
          width: centerOverlaySize,
          height: centerOverlaySize,
          borderWidth: props.handWidth
        }
      });
    }
  }, {
    key: "onResize",
    value: function onResize(_ref2) {
      var width = _ref2.width,
        height = _ref2.height;
      if (width != height) {
        console.warn("Clock width != height. Please make sure it's a square.");
      }
      this.setState({
        size: width
      });
    }
  }, {
    key: "renderSecondHand",
    value: function renderSecondHand(value) {
      return this.props.showSecondsHand && this.renderHand('second', value);
    }
  }, {
    key: "renderMinuteHand",
    value: function renderMinuteHand(value) {
      return this.props.showMinutesHand && this.renderHand('minute', value);
    }
  }, {
    key: "renderHourHand",
    value: function renderHourHand(value) {
      return this.props.showHoursHand && this.renderHand('hour', value);
    }
  }, {
    key: "renderHand",
    value: function renderHand(name, value) {
      if (this.ignoreRender) {
        return null;
      }
      var props = this.p;
      var size = props.size,
        borderWidth = props.borderWidth;
      var height = props["".concat(name, "HandHeight")] || props.handHeight || size / 2 - props["".concat(name, "HandDiff")] / 2;
      var width = props["".concat(name, "HandWidth")] || props.handWidth || props.tickWidth;
      var offset = props["".concat(name, "HandOffset")] || props.handOffset;
      if (!offset && offset != 0) {
        offset = 5;
      }
      var style = rotateTickStyle(value, {
        width: width,
        height: height
      }, size - borderWidth, height / 2 - offset);
      style.width = width;
      style.height = height;
      if (props.color) {
        style.background = props.color;
      }
      var className = (0, _join.default)("".concat(props.rootClassName, "-hand"), "".concat(props.rootClassName, "-hand-").concat(name));
      var renderName = "render".concat(toUpperFirst(name), "Hand");
      if (props[renderName]) {
        return props[renderName]({
          key: name,
          className: className,
          style: style
        });
      }
      return _react.default.createElement("div", {
        key: name,
        className: className,
        style: style
      });
    }
  }, {
    key: "renderTick",
    value: function renderTick(tick) {
      if (this.ignoreRender) {
        return null;
      }
      var _this$p = this.p,
        size = _this$p.size,
        borderWidth = _this$p.borderWidth,
        tickWidth = _this$p.tickWidth,
        smallTickWidth = _this$p.smallTickWidth,
        bigTickWidth = _this$p.bigTickWidth,
        tickHeight = _this$p.tickHeight,
        smallTickHeight = _this$p.smallTickHeight,
        bigTickHeight = _this$p.bigTickHeight,
        tickOffset = _this$p.tickOffset,
        smallTickOffset = _this$p.smallTickOffset,
        bigTickOffset = _this$p.bigTickOffset,
        rootClassName = _this$p.rootClassName;
      var small = !!(tick % 5);
      var sizeName = small ? 'small' : 'big';
      if (small && !this.props.showSmallTicks) {
        return false;
      }
      var className = (0, _join.default)("".concat(rootClassName, "-tick"), "".concat(rootClassName, "-tick--").concat(sizeName));
      var offset = small ? smallTickOffset || tickOffset : bigTickOffset || tickOffset;
      var tWidth = small ? smallTickWidth || tickWidth : bigTickWidth || tickWidth;
      var tHeight = small ? smallTickHeight || tickHeight : bigTickHeight || tickHeight;
      var totalSize = size - borderWidth;
      var style = rotateTickStyle(tick, {
        width: tWidth,
        height: tHeight
      }, totalSize, totalSize / 2 - (tHeight / 2 + offset));
      style.height = tHeight;
      style.width = tWidth;
      if (this.props.color) {
        style.background = this.props.color;
      }
      if (this.props.renderTick) {
        return this.props.renderTick({
          tick: tick,
          className: className,
          style: style
        });
      }
      return _react.default.createElement("div", {
        key: tick,
        className: className,
        style: style
      });
    }
  }]);
  return Clock;
}(_reactClass.default);
exports["default"] = Clock;
Clock.defaultProps = {
  rootClassName: 'inovua-react-toolkit-calendar__clock',
  centerSize: null,
  centerOverlaySize: null,
  size: 120,
  updateInterval: 1000,
  theme: 'default',
  showSecondsHand: true,
  showHoursHand: true,
  showMinutesHand: true,
  handWidth: 2,
  secondHandWidth: 1,
  handOffset: 10,
  hourHandDiff: 35,
  minuteHandDiff: 25,
  secondHandDiff: 10,
  tickWidth: 1,
  bigTickWidth: 2,
  tickOffset: 2,
  smallTickHeight: 6,
  bigTickHeight: 10,
  color: '',
  borderWidth: 0,
  showSmallTicks: true,
  isDatePickerClock: true
};
Clock.propTypes = (_Clock$propTypes = {
  rootClassName: _propTypes.default.string,
  centerSize: _propTypes.default.number,
  centerOverlaySize: _propTypes.default.number,
  defaultSeconds: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  seconds: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  defaultTime: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string]),
  time: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string]),
  size: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  theme: _propTypes.default.string,
  showSecondsHand: _propTypes.default.bool,
  showHoursHand: _propTypes.default.bool,
  showMinutesHand: _propTypes.default.bool,
  run: _propTypes.default.bool,
  updateInterval: _propTypes.default.number,
  handWidth: _propTypes.default.number,
  secondHandWidth: _propTypes.default.number,
  handOffset: _propTypes.default.number,
  bigTickOffset: _propTypes.default.number,
  hourHandDiff: _propTypes.default.number,
  minuteHandDiff: _propTypes.default.number,
  secondHandDiff: _propTypes.default.number,
  borderColor: _propTypes.default.string,
  handHeight: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  tickWidth: _propTypes.default.number,
  bigTickWidth: _propTypes.default.number,
  smallTickWidth: _propTypes.default.number,
  tickOffset: _propTypes.default.number,
  smallTickOffset: _propTypes.default.number,
  smallTickHeight: _propTypes.default.number,
  bigTickHeight: _propTypes.default.number,
  tickHeight: _propTypes.default.number,
  color: _propTypes.default.string,
  borderWidth: _propTypes.default.number,
  showSmallTicks: _propTypes.default.bool,
  isDatePickerClock: _propTypes.default.bool,
  renderTick: _propTypes.default.func,
  onSecondsChange: _propTypes.default.func,
  onTimeChange: _propTypes.default.func
}, (0, _defineProperty2.default)(_Clock$propTypes, "onTimeChange", _propTypes.default.func), (0, _defineProperty2.default)(_Clock$propTypes, "cleanup", _propTypes.default.func), _Clock$propTypes);

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/ClockInput.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/ClockInput.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _autoBind = _interopRequireDefault(__webpack_require__(/*! ../../react-class/autoBind */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/autoBind.js"));
var _Flex = __webpack_require__(/*! ../../Flex */ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/index.js");
var _throttle = _interopRequireDefault(__webpack_require__(/*! ../../../common/throttle */ "./node_modules/@inovua/reactdatagrid-community/common/throttle.js"));
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _toMoment = _interopRequireDefault(__webpack_require__(/*! ./toMoment */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/toMoment.js"));
var _Clock = _interopRequireDefault(__webpack_require__(/*! ./Clock */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/Clock.js"));
var _DateFormatSpinnerInput = _interopRequireDefault(__webpack_require__(/*! ./DateFormatSpinnerInput */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/DateFormatSpinnerInput/index.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var ClockInput = function (_Component) {
  (0, _inherits2.default)(ClockInput, _Component);
  var _super = _createSuper(ClockInput);
  function ClockInput(props) {
    var _this;
    (0, _classCallCheck2.default)(this, ClockInput);
    _this = _super.call(this, props);
    (0, _autoBind.default)((0, _assertThisInitialized2.default)(_this));
    var delay = props.changeDelay;
    _this.throttleSetValue = delay == -1 ? _this.setValue : (0, _throttle.default)(_this.setValue, delay);
    _this.state = {
      value: props.defaultValue || Date.now()
    };
    return _this;
  }
  (0, _createClass2.default)(ClockInput, [{
    key: "getValue",
    value: function getValue() {
      return this.value;
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.props;
      var format = props.dateFormat || props.format;
      var startIndex = format.toLowerCase().indexOf('h');
      if (startIndex === -1) {
        startIndex = format.toLowerCase().indexOf('k');
      }
      var dateFormat = format.substring(startIndex);
      this.dateFormat = dateFormat;
      this.value = props.value !== undefined ? props.value : this.state.value;
      var rootClassName = props.rootClassName;
      var className = (0, _join.default)(props.className, rootClassName, props.theme && "".concat(rootClassName, "--theme-").concat(props.theme));
      var flexProps = (0, _assign.default)({}, this.props);
      delete flexProps.changeDelay;
      delete flexProps.cleanup;
      delete flexProps.dateFormat;
      delete flexProps.isClockInput;
      delete flexProps.onEnterKey;
      delete flexProps.onEscapeKey;
      delete flexProps.onTimeChange;
      delete flexProps.updateOnWheel;
      delete flexProps.theme;
      delete flexProps.viewIndex;
      delete flexProps.wrapTime;
      delete flexProps.rootClassName;
      if (typeof this.props.cleanup == 'function') {
        this.props.cleanup(flexProps);
      }
      return _react.default.createElement(_Flex.Flex, _objectSpread(_objectSpread({
        column: true
      }, flexProps), {}, {
        value: null,
        defaultValue: null,
        className: className
      }), this.renderClock(), this.renderTimeInput());
    }
  }, {
    key: "renderTimeInput",
    value: function renderTimeInput() {
      var _this2 = this;
      var props = this.props;
      var dateInput = _react.default.Children.toArray(props.children).filter(function (child) {
        return child && child.props && child.props.isDateInput;
      })[0];
      var dateInputProps = (0, _assign.default)({}, this.props, {
        ref: function ref(field) {
          _this2.field = field;
        },
        tabIndex: props.readOnly ? -1 : props.tabIndex || 0,
        readOnly: props.readOnly,
        value: this.value,
        dateFormat: this.dateFormat,
        onChange: this.onChange,
        onKeyDown: this.onKeyDown,
        size: props.size || this.dateFormat.length + 2,
        theme: props.theme
      });
      if (dateInput) {
        return _react.default.cloneElement(dateInput, dateInputProps);
      }
      return _react.default.createElement(_DateFormatSpinnerInput.default, _objectSpread(_objectSpread({}, dateInputProps), {}, {
        style: null
      }));
    }
  }, {
    key: "focus",
    value: function focus() {
      if (this.field) {
        this.field.focus();
      }
    }
  }, {
    key: "onKeyDown",
    value: function onKeyDown(event) {
      if (this.props.onEnterKey && event.key == 'Enter') {
        this.props.onEnterKey(event);
      }
      if (this.props.onEscapeKey && event.key == 'Escape') {
        this.props.onEscapeKey(event);
      }
    }
  }, {
    key: "onChange",
    value: function onChange(value) {
      if (this.props.value === undefined) {
        this.setState({
          value: value
        });
      }
      if (this.props.onChange) {
        this.throttleSetValue(value);
      }
    }
  }, {
    key: "setValue",
    value: function setValue(value) {
      if (this.props.value === undefined) {
        this.setState({
          value: value
        });
      }
      if (this.props.onChange) {
        this.props.onChange(value, this.dateFormat);
      }
    }
  }, {
    key: "renderClock",
    value: function renderClock() {
      var props = this.props;
      var clock = _react.default.Children.toArray(props.children).filter(function (child) {
        return child && child.props && child.props.isDatePickerClock;
      })[0];
      var dateFormat = this.dateFormat;
      var time = (0, _toMoment.default)(this.value, {
        dateFormat: dateFormat
      });
      var clockProps = {
        time: time,
        theme: props.theme,
        showMinutesHand: dateFormat.indexOf('mm') != -1,
        showSecondsHand: dateFormat.indexOf('ss') != -1
      };
      if (clock) {
        return _react.default.cloneElement(clock, clockProps);
      }
      return _react.default.createElement(_Clock.default, _objectSpread({}, clockProps));
    }
  }]);
  return ClockInput;
}(_react.Component);
exports["default"] = ClockInput;
ClockInput.defaultProps = {
  rootClassName: 'inovua-react-toolkit-calendar__clock-input',
  changeDelay: 50,
  dateFormat: 'YYYY-MM-DD',
  updateOnWheel: true,
  theme: 'default',
  wrapTime: false,
  isClockInput: true,
  onTimeChange: function onTimeChange() {}
};
ClockInput.propTypes = {
  rootClassName: _propTypes.default.string,
  value: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string]),
  defaultValue: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string]),
  viewIndex: _propTypes.default.number,
  dateFormat: _propTypes.default.string,
  format: _propTypes.default.string,
  theme: _propTypes.default.string,
  changeDelay: _propTypes.default.number,
  updateOnWheel: _propTypes.default.bool,
  wrapTime: _propTypes.default.bool,
  isClockInput: _propTypes.default.bool,
  cleanup: _propTypes.default.func,
  onEnterKey: _propTypes.default.func,
  onEscapeKey: _propTypes.default.func,
  onTimeChange: _propTypes.default.func
};

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/DateFormatInput/formats.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/DateFormatInput/formats.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.getFormats = exports["default"] = void 0;
var _leftPad = _interopRequireDefault(__webpack_require__(/*! ../utils/leftPad */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/leftPad.js"));
var _clamp = _interopRequireDefault(__webpack_require__(/*! ../utils/clamp */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/clamp.js"));
var _times = _interopRequireDefault(__webpack_require__(/*! ../utils/times */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/times.js"));
var isValid = function isValid(value, format) {
  value *= 1;
  return value >= format.min && value <= format.max;
};
var replaceAt = function replaceAt(_ref) {
  var value = _ref.value,
    index = _ref.index,
    _ref$len = _ref.len,
    len = _ref$len === void 0 ? 1 : _ref$len,
    str = _ref.str;
  return value.substring(0, index) + str + value.substring(index + len);
};
var handleArrow = function handleArrow(format, _ref2) {
  var currentValue = _ref2.currentValue,
    key = _ref2.key,
    dir = _ref2.dir;
  dir = dir || (key == 'ArrowUp' ? 1 : -1);
  return {
    value: (0, _clamp.default)(currentValue * 1 + dir, {
      min: format.min,
      max: format.max,
      circular: true
    }),
    caretPos: true
  };
};
var handleArrowLeftPad = function handleArrowLeftPad(format, config) {
  var _handleArrow = handleArrow(format, config),
    value = _handleArrow.value,
    caretPos = _handleArrow.caretPos;
  return {
    value: (0, _leftPad.default)(value),
    caretPos: caretPos
  };
};
var handlePage = function handlePage(format, config) {
  config.dir = config.dir || (config.key == 'PageUp' ? 10 : -10);
  return handleArrow(format, config);
};
var handlePageLeftPad = function handlePageLeftPad(format, config) {
  config.dir = config.dir || (config.key == 'PageUp' ? 10 : -10);
  return handleArrowLeftPad(format, config);
};
var handleUpdate = function handleUpdate(value, format, _ref3) {
  var range = _ref3.range;
  value *= 1;
  var len = range.end - range.start + 1;
  var pow10 = "1".concat((0, _times.default)(3 - len).map(function () {
    return '0';
  }).join('')) * 1;
  var modLen = value % pow10;
  var newValue = (0, _clamp.default)(value, {
    min: format.min,
    max: format.max,
    circular: false
  });
  if (pow10 > 1 && value % pow10 == 0) {
    newValue += modLen;
    newValue = (0, _clamp.default)(newValue, {
      min: format.min,
      max: format.max,
      circular: false
    });
  }
  return newValue;
};
var handleUnidentified = function handleUnidentified(format, _ref4) {
  var event = _ref4.event,
    currentValue = _ref4.currentValue,
    range = _ref4.range;
  var newChar = String.fromCharCode(event.which);
  var index = range.start - format.start;
  var caretPos = {
    start: range.start + 1
  };
  if (newChar * 1 != newChar) {
    return {
      preventDefault: false,
      value: currentValue
    };
  }
  var value;
  var valid;
  value = replaceAt({
    value: currentValue,
    index: index,
    str: newChar
  });
  valid = isValid(value, format);
  if (!valid && index == 0 && newChar == "".concat(format.max)[0]) {
    valid = true;
    value = format.max;
    caretPos.start++;
  }
  if (!valid) {
    do {
      value = (0, _times.default)(index).map(function () {
        return '0';
      }).join('') + replaceAt({
        value: currentValue,
        index: index,
        str: newChar
      }).substring(index);
      valid = isValid(value, format);
      index++;
      if (!valid) {
        caretPos.start++;
      }
    } while (!valid && index <= format.end);
  }
  if (valid) {
    value = handleUpdate(value, format, {
      range: range
    });
  } else {
    var defaultValue = format.default;
    value = 1 * replaceAt({
      value: defaultValue,
      index: defaultValue.length - 1,
      str: newChar
    });
    if (isValid(value, format)) {
      caretPos.start = format.start + defaultValue.length;
    } else {
      caretPos.start = range.start + 1;
      value = currentValue;
    }
  }
  return {
    value: value,
    caretPos: caretPos
  };
};
var handleUnidentifiedLeftPad = function handleUnidentifiedLeftPad(format, config) {
  var _handleUnidentified = handleUnidentified(format, config),
    value = _handleUnidentified.value,
    caretPos = _handleUnidentified.caretPos,
    preventDefault = _handleUnidentified.preventDefault;
  return {
    value: (0, _leftPad.default)(value),
    caretPos: caretPos,
    preventDefault: preventDefault
  };
};
var handleYearUnidentified = handleUnidentified;
var handleDelete = function handleDelete(format, _ref5) {
  var range = _ref5.range,
    currentValue = _ref5.currentValue,
    dir = _ref5.dir;
  dir = dir || 0;
  if (range.start <= format.start && range.end >= format.end) {
    return {
      value: format.default,
      caretPos: true
    };
  }
  var len = range.end - range.start + 1;
  var str = (0, _times.default)(len).map(function () {
    return '0';
  }).join('');
  var index = range.start - format.start + dir;
  var value = replaceAt({
    value: currentValue,
    index: index,
    str: str,
    len: len
  }) * 1;
  value = (0, _leftPad.default)(handleUpdate(value, format, {
    range: range
  }));
  return {
    value: value,
    caretPos: {
      start: range.start + (dir < 0 ? -1 : 1)
    }
  };
};
var handleBackspace = function handleBackspace(format, config) {
  config.dir = -1;
  return handleDelete(format, config);
};
var toggleMeridiem = function toggleMeridiem(_ref6) {
  var upper = _ref6.upper,
    value = _ref6.value;
  if (upper) {
    return value == 'AM' ? 'PM' : 'AM';
  }
  return value == 'am' ? 'pm' : 'am';
};
var handleMeridiemArrow = function handleMeridiemArrow(format, _ref7) {
  var currentValue = _ref7.currentValue;
  return {
    value: toggleMeridiem({
      upper: format.upper,
      value: currentValue
    }),
    caretPos: true
  };
};
var handleMeridiemDelete = function handleMeridiemDelete(format, _ref8) {
  var dir = _ref8.dir,
    range = _ref8.range;
  dir = dir || 0;
  if (range.start <= format.start && range.end >= format.end) {
    return {
      value: format.default,
      caretPos: true
    };
  }
  return {
    value: format.upper ? 'AM' : 'am',
    caretPos: {
      start: range.start + (dir < 0 ? -1 : 1)
    }
  };
};
var handleMeridiemBackspace = function handleMeridiemBackspace(format, config) {
  config.dir = -1;
  return handleMeridiemDelete(format, config);
};
var getFormats = function getFormats() {
  return {
    YYYY: {
      min: 100,
      max: 9999,
      default: '0100',
      handleDelete: handleDelete,
      handleBackspace: handleBackspace,
      handleArrow: handleArrow,
      handlePageUp: handlePage,
      handlePageDown: handlePage,
      handleUnidentified: handleYearUnidentified
    },
    MM: {
      min: 1,
      max: 12,
      default: '01',
      handleDelete: handleDelete,
      handleBackspace: handleBackspace,
      handlePageUp: handlePageLeftPad,
      handlePageDown: handlePageLeftPad,
      handleUnidentified: handleUnidentifiedLeftPad,
      handleArrow: handleArrowLeftPad
    },
    DD: {
      min: 1,
      max: 31,
      default: '01',
      handlePageUp: handlePageLeftPad,
      handlePageDown: handlePageLeftPad,
      handleDelete: handleDelete,
      handleBackspace: handleBackspace,
      handleUnidentified: handleUnidentifiedLeftPad,
      handleArrow: handleArrowLeftPad
    },
    HH: {
      time: true,
      min: 0,
      max: 23,
      default: '00',
      handleDelete: handleDelete,
      handleBackspace: handleBackspace,
      handleUnidentified: handleUnidentifiedLeftPad,
      handleArrow: handleArrowLeftPad,
      handlePageUp: handlePageLeftPad,
      handlePageDown: handlePageLeftPad
    },
    H: {
      time: true,
      min: 0,
      max: 23,
      default: '0',
      handleDelete: handleDelete,
      handleBackspace: handleBackspace,
      handleUnidentified: handleUnidentifiedLeftPad,
      handleArrow: handleArrowLeftPad,
      handlePageUp: handlePageLeftPad,
      handlePageDown: handlePageLeftPad
    },
    kk: {
      time: true,
      min: 1,
      max: 24,
      default: '01',
      handleDelete: handleDelete,
      handleBackspace: handleBackspace,
      handleUnidentified: handleUnidentifiedLeftPad,
      handleArrow: handleArrowLeftPad,
      handlePageUp: handlePageLeftPad,
      handlePageDown: handlePageLeftPad
    },
    k: {
      time: true,
      min: 1,
      max: 24,
      default: '1',
      handleDelete: handleDelete,
      handleBackspace: handleBackspace,
      handleUnidentified: handleUnidentifiedLeftPad,
      handleArrow: handleArrowLeftPad,
      handlePageUp: handlePageLeftPad,
      handlePageDown: handlePageLeftPad
    },
    hh: {
      min: 1,
      max: 12,
      default: '01',
      time: true,
      handleDelete: handleDelete,
      handleBackspace: handleBackspace,
      handleUnidentified: handleUnidentifiedLeftPad,
      handleArrow: handleArrowLeftPad,
      handlePageUp: handlePageLeftPad,
      handlePageDown: handlePageLeftPad
    },
    h: {
      min: 1,
      max: 12,
      default: '1',
      time: true,
      handleDelete: handleDelete,
      handleBackspace: handleBackspace,
      handleUnidentified: handleUnidentifiedLeftPad,
      handleArrow: handleArrowLeftPad,
      handlePageUp: handlePageLeftPad,
      handlePageDown: handlePageLeftPad
    },
    a: {
      time: true,
      length: 2,
      default: 'am',
      handleArrow: handleMeridiemArrow,
      handlePageUp: handleMeridiemArrow,
      handlePageDown: handleMeridiemArrow,
      handleDelete: handleMeridiemDelete,
      handleBackspace: handleMeridiemBackspace
    },
    A: {
      length: 2,
      time: true,
      default: 'AM',
      upper: true,
      handleArrow: handleMeridiemArrow,
      handlePageUp: handleMeridiemArrow,
      handlePageDown: handleMeridiemArrow,
      handleDelete: handleMeridiemDelete,
      handleBackspace: handleMeridiemBackspace
    },
    mm: {
      min: 0,
      max: 59,
      default: '00',
      time: true,
      handleDelete: handleDelete,
      handleBackspace: handleBackspace,
      handleUnidentified: handleUnidentifiedLeftPad,
      handleArrow: handleArrowLeftPad,
      handlePageUp: handlePageLeftPad,
      handlePageDown: handlePageLeftPad
    },
    ss: {
      time: true,
      min: 0,
      max: 59,
      default: '00',
      handleDelete: handleDelete,
      handleBackspace: handleBackspace,
      handleUnidentified: handleUnidentifiedLeftPad,
      handleArrow: handleArrowLeftPad,
      handlePageUp: handlePageLeftPad,
      handlePageDown: handlePageLeftPad
    }
  };
};
exports.getFormats = getFormats;
var _default = getFormats();
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/DateFormatInput/index.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/DateFormatInput/index.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _reactClass = _interopRequireDefault(__webpack_require__(/*! ../../../react-class */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/index.js"));
var _throttle = _interopRequireDefault(__webpack_require__(/*! ../../../../common/throttle */ "./node_modules/@inovua/reactdatagrid-community/common/throttle.js"));
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _TimeInput = __webpack_require__(/*! ../TimeInput */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/TimeInput/index.js");
var _toMoment2 = _interopRequireDefault(__webpack_require__(/*! ../toMoment */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/toMoment.js"));
var _parseFormat2 = _interopRequireDefault(__webpack_require__(/*! ./parseFormat */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/DateFormatInput/parseFormat.js"));
var _forwardTime = _interopRequireDefault(__webpack_require__(/*! ../utils/forwardTime */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/forwardTime.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var emptyFn = function emptyFn() {};
var BACKWARDS = {
  Backspace: 1,
  ArrowUp: 1,
  ArrowDown: 1,
  PageUp: 1,
  PageDown: 1
};
var DateFormatInput = function (_Component) {
  (0, _inherits2.default)(DateFormatInput, _Component);
  var _super = _createSuper(DateFormatInput);
  function DateFormatInput(props) {
    var _this;
    (0, _classCallCheck2.default)(this, DateFormatInput);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "componentDidUpdate", function (prevProps) {
      if (_this.props.value !== undefined && _this.caretPos && _this.isFocused()) {
        _this.setCaretPosition(_this.caretPos);
      }
      var _this$getMinMax = _this.getMinMax(prevProps),
        prevMinDate = _this$getMinMax.minDate,
        prevMaxDate = _this$getMinMax.maxDate;
      var _this$getMinMax2 = _this.getMinMax(_this.props),
        currentMinDate = _this$getMinMax2.minDate,
        currentMaxDate = _this$getMinMax2.maxDate;
      if (prevMinDate !== currentMinDate) {
        _this.setState({
          minDate: currentMinDate
        });
      }
      if (prevMaxDate !== currentMaxDate) {
        _this.setState({
          maxDate: currentMaxDate
        });
      }
    });
    var _parseFormat = (0, _parseFormat2.default)(props.dateFormat),
      positions = _parseFormat.positions,
      matches = _parseFormat.matches;
    var defaultValue = props.defaultValue || Date.now();
    var delay = props.changeDelay;
    _this.throttleSetValue = delay == -1 ? _this.setValue : (0, _throttle.default)(_this.setValue, delay);
    var _this$getMinMax3 = _this.getMinMax(props),
      minDate = _this$getMinMax3.minDate,
      maxDate = _this$getMinMax3.maxDate;
    _this.state = {
      positions: positions,
      matches: matches,
      propsValue: props.value !== undefined,
      value: defaultValue,
      minDate: minDate,
      maxDate: maxDate
    };
    _this.dateFormatInputRef = (0, _react.createRef)();
    return _this;
  }
  (0, _createClass2.default)(DateFormatInput, [{
    key: "getMinMax",
    value: function getMinMax(props) {
      props = props || this.props;
      var minDate = null;
      if (props.minDate) {
        minDate = this.toMoment(props.minDate, props);
      }
      var maxDate = null;
      if (props.maxDate) {
        maxDate = this.toMoment(props.maxDate, props);
      }
      return {
        minDate: minDate,
        maxDate: maxDate
      };
    }
  }, {
    key: "toMoment",
    value: function toMoment(value, props) {
      props = props || this.props;
      return (0, _toMoment2.default)(value, {
        locale: props.locale,
        dateFormat: props.dateFormat === undefined ? this.props.dateFormat : props.dateFormat
      });
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.props;
      var value = this.state.propsValue ? props.value : this.state.value;
      var displayValue = this.displayValue = this.toMoment(value).format(props.dateFormat);
      var className = (0, _join.default)(props.className, props.rootClassName, "".concat(props.rootClassName, "--theme-").concat(props.theme));
      var inputProps = (0, _assign.default)({}, props);
      delete inputProps.changeDelay;
      delete inputProps.date;
      delete inputProps.dateFormat;
      delete inputProps.isDateInput;
      delete inputProps.maxDate;
      delete inputProps.minDate;
      delete inputProps.stopPropagation;
      delete inputProps.updateOnWheel;
      delete inputProps.theme;
      delete inputProps.rootClassName;
      if (typeof props.cleanup == 'function') {
        props.cleanup(inputProps);
      }
      return _react.default.createElement("input", _objectSpread(_objectSpread({}, inputProps), {}, {
        ref: this.dateFormatInputRef,
        defaultValue: undefined,
        onFocus: this.onFocus,
        onBlur: this.onBlur,
        value: displayValue,
        onKeyDown: this.onKeyDown,
        onWheel: this.onWheel,
        onChange: this.onChange,
        className: className
      }));
    }
  }, {
    key: "focus",
    value: function focus() {
      this.dateFormatInputRef.current.focus();
    }
  }, {
    key: "onFocus",
    value: function onFocus(event) {
      if (this.props.onFocus) {
        this.props.onFocus(event);
      }
      this.setState({
        focused: true
      });
    }
  }, {
    key: "onBlur",
    value: function onBlur(event) {
      if (this.props.onBlur) {
        this.props.onBlur(event);
      }
      this.setState({
        focused: false
      });
    }
  }, {
    key: "isFocused",
    value: function isFocused() {
      return this.state.focused;
    }
  }, {
    key: "onChange",
    value: function onChange(event) {
      event.stopPropagation();
    }
  }, {
    key: "onDirection",
    value: function onDirection(dir) {
      var event = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      this.onKeyDown({
        key: dir > 0 ? 'ArrowUp' : 'ArrowDown',
        type: event.type || 'unknown',
        stopPropagation: typeof event.stopPropagation == 'function' ? function () {
          return event.stopPropagation();
        } : emptyFn,
        preventDefault: typeof event.preventDefault == 'function' ? function () {
          return event.preventDefault();
        } : emptyFn
      });
    }
  }, {
    key: "onWheel",
    value: function onWheel(event) {
      if (this.props.updateOnWheel && this.isFocused()) {
        this.onDirection(-event.deltaY, event);
      }
      if (this.props.onWheel) {
        this.props.onWheel(event);
      }
    }
  }, {
    key: "onKeyDown",
    value: function onKeyDown(event) {
      var _this2 = this;
      var props = this.props;
      var key = event.key,
        type = event.type,
        which = event.which;
      if (key !== 'Unidentified' && which && which >= 65 && which <= 90) {
        key = ' ';
      }
      if (key != ' ' && key * 1 == key) {
        key = 'Unidentified';
      }
      if (props.stopPropagation) {
        event.stopPropagation();
      }
      var range = this.getSelectedRange();
      var selectedValue = this.getSelectedValue(range);
      var value = this.displayValue;
      var _this$state = this.state,
        positions = _this$state.positions,
        matches = _this$state.matches;
      var valueStr = "".concat(value);
      var currentPosition = positions[range.start];
      if (typeof currentPosition == 'string') {
        currentPosition = positions[range.start + (key in BACKWARDS ? -1 : 1)];
      }
      if (!currentPosition) {
        currentPosition = positions[range.start - 1];
      }
      if (props.onKeyDown && type == 'keydown') {
        if (props.onKeyDown(event, currentPosition) === false) {
          this.caretPos = range;
          return;
        }
      }
      var keyName = key;
      if (key == 'ArrowUp' || key == 'ArrowDown') {
        keyName = 'Arrow';
      }
      var handlerName = "handle".concat(keyName);
      var preventDefault;
      var newValue;
      var newCaretPos;
      if (currentPosition && currentPosition[handlerName]) {
        var returnValue = currentPosition[handlerName](currentPosition, {
          range: range,
          selectedValue: selectedValue,
          value: value,
          positions: positions,
          currentValue: valueStr.substring(currentPosition.start, currentPosition.end + 1),
          matches: matches,
          event: event,
          key: key,
          input: this.getInput(),
          setCaretPosition: function setCaretPosition() {
            return _this2.setCaretPosition.apply(_this2, arguments);
          }
        });
        this.caretPos = range;
        if (returnValue && returnValue.value !== undefined) {
          newValue = valueStr.substring(0, currentPosition.start) + returnValue.value + valueStr.substring(currentPosition.end + 1);
          newCaretPos = returnValue.caretPos || range;
          if (newCaretPos === true) {
            newCaretPos = {
              start: currentPosition.start,
              end: currentPosition.end + 1
            };
          }
          preventDefault = returnValue.preventDefault !== false;
        }
      }
      if (preventDefault || key == 'Backspace' || key == 'Delete' || key == ' ') {
        if (!preventDefault) {
          this.setCaretPosition(this.caretPos = {
            start: range.start + (key == 'Backspace' ? -1 : 1)
          });
        }
        preventDefault = true;
      }
      var config = {
        currentPosition: currentPosition,
        preventDefault: preventDefault,
        event: event,
        value: newValue,
        stop: false
      };
      if (this.props.afterKeyDown && type == 'keydown') {
        this.props.afterKeyDown(config);
      }
      if (!config.stop && newCaretPos !== undefined) {
        var updateCaretPos = function updateCaretPos() {
          return _this2.setCaretPosition(newCaretPos);
        };
        this.caretPos = newCaretPos;
        this.setStateValue(newValue, updateCaretPos, {
          key: key,
          oldValue: valueStr,
          currentPosition: currentPosition
        });
      }
      if (config.preventDefault) {
        event.preventDefault();
      }
    }
  }, {
    key: "getInput",
    value: function getInput() {
      return this.dateFormatInputRef.current;
    }
  }, {
    key: "setCaretPosition",
    value: function setCaretPosition(pos) {
      var dom = this.getInput();
      if (dom) {
        (0, _TimeInput.setCaretPosition)(dom, pos);
      }
    }
  }, {
    key: "format",
    value: function format(mom) {
      var _format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.props.dateFormat;
      return mom.format(_format);
    }
  }, {
    key: "setStateValue",
    value: function setStateValue(value, callback, _ref) {
      var key = _ref.key,
        oldValue = _ref.oldValue,
        currentPosition = _ref.currentPosition;
      var dateMoment = this.toMoment(value);
      if (!dateMoment.isValid()) {
        var dir = key == 'ArrowUp' || key == 'PageUp' ? 1 : -1;
        if (currentPosition.format == 'MM') {
          dateMoment = this.toMoment(oldValue).add(dir, 'month');
        } else {
          dateMoment = dir > 0 ? this.toMoment(oldValue).date(1) : this.toMoment(oldValue).endOf('month');
        }
        if (!dateMoment.isValid()) {
          return;
        }
        value = this.format(dateMoment);
      }
      var _this$state2 = this.state,
        minDate = _this$state2.minDate,
        maxDate = _this$state2.maxDate;
      if (minDate && dateMoment.isBefore(minDate)) {
        var clone = this.toMoment(dateMoment);
        dateMoment = (0, _forwardTime.default)(clone, this.toMoment(minDate));
        if (dateMoment.isBefore(minDate)) {
          dateMoment = this.toMoment(minDate);
        }
        value = this.format(dateMoment);
      }
      if (maxDate && dateMoment.isAfter(maxDate)) {
        var _clone = this.toMoment(dateMoment);
        dateMoment = (0, _forwardTime.default)(_clone, this.toMoment(maxDate));
        if (dateMoment.isAfter(maxDate)) {
          dateMoment = this.toMoment(maxDate);
        }
        value = this.format(dateMoment);
      }
      this.setState({
        value: value,
        propsValue: false
      }, typeof callback == 'function' && callback);
      if (this.props.onChange) {
        this.throttleSetValue(value, dateMoment);
      }
    }
  }, {
    key: "setValue",
    value: function setValue(value, dateMoment) {
      if (this.props.value === undefined) {
        this.setState({
          value: value,
          propsValue: false
        });
      } else {
        this.setState({
          propsValue: true,
          value: undefined
        });
      }
      if (this.props.onChange) {
        this.props.onChange(value, {
          dateMoment: dateMoment || this.toMoment(value)
        });
      }
    }
  }, {
    key: "getSelectedRange",
    value: function getSelectedRange() {
      var dom = this.getInput();
      return {
        start: (0, _TimeInput.getSelectionStart)(dom),
        end: (0, _TimeInput.getSelectionEnd)(dom)
      };
    }
  }, {
    key: "getSelectedValue",
    value: function getSelectedValue(range) {
      range = range || this.getSelectedRange();
      var value = this.displayValue;
      return value.substring(range.start, range.end);
    }
  }]);
  return DateFormatInput;
}(_reactClass.default);
exports["default"] = DateFormatInput;
DateFormatInput.defaultProps = {
  rootClassName: 'inovua-react-toolkit-calendar__input',
  theme: 'default',
  isDateInput: true,
  stopPropagation: true,
  updateOnWheel: true,
  changeDelay: 100
};
DateFormatInput.propTypes = {
  isDateInput: _propTypes.default.bool,
  rootClassName: _propTypes.default.string,
  theme: _propTypes.default.string,
  stopPropagation: _propTypes.default.bool,
  updateOnWheel: _propTypes.default.bool,
  dateFormat: _propTypes.default.string.isRequired,
  value: function value(props, propName) {
    if (props[propName] !== undefined) {}
  }
};

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/DateFormatInput/parseFormat.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/DateFormatInput/parseFormat.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var _formats = _interopRequireDefault(__webpack_require__(/*! ./formats */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/DateFormatInput/formats.js"));
var SUGGESTIONS = {
  Y: ['YYYY', 'YY'],
  M: ['MM'],
  D: ['DD'],
  H: ['HH'],
  h: ['hh'],
  k: ['kk'],
  m: ['mm'],
  s: ['ss']
};
var _default = function _default(format) {
  var index = 0;
  var positionIndex = 0;
  var suggestions;
  var suggestionMatch;
  var positions = [];
  var matches = [];
  while (index < format.length) {
    var char = format[index];
    var match = _formats.default[char];
    var matchObject = void 0;
    suggestionMatch = null;
    suggestions = SUGGESTIONS[char];
    if (!match && !suggestions) {
      positions[positionIndex] = char;
      matches.push(char);
    } else {
      if (suggestions && suggestions.length) {
        suggestionMatch = suggestions.filter(function (s) {
          return format.substr(index, s.length) == s;
        })[0];
      }
      if (!suggestionMatch) {
        if (!_formats.default[char]) {
          console.warn("Format ".concat(char, " is not supported yet!"));
          if (suggestions) {
            console.warn("Use one of [\"".concat(suggestions.join(','), "\"]"));
          }
          positions[positionIndex] = char;
          matches.push(char);
        } else {
          var currentFormat = _formats.default[char];
          var start = positionIndex;
          var end = positionIndex + (currentFormat.length || 1) - 1;
          matchObject = (0, _assign.default)({}, currentFormat, {
            format: char,
            start: start,
            end: end
          });
          for (; start <= end; start++) {
            positions[positionIndex] = matchObject;
            positionIndex++;
          }
          index++;
          matches.push(matchObject);
          continue;
        }
      } else {
        matchObject = (0, _assign.default)({}, _formats.default[suggestionMatch], {
          format: suggestionMatch,
          start: positionIndex
        });
        matches.push(matchObject);
        var endIndex = positionIndex + suggestionMatch.length;
        matchObject.end = endIndex - 1;
        while (positionIndex < endIndex) {
          positions[positionIndex] = matchObject;
          positionIndex++;
          index++;
        }
        continue;
      }
    }
    positionIndex++;
    index++;
  }
  return {
    positions: positions,
    matches: matches
  };
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/DateFormatSpinnerInput/index.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/DateFormatSpinnerInput/index.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _reactClass = _interopRequireDefault(__webpack_require__(/*! ../../../react-class */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/index.js"));
var _Flex = __webpack_require__(/*! ../../../Flex */ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/index.js");
var _DateFormatInput = _interopRequireDefault(__webpack_require__(/*! ../DateFormatInput */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/DateFormatInput/index.js"));
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var _joinFunctions = _interopRequireDefault(__webpack_require__(/*! ../joinFunctions */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/joinFunctions.js"));
var _assignDefined = _interopRequireDefault(__webpack_require__(/*! ../assignDefined */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/assignDefined.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _getGlobal = __webpack_require__(/*! ../../../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var globalObject = (0, _getGlobal.getGlobal)();
var DateFormatSpinnerInput = function (_Component) {
  (0, _inherits2.default)(DateFormatSpinnerInput, _Component);
  var _super = _createSuper(DateFormatSpinnerInput);
  function DateFormatSpinnerInput(props) {
    var _this;
    (0, _classCallCheck2.default)(this, DateFormatSpinnerInput);
    _this = _super.call(this, props);
    _this.state = {
      focused: false
    };
    _this.input = (0, _react.createRef)();
    return _this;
  }
  (0, _createClass2.default)(DateFormatSpinnerInput, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.started = true;
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.started = false;
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.props;
      var rootClassName = props.rootClassName;
      var children = _react.default.Children.toArray(props.children);
      var input = this.inputChild = children.filter(function (c) {
        return c && c.type == 'input';
      })[0];
      var inputProps = input ? (0, _assign.default)({}, input.props) : {};
      var onKeyDown = (0, _joinFunctions.default)(props.onKeyDown, inputProps.onKeyDown);
      var onChange = (0, _joinFunctions.default)(props.onChange, inputProps.onChange);
      var disabled = props.disabled || inputProps.disabled;
      (0, _assignDefined.default)(inputProps, {
        size: props.size || inputProps.size,
        minDate: props.minDate || inputProps.minDate,
        maxDate: props.maxDate || inputProps.maxDate,
        changeDelay: props.changeDelay === undefined ? inputProps.changeDelay : props.changeDelay,
        tabIndex: props.tabIndex,
        onKeyDown: onKeyDown,
        onChange: onChange,
        disabled: disabled,
        dateFormat: props.dateFormat === undefined ? inputProps.dateFormat : props.dateFormat,
        stopPropagation: props.stopPropagation,
        updateOnWheel: props.updateOnWheel,
        onBlur: this.onBlur,
        onFocus: this.onFocus
      });
      this.inputProps = inputProps;
      var arrowSize = this.props.arrowSize;
      this.arrows = {
        1: _react.default.createElement("svg", {
          height: arrowSize / 2,
          width: arrowSize,
          viewBox: "0 0 10 5"
        }, _react.default.createElement("path", {
          fillRule: "evenodd",
          d: "M5.262.262l4.106 4.106c.144.144.144.379 0 .524-.07.069-.164.108-.262.108H.894c-.204 0-.37-.166-.37-.37 0-.099.039-.193.108-.262L4.738.262c.145-.145.38-.145.524 0z"
        })),
        '-1': _react.default.createElement("svg", {
          height: arrowSize / 2,
          width: arrowSize,
          viewBox: "0 0 10 5"
        }, _react.default.createElement("path", {
          fillRule: "evenodd",
          d: "M4.738 4.738L.632.632C.488.488.488.253.632.108.702.04.796 0 .894 0h8.212c.204 0 .37.166.37.37 0 .099-.039.193-.108.262L5.262 4.738c-.145.145-.38.145-.524 0z"
        }))
      };
      var className = (0, _join.default)(props.className, rootClassName, this.state.focused ? "".concat(rootClassName, "-spinner--focused") : "".concat(rootClassName, "-spinner"), disabled && "".concat(rootClassName, "--disabled"), this.isFocused() && "".concat(rootClassName, "--focused"), "".concat(rootClassName, "--theme-").concat(props.theme));
      return _react.default.createElement(_Flex.Flex, {
        inline: true,
        row: true,
        className: className,
        disabled: props.disabled
      }, _react.default.createElement(_DateFormatInput.default, _objectSpread({
        ref: this.input,
        theme: props.theme,
        value: props.value
      }, inputProps)), this.renderArrows());
    }
  }, {
    key: "renderArrows",
    value: function renderArrows() {
      if (this.props.renderArrows) {
        return this.props.renderArrows(this.props);
      }
      return _react.default.createElement("div", {
        className: "".concat(this.props.rootClassName, "-spinner-arrow-wrapper")
      }, this.renderArrow(1), this.renderArrow(-1));
    }
  }, {
    key: "renderArrow",
    value: function renderArrow(dir) {
      var rootClassName = this.props.rootClassName;
      var direction = dir === 1 ? 'up' : 'down';
      var className = (0, _join.default)("".concat(rootClassName, "-spinner-arrow"), "".concat(rootClassName, "-spinner-arrow--").concat(direction));
      return _react.default.createElement("div", {
        className: className,
        onMouseDown: this.onMouseDown.bind(this, dir),
        onMouseUp: this.stop,
        onMouseLeave: this.stop
      }, this.arrows[dir]);
    }
  }, {
    key: "onMouseDown",
    value: function onMouseDown(dir, event) {
      var _this2 = this;
      if (this.props.disabled) {
        event.preventDefault();
        return;
      }
      event.preventDefault();
      if (this.isFocused()) {
        this.start(dir);
      } else {
        this.focus();
        setTimeout(function () {
          _this2.increment(dir);
        }, 1);
      }
    }
  }, {
    key: "start",
    value: function start(dir) {
      var _this3 = this;
      this.started = true;
      this.startTime = Date.now();
      this.step(dir);
      this.timeoutId = setTimeout(function () {
        _this3.step(dir);
        _this3.timeoutId = setTimeout(function () {
          var lazyStep = function lazyStep() {
            var delay = _this3.props.stepDelay - (Date.now() - _this3.startTime) / 500;
            _this3.step(dir, lazyStep, delay);
          };
          lazyStep();
        }, _this3.props.secondStepDelay);
      }, this.props.firstStepDelay);
    }
  }, {
    key: "isStarted",
    value: function isStarted() {
      return !!(this.started && this.input);
    }
  }, {
    key: "increment",
    value: function increment(dir) {
      if (this.input && this.input.current) {
        this.input.current.onDirection(dir);
      }
    }
  }, {
    key: "step",
    value: function step(dir, callback, delay) {
      var _this4 = this;
      if (this.isStarted()) {
        this.increment(dir);
        if (typeof callback == 'function') {
          this.timeoutId = setTimeout(function () {
            if (_this4.isStarted()) {
              callback();
            }
          }, delay === undefined ? this.props.stepDelay : delay);
        }
      }
    }
  }, {
    key: "stop",
    value: function stop() {
      this.started = false;
      if (this.timeoutId) {
        globalObject.clearTimeout(this.timeoutId);
      }
    }
  }, {
    key: "focus",
    value: function focus() {
      if (this.input && this.input.current) {
        this.input.current.focus();
      }
    }
  }, {
    key: "isFocused",
    value: function isFocused() {
      return this.state.focused;
    }
  }, {
    key: "onBlur",
    value: function onBlur(event) {
      var props = this.props;
      var onBlur = (0, _joinFunctions.default)(props.onBlur, this.inputChild && this.inputChild.props && this.inputChild.props.onBlur);
      if (onBlur) {
        onBlur(event);
      }
      this.setState({
        focused: false
      });
    }
  }, {
    key: "onFocus",
    value: function onFocus(event) {
      var props = this.props;
      var onFocus = (0, _joinFunctions.default)(props.onFocus, this.inputChild && this.inputChild.props && this.inputChild.props.onFocus);
      if (onFocus) {
        onFocus(event);
      }
      this.setState({
        focused: true
      });
    }
  }]);
  return DateFormatSpinnerInput;
}(_reactClass.default);
exports["default"] = DateFormatSpinnerInput;
DateFormatSpinnerInput.defaultProps = {
  rootClassName: 'inovua-react-toolkit-calendar__date-format-spinner',
  firstStepDelay: 150,
  secondStepDelay: 100,
  stepDelay: 50,
  changeDelay: undefined,
  theme: 'default',
  disabled: false,
  arrowSize: 10,
  isDateInput: true,
  stopPropagation: true,
  updateOnWheel: true
};
DateFormatSpinnerInput.propTypes = {
  rootClassName: _propTypes.default.string,
  firstStepDelay: _propTypes.default.number,
  secondStepDelay: _propTypes.default.number,
  stepDelay: _propTypes.default.number,
  changeDelay: _propTypes.default.number,
  theme: _propTypes.default.string,
  disabled: _propTypes.default.bool,
  arrowSize: _propTypes.default.number,
  isDateInput: _propTypes.default.bool,
  stopPropagation: _propTypes.default.bool,
  updateOnWheel: _propTypes.default.bool
};

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/DateInput/icons.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/DateInput/icons.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CLEAR_ICON = exports.CALENDAR_ICON = void 0;
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var CLEAR_ICON = _react.default.createElement("svg", {
  height: "10",
  width: "10",
  viewBox: "4 4 16 16"
}, _react.default.createElement("path", {
  d: "M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"
}));
exports.CLEAR_ICON = CLEAR_ICON;
var CALENDAR_ICON = _react.default.createElement("svg", {
  width: "16",
  height: "16",
  viewBox: "0 0 16 16"
}, _react.default.createElement("g", {
  fillRule: "evenodd"
}, _react.default.createElement("path", {
  fillRule: "nonzero",
  d: "M8.304 13.527H6.17l2.327-4.72H5.538V7.384h4.914v.95l-2.148 5.192zM4.308 3.077c-.34 0-.616-.276-.616-.615V.615c0-.339.277-.615.616-.615.339 0 .615.276.615.615v1.847c0 .339-.276.615-.615.615z"
}), _react.default.createElement("path", {
  fillRule: "nonzero",
  d: "M14.154 1.23h-1.23v1.232c0 .679-.552 1.23-1.232 1.23-.68 0-1.23-.551-1.23-1.23V1.23H5.538v1.23c0 .68-.55 1.231-1.23 1.231-.68 0-1.231-.551-1.231-1.23V1.23h-1.23C.826 1.23 0 2.058 0 3.077v11.077C0 15.173.827 16 1.846 16h12.308C15.173 16 16 15.173 16 14.154V3.077c0-1.02-.827-1.846-1.846-1.846zm.615 12.924c0 .339-.276.615-.615.615H1.846c-.339 0-.615-.276-.615-.615V5.538h13.538v8.616z"
}), _react.default.createElement("path", {
  d: "M11.692 3.077c-.339 0-.615-.276-.615-.615V.615c0-.339.276-.615.615-.615.34 0 .616.276.616.615v1.847c0 .339-.277.615-.616.615z"
})));
exports.CALENDAR_ICON = CALENDAR_ICON;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/DateInput/index.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/DateInput/index.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _moment = _interopRequireDefault(__webpack_require__(/*! moment */ "./node_modules/moment/moment.js"));
var _reactClass = _interopRequireDefault(__webpack_require__(/*! ../../../react-class */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/index.js"));
var _Flex = __webpack_require__(/*! ../../../Flex */ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/index.js");
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var _Field = _interopRequireDefault(__webpack_require__(/*! ../../../Field */ "./node_modules/@inovua/reactdatagrid-community/packages/Field/index.js"));
var _DateFormatInput = _interopRequireDefault(__webpack_require__(/*! ../DateFormatInput */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/DateFormatInput/index.js"));
var _InlineBlock = _interopRequireDefault(__webpack_require__(/*! ../InlineBlock */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/InlineBlock/index.js"));
var _Overlay = _interopRequireDefault(__webpack_require__(/*! ../../../Overlay */ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/index.js"));
var _icons = __webpack_require__(/*! ./icons */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/DateInput/icons.js");
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _toMoment2 = _interopRequireDefault(__webpack_require__(/*! ../toMoment */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/toMoment.js"));
var _Calendar = _interopRequireWildcard(__webpack_require__(/*! ../Calendar */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/Calendar.js"));
var _joinFunctions = _interopRequireDefault(__webpack_require__(/*! ../joinFunctions */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/joinFunctions.js"));
var _assignDefined = _interopRequireDefault(__webpack_require__(/*! ../assignDefined */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/assignDefined.js"));
var _forwardTime = _interopRequireDefault(__webpack_require__(/*! ../utils/forwardTime */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/forwardTime.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var POSITIONS = {
  top: 'top',
  bottom: 'bottom'
};
var defaultOverlayProps = {
  updatePositionOnScroll: true,
  rootClassName: 'inovua-react-toolkit-date-input__overlay',
  positions: ['tl-bl', 'bl-tl'],
  offset: 2,
  theme: null,
  visible: true
};
var getPicker = function getPicker(props) {
  var calendarProps = props.calendarProps;
  return _react.default.Children.toArray(props.children).filter(function (c) {
    return c && c.props && c.props.isDatePicker;
  })[0] || _react.default.createElement(_Calendar.default, _objectSpread({}, calendarProps));
};
var FIND_INPUT = function FIND_INPUT(c) {
  return c && (c.type === 'input' || c.props && c.isDateInput);
};
var preventDefault = function preventDefault(event) {
  event.preventDefault();
};
var DateInput = function (_Component) {
  (0, _inherits2.default)(DateInput, _Component);
  var _super = _createSuper(DateInput);
  function DateInput(props) {
    var _this;
    (0, _classCallCheck2.default)(this, DateInput);
    _this = _super.call(this, props);
    _this.state = {
      viewDate: props.viewDate || props.defaultViewDate,
      value: props.defaultValue === undefined ? '' : props.defaultValue,
      expanded: props.defaultExpanded || false,
      focused: false
    };
    return _this;
  }
  (0, _createClass2.default)(DateInput, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.unmounted = false;
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.unmounted = true;
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.prepareProps(this.props);
      var flexProps = (0, _assign.default)({}, props);
      delete flexProps.activeDate;
      delete flexProps.rootClassName;
      delete flexProps.cleanup;
      delete flexProps.clearIcon;
      delete flexProps.cancelButton;
      delete flexProps.collapseOnDateClick;
      delete flexProps.date;
      delete flexProps.dateFormat;
      delete flexProps.displayFormat;
      delete flexProps.expanded;
      delete flexProps.defaultExpanded;
      delete flexProps.expandOnFocus;
      delete flexProps.footer;
      delete flexProps.forceValidDate;
      delete flexProps.locale;
      delete flexProps.onExpand;
      delete flexProps.onExpandChange;
      delete flexProps.onCollapse;
      delete flexProps.minDate;
      delete flexProps.maxDate;
      delete flexProps.pickerProps;
      delete flexProps.position;
      delete flexProps.showClock;
      delete flexProps.skipTodayTime;
      delete flexProps.strict;
      delete flexProps.valid;
      delete flexProps.validateOnBlur;
      delete flexProps.viewDate;
      delete flexProps.value;
      delete flexProps.text;
      delete flexProps.theme;
      delete flexProps.updateOnDateClick;
      delete flexProps.defaultViewDate;
      delete flexProps.onViewDateChange;
      delete flexProps.onActiveDateChange;
      delete flexProps.renderInput;
      delete flexProps.renderClearIcon;
      delete flexProps.renderCalendarIcon;
      delete flexProps.renderPicker;
      delete flexProps.overlayProps;
      delete flexProps.relativeToViewport;
      delete flexProps.enableMonthDecadeViewAnimation;
      delete flexProps.showMonthDecadeViewAnimation;
      delete flexProps.updateOnWheel;
      delete flexProps.onTextChange;
      delete flexProps.focusedClassName;
      delete flexProps.expandedClassName;
      delete flexProps.invalidClassName;
      delete flexProps.onTimeChange;
      delete flexProps.okButton;
      delete flexProps.constrainTo;
      delete flexProps.defaultDate;
      delete flexProps.weekNumbers;
      delete flexProps.highlightWeekends;
      delete flexProps.calendarProps;
      delete flexProps.cancelButtonText;
      delete flexProps.clearButtonText;
      delete flexProps.okButtonText;
      delete flexProps.todayButtonText;
      delete flexProps.rtl;
      delete flexProps.pickerPosition;
      delete flexProps.onLazyBlur;
      if (typeof props.cleanup == 'function') {
        props.cleanup(flexProps);
      }
      return _react.default.createElement(_Flex.Flex, _objectSpread(_objectSpread({
        inline: true,
        row: true,
        wrap: false
      }, flexProps), {}, {
        onClick: this.handleClick
      }), this.renderInput(), this.renderClearIcon(), this.renderCalendarIcon(), this.renderPicker());
    }
  }, {
    key: "handleClick",
    value: function handleClick(event) {
      if (this.props.onClick) {
        this.props.onClick(event);
      }
      if (!this.isLazyFocused()) {
        this.focus();
      }
    }
  }, {
    key: "renderInput",
    value: function renderInput() {
      var props = this.p;
      var inputProps = this.prepareInputProps(props);
      var input;
      if (props.renderInput) {
        input = props.renderInput(inputProps);
      }
      if (input === undefined) {
        input = props.children.filter(FIND_INPUT)[0];
        var FieldInput = props.forceValidDate ? _DateFormatInput.default : _Field.default;
        var propsForInput = (0, _assign.default)({}, inputProps);
        if (!props.forceValidDate) {
          delete propsForInput.date;
          delete propsForInput.maxDate;
          delete propsForInput.minDate;
          delete propsForInput.dateFormat;
        }
        input = input ? _react.default.cloneElement(input, propsForInput) : _react.default.createElement(FieldInput, _objectSpread({}, propsForInput));
      }
      return input;
    }
  }, {
    key: "renderClearIcon",
    value: function renderClearIcon() {
      var props = this.p;
      var rootClassName = props.rootClassName,
        disabled = props.disabled,
        text = props.text;
      if (!props.clearIcon || props.forceValidDate) {
        return undefined;
      }
      var clearIcon = props.clearIcon === true ? _icons.CLEAR_ICON : props.clearIcon;
      var clearIconProps = {
        className: (0, _join.default)("".concat(rootClassName, "__clear-icon"), text === '' || text == null ? "".concat(rootClassName, "__clear-icon--hidden") : "".concat(rootClassName, "__clear-icon--animation"), disabled && "".concat(rootClassName, "__clear-icon--disabled")),
        onMouseDown: preventDefault,
        onClick: this.onClearClick,
        children: clearIcon
      };
      var result;
      if (props.renderClearIcon) {
        result = props.renderClearIcon(clearIconProps);
      }
      if (result === undefined) {
        result = _react.default.createElement(_InlineBlock.default, _objectSpread({}, clearIconProps));
      }
      return result;
    }
  }, {
    key: "onClearClick",
    value: function onClearClick(event) {
      this.onFieldChange('');
      if (!this.isFocused()) {
        this.focus();
      }
    }
  }, {
    key: "renderCalendarIcon",
    value: function renderCalendarIcon() {
      var result;
      var renderIcon = this.props.renderCalendarIcon;
      var _this$props = this.props,
        rootClassName = _this$props.rootClassName,
        disabled = _this$props.disabled;
      var calendarIconProps = {
        className: (0, _join.default)("".concat(rootClassName, "__calendar-icon"), disabled ? "".concat(rootClassName, "__calendar-icon--disabled") : ''),
        onMouseDown: this.onCalendarIconMouseDown
      };
      if (renderIcon) {
        result = renderIcon(calendarIconProps);
      }
      if (result === undefined) {
        result = _react.default.createElement("div", _objectSpread({}, calendarIconProps), _icons.CALENDAR_ICON);
      }
      return result;
    }
  }, {
    key: "onCalendarIconMouseDown",
    value: function onCalendarIconMouseDown(event) {
      if (this.props.disabled) {
        return;
      }
      event.preventDefault();
      this.toggleExpand();
    }
  }, {
    key: "prepareExpanded",
    value: function prepareExpanded(props) {
      return props.expanded === undefined ? this.state.expanded : props.expanded;
    }
  }, {
    key: "prepareDate",
    value: function prepareDate(props, pickerProps) {
      props = props || this.p;
      pickerProps = pickerProps || props.pickerProps;
      var locale = props.locale || pickerProps.locale;
      var dateFormat = props.dateFormat === undefined ? pickerProps.dateFormat : props.dateFormat;
      var value = props.value === undefined ? this.state.value : props.value;
      var date = this.toMoment(value);
      var valid = date.isValid();
      if (value && typeof value != 'string' && valid) {
        value = this.format(date);
      }
      if (date && valid) {
        this.lastValidDate = date;
      } else {
        value = this.state.value;
      }
      var viewDate = this.props.viewDate || this.state.viewDate || this.lastValidDate || new Date();
      var activeDate = this.state.activeDate || this.lastValidDate || new Date();
      return {
        viewDate: viewDate,
        activeDate: activeDate,
        dateFormat: dateFormat,
        locale: locale,
        valid: valid,
        date: date,
        value: value
      };
    }
  }, {
    key: "preparePickerProps",
    value: function preparePickerProps(props) {
      var picker = getPicker(props, this);
      if (!picker) {
        return null;
      }
      return picker.props || {};
    }
  }, {
    key: "prepareProps",
    value: function prepareProps(thisProps) {
      var props = this.p = (0, _assign.default)({}, thisProps);
      props.children = _react.default.Children.toArray(props.children);
      props.expanded = this.prepareExpanded(props);
      props.pickerProps = this.preparePickerProps(props);
      var input = props.children.filter(FIND_INPUT)[0];
      if (input && input.type === 'input') {
        props.rawInput = true;
        props.forceValidDate = false;
      }
      var dateInfo = this.prepareDate(props, props.pickerProps);
      (0, _assign.default)(props, dateInfo);
      if (props.text === undefined) {
        props.text = this.state.text;
        if (!props.text) {
          props.text = props.valid && props.date ? props.value : this.props.value != null ? this.props.value : this.state.text || '';
        }
      }
      if (props.text === undefined) {
        props.text = '';
      }
      props.className = this.prepareClassName(props);
      if (props.calendarProps) {
        props.cancelButtonText = props.calendarProps.cancelButtonText;
        props.clearButtonText = props.calendarProps.clearButtonText;
        props.okButtonText = props.calendarProps.okButtonText;
        props.todayButtonText = props.calendarProps.todayButtonText;
      }
      return props;
    }
  }, {
    key: "prepareClassName",
    value: function prepareClassName(props) {
      var rootClassName = props.rootClassName;
      var position = POSITIONS[props.pickerProps.position || props.pickerPosition] || 'bottom';
      return (0, _join.default)([rootClassName, props.className, props.disabled && "".concat(rootClassName, "--disabled"), props.theme && "".concat(rootClassName, "--theme-").concat(props.theme), props.rtl ? "".concat(rootClassName, "--rtl") : "".concat(rootClassName, "--ltr"), "".concat(rootClassName, "--picker-position-").concat(position), this.isLazyFocused() && (0, _join.default)("".concat(rootClassName, "--focused"), props.focusedClassName), this.isExpanded() && (0, _join.default)("".concat(rootClassName, "--expanded"), props.expandedClassName), !props.valid && (0, _join.default)(props.invalidClassName, "".concat(rootClassName, "--invalid"))]);
    }
  }, {
    key: "prepareInputProps",
    value: function prepareInputProps(props) {
      var _this2 = this;
      var input = props.children.filter(FIND_INPUT)[0];
      var inputProps = input && input.props || {};
      var rootClassName = this.props.rootClassName;
      var onBlur = (0, _joinFunctions.default)(inputProps.onBlur, this.onFieldBlur);
      var onFocus = (0, _joinFunctions.default)(inputProps.onFocus, this.onFieldFocus);
      var onChange = (0, _joinFunctions.default)(inputProps.onChange, this.onFieldChange);
      var onKeyDown = (0, _joinFunctions.default)(inputProps.onKeyDown, this.onFieldKeyDown);
      var newInputProps = (0, _assign.default)({}, inputProps, {
        ref: function ref(f) {
          _this2.field = f;
        },
        date: props.date,
        onFocus: onFocus,
        onBlur: onBlur,
        onChange: onChange,
        dateFormat: props.dateFormat,
        value: props.text || '',
        onKeyDown: onKeyDown,
        placeholder: props.placeholder,
        className: (0, _join.default)("".concat(rootClassName, "__input"), inputProps.className)
      });
      (0, _assignDefined.default)(newInputProps, {
        placeholder: props.placeholder,
        autoFocus: props.autoFocus,
        disabled: props.disabled,
        minDate: props.minDate,
        maxDate: props.maxDate
      });
      return newInputProps;
    }
  }, {
    key: "renderPicker",
    value: function renderPicker() {
      var _this3 = this;
      var props = this.p;
      var renderPicker = this.props.renderPicker;
      if (this.isExpanded()) {
        var newExpand = !this.picker;
        var picker = getPicker(props, this);
        var pickerProps = props.pickerProps;
        var onMouseDown = (0, _joinFunctions.default)(pickerProps.onMouseDown, this.onPickerMouseDown);
        var onChange = (0, _joinFunctions.default)(pickerProps.onChange, this.onPickerChange);
        var date = props.valid && props.date;
        var footer = pickerProps.footer !== undefined ? pickerProps.footer : props.footer;
        var viewDate = props.viewDate || this.state.viewDate || props.defaultViewDate;
        var activeDate = newExpand && date ? date : props.activeDate;
        var pickerElement = _react.default.cloneElement(picker, (0, _assignDefined.default)({
          ref: function ref(p) {
            _this3.picker = _this3.pickerView = p;
            if (p) {
              var pickerView = p.getView ? p.getView() : p.view;
              if (pickerView) {
                _this3.pickerView = pickerView;
              }
            }
            if (!_this3.state.viewDate) {
              _this3.setViewDate(props.viewDate);
            }
          },
          footer: footer,
          okButton: props.okButton,
          okButtonText: props.okButtonText,
          cancelButton: props.cancelButton,
          weekNumbers: props.weekNumbers,
          highlightWeekends: props.highlightWeekends,
          enableMonthDecadeViewAnimation: props.enableMonthDecadeViewAnimation,
          showMonthDecadeViewAnimation: props.showMonthDecadeViewAnimation,
          focusOnNavMouseDown: false,
          focusOnFooterMouseDown: false,
          insideField: true,
          showClock: props.showClock,
          getTransitionTime: this.getTime,
          updateOnWheel: props.updateOnWheel,
          onClockInputBlur: this.onClockInputBlur,
          onClockEnterKey: this.onClockEnterKey,
          onClockEscapeKey: this.onClockEscapeKey,
          footerClearDate: props.clearDate || props.minDate,
          onFooterCancelClick: this.onFooterCancelClick,
          onFooterTodayClick: this.onFooterTodayClick,
          onFooterOkClick: this.onFooterOkClick,
          onFooterClearClick: this.onFooterClearClick,
          dateFormat: props.dateFormat,
          theme: props.theme || pickerProps.theme,
          arrows: props.navBarArrows,
          className: (0, _join.default)(pickerProps.className, "".concat(this.props.rootClassName, "__picker")),
          date: date || null,
          tabIndex: -1,
          viewDate: viewDate,
          activeDate: activeDate,
          locale: props.locale,
          triggerChangeOnTimeChange: this.props.triggerChangeOnTimeChange === undefined ? false : this.props.triggerChangeOnTimeChange,
          onViewDateChange: (0, _joinFunctions.default)(pickerProps.onViewDateChange, this.onViewDateChange),
          onActiveDateChange: (0, _joinFunctions.default)(pickerProps.onActiveDateChange, this.onActiveDateChange),
          onTimeChange: this.onTimeChange,
          onTransitionStart: this.onTransitionStart,
          onMouseDown: onMouseDown,
          onChange: onChange
        }, {
          minDate: props.minDate,
          maxDate: props.maxDate
        }));
        var result = pickerElement;
        if (props.relativeToViewport) {
          result = _react.default.createElement(_Overlay.default, _objectSpread(_objectSpread(_objectSpread({}, defaultOverlayProps), props.overlayProps), {}, {
            constrainTo: props.constrainTo
          }), pickerElement);
        }
        if (renderPicker) {
          var renderPickerResult = renderPicker(result, pickerElement);
          if (renderPickerResult !== undefined) {
            return renderPickerResult;
          }
        }
        return result;
      }
      this.time = null;
      if (renderPicker) {
        return renderPicker(null);
      }
      return null;
    }
  }, {
    key: "getValue",
    value: function getValue() {
      return this.state.value || this.props.value;
    }
  }, {
    key: "onTimeChange",
    value: function onTimeChange(value, timeFormat) {
      var timeMoment = this.toMoment(value, {
        dateFormat: timeFormat
      });
      var time = ['hour', 'minute', 'second', 'millisecond'].reduce(function (acc, part) {
        acc[part] = timeMoment.get(part);
        return acc;
      }, {});
      this.time = time;
    }
  }, {
    key: "getTime",
    value: function getTime() {
      return this.time;
    }
  }, {
    key: "setValue",
    value: function setValue(value) {
      var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var dateMoment = this.toMoment(value);
      var dateString = this.format(dateMoment);
      this.setDate(dateString, (0, _assign.default)(config, {
        dateMoment: dateMoment
      }));
    }
  }, {
    key: "onFooterOkClick",
    value: function onFooterOkClick() {
      var activeDate = this.p.activeDate;
      if (activeDate) {
        var date = this.toMoment(activeDate);
        (0, _forwardTime.default)(this.time, date);
        this.setValue(date, {
          skipTime: !!this.time
        });
      }
      this.setExpanded(false);
    }
  }, {
    key: "onFooterCancelClick",
    value: function onFooterCancelClick() {
      this.setExpanded(false);
    }
  }, {
    key: "onFooterTodayClick",
    value: function onFooterTodayClick() {
      var today = this.toMoment(new Date()).startOf('day');
      this.onPickerChange(this.format(today), {
        dateMoment: today
      });
      if (this.pickerView && this.pickerView.gotoViewDate) {
        this.pickerView.gotoViewDate({
          dateMoment: today
        });
      }
      return false;
    }
  }, {
    key: "onFooterClearClick",
    value: function onFooterClearClick() {
      var clearDate = this.props.clearDate === undefined ? this.props.minDate : this.props.clearDate;
      if (clearDate !== undefined) {
        this.setValue(clearDate, {
          skipTime: true
        });
      }
      this.setExpanded(false);
      return false;
    }
  }, {
    key: "toMoment",
    value: function toMoment(value, props) {
      if (_moment.default.isMoment(value)) {
        return value;
      }
      props = props || this.p;
      var dateFormat = props.displayFormat;
      if (dateFormat === undefined) {
        dateFormat = props.dateFormat;
      }
      if (dateFormat === undefined) {
        dateFormat = this.p.dateFormat;
      }
      var date = (0, _toMoment2.default)(value, {
        strict: props.strict,
        locale: props.locale,
        dateFormat: dateFormat
      });
      if (!date.isValid() && props.displayFormat) {
        date = (0, _toMoment2.default)(value, {
          strict: props.strict,
          locale: props.locale,
          dateFormat: props.dateFormat === undefined ? this.p.dateFormat : props.dateFormat
        });
      }
      return date;
    }
  }, {
    key: "isValid",
    value: function isValid(text) {
      if (text === undefined) {
        text = this.p.text;
      }
      return this.toMoment(text).isValid();
    }
  }, {
    key: "onViewDateChange",
    value: function onViewDateChange(viewDate) {
      this.setState({
        viewDate: viewDate
      });
      if (this.props.onViewDateChange) {
        this.props.onViewDateChange.apply(this, arguments);
      }
    }
  }, {
    key: "setViewDate",
    value: function setViewDate(viewDate) {
      if (this.pickerView) {
        this.pickerView.gotoViewDate({
          dateMoment: this.toMoment(viewDate)
        });
      }
    }
  }, {
    key: "onActiveDateChange",
    value: function onActiveDateChange(activeDate) {
      this.setState({
        activeDate: activeDate
      });
      if (this.props.onActiveDateChange) {
        this.props.onActiveDateChange.apply(this, arguments);
      }
    }
  }, {
    key: "onViewKeyDown",
    value: function onViewKeyDown(event) {
      var key = event.key;
      if (this.pickerView) {
        this.onPickerViewKeyDown(event);
      }
    }
  }, {
    key: "onPickerViewKeyDown",
    value: function onPickerViewKeyDown(event) {
      this.pickerView.onViewKeyDown(event);
    }
  }, {
    key: "onPickerMouseDown",
    value: function onPickerMouseDown(event) {
      preventDefault(event);
      if (!this.isFocused()) {
        this.focus();
      }
    }
  }, {
    key: "isMonthDecadeViewVisible",
    value: function isMonthDecadeViewVisible() {
      if (this.picker && this.picker.isMonthDecadeViewVisible) {
        return this.picker.isMonthDecadeViewVisible();
      }
      return false;
    }
  }, {
    key: "onFieldKeyDown",
    value: function onFieldKeyDown(event) {
      var key = event.key;
      var expanded = this.isExpanded();
      var monthDecadeVisible = this.isMonthDecadeViewVisible();
      if (key == 'Enter' && !monthDecadeVisible) {
        this.onViewKeyDown(event);
        this.toggleExpand();
        return false;
      }
      if (monthDecadeVisible && (key == 'Escape' || key == 'Enter')) {
        this.onViewKeyDown(event);
        return false;
      }
      if (key == 'Escape') {
        if (expanded) {
          this.setExpanded(false);
          return false;
        }
      }
      if (expanded) {
        if (key in _Calendar.NAV_KEYS) {
          this.onViewKeyDown(event);
          return false;
        }
      }
      return true;
    }
  }, {
    key: "getInput",
    value: function getInput() {
      return this.field;
    }
  }, {
    key: "isFocused",
    value: function isFocused() {
      return this.state.focused;
    }
  }, {
    key: "isLazyFocused",
    value: function isLazyFocused() {
      return this.isFocused() || this.isTimeInputFocused();
    }
  }, {
    key: "isTimeInputFocused",
    value: function isTimeInputFocused() {
      if (this.picker && this.picker.isTimeInputFocused) {
        return this.picker.isTimeInputFocused();
      }
      return false;
    }
  }, {
    key: "onFieldFocus",
    value: function onFieldFocus(event) {
      if (this.state.focused) {
        return;
      }
      this.setState({
        focused: true
      });
      if (this.props.expandOnFocus) {
        this.setExpanded(true);
      }
      this.props.onFocus(event);
    }
  }, {
    key: "onFieldBlur",
    value: function onFieldBlur(event) {
      var _this4 = this;
      if (!this.isFocused()) {
        return;
      }
      this.setState({
        focused: false
      });
      this.props.onBlur(event);
      if (!this.picker || !this.picker.isTimeInputFocused) {
        this.onLazyBlur();
        return;
      }
      setTimeout(function () {
        return _this4.onLazyBlur();
      }, 0);
    }
  }, {
    key: "onClockEnterKey",
    value: function onClockEnterKey() {
      if (!this.isFocused()) {
        this.focus();
      }
      this.onFooterOkClick();
    }
  }, {
    key: "onClockEscapeKey",
    value: function onClockEscapeKey() {
      if (!this.isFocused()) {
        this.focus();
      }
      this.onFooterCancelClick();
    }
  }, {
    key: "onClockInputBlur",
    value: function onClockInputBlur() {
      var _this5 = this;
      setTimeout(function () {
        if (!_this5.isFocused()) {
          _this5.onLazyBlur();
        }
      }, 0);
    }
  }, {
    key: "onLazyBlur",
    value: function onLazyBlur() {
      var _this6 = this;
      if (this.unmounted) {
        return;
      }
      if (this.isTimeInputFocused()) {
        return;
      }
      this.setExpanded(false);
      if (this.props.onLazyBlur) {
        this.props.onLazyBlur();
      }
      if (!this.isValid() && this.props.validateOnBlur) {
        var value = this.lastValidDate && this.p.text != '' ? this.format(this.lastValidDate) : '';
        setTimeout(function () {
          _this6.onFieldChange(value);
        }, 0);
      }
    }
  }, {
    key: "onInputChange",
    value: function onInputChange() {}
  }, {
    key: "isExpanded",
    value: function isExpanded() {
      return this.p.expanded;
    }
  }, {
    key: "toggleExpand",
    value: function toggleExpand() {
      this.setExpanded(!this.p.expanded);
    }
  }, {
    key: "setExpanded",
    value: function setExpanded(bool) {
      var _this7 = this;
      var props = this.p;
      if (bool === props.expanded) {
        return;
      }
      if (!bool) {
        this.onCollapse();
      } else {
        this.setState({}, function () {
          _this7.onExpand();
        });
      }
      if (bool && props.valid) {
        this.setState({
          activeDate: props.date
        });
      }
      if (this.props.expanded === undefined) {
        this.setState({
          expanded: bool
        });
      }
      this.props.onExpandChange(bool);
    }
  }, {
    key: "onCollapse",
    value: function onCollapse() {
      this.props.onCollapse();
    }
  }, {
    key: "onExpand",
    value: function onExpand() {
      this.props.onExpand();
    }
  }, {
    key: "onFieldChange",
    value: function onFieldChange(value) {
      if (this.p.rawInput && typeof value != 'string') {
        var event = value;
        value = event.target.value;
      }
      var dateMoment = value == '' ? null : this.toMoment(value);
      if (dateMoment === null || dateMoment.isValid()) {
        this.onChange(dateMoment);
      }
      this.onTextChange(value);
    }
  }, {
    key: "onTextChange",
    value: function onTextChange(text) {
      if (this.props.text === undefined) {
        this.setState({
          text: text
        });
      }
      if (this.props.onTextChange) {
        this.props.onTextChange(text);
      }
    }
  }, {
    key: "onPickerChange",
    value: function onPickerChange(dateString, _ref, event) {
      var dateMoment = _ref.dateMoment,
        forceUpdate = _ref.forceUpdate,
        noCollapse = _ref.noCollapse;
      var isEnter = event && event.key == 'Enter';
      var updateOnDateClick = forceUpdate ? true : this.props.updateOnDateClick || isEnter;
      var shouldCollapse = this.props.collapseOnDateClick || isEnter;
      if (noCollapse) {
        shouldCollapse = false;
      }
      if (updateOnDateClick) {
        (0, _forwardTime.default)(this.time, dateMoment);
        this.setDate(dateString, {
          dateMoment: dateMoment,
          skipTime: true
        });
        if (shouldCollapse) {
          this.setExpanded(false);
        }
      }
    }
  }, {
    key: "setDate",
    value: function setDate(dateString, _ref2) {
      var dateMoment = _ref2.dateMoment,
        _ref2$skipTime = _ref2.skipTime,
        skipTime = _ref2$skipTime === void 0 ? false : _ref2$skipTime;
      var props = this.p;
      var currentDate = props.date;
      if (props.valid && currentDate) {
        var dateFormat = props.dateFormat ? props.dateFormat.toLowerCase() : '';
        var hasTime = dateFormat.indexOf('k') != -1 || dateFormat.indexOf('h') != -1;
        if (hasTime && !skipTime) {
          ['hour', 'minute', 'second', 'millisecond'].forEach(function (part) {
            dateMoment.set(part, currentDate.get(part));
          });
        }
      }
      this.onTextChange(this.format(dateMoment));
      this.onChange(dateMoment);
    }
  }, {
    key: "onChange",
    value: function onChange(dateMoment) {
      if (dateMoment != null && !_moment.default.isMoment(dateMoment)) {
        dateMoment = this.toMoment(dateMoment);
      }
      (0, _forwardTime.default)(this.time, dateMoment);
      var newState = {};
      if (this.props.value === undefined) {
        (0, _assign.default)(newState, {
          text: null,
          value: dateMoment
        });
      }
      newState.activeDate = dateMoment;
      if (dateMoment) {
        if (!this.pickerView || !this.pickerView.isInView || !this.pickerView.isInView(dateMoment)) {
          newState.viewDate = dateMoment;
        }
      }
      if (this.props.onChange) {
        this.props.onChange(this.format(dateMoment), {
          dateMoment: dateMoment
        });
      }
      this.setState(newState);
    }
  }, {
    key: "format",
    value: function format(mom, _format) {
      var theFormat = _format;
      if (_format === undefined) {
        theFormat = this.p.displayFormat;
      }
      if (_format === undefined) {
        theFormat = this.p.dateFormat;
      }
      return mom == null ? '' : mom.format(theFormat);
    }
  }, {
    key: "focusField",
    value: function focusField() {
      var input = this.field;
      if (input) {
        input.focus();
      }
    }
  }, {
    key: "focus",
    value: function focus() {
      this.focusField();
    }
  }]);
  return DateInput;
}(_reactClass.default);
exports["default"] = DateInput;
DateInput.defaultProps = {
  rootClassName: 'inovua-react-toolkit-date-input',
  showClock: undefined,
  relativeToViewport: true,
  enableMonthDecadeViewAnimation: true,
  showMonthDecadeViewAnimation: 300,
  overlayProps: undefined,
  forceValidDate: false,
  strict: false,
  expandOnFocus: true,
  updateOnDateClick: true,
  collapseOnDateClick: true,
  theme: 'default-light',
  footer: true,
  okButton: false,
  onBlur: function onBlur() {},
  onFocus: function onFocus() {},
  clearIcon: true,
  validateOnBlur: true,
  onExpandChange: function onExpandChange() {},
  onCollapse: function onCollapse() {},
  onExpand: function onExpand() {},
  minDate: (0, _moment.default)('1000-01-01', 'YYYY-MM-DD'),
  maxDate: (0, _moment.default)('9999-12-31 HH:mm:ss', 'YYYY-MM-DD 23:59:59'),
  skipTodayTime: false
};
var DateType = _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.object, _propTypes.default.string]);
DateInput.propTypes = {
  autoFocus: _propTypes.default.bool,
  rootClassName: _propTypes.default.string,
  dateFormat: _propTypes.default.string.isRequired,
  displayFormat: _propTypes.default.string,
  relativeToViewport: _propTypes.default.bool,
  showClock: _propTypes.default.bool,
  strict: _propTypes.default.bool,
  expandOnFocus: _propTypes.default.bool,
  updateOnDateClick: _propTypes.default.bool,
  collapseOnDateClick: _propTypes.default.bool,
  enableMonthDecadeViewAnimation: _propTypes.default.bool,
  showMonthDecadeViewAnimation: _propTypes.default.number,
  theme: _propTypes.default.string,
  footer: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.node]),
  onBlur: _propTypes.default.func,
  onFocus: _propTypes.default.func,
  clearIcon: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.node]),
  validateOnBlur: _propTypes.default.bool,
  onExpandChange: _propTypes.default.func,
  onCollapse: _propTypes.default.func,
  onExpand: _propTypes.default.func,
  skipTodayTime: _propTypes.default.bool,
  date: DateType,
  value: DateType,
  defaultDate: DateType,
  viewDate: DateType,
  minDate: DateType,
  maxDate: DateType,
  activeDate: DateType,
  text: _propTypes.default.string,
  pickerProps: _propTypes.default.object,
  overlayProps: _propTypes.default.object,
  constrainTo: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object, _propTypes.default.bool]),
  cleanup: _propTypes.default.func,
  expanded: _propTypes.default.bool,
  triggerChangeOnTimeChange: _propTypes.default.bool,
  defaultExpanded: _propTypes.default.bool,
  forceValidDate: _propTypes.default.bool,
  valid: _propTypes.default.bool,
  updateOnWheel: _propTypes.default.bool,
  clearDate: _propTypes.default.bool,
  navBarArrows: _propTypes.default.bool,
  locale: _propTypes.default.string,
  focusedClassName: _propTypes.default.string,
  expandedClassName: _propTypes.default.string,
  invalidClassName: _propTypes.default.string,
  placeholder: _propTypes.default.string,
  onTextChange: _propTypes.default.func,
  renderPicker: _propTypes.default.func,
  onMouseDown: _propTypes.default.func,
  onViewDateChange: _propTypes.default.func,
  onActiveDateChange: _propTypes.default.func,
  defaultViewDate: _propTypes.default.any,
  onChange: _propTypes.default.func,
  renderInput: _propTypes.default.func,
  onLazyBlur: _propTypes.default.func,
  onKeyDown: _propTypes.default.func,
  position: _propTypes.default.oneOf(['top', 'bottom']),
  weekNumbers: _propTypes.default.bool,
  highlightWeekends: _propTypes.default.bool,
  calendarProps: _propTypes.default.object,
  cancelButtonText: _propTypes.default.string,
  clearButtonText: _propTypes.default.string,
  okButtonText: _propTypes.default.string,
  todayButtonText: _propTypes.default.string
};

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/DecadeView.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/DecadeView.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.onChange = exports.onActiveDateChange = exports.navigate = exports.isValidActiveDate = exports.isDateInMinMax = exports.gotoViewDate = exports.getInitialState = exports["default"] = exports.confirm = void 0;
Object.defineProperty(exports, "onKeyDown", ({
  enumerable: true,
  get: function get() {
    return _onKeyDown.default;
  }
}));
exports.select = exports.prepareViewDate = exports.prepareMinMax = exports.prepareDateProps = exports.prepareDate = exports.prepareActiveDate = exports.onViewDateChange = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _reactClass = _interopRequireDefault(__webpack_require__(/*! ../../react-class */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/index.js"));
var _moment = _interopRequireDefault(__webpack_require__(/*! moment */ "./node_modules/moment/moment.js"));
var _Flex = __webpack_require__(/*! ../../Flex */ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/index.js");
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _times = _interopRequireDefault(__webpack_require__(/*! ./utils/times */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/times.js"));
var _toMoment2 = _interopRequireDefault(__webpack_require__(/*! ./toMoment */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/toMoment.js"));
var _onKeyDown = _interopRequireDefault(__webpack_require__(/*! ./MonthView/onKeyDown */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/MonthView/onKeyDown.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var ARROWS = {
  prev: _react.default.createElement("svg", {
    width: "5",
    height: "10",
    viewBox: "0 0 5 10"
  }, _react.default.createElement("path", {
    fillRule: "evenodd",
    d: "M.262 4.738L4.368.632c.144-.144.379-.144.524 0C4.96.702 5 .796 5 .894v8.212c0 .204-.166.37-.37.37-.099 0-.193-.039-.262-.108L.262 5.262c-.145-.145-.145-.38 0-.524z"
  })),
  next: _react.default.createElement("svg", {
    width: "5",
    height: "10",
    viewBox: "0 0 5 10"
  }, _react.default.createElement("path", {
    fillRule: "evenodd",
    d: "M4.738 5.262L.632 9.368c-.144.144-.379.144-.524 0C.04 9.298 0 9.204 0 9.106V.894C0 .69.166.524.37.524c.099 0 .193.039.262.108l4.106 4.106c.145.145.145.38 0 .524z"
  }))
};
var getDecadeStartYear = function getDecadeStartYear(mom) {
  var year = mom.get('year');
  return year - year % 10;
};
var getDecadeEndYear = function getDecadeEndYear(mom) {
  return getDecadeStartYear(mom) + 9;
};
var NAV_KEYS = {
  ArrowUp: function ArrowUp(mom) {
    return mom.add(-5, 'year');
  },
  ArrowDown: function ArrowDown(mom) {
    return mom.add(5, 'year');
  },
  ArrowLeft: function ArrowLeft(mom) {
    return mom.add(-1, 'year');
  },
  ArrowRight: function ArrowRight(mom) {
    return mom.add(1, 'year');
  },
  Home: function Home(mom) {
    return mom.set('year', getDecadeStartYear(mom));
  },
  End: function End(mom) {
    return mom.set('year', getDecadeEndYear(mom));
  },
  PageUp: function PageUp(mom) {
    return mom.add(-10, 'year');
  },
  PageDown: function PageDown(mom) {
    return mom.add(10, 'year');
  }
};
var isDateInMinMax = function isDateInMinMax(timestamp, props) {
  if (props.minDate && timestamp < props.minDate) {
    return false;
  }
  if (props.maxDate && timestamp > props.maxDate) {
    return false;
  }
  return true;
};
exports.isDateInMinMax = isDateInMinMax;
var isValidActiveDate = function isValidActiveDate(timestamp, props) {
  if (!props) {
    throw new Error('props is mandatory in isValidActiveDate');
  }
  return isDateInMinMax(timestamp, props);
};
exports.isValidActiveDate = isValidActiveDate;
var _select = function select(_ref, event) {
  var dateMoment = _ref.dateMoment,
    timestamp = _ref.timestamp;
  if (this.props.select) {
    return this.props.select({
      dateMoment: dateMoment,
      timestamp: timestamp
    }, event);
  }
  if (!timestamp) {
    timestamp = +dateMoment;
  }
  this.gotoViewDate({
    dateMoment: dateMoment,
    timestamp: timestamp
  });
  this.onChange({
    dateMoment: dateMoment,
    timestamp: timestamp
  }, event);
  return undefined;
};
exports.select = _select;
var _confirm = function confirm(date, event) {
  event.preventDefault();
  if (this.props.confirm) {
    return this.props.confirm(date, event);
  }
  var dateMoment = this.toMoment(date);
  var timestamp = +dateMoment;
  this.select({
    dateMoment: dateMoment,
    timestamp: timestamp
  }, event);
  if (this.props.onConfirm) {
    this.props.onConfirm({
      dateMoment: dateMoment,
      timestamp: timestamp
    });
  }
  return undefined;
};
exports.confirm = _confirm;
var _onActiveDateChange = function onActiveDateChange(_ref2) {
  var dateMoment = _ref2.dateMoment,
    timestamp = _ref2.timestamp;
  if (!isValidActiveDate(timestamp, this.p)) {
    return;
  }
  if (this.props.activeDate === undefined) {
    this.setState({
      activeDate: timestamp
    });
  }
  if (this.props.onActiveDateChange) {
    var dateString = this.format(dateMoment);
    this.props.onActiveDateChange(dateString, {
      dateMoment: dateMoment,
      timestamp: timestamp,
      dateString: dateString
    });
  }
};
exports.onActiveDateChange = _onActiveDateChange;
var _onViewDateChange = function onViewDateChange(_ref3) {
  var dateMoment = _ref3.dateMoment,
    timestamp = _ref3.timestamp;
  if (dateMoment && timestamp === undefined) {
    timestamp = +dateMoment;
  }
  if (this.props.constrainViewDate && !isDateInMinMax(timestamp, this.p)) {
    return;
  }
  if (this.props.viewDate === undefined) {
    this.setState({
      viewDate: timestamp
    });
  }
  if (this.props.onViewDateChange) {
    var dateString = this.format(dateMoment);
    this.props.onViewDateChange(dateString, {
      dateMoment: dateMoment,
      dateString: dateString,
      timestamp: timestamp
    });
  }
};
exports.onViewDateChange = _onViewDateChange;
var _onChange = function onChange(_ref4, event) {
  var dateMoment = _ref4.dateMoment,
    timestamp = _ref4.timestamp;
  if (this.props.date === undefined) {
    this.setState({
      date: timestamp
    });
  }
  if (this.props.onChange) {
    var dateString = this.format(dateMoment);
    this.props.onChange(dateString, {
      dateMoment: dateMoment,
      timestamp: timestamp,
      dateString: dateString
    }, event);
  }
};
exports.onChange = _onChange;
var _navigate = function navigate(direction, event) {
  var _this = this;
  var props = this.p;
  var getNavigationDate = function getNavigationDate(dir, date, dateFormat) {
    var mom = _moment.default.isMoment(date) ? date : _this.toMoment(date, dateFormat);
    if (typeof dir == 'function') {
      return dir(mom);
    }
    return mom;
  };
  if (props.navigate) {
    return props.navigate(direction, event, getNavigationDate);
  }
  event.preventDefault();
  if (props.activeDate) {
    var nextMoment = getNavigationDate(direction, props.activeDate);
    this.gotoViewDate({
      dateMoment: nextMoment
    });
  }
  return undefined;
};
exports.navigate = _navigate;
var _gotoViewDate = function gotoViewDate(_ref5) {
  var dateMoment = _ref5.dateMoment,
    timestamp = _ref5.timestamp;
  if (!timestamp) {
    timestamp = dateMoment == null ? null : +dateMoment;
  }
  this.onViewDateChange({
    dateMoment: dateMoment,
    timestamp: timestamp
  });
  this.onActiveDateChange({
    dateMoment: dateMoment,
    timestamp: timestamp
  });
};
exports.gotoViewDate = _gotoViewDate;
var prepareDate = function prepareDate(props, state) {
  return props.date === undefined ? state.date : props.date;
};
exports.prepareDate = prepareDate;
var prepareViewDate = function prepareViewDate(props, state) {
  var viewDate = props.viewDate === undefined ? state.viewDate : props.viewDate;
  if (!viewDate && props.date) {
    return props.date;
  }
  return viewDate;
};
exports.prepareViewDate = prepareViewDate;
var prepareActiveDate = function prepareActiveDate(props, state) {
  var activeDate = props.activeDate === undefined ? state.activeDate || prepareDate(props, state) : props.activeDate;
  return activeDate;
};
exports.prepareActiveDate = prepareActiveDate;
var prepareMinMax = function prepareMinMax(props) {
  var minDate = props.minDate,
    maxDate = props.maxDate;
  var result = {};
  if (minDate != null) {
    result.minDateMoment = (0, _toMoment2.default)(props.minDate, props).startOf(props.adjustMinDateStartOf);
    result.minDate = +result.minDateMoment;
  }
  if (maxDate != null) {
    result.maxDateMoment = (0, _toMoment2.default)(props.maxDate, props).endOf(props.adjustMaxDateStartOf);
    result.maxDate = +result.maxDateMoment;
  }
  return result;
};
exports.prepareMinMax = prepareMinMax;
var prepareDateProps = function prepareDateProps(props, state) {
  var result = {};
  (0, _assign.default)(result, prepareMinMax(props));
  result.date = prepareDate(props, state);
  result.viewDate = prepareViewDate(props, state);
  var activeDate = prepareActiveDate(props, state);
  if (result.date != null) {
    result.moment = (0, _toMoment2.default)(result.date, props);
    if (props.adjustDateStartOf) {
      result.moment.startOf(props.adjustDateStartOf);
    }
    result.timestamp = +result.moment;
  }
  if (activeDate) {
    result.activeMoment = (0, _toMoment2.default)(activeDate, props);
    if (props.adjustDateStartOf) {
      result.activeMoment.startOf(props.adjustDateStartOf);
    }
    result.activeDate = +result.activeMoment;
  }
  var viewMoment = (0, _toMoment2.default)(result.viewDate, props);
  if (props.constrainViewDate && result.minDate != null && viewMoment.isBefore(result.minDate)) {
    result.minConstrained = true;
    viewMoment = (0, _toMoment2.default)(result.minDate, props);
  }
  if (props.constrainViewDate && result.maxDate != null && viewMoment.isAfter(result.maxDate)) {
    result.maxConstrained = true;
    viewMoment = (0, _toMoment2.default)(result.maxDate, props);
  }
  if (props.adjustDateStartOf) {
    viewMoment.startOf(props.adjustDateStartOf);
  }
  result.viewMoment = viewMoment;
  return result;
};
exports.prepareDateProps = prepareDateProps;
var getInitialState = function getInitialState(props) {
  return {
    date: props.defaultDate,
    activeDate: props.defaultActiveDate,
    viewDate: props.defaultViewDate
  };
};
exports.getInitialState = getInitialState;
var DecadeView = function (_Component) {
  (0, _inherits2.default)(DecadeView, _Component);
  var _super = _createSuper(DecadeView);
  function DecadeView(props) {
    var _this2;
    (0, _classCallCheck2.default)(this, DecadeView);
    _this2 = _super.call(this, props);
    _this2.decadeViewRef = (0, _react.createRef)();
    _this2.state = getInitialState(props);
    return _this2;
  }
  (0, _createClass2.default)(DecadeView, [{
    key: "getYearsInDecade",
    value: function getYearsInDecade(value) {
      var _this3 = this;
      var year = getDecadeStartYear(this.toMoment(value));
      var start = this.toMoment("".concat(year), 'YYYY').startOf('year');
      return (0, _times.default)(10).map(function (i) {
        return _this3.toMoment(start).add(i, 'year');
      });
    }
  }, {
    key: "toMoment",
    value: function toMoment(date, format) {
      return (0, _toMoment2.default)(date, format, this.props);
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.p = (0, _assign.default)({}, this.props);
      if (props.onlyCompareYear) {}
      var dateProps = prepareDateProps(props, this.state);
      (0, _assign.default)(props, dateProps);
      var yearsInView = this.getYearsInDecade(props.viewMoment);
      var rootClassName = props.rootClassName;
      var className = (0, _join.default)(props.className, rootClassName, props.theme && "".concat(rootClassName, "--theme-").concat(props.theme));
      var children = this.renderYears(props, yearsInView);
      var align = 'stretch';
      var column = true;
      if (props.navigation) {
        column = false;
        align = 'center';
        children = [this.renderNav(-1), _react.default.createElement(_Flex.Flex, {
          key: "year_view",
          inline: true,
          flex: true,
          column: true,
          alignItems: "stretch",
          children: children
        }), this.renderNav(1)];
      }
      var flexProps = (0, _assign.default)({}, this.props);
      delete flexProps.activeDate;
      delete flexProps.adjustDateStartOf;
      delete flexProps.adjustMaxDateStartOf;
      delete flexProps.adjustMinDateStartOf;
      delete flexProps.arrows;
      delete flexProps.cleanup;
      delete flexProps.constrainViewDate;
      delete flexProps.date;
      delete flexProps.dateFormat;
      delete flexProps.isDecadeView;
      delete flexProps.maxDate;
      delete flexProps.minDate;
      delete flexProps.navigation;
      delete flexProps.navKeys;
      delete flexProps.onActiveDateChange;
      delete flexProps.onConfirm;
      delete flexProps.onlyCompareYear;
      delete flexProps.onViewDateChange;
      delete flexProps.perRow;
      delete flexProps.theme;
      delete flexProps.viewDate;
      delete flexProps.yearFormat;
      delete flexProps.rootClassName;
      if (typeof props.cleanup == 'function') {
        props.cleanup(flexProps);
      }
      return _react.default.createElement(_Flex.Flex, _objectSpread(_objectSpread({
        inline: true,
        ref: this.decadeViewRef,
        column: column,
        alignItems: align,
        tabIndex: 0
      }, flexProps), {}, {
        onKeyDown: this.onKeyDown,
        className: className,
        children: children
      }));
    }
  }, {
    key: "renderNav",
    value: function renderNav(dir) {
      var _this4 = this;
      var props = this.p;
      var name = dir == -1 ? 'prev' : 'next';
      var navMoment = this.toMoment(props.viewMoment).add(dir * 10, 'year');
      var disabled = dir == -1 ? props.minDateMoment && getDecadeEndYear(navMoment) < getDecadeEndYear(props.minDateMoment) : props.maxDateMoment && getDecadeEndYear(navMoment) > getDecadeEndYear(props.maxDateMoment);
      var rootClassName = props.rootClassName;
      var className = (0, _join.default)("".concat(rootClassName, "-arrow"), "".concat(rootClassName, "-arrow--").concat(name), disabled && "".concat(rootClassName, "-arrow--disabled"));
      var arrow = props.arrows[name] || ARROWS[name];
      var arrowProps = {
        className: className,
        onClick: !disabled ? function () {
          return _this4.onViewDateChange({
            dateMoment: navMoment,
            timestamp: _this4.toMoment(props.viewMoment)
          });
        } : null,
        children: arrow,
        disabled: disabled
      };
      if (props.renderNavigation) {
        return props.renderNavigation(arrowProps, props);
      }
      return _react.default.createElement("div", _objectSpread({
        key: "nav_arrow_".concat(dir)
      }, arrowProps));
    }
  }, {
    key: "renderYears",
    value: function renderYears(props, years) {
      var nodes = years.map(this.renderYear);
      var perRow = props.perRow;
      var buckets = (0, _times.default)(Math.ceil(nodes.length / perRow)).map(function (i) {
        return nodes.slice(i * perRow, (i + 1) * perRow);
      });
      return buckets.map(function (bucket, i) {
        return _react.default.createElement(_Flex.Flex, {
          alignItems: "center",
          flex: true,
          row: true,
          inline: true,
          key: "row_".concat(i),
          className: "".concat(props.rootClassName, "-row")
        }, bucket);
      });
    }
  }, {
    key: "renderYear",
    value: function renderYear(dateMoment) {
      var props = this.p;
      var yearText = this.format(dateMoment);
      var timestamp = +dateMoment;
      var isActiveDate = props.onlyCompareYear && props.activeMoment ? dateMoment.get('year') == props.activeMoment.get('year') : timestamp === props.activeDate;
      var isValue = props.onlyCompareYear && props.moment ? dateMoment.get('year') == props.moment.get('year') : timestamp === props.timestamp;
      var rootClassName = props.rootClassName;
      var className = (0, _join.default)("".concat(rootClassName, "-year"), isActiveDate && "".concat(rootClassName, "-year--active"), isValue && "".concat(rootClassName, "-year--value"), props.minDate != null && timestamp < props.minDate && "".concat(rootClassName, "-year--disabled"), props.maxDate != null && timestamp > props.maxDate && "".concat(rootClassName, "-year--disabled"));
      var onClick = this.handleClick.bind(this, {
        dateMoment: dateMoment,
        timestamp: timestamp
      });
      return _react.default.createElement(_Flex.Item, {
        key: yearText,
        className: className,
        onClick: onClick
      }, yearText);
    }
  }, {
    key: "format",
    value: function format(mom, _format) {
      _format = _format || this.props.yearFormat;
      return mom.format(_format);
    }
  }, {
    key: "handleClick",
    value: function handleClick(_ref6, event) {
      var timestamp = _ref6.timestamp,
        dateMoment = _ref6.dateMoment;
      event.target.value = timestamp;
      var props = this.p;
      if (props.minDate && timestamp < props.minDate) {
        return;
      }
      if (props.maxDate && timestamp > props.maxDate) {
        return;
      }
      this.select({
        dateMoment: dateMoment,
        timestamp: timestamp
      }, event);
    }
  }, {
    key: "onKeyDown",
    value: function onKeyDown(event) {
      return _onKeyDown.default.call(this, event);
    }
  }, {
    key: "confirm",
    value: function confirm(date, event) {
      return _confirm.call(this, date, event);
    }
  }, {
    key: "navigate",
    value: function navigate(direction, event) {
      return _navigate.call(this, direction, event);
    }
  }, {
    key: "select",
    value: function select(_ref7, event) {
      var dateMoment = _ref7.dateMoment,
        timestamp = _ref7.timestamp;
      return _select.call(this, {
        dateMoment: dateMoment,
        timestamp: timestamp
      }, event);
    }
  }, {
    key: "onViewDateChange",
    value: function onViewDateChange(_ref8) {
      var dateMoment = _ref8.dateMoment,
        timestamp = _ref8.timestamp;
      return _onViewDateChange.call(this, {
        dateMoment: dateMoment,
        timestamp: timestamp
      });
    }
  }, {
    key: "gotoViewDate",
    value: function gotoViewDate(_ref9) {
      var dateMoment = _ref9.dateMoment,
        timestamp = _ref9.timestamp;
      return _gotoViewDate.call(this, {
        dateMoment: dateMoment,
        timestamp: timestamp
      });
    }
  }, {
    key: "onActiveDateChange",
    value: function onActiveDateChange(_ref10) {
      var dateMoment = _ref10.dateMoment,
        timestamp = _ref10.timestamp;
      return _onActiveDateChange.call(this, {
        dateMoment: dateMoment,
        timestamp: timestamp
      });
    }
  }, {
    key: "onChange",
    value: function onChange(_ref11, event) {
      var dateMoment = _ref11.dateMoment,
        timestamp = _ref11.timestamp;
      return _onChange.call(this, {
        dateMoment: dateMoment,
        timestamp: timestamp
      }, event);
    }
  }, {
    key: "getDOMNode",
    value: function getDOMNode() {
      return this.decadeViewRef.current;
    }
  }, {
    key: "focus",
    value: function focus() {
      this.decadeViewRef.current.focus();
    }
  }]);
  return DecadeView;
}(_reactClass.default);
exports["default"] = DecadeView;
DecadeView.defaultProps = {
  rootClassName: 'inovua-react-toolkit-calendar__decade-view',
  isDecadeView: true,
  arrows: {},
  navigation: true,
  constrainViewDate: true,
  navKeys: NAV_KEYS,
  theme: 'default',
  yearFormat: 'YYYY',
  dateFormat: 'YYYY-MM-DD',
  perRow: 5,
  onlyCompareYear: true,
  adjustDateStartOf: 'year',
  adjustMinDateStartOf: 'year',
  adjustMaxDateStartOf: 'year'
};
DecadeView.propTypes = {
  isDecadeView: _propTypes.default.bool,
  rootClassName: _propTypes.default.string,
  navigation: _propTypes.default.bool,
  constrainViewDate: _propTypes.default.bool,
  arrows: _propTypes.default.object,
  navKeys: _propTypes.default.object,
  theme: _propTypes.default.string,
  yearFormat: _propTypes.default.string,
  dateFormat: _propTypes.default.string,
  perRow: _propTypes.default.number,
  minDate: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.object]),
  maxDate: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.object]),
  viewDate: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.object]),
  date: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.object]),
  defaultDate: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.object]),
  viewMoment: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.object]),
  moment: _propTypes.default.object,
  minDateMoment: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.object]),
  maxDateMoment: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.object]),
  onlyCompareYear: _propTypes.default.bool,
  adjustDateStartOf: _propTypes.default.string,
  adjustMinDateStartOf: _propTypes.default.string,
  adjustMaxDateStartOf: _propTypes.default.string,
  activeDate: _propTypes.default.number,
  select: _propTypes.default.func,
  confirm: _propTypes.default.func,
  onConfirm: _propTypes.default.func,
  onActiveDateChange: _propTypes.default.func,
  onViewDateChange: _propTypes.default.func,
  cleanup: _propTypes.default.func,
  onChange: _propTypes.default.func,
  renderNavigation: _propTypes.default.func,
  navigate: _propTypes.default.func
};

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/Footer.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/Footer.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = exports.FooterButton = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _reactClass = _interopRequireDefault(__webpack_require__(/*! ../../react-class */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/index.js"));
var _Flex = __webpack_require__(/*! ../../Flex */ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/index.js");
var _Button = _interopRequireDefault(__webpack_require__(/*! ../../Button */ "./node_modules/@inovua/reactdatagrid-community/packages/Button/index.js"));
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _joinFunctions = _interopRequireDefault(__webpack_require__(/*! ./joinFunctions */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/joinFunctions.js"));
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var numbers = [1];
var SPACER = numbers.map(function (item, index) {
  return _react.default.createElement(_Flex.Item, {
    key: "footer_spacer_".concat(index * 37)
  });
});
var preventDefault = function preventDefault(e) {
  return e.preventDefault();
};
var FooterButton = function FooterButton(props) {
  var disabledClassName = props.disabled ? "".concat(props.rootClassName, "-button--disabled") : '';
  var cancelButtonClass = props.children === 'Cancel' ? "".concat(props.rootClassName, "-button-cancel") : '';
  var todayButtonClass = props.children === 'Today' ? "".concat(props.rootClassName, "-button-today") : '';
  var okButtonClass = props.children === 'OK' ? "".concat(props.rootClassName, "-button-ok") : '';
  var className = (0, _join.default)(props.className || '', cancelButtonClass, todayButtonClass, okButtonClass, "".concat(props.rootClassName, "-button"), disabledClassName);
  var buttonProps = _objectSpread({}, props);
  delete buttonProps.rootClassName;
  return _react.default.createElement(_Button.default, _objectSpread(_objectSpread({
    tabIndex: -1
  }, buttonProps), {}, {
    className: className
  }));
};
exports.FooterButton = FooterButton;
var Footer = function (_Component) {
  (0, _inherits2.default)(Footer, _Component);
  var _super = _createSuper(Footer);
  function Footer() {
    (0, _classCallCheck2.default)(this, Footer);
    return _super.apply(this, arguments);
  }
  (0, _createClass2.default)(Footer, [{
    key: "render",
    value: function render() {
      var props = this.p = (0, _assign.default)({}, this.props);
      var rootClassName = props.rootClassName;
      var className = (0, _join.default)(props.className, rootClassName, "".concat(rootClassName, "--theme-").concat(props.theme), "".concat(rootClassName, "--button-cancel"));
      var todayButton = this.renderTodayButton();
      var clearButton = this.renderClearButton();
      var okButton = this.renderOkButton();
      var cancelButton = this.renderCancelButton();
      if (!todayButton && !clearButton && !okButton && !cancelButton) {
        return null;
      }
      var middleSpacer = okButton || cancelButton ? SPACER : null;
      var spacer = !props.centerButtons ? middleSpacer : null;
      var children = [props.centerButtons && SPACER, todayButton, clearButton, spacer, okButton, cancelButton, props.centerButtons && SPACER];
      if (props.renderChildren) {
        children = props.renderChildren(children, props);
      }
      var flexProps = (0, _assign.default)({}, props);
      delete flexProps.rootClassName;
      delete flexProps.actionEvent;
      delete flexProps.buttonFactory;
      delete flexProps.cancelButton;
      delete flexProps.cancelButtonText;
      delete flexProps.centerButtons;
      delete flexProps.clearDate;
      delete flexProps.cleanup;
      delete flexProps.clearButton;
      delete flexProps.clearButtonText;
      delete flexProps.isDatePickerFooter;
      delete flexProps.onCancelClick;
      delete flexProps.onClearClick;
      delete flexProps.onOkClick;
      delete flexProps.onTodayClick;
      delete flexProps.okButton;
      delete flexProps.okButtonText;
      delete flexProps.selectDate;
      delete flexProps.theme;
      delete flexProps.todayButton;
      delete flexProps.todayButtonText;
      if (typeof props.cleanup == 'function') {
        props.cleanup(flexProps);
      }
      return _react.default.createElement(_Flex.Flex, _objectSpread(_objectSpread({
        key: "footer",
        inline: true,
        row: true
      }, flexProps), {}, {
        justifyContent: "center",
        className: className,
        children: children
      }));
    }
  }, {
    key: "renderTodayButton",
    value: function renderTodayButton() {
      if (!this.props.todayButton) {
        return null;
      }
      var theme = this.props.theme;
      return this.renderButton({
        children: this.props.todayButtonText,
        'data-name': 'today-button'
      }, this.props.onTodayClick, theme);
    }
  }, {
    key: "renderClearButton",
    value: function renderClearButton() {
      if (!this.props.clearButton) {
        return null;
      }
      var theme = this.props.theme;
      return this.renderButton({
        children: this.props.clearButtonText,
        disabled: this.props.clearDate === undefined,
        'data-name': 'clear-button'
      }, this.props.onClearClick, theme);
    }
  }, {
    key: "renderOkButton",
    value: function renderOkButton() {
      if (!this.props.okButton) {
        return null;
      }
      var theme = this.props.theme;
      return this.renderButton({
        children: this.props.okButtonText,
        'data-name': 'ok-button'
      }, this.props.onOkClick, theme);
    }
  }, {
    key: "renderCancelButton",
    value: function renderCancelButton() {
      if (!this.props.cancelButton) {
        return null;
      }
      var theme = this.props.theme;
      return this.renderButton({
        children: this.props.cancelButtonText,
        'data-name': 'cancel-button'
      }, this.props.onCancelClick, theme);
    }
  }, {
    key: "renderButton",
    value: function renderButton(props, fn, theme) {
      var text = props.children;
      var p = props;
      if (typeof props == 'string') {
        p = {};
        text = props;
      }
      if (typeof fn == 'function' && !p.onClick && !p.disabled) {
        p.onClick = fn;
      }
      var Factory = this.props.buttonFactory;
      var onMouseDown = p.onMouseDown ? (0, _joinFunctions.default)(p.onMouseDown, preventDefault) : preventDefault;
      return _react.default.createElement(Factory, _objectSpread(_objectSpread({
        key: "footer_".concat(text),
        tabIndex: 0
      }, p), {}, {
        rootClassName: this.props.rootClassName,
        onMouseDown: onMouseDown,
        theme: theme
      }), text);
    }
  }]);
  return Footer;
}(_reactClass.default);
exports["default"] = Footer;
Footer.defaultProps = {
  rootClassName: 'inovua-react-toolkit-calendar__footer',
  actionEvent: 'onClick',
  theme: 'default',
  buttonFactory: FooterButton,
  todayButton: true,
  clearButton: false,
  okButton: true,
  cancelButton: true,
  todayButtonText: 'Today',
  clearButtonText: 'Clear',
  okButtonText: 'OK',
  cancelButtonText: 'Cancel',
  isDatePickerFooter: true
};
Footer.propTypes = {
  isDatePickerFooter: _propTypes.default.bool,
  rootClassName: _propTypes.default.string,
  theme: _propTypes.default.string,
  actionEvent: _propTypes.default.string,
  centerButtons: _propTypes.default.bool,
  buttonFactory: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),
  clearDate: _propTypes.default.object,
  okButtonText: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string]),
  clearButtonText: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string]),
  cancelButtonText: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string]),
  todayButtonText: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string]),
  todayButton: _propTypes.default.bool,
  clearButton: _propTypes.default.bool,
  okButton: _propTypes.default.bool,
  cancelButton: _propTypes.default.bool,
  disabled: _propTypes.default.bool,
  onTodayClick: _propTypes.default.func,
  onClearClick: _propTypes.default.func,
  onOkClick: _propTypes.default.func,
  onCancelClick: _propTypes.default.func,
  renderChildren: _propTypes.default.func,
  cleanup: _propTypes.default.func
};

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/InlineBlock/index.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/InlineBlock/index.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var InovuaInlineBlock = function (_Component) {
  (0, _inherits2.default)(InovuaInlineBlock, _Component);
  var _super = _createSuper(InovuaInlineBlock);
  function InovuaInlineBlock() {
    (0, _classCallCheck2.default)(this, InovuaInlineBlock);
    return _super.apply(this, arguments);
  }
  (0, _createClass2.default)(InovuaInlineBlock, [{
    key: "render",
    value: function render() {
      var props = this.props;
      var domProps = _objectSpread(_objectSpread({}, props), {}, {
        style: _objectSpread({
          display: 'inline-block'
        }, props.style)
      });
      return _react.default.createElement("div", _objectSpread({}, props));
    }
  }]);
  return InovuaInlineBlock;
}(_react.Component);
InovuaInlineBlock.defaultProps = {
  style: {}
};
var _default = InovuaInlineBlock;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/MonthDecadeView.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/MonthDecadeView.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _reactClass = _interopRequireDefault(__webpack_require__(/*! ../../react-class */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/index.js"));
var _Flex = __webpack_require__(/*! ../../Flex */ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/index.js");
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _toMoment2 = _interopRequireDefault(__webpack_require__(/*! ./toMoment */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/toMoment.js"));
var _joinFunctions = _interopRequireDefault(__webpack_require__(/*! ./joinFunctions */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/joinFunctions.js"));
var _Footer = _interopRequireDefault(__webpack_require__(/*! ./Footer */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/Footer.js"));
var _YearView = _interopRequireDefault(__webpack_require__(/*! ./YearView */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/YearView.js"));
var _assignDefined = _interopRequireDefault(__webpack_require__(/*! ./assignDefined */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/assignDefined.js"));
var _DecadeView = _interopRequireWildcard(__webpack_require__(/*! ./DecadeView */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/DecadeView.js"));
var _MonthDecadeView$prop;
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var preventDefault = function preventDefault(e) {
  e.preventDefault();
};
var MonthDecadeView = function (_Component) {
  (0, _inherits2.default)(MonthDecadeView, _Component);
  var _super = _createSuper(MonthDecadeView);
  function MonthDecadeView(props) {
    var _this;
    (0, _classCallCheck2.default)(this, MonthDecadeView);
    _this = _super.call(this, props);
    _this.state = (0, _DecadeView.getInitialState)(props);
    return _this;
  }
  (0, _createClass2.default)(MonthDecadeView, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.unmounted = false;
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.unmounted = true;
    }
  }, {
    key: "toMoment",
    value: function toMoment(date, format) {
      return (0, _toMoment2.default)(date, format, this.props);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;
      var dateProps = (0, _DecadeView.prepareDateProps)(this.props, this.state);
      var props = this.p = _objectSpread(_objectSpread({}, this.props), dateProps);
      props.children = _react.default.Children.toArray(props.children);
      var rootClassName = props.rootClassName;
      var className = (0, _join.default)(props.className, rootClassName, props.theme && "".concat(rootClassName, "--theme-").concat(props.theme));
      var separatorClassName = "".concat(rootClassName, "__separator");
      var commonProps = (0, _assignDefined.default)({}, {
        locale: props.locale,
        theme: props.theme,
        minDate: props.minDate,
        maxDate: props.maxDate,
        viewDate: props.viewMoment,
        activeDate: props.activeDate,
        date: props.date,
        dateFormat: props.dateFormat
      });
      var yearViewProps = (0, _assign.default)({}, commonProps);
      var decadeViewProps = (0, _assign.default)({}, commonProps, {
        ref: function ref(view) {
          _this2.decadeView = view;
        }
      });
      var flexProps = (0, _assign.default)({}, this.props);
      delete flexProps.rootClassName;
      delete flexProps.activeDate;
      delete flexProps.adjustDateStartOf;
      delete flexProps.adjustMaxDateStartOf;
      delete flexProps.adjustMinDateStartOf;
      delete flexProps.cleanup;
      delete flexProps.date;
      delete flexProps.dateFormat;
      delete flexProps.defaultDate;
      delete flexProps.defaultViewDate;
      delete flexProps.focusDecadeView;
      delete flexProps.focusYearView;
      delete flexProps.okButtonText;
      delete flexProps.cancelButtonText;
      delete flexProps.footer;
      delete flexProps.locale;
      delete flexProps.maxDate;
      delete flexProps.minDate;
      delete flexProps.onOkClick;
      delete flexProps.onCancelClick;
      delete flexProps.okOnEnter;
      delete flexProps.navigation;
      delete flexProps.theme;
      delete flexProps.viewMoment;
      if (typeof props.cleanup == 'function') {
        props.cleanup(flexProps);
      }
      return _react.default.createElement(_Flex.Flex, _objectSpread(_objectSpread({
        inline: true,
        column: true,
        alignItems: "stretch"
      }, flexProps), {}, {
        className: className
      }), this.renderYearView(yearViewProps), _react.default.createElement("div", {
        className: separatorClassName
      }), this.renderDecadeView(decadeViewProps), _react.default.createElement("div", {
        className: separatorClassName
      }), this.renderFooter());
    }
  }, {
    key: "renderFooter",
    value: function renderFooter() {
      var props = this.p;
      var children = props.children;
      if (!props.footer) {
        return null;
      }
      var okButtonText = props.okButtonText,
        cancelButtonText = props.cancelButtonText;
      var defaultFooterProps = (0, _assignDefined.default)({}, {
        okButtonText: okButtonText,
        cancelButtonText: cancelButtonText,
        theme: props.theme
      });
      var footerChild = children.filter(function (c) {
        return c && c.props && c.props.isDatePickerFooter;
      })[0];
      if (footerChild) {
        var newFooterProps = {
          onOkClick: (0, _joinFunctions.default)(this.onOkClick, footerChild.props.onOkClick),
          onCancelClick: (0, _joinFunctions.default)(this.onCancelClick, footerChild.props.onCancelClick)
        };
        (0, _assignDefined.default)(newFooterProps, defaultFooterProps);
        if (footerChild.props.centerButtons === undefined) {
          newFooterProps.centerButtons = true;
        }
        if (footerChild.props.todayButton === undefined) {
          newFooterProps.todayButton = false;
        }
        if (footerChild.props.clearButton === undefined) {
          newFooterProps.clearButton = false;
        }
        return _react.default.cloneElement(footerChild, newFooterProps);
      }
      return _react.default.createElement(_Footer.default, _objectSpread(_objectSpread({
        key: "month_decade_footer"
      }, defaultFooterProps), {}, {
        todayButton: false,
        clearButton: false,
        onOkClick: this.onOkClick,
        onCancelClick: this.onCancelClick,
        centerButtons: true
      }));
    }
  }, {
    key: "onOkClick",
    value: function onOkClick() {
      if (this.props.onOkClick) {
        var dateMoment = this.p.activeMoment;
        var dateString = this.format(dateMoment);
        var timestamp = +dateMoment;
        this.props.onOkClick(dateString, {
          dateMoment: dateMoment,
          timestamp: timestamp
        });
      }
    }
  }, {
    key: "onCancelClick",
    value: function onCancelClick() {
      if (this.props.onCancelClick) {
        this.props.onCancelClick();
      }
    }
  }, {
    key: "renderYearView",
    value: function renderYearView(yearViewProps) {
      var props = this.p;
      var children = props.children;
      var yearViewChild = children.filter(function (c) {
        return c && c.props && c.props.isYearView;
      })[0];
      var yearViewChildProps = yearViewChild ? yearViewChild.props : {};
      var tabIndex = yearViewChildProps.tabIndex == null ? null : yearViewChildProps.tabIndex;
      yearViewProps.tabIndex = tabIndex;
      if (props.focusYearView === false || tabIndex == null) {
        yearViewProps.tabIndex = null;
        yearViewProps.onFocus = this.onYearViewFocus;
        yearViewProps.onMouseDown = this.onYearViewMouseDown;
      }
      (0, _assign.default)(yearViewProps, {
        onViewDateChange: (0, _joinFunctions.default)(this.onViewDateChange, yearViewChildProps.onViewDateChange),
        onActiveDateChange: (0, _joinFunctions.default)(this.onActiveDateChange, yearViewChildProps.onActiveDateChange),
        onChange: (0, _joinFunctions.default)(this.handleYearViewOnChange, yearViewChildProps.onChange)
      });
      if (yearViewChild) {
        return _react.default.cloneElement(yearViewChild, yearViewProps);
      }
      return _react.default.createElement(_YearView.default, _objectSpread({}, yearViewProps));
    }
  }, {
    key: "renderDecadeView",
    value: function renderDecadeView(decadeViewProps) {
      var props = this.p;
      var children = props.children;
      var decadeViewChild = children.filter(function (c) {
        return c && c.props && c.props.isDecadeView;
      })[0];
      var decadeViewChildProps = decadeViewChild ? decadeViewChild.props : {};
      var tabIndex = decadeViewChildProps.tabIndex == null ? null : decadeViewChildProps.tabIndex;
      decadeViewProps.tabIndex = tabIndex;
      if (props.focusDecadeView === false || tabIndex == null) {
        decadeViewProps.tabIndex = null;
        decadeViewProps.onMouseDown = this.onDecadeViewMouseDown;
      }
      (0, _assign.default)(decadeViewProps, {
        onConfirm: (0, _joinFunctions.default)(this.handleDecadeViewOnConfirm, decadeViewChildProps.onConfirm),
        onViewDateChange: (0, _joinFunctions.default)(this.handleDecadeOnViewDateChange, decadeViewChildProps.onViewDateChange),
        onActiveDateChange: (0, _joinFunctions.default)(this.handleDecadeOnActiveDateChange, decadeViewChildProps.onActiveDateChange),
        onChange: (0, _joinFunctions.default)(this.handleDecadeOnChange, decadeViewChildProps.onChange)
      });
      if (decadeViewChild) {
        return _react.default.cloneElement(decadeViewChild, decadeViewProps);
      }
      return _react.default.createElement(_DecadeView.default, _objectSpread({}, decadeViewProps));
    }
  }, {
    key: "onYearViewFocus",
    value: function onYearViewFocus() {
      if (this.props.focusYearView === false) {
        this.focus();
      }
    }
  }, {
    key: "focus",
    value: function focus() {
      if (this.decadeView && this.props.focusDecadeView) {
        this.decadeView.focus();
      }
    }
  }, {
    key: "getDOMNode",
    value: function getDOMNode() {
      return this.decadeView;
    }
  }, {
    key: "onYearViewMouseDown",
    value: function onYearViewMouseDown(e) {
      preventDefault(e);
      this.focus();
    }
  }, {
    key: "onDecadeViewMouseDown",
    value: function onDecadeViewMouseDown(e) {
      preventDefault(e);
    }
  }, {
    key: "format",
    value: function format(mom, _format) {
      _format = _format || this.props.dateFormat;
      return mom.format(_format);
    }
  }, {
    key: "handleDecadeViewOnConfirm",
    value: function handleDecadeViewOnConfirm() {
      if (this.props.okOnEnter) {
        this.onOkClick();
      }
    }
  }, {
    key: "onKeyDown",
    value: function onKeyDown(event) {
      if (event.key == 'Escape') {
        return this.onCancelClick();
      }
      if (this.decadeView) {
        this.decadeView.onKeyDown(event);
      }
      return undefined;
    }
  }, {
    key: "confirm",
    value: function confirm(date, event) {
      return _DecadeView.confirm.call(this, date, event);
    }
  }, {
    key: "navigate",
    value: function navigate(direction, event) {
      return _DecadeView.navigate.call(this, direction, event);
    }
  }, {
    key: "select",
    value: function select(_ref, event) {
      var dateMoment = _ref.dateMoment,
        timestamp = _ref.timestamp;
      return _DecadeView.select.call(this, {
        dateMoment: dateMoment,
        timestamp: timestamp
      }, event);
    }
  }, {
    key: "handleDecadeOnViewDateChange",
    value: function handleDecadeOnViewDateChange(dateString, _ref2) {
      var dateMoment = _ref2.dateMoment,
        timestamp = _ref2.timestamp;
      var props = this.p;
      var currentViewMoment = props.viewMoment;
      if (currentViewMoment) {
        dateMoment.set('month', currentViewMoment.get('month'));
        dateString = this.format(dateMoment);
        timestamp = +dateMoment;
      }
      this.onViewDateChange(dateString, {
        dateMoment: dateMoment,
        timestamp: timestamp
      });
    }
  }, {
    key: "handleDecadeOnActiveDateChange",
    value: function handleDecadeOnActiveDateChange(dateString, _ref3) {
      var dateMoment = _ref3.dateMoment,
        timestamp = _ref3.timestamp;
      var props = this.p;
      var currentViewMoment = props.viewMoment;
      if (currentViewMoment) {
        dateMoment.set('month', currentViewMoment.get('month'));
        dateString = this.format(dateMoment);
        timestamp = +dateMoment;
      }
      this.onActiveDateChange(dateString, {
        dateMoment: dateMoment,
        timestamp: timestamp
      });
    }
  }, {
    key: "handleDecadeOnChange",
    value: function handleDecadeOnChange(dateString, _ref4, event) {
      var dateMoment = _ref4.dateMoment,
        timestamp = _ref4.timestamp;
      var props = this.p;
      var currentViewMoment = props.viewMoment;
      if (currentViewMoment) {
        dateMoment.set('month', currentViewMoment.get('month'));
        dateString = this.format(dateMoment);
        timestamp = +dateMoment;
      }
      this.onChange(dateString, {
        dateMoment: dateMoment,
        timestamp: timestamp
      }, event);
    }
  }, {
    key: "handleYearViewOnChange",
    value: function handleYearViewOnChange(dateString, _ref5, event) {
      var dateMoment = _ref5.dateMoment,
        timestamp = _ref5.timestamp;
      var props = this.p;
      var currentMoment = props.moment;
      if (currentMoment) {
        dateMoment.set('year', currentMoment.get('year'));
        dateString = this.format(dateMoment);
        timestamp = +dateMoment;
      }
      this.onChange(dateString, {
        dateMoment: dateMoment,
        timestamp: timestamp
      }, event);
    }
  }, {
    key: "onViewDateChange",
    value: function onViewDateChange(dateString, _ref6) {
      var dateMoment = _ref6.dateMoment,
        timestamp = _ref6.timestamp;
      return _DecadeView.onViewDateChange.call(this, {
        dateMoment: dateMoment,
        timestamp: timestamp
      });
    }
  }, {
    key: "gotoViewDate",
    value: function gotoViewDate(_ref7) {
      var dateMoment = _ref7.dateMoment,
        timestamp = _ref7.timestamp;
      return _DecadeView.gotoViewDate.call(this, {
        dateMoment: dateMoment,
        timestamp: timestamp
      });
    }
  }, {
    key: "onActiveDateChange",
    value: function onActiveDateChange(dateString, _ref8) {
      var dateMoment = _ref8.dateMoment,
        timestamp = _ref8.timestamp;
      return _DecadeView.onActiveDateChange.call(this, {
        dateMoment: dateMoment,
        timestamp: timestamp
      });
    }
  }, {
    key: "onChange",
    value: function onChange(dateString, _ref9, event) {
      var dateMoment = _ref9.dateMoment,
        timestamp = _ref9.timestamp;
      return _DecadeView.onChange.call(this, {
        dateMoment: dateMoment,
        timestamp: timestamp
      }, event);
    }
  }]);
  return MonthDecadeView;
}(_reactClass.default);
exports["default"] = MonthDecadeView;
MonthDecadeView.defaultProps = {
  rootClassName: 'inovua-react-toolkit-calendar__month-decade-view',
  okOnEnter: true,
  footer: true,
  theme: 'default',
  navigation: true,
  focusYearView: false,
  focusDecadeView: true,
  dateFormat: 'YYYY-MM-DD',
  adjustDateStartOf: 'month',
  adjustMinDateStartOf: 'month',
  adjustMaxDateStartOf: 'month'
};
MonthDecadeView.propTypes = (_MonthDecadeView$prop = {
  okOnEnter: _propTypes.default.bool,
  navigation: _propTypes.default.bool,
  focusYearView: _propTypes.default.bool,
  focusDecadeView: _propTypes.default.bool,
  footer: _propTypes.default.bool,
  minDate: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.object, _propTypes.default.string]),
  maxDate: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.object, _propTypes.default.string]),
  viewMoment: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.object, _propTypes.default.string]),
  activeDate: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.object, _propTypes.default.string]),
  date: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.object, _propTypes.default.string]),
  defaultDate: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.object, _propTypes.default.string]),
  defaultViewDate: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.object, _propTypes.default.string]),
  dateFormat: _propTypes.default.string,
  moment: _propTypes.default.object,
  locale: _propTypes.default.string,
  theme: _propTypes.default.string
}, (0, _defineProperty2.default)(_MonthDecadeView$prop, "dateFormat", _propTypes.default.string), (0, _defineProperty2.default)(_MonthDecadeView$prop, "adjustDateStartOf", _propTypes.default.string), (0, _defineProperty2.default)(_MonthDecadeView$prop, "adjustMinDateStartOf", _propTypes.default.string), (0, _defineProperty2.default)(_MonthDecadeView$prop, "adjustMaxDateStartOf", _propTypes.default.string), (0, _defineProperty2.default)(_MonthDecadeView$prop, "cleanup", _propTypes.default.func), (0, _defineProperty2.default)(_MonthDecadeView$prop, "onCancelClick", _propTypes.default.func), (0, _defineProperty2.default)(_MonthDecadeView$prop, "onOkClick", _propTypes.default.func), (0, _defineProperty2.default)(_MonthDecadeView$prop, "onChange", _propTypes.default.func), _MonthDecadeView$prop);

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/MonthView/index.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/MonthView/index.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "NAV_KEYS", ({
  enumerable: true,
  get: function get() {
    return _navKeys.default;
  }
}));
exports.renderFooter = exports["default"] = void 0;
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _reactClass = _interopRequireDefault(__webpack_require__(/*! ../../../react-class */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/index.js"));
var _moment = _interopRequireDefault(__webpack_require__(/*! moment */ "./node_modules/moment/moment.js"));
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _clampRange = _interopRequireDefault(__webpack_require__(/*! ../clampRange */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/clampRange.js"));
var _toMoment = _interopRequireDefault(__webpack_require__(/*! ../toMoment */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/toMoment.js"));
var _isInRange = _interopRequireDefault(__webpack_require__(/*! ../utils/isInRange */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/isInRange.js"));
var _NavBar = _interopRequireDefault(__webpack_require__(/*! ../NavBar */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/NavBar.js"));
var _Footer = _interopRequireDefault(__webpack_require__(/*! ../Footer */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/Footer.js"));
var _joinFunctions = _interopRequireDefault(__webpack_require__(/*! ../joinFunctions */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/joinFunctions.js"));
var _assignDefined = _interopRequireDefault(__webpack_require__(/*! ../assignDefined */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/assignDefined.js"));
var _BasicMonthView = _interopRequireWildcard(__webpack_require__(/*! ../BasicMonthView */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/BasicMonthView.js"));
var _onKeyDown = _interopRequireDefault(__webpack_require__(/*! ./onKeyDown */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/MonthView/onKeyDown.js"));
var _navKeys = _interopRequireDefault(__webpack_require__(/*! ./navKeys */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/MonthView/navKeys.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var TODAY;
var RENDER_DAY = function RENDER_DAY(props) {
  var divProps = (0, _assign.default)({}, props);
  delete divProps.date;
  delete divProps.dateMoment;
  delete divProps.day;
  delete divProps.isAfterMaxDate;
  delete divProps.isBeforeMinDate;
  delete divProps.inRange;
  delete divProps.timestamp;
  return _react.default.createElement("div", _objectSpread({}, divProps));
};
var isDateInMinMax = function isDateInMinMax(timestamp, props) {
  if (props.minDate && timestamp < props.minDate) {
    return false;
  }
  if (props.maxDate && timestamp > props.maxDate) {
    return false;
  }
  return true;
};
var _isValidActiveDate = function isValidActiveDate(timestamp, props) {
  if (!props) {
    throw new Error('props is mandatory in isValidActiveDate');
  }
  var dayProps = props.dayPropsMap[timestamp];
  if (dayProps && dayProps.disabled) {
    return false;
  }
  return isDateInMinMax(timestamp, props);
};
var _isInView = function isInView(mom, props) {
  if (!props) {
    throw new Error('props is mandatory in isInView');
  }
  var daysInView = props.daysInView;
  return (0, _isInRange.default)(mom, {
    range: daysInView,
    inclusive: true
  });
};
var prepareViewDate = function prepareViewDate(props, state) {
  var viewDate = props.viewDate === undefined ? state.viewDate : props.viewDate;
  if (!viewDate && props.moment) {
    return (0, _toMoment.default)(props.moment);
  }
  return viewDate;
};
var prepareDate = function prepareDate(props, state) {
  if (props.range) {
    return null;
  }
  return props.date === undefined ? state.date : props.date;
};
var prepareRange = function prepareRange(props, state) {
  if (props.moment) {
    return null;
  }
  return props.partialRange ? props.range || state.range : state.range || props.range;
};
var prepareActiveDate = function prepareActiveDate(props, state) {
  var fallbackDate = prepareDate(props, state) || (prepareRange(props, state) || [])[0];
  var activeDate = props.activeDate === undefined ? state.activeDate || fallbackDate : props.activeDate;
  var daysInView = props.daysInView;
  if (activeDate && daysInView && props.constrainActiveInView) {
    var activeMoment = this.toMoment(activeDate);
    if (!_isInView(activeMoment, props)) {
      var date = fallbackDate;
      var dateMoment = this.toMoment(date);
      if (date && _isInView(dateMoment, props) && _isValidActiveDate(+dateMoment, props)) {
        return date;
      }
      return null;
    }
  }
  return _isValidActiveDate(+activeDate, props) ? activeDate : null;
};
var _renderFooter = function renderFooter(props, buttonHandlers) {
  if (!props.footer) {
    return null;
  }
  buttonHandlers = buttonHandlers || props;
  var renderFooter = props.renderFooter;
  var footerFnProps = {
    onTodayClick: buttonHandlers.onFooterTodayClick,
    onClearClick: buttonHandlers.onFooterClearClick,
    onOkClick: buttonHandlers.onFooterOkClick,
    onCancelClick: buttonHandlers.onFooterCancelClick
  };
  var childFooter = _react.default.Children.toArray(props.children).filter(function (c) {
    return c && c.props && c.props.isDatePickerFooter;
  })[0];
  var childFooterProps = childFooter ? childFooter.props : null;
  if (childFooterProps) {
    Object.keys(footerFnProps).forEach(function (key) {
      if (childFooter.props[key]) {
        footerFnProps[key] = (0, _joinFunctions.default)(footerFnProps[key], childFooter.props[key]);
      }
    });
  }
  var footerProps = (0, _assignDefined.default)({}, footerFnProps, {
    key: 'footer_props_key',
    todayButton: props.todayButton,
    todayButtonText: props.todayButtonText,
    clearButton: props.clearButton,
    clearButtonText: props.clearButtonText,
    theme: props.theme,
    okButton: props.okButton === undefined && !props.insideField ? false : props.okButton,
    okButtonText: props.okButtonText,
    cancelButton: props.cancelButton === undefined && !props.insideField ? false : props.cancelButton,
    cancelButtonText: props.cancelButtonText,
    clearDate: props.clearDate || props.footerClearDate,
    selectDate: props.selectDate
  });
  if (childFooter) {
    if (renderFooter) {
      return renderFooter((0, _assign.default)({}, childFooter.props, footerProps));
    }
    return _react.default.cloneElement(childFooter, footerProps);
  }
  if (renderFooter) {
    return renderFooter(footerProps);
  }
  return _react.default.createElement(_Footer.default, _objectSpread({}, footerProps));
};
exports.renderFooter = _renderFooter;
var MonthView = function (_Component) {
  (0, _inherits2.default)(MonthView, _Component);
  var _super = _createSuper(MonthView);
  function MonthView(props) {
    var _this;
    (0, _classCallCheck2.default)(this, MonthView);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "componentDidUpdate", function (prevProps) {
      if (prevProps.locale !== _this.props.locale || prevProps.dateFormat !== _this.props.dateFormat) {
        _this.updateToMoment(_this.props);
      }
    });
    _this.state = {
      range: props.defaultRange,
      date: props.defaultDate,
      hoverRange: props.defaultHoverRange,
      activeDate: props.defaultActiveDate,
      viewDate: props.defaultViewDate
    };
    _this.monthViewRef = (0, _react.createRef)();
    _this.updateToMoment(props);
    return _this;
  }
  (0, _createClass2.default)(MonthView, [{
    key: "isInView",
    value: function isInView(mom, props) {
      return _isInView(mom, props || this.p);
    }
  }, {
    key: "updateToMoment",
    value: function updateToMoment(props) {
      this.toMoment = function (value, dateFormat) {
        return (0, _toMoment.default)(value, {
          locale: props.locale,
          dateFormat: dateFormat || props.dateFormat
        });
      };
      TODAY = +this.toMoment().startOf('day');
    }
  }, {
    key: "prepareClassName",
    value: function prepareClassName(props) {
      return (0, _join.default)(props.className, props.rootClassName, "".concat(props.rootClassName, "--theme-").concat(props.theme), props.size === undefined ? "".concat(props.rootClassName, "-relative") : null);
    }
  }, {
    key: "prepareProps",
    value: function prepareProps(thisProps, state) {
      var _this2 = this;
      var props = this.p = (0, _assign.default)({}, thisProps);
      state = state || this.state;
      props.hoverRange = props.hoverRange === undefined ? this.state.hoverRange : props.hoverRange;
      props.dayPropsMap = {};
      props.className = this.prepareClassName && this.prepareClassName(props);
      var minDate = props.minDate,
        maxDate = props.maxDate;
      if (minDate) {
        props.minDateMoment = this.toMoment(props.minDate).startOf('day');
        props.minDate = +props.minDateMoment;
      }
      if (maxDate) {
        props.maxDateMoment = this.toMoment(props.maxDate);
        props.maxDate = +props.maxDateMoment;
      }
      var date = prepareDate(props, state);
      if (date) {
        props.moment = props.moment || (props.range ? null : this.toMoment(date).startOf('day'));
        props.timestamp = props.moment ? +props.moment : null;
      }
      props.viewMoment = props.viewMoment || this.toMoment(prepareViewDate(props, state));
      if (props.constrainViewDate && props.minDate && props.viewMoment.isBefore(props.minDate)) {
        props.minConstrained = true;
        props.viewMoment = this.toMoment(props.minDate);
      }
      if (props.constrainViewDate && props.maxDate && props.viewMoment.isAfter(props.maxDate)) {
        props.maxConstrained = true;
        props.viewMoment = this.toMoment(props.maxDate);
      }
      props.viewMonthStart = this.toMoment(props.viewMoment).startOf('month');
      props.viewMonthEnd = this.toMoment(props.viewMoment).endOf('month');
      var range = prepareRange(props, state);
      if (range) {
        props.range = range.map(function (d) {
          return _this2.toMoment(d).startOf('day');
        });
        props.rangeStart = state.rangeStart || (props.range.length == 1 ? props.range[0] : null);
      }
      props.daysInView = (0, _BasicMonthView.getDaysInMonthView)(props.viewMoment, props);
      var activeDate = prepareActiveDate.call(this, props, state);
      if (activeDate) {
        props.activeDate = +this.toMoment(activeDate).startOf('day');
      }
      return props;
    }
  }, {
    key: "getViewMoment",
    value: function getViewMoment() {
      return this.p.viewMoment;
    }
  }, {
    key: "getViewSize",
    value: function getViewSize() {
      return 1;
    }
  }, {
    key: "preparePrevNextClassName",
    value: function preparePrevNextClassName(timestamp, props) {
      var viewMonthStart = props.viewMonthStart,
        viewMonthEnd = props.viewMonthEnd,
        rootClassName = props.rootClassName;
      var before = timestamp < viewMonthStart;
      var after = timestamp > viewMonthEnd;
      var thisMonth = !before && !after;
      return (0, _join.default)(timestamp == TODAY && "".concat(rootClassName, "-day--today"), props.highlightToday && timestamp == TODAY && "".concat(rootClassName, "-day--today-highlight"), before && "".concat(rootClassName, "-day--prev-month"), before && !props.showDaysBeforeMonth && "".concat(rootClassName, "-day--hidden"), after && "".concat(rootClassName, "-day--next-month"), after && !props.showDaysAfterMonth && "".concat(rootClassName, "-day--hidden"), thisMonth && "".concat(rootClassName, "-day--this-month"));
    }
  }, {
    key: "prepareMinMaxProps",
    value: function prepareMinMaxProps(timestamp, props) {
      var classes = [];
      var rootClassName = this.props.rootClassName;
      var isBeforeMinDate = false;
      var isAfterMaxDate = false;
      var minDate = props.minDate,
        maxDate = props.maxDate;
      if (minDate && timestamp < minDate) {
        classes.push("".concat(rootClassName, "-day--disabled-min"));
        isBeforeMinDate = true;
      }
      if (maxDate && timestamp > maxDate) {
        classes.push("".concat(rootClassName, "-day--disabled-max"));
        isAfterMaxDate = true;
      }
      return {
        className: (0, _join.default)(classes),
        isBeforeMinDate: isBeforeMinDate,
        isAfterMaxDate: isAfterMaxDate,
        disabled: isBeforeMinDate || isAfterMaxDate
      };
    }
  }, {
    key: "prepareWeekendClassName",
    value: function prepareWeekendClassName(dateMoment, _ref) {
      var highlightWeekends = _ref.highlightWeekends;
      var weekDay = dateMoment.day();
      var rootClassName = this.props.rootClassName;
      if (weekDay === 0 || weekDay === 6) {
        return (0, _join.default)("".concat(rootClassName, "-day--weekend"), highlightWeekends && "".concat(rootClassName, "-day--weekend-highlight"));
      }
      return '';
    }
  }, {
    key: "prepareRangeProps",
    value: function prepareRangeProps(dateMoment, props) {
      var inRange = false;
      var className = [];
      var hoverRange = props.hoverRange,
        range = props.range,
        rootClassName = props.rootClassName;
      if (range) {
        var _range = (0, _slicedToArray2.default)(range, 2),
          rangeStart = _range[0],
          rangeEnd = _range[1];
        if (!range.length) {
          rangeStart = props.rangeStart;
        }
        var rangeName = 'range';
        if (rangeStart && dateMoment.isSame(rangeStart)) {
          className.push("".concat(rootClassName, "-day--").concat(rangeName, "-start"));
          className.push("".concat(rootClassName, "-day--in-").concat(rangeName));
          if (!rangeEnd) {
            className.push("".concat(rootClassName, "-day--").concat(rangeName, "-end"));
          }
          inRange = true;
        }
        if (rangeEnd && dateMoment.isSame(rangeEnd)) {
          className.push("".concat(rootClassName, "-day--").concat(rangeName, "-end"));
          className.push("".concat(rootClassName, "-day--in-").concat(rangeName));
          inRange = true;
        }
        if (!inRange && (0, _isInRange.default)(dateMoment, range)) {
          className.push("".concat(rootClassName, "-day--in-").concat(rangeName));
          inRange = true;
        }
      }
      if (range && range.length < 2 && hoverRange && (0, _isInRange.default)(dateMoment, hoverRange)) {
        className.push("".concat(rootClassName, "-day--in-hover-range"));
        if (dateMoment.isSame(hoverRange[0])) {
          className.push("".concat(rootClassName, "-day--hover-range-start"));
        }
        if (dateMoment.isSame(hoverRange[1])) {
          className.push("".concat(rootClassName, "-day--hover-range-end"));
        }
      }
      return {
        inRange: inRange,
        className: (0, _join.default)(className)
      };
    }
  }, {
    key: "prepareDayProps",
    value: function prepareDayProps(renderDayProps, props) {
      var timestamp = renderDayProps.timestamp,
        dateMoment = renderDayProps.dateMoment,
        className = renderDayProps.className;
      props = props || this.p;
      var _props = props,
        rootClassName = _props.rootClassName;
      var result = {};
      var minMaxProps = this.prepareMinMaxProps(timestamp, props);
      var rangeProps = this.prepareRangeProps(dateMoment, props);
      var weekendClassName = this.prepareWeekendClassName(dateMoment, props);
      var prevNextClassName = this.preparePrevNextClassName(timestamp, props);
      var currentTimestamp = props.timestamp;
      (0, _assign.default)(result, minMaxProps, rangeProps, {
        children: _react.default.createElement("div", {
          className: "".concat(rootClassName, "-day-text")
        }, renderDayProps.day),
        className: (0, _join.default)([minMaxProps.className, rangeProps.className, prevNextClassName, weekendClassName, timestamp == currentTimestamp ? "".concat(rootClassName, "-day--value") : null, timestamp == props.activeDate ? "".concat(rootClassName, "-day--active") : null, className])
      });
      if (!result.disabled && props.isDisabledDay) {
        result.disabled = props.isDisabledDay(renderDayProps, props);
      }
      return result;
    }
  }, {
    key: "focus",
    value: function focus() {
      var domNode = this.getDOMNode();
      if (domNode) {
        domNode.focus();
      }
    }
  }, {
    key: "getDOMNode",
    value: function getDOMNode() {
      return this.monthViewRef.current;
    }
  }, {
    key: "onDayTextMouseEnter",
    value: function onDayTextMouseEnter(_ref2) {
      var dateMoment = _ref2.dateMoment,
        timestamp = _ref2.timestamp;
      if (!this.state.focused) {
        this.focus();
      }
      this.onActiveDateChange({
        dateMoment: dateMoment,
        timestamp: timestamp
      });
    }
  }, {
    key: "renderDay",
    value: function renderDay(renderProps) {
      var props = this.p;
      var _renderProps = renderProps,
        dateMoment = _renderProps.dateMoment,
        timestamp = _renderProps.timestamp;
      var rootClassName = renderProps.rootClassName || this.props.rootClassName;
      (0, _assign.default)(renderProps, this.prepareDayProps(renderProps, props));
      if (props.range && props.highlightRangeOnMouseMove) {
        renderProps.onMouseEnter = this.handleDayMouseEnter.bind(this, renderProps);
      }
      if (typeof props.onRenderDay === 'function') {
        var newRenderProps = props.onRenderDay(renderProps);
        if (newRenderProps !== undefined) {
          renderProps = newRenderProps;
        }
      }
      if (renderProps.disabled) {
        renderProps.className = (0, _join.default)("".concat(rootClassName, "-day--disabled"), renderProps.className);
      } else {
        var eventParam = {
          dateMoment: dateMoment,
          timestamp: timestamp
        };
        var onClick = this.handleClick.bind(this, eventParam);
        var prevOnClick = renderProps.onClick;
        renderProps.onClick = prevOnClick ? function () {
          prevOnClick.apply(void 0, arguments);
          onClick.apply(void 0, arguments);
        } : onClick;
        if (props.activateOnHover && this.props.activeDate !== null) {
          var onMouseEnter = this.onDayTextMouseEnter.bind(this, eventParam);
          var prevOnMouseEnter = renderProps.onMouseEnter;
          renderProps.onMouseEnter = prevOnMouseEnter ? function () {
            prevOnMouseEnter.apply(void 0, arguments);
            onMouseEnter.apply(void 0, arguments);
          } : onMouseEnter;
        }
      }
      props.dayPropsMap[timestamp] = renderProps;
      var renderFunction = props.renderDay || RENDER_DAY;
      var result = renderFunction(renderProps);
      if (result === undefined) {
        result = RENDER_DAY(renderProps);
      }
      return result;
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.p = this.prepareProps(this.props);
      var basicViewProps = (0, _assign.default)({}, props);
      delete basicViewProps.activeDate;
      delete basicViewProps.activateOnHover;
      delete basicViewProps.arrows;
      delete basicViewProps.cleanup;
      delete basicViewProps.clockTabIndex;
      delete basicViewProps.constrainViewDate;
      delete basicViewProps.constrainActiveInView;
      delete basicViewProps.dayPropsMap;
      delete basicViewProps.date;
      delete basicViewProps.defaultActiveDate;
      delete basicViewProps.defaultDate;
      delete basicViewProps.defaultRange;
      delete basicViewProps.defaultViewDate;
      delete basicViewProps.enableMonthDecadeView;
      delete basicViewProps.focusOnFooterMouseDown;
      delete basicViewProps.focusOnNavMouseDown;
      delete basicViewProps.footer;
      delete basicViewProps.footerClearDate;
      delete basicViewProps.getTransitionTime;
      delete basicViewProps.highlightRangeOnMouseMove;
      delete basicViewProps.highlightToday;
      delete basicViewProps.highlightWeekends;
      delete basicViewProps.hoverRange;
      delete basicViewProps.insideField;
      delete basicViewProps.insideMultiView;
      delete basicViewProps.isDatePicker;
      delete basicViewProps.isDisabledDay;
      delete basicViewProps.maxConstrained;
      delete basicViewProps.maxDate;
      delete basicViewProps.maxDateMoment;
      delete basicViewProps.minConstrained;
      delete basicViewProps.minDate;
      delete basicViewProps.minDateMoment;
      delete basicViewProps.navBarArrows;
      delete basicViewProps.navNext;
      delete basicViewProps.navigation;
      delete basicViewProps.navigate;
      delete basicViewProps.navOnDateClick;
      delete basicViewProps.navPrev;
      delete basicViewProps.onActiveDateChange;
      delete basicViewProps.onChange;
      delete basicViewProps.onHoverRangeChange;
      delete basicViewProps.onRangeChange;
      delete basicViewProps.onViewDateChange;
      delete basicViewProps.onTransitionStart;
      delete basicViewProps.partialRange;
      delete basicViewProps.range;
      delete basicViewProps.rangeStart;
      delete basicViewProps.renderNavBar;
      delete basicViewProps.select;
      delete basicViewProps.showDaysAfterMonth;
      delete basicViewProps.showDaysBeforeMonth;
      delete basicViewProps.showClock;
      delete basicViewProps.theme;
      delete basicViewProps.viewDate;
      delete basicViewProps.viewMonthEnd;
      delete basicViewProps.viewMonthStart;
      delete basicViewProps.okButtonText;
      delete basicViewProps.okButton;
      delete basicViewProps.enableMonthDecadeViewAnimation;
      delete basicViewProps.showMonthDecadeViewAnimation;
      if (typeof props.cleanup == 'function') {
        props.cleanup(basicViewProps);
      }
      return _react.default.createElement(_BasicMonthView.default, _objectSpread(_objectSpread({
        key: "basic_month",
        tabIndex: 0,
        innerRef: this.monthViewRef
      }, basicViewProps), {}, {
        renderChildren: this.renderChildren,
        onKeyDown: this.onViewKeyDown,
        onFocus: this.onFocus,
        onBlur: this.onBlur,
        renderDay: this.renderDay,
        viewMoment: props.viewMoment,
        onMouseLeave: props.highlightRangeOnMouseMove ? this.handleViewMouseLeave : null
      }));
    }
  }, {
    key: "handleViewMouseLeave",
    value: function handleViewMouseLeave(event) {
      if (this.props.onMouseLeave) {
        this.props.onMouseLeave(event);
      }
      if (this.state.hoverRange) {
        this.setHoverRange(null);
      }
    }
  }, {
    key: "renderChildren",
    value: function renderChildren(children) {
      var props = this.p;
      var navBar = this.renderNavBar(props);
      var footer = this.renderFooter(props);
      var result = [navBar, children, footer];
      if (props.renderChildren) {
        return props.renderChildren(result);
      }
      return result;
    }
  }, {
    key: "focusFromFooter",
    value: function focusFromFooter() {
      if (!this.isFocused() && this.props.focusOnFooterMouseDown) {
        this.focus();
      }
    }
  }, {
    key: "onFooterTodayClick",
    value: function onFooterTodayClick() {
      this.focusFromFooter();
      if (this.props.onFooterTodayClick) {
        if (this.props.onFooterTodayClick() === false) {
          return;
        }
      }
      this.select({
        dateMoment: this.toMoment(Date.now())
      });
    }
  }, {
    key: "onFooterClearClick",
    value: function onFooterClearClick() {
      this.focusFromFooter();
      if (this.props.onFooterClearClick) {
        if (this.props.onFooterClearClick() === false) {
          return;
        }
      }
      this.select({
        dateMoment: null
      });
    }
  }, {
    key: "onFooterOkClick",
    value: function onFooterOkClick() {
      this.focusFromFooter();
      if (this.props.onFooterOkClick) {
        this.props.onFooterOkClick();
      }
    }
  }, {
    key: "onFooterCancelClick",
    value: function onFooterCancelClick() {
      if (this.props.onFooterCancelClick) {
        this.props.onFooterCancelClick();
      }
    }
  }, {
    key: "renderFooter",
    value: function renderFooter(props) {
      return _renderFooter((0, _assign.default)({}, props, {
        selectDate: this.select,
        owner: this
      }), this);
    }
  }, {
    key: "renderNavBar",
    value: function renderNavBar(props) {
      var _this3 = this;
      var theme = props.theme;
      var childNavBar = _react.default.Children.toArray(props.children).filter(function (c) {
        return c && c.props && c.props.isDatePickerNavBar;
      })[0];
      var ref = function ref(navBar) {
        _this3.navBar = navBar;
      };
      var okButtonText = props.okButtonText,
        cancelButtonText = props.cancelButtonText,
        locale = props.locale;
      var defaultProps = (0, _assignDefined.default)({}, {
        okButtonText: okButtonText,
        cancelButtonText: cancelButtonText,
        locale: locale
      });
      if (!childNavBar) {
        if (props.navigation || props.renderNavBar) {
          return this.renderNavBarComponent((0, _assignDefined.default)(_objectSpread(_objectSpread({}, defaultProps), {}, {
            minDate: props.minDate,
            maxDate: props.maxDate,
            theme: theme,
            secondary: true,
            date: props.moment,
            viewMoment: props.viewMoment,
            onViewDateChange: this.onNavViewDateChange,
            onMouseDown: this.onNavMouseDown,
            arrows: props.navBarArrows,
            ref: ref,
            enableMonthDecadeViewAnimation: props.enableMonthDecadeViewAnimation,
            showMonthDecadeViewAnimation: props.showMonthDecadeViewAnimation
          }), {
            enableMonthDecadeView: props.enableMonthDecadeView
          }));
        }
        return null;
      }
      var navBarProps = (0, _assign.default)({}, childNavBar.props, (0, _assignDefined.default)(_objectSpread(_objectSpread({}, defaultProps), {}, {
        viewMoment: props.viewMoment,
        date: props.moment,
        theme: theme,
        ref: ref,
        minDate: props.minDate,
        maxDate: props.maxDate
      }), {
        enableMonthDecadeView: props.enableMonthDecadeView
      }));
      var prevOnViewDateChange = navBarProps.onViewDateChange;
      var onViewDateChange = this.onViewDateChange;
      if (prevOnViewDateChange) {
        onViewDateChange = function onViewDateChange() {
          prevOnViewDateChange.apply(void 0, arguments);
          _this3.onNavViewDateChange.apply(_this3, arguments);
        };
      }
      navBarProps.onViewDateChange = onViewDateChange;
      var prevOnMouseDown = navBarProps.onMouseDown;
      var onMouseDown = this.onNavMouseDown;
      if (prevOnMouseDown) {
        onMouseDown = function onMouseDown() {
          prevOnMouseDown.apply(void 0, arguments);
          _this3.onNavMouseDown.apply(_this3, arguments);
        };
      }
      navBarProps.onMouseDown = onMouseDown;
      if (navBarProps) {
        return this.renderNavBarComponent(navBarProps);
      }
      return null;
    }
  }, {
    key: "onNavMouseDown",
    value: function onNavMouseDown(event) {
      if (this.props.focusOnNavMouseDown && !this.isFocused()) {
        this.focus();
      }
    }
  }, {
    key: "renderNavBarComponent",
    value: function renderNavBarComponent(navBarProps) {
      if (this.props.renderNavBar) {
        return this.props.renderNavBar(navBarProps);
      }
      return _react.default.createElement(_NavBar.default, _objectSpread({
        key: "month_navBar",
        showClock: this.props.showClock
      }, navBarProps));
    }
  }, {
    key: "isFocused",
    value: function isFocused() {
      return this.state.focused;
    }
  }, {
    key: "onFocus",
    value: function onFocus(event) {
      this.setState({
        focused: true
      });
      this.props.onFocus(event);
    }
  }, {
    key: "onBlur",
    value: function onBlur(event) {
      this.setState({
        focused: false
      });
      this.hideMonthDecadeView();
      this.props.onBlur(event);
    }
  }, {
    key: "showMonthDecadeView",
    value: function showMonthDecadeView() {
      if (this.navBar) {
        this.navBar.showMonthDecadeView();
      }
    }
  }, {
    key: "hideMonthDecadeView",
    value: function hideMonthDecadeView() {
      if (this.navBar) {
        this.navBar.hideMonthDecadeView();
      }
    }
  }, {
    key: "isMonthDecadeViewVisible",
    value: function isMonthDecadeViewVisible() {
      if (this.navBar) {
        return this.navBar.isMonthDecadeViewVisible();
      }
      return false;
    }
  }, {
    key: "tryNavBarKeyDown",
    value: function tryNavBarKeyDown(event) {
      if (this.navBar && this.navBar.getMonthDecadeView) {
        var monthDecadeViewView = this.navBar.getMonthDecadeView();
        if (monthDecadeViewView && monthDecadeViewView.onKeyDown) {
          monthDecadeViewView.onKeyDown(event);
          return true;
        }
      }
      return false;
    }
  }, {
    key: "onViewKeyDown",
    value: function onViewKeyDown(event) {
      if (this.tryNavBarKeyDown(event)) {
        return;
      }
      return _onKeyDown.default.call(this, event);
    }
  }, {
    key: "confirm",
    value: function confirm(date, event) {
      event.preventDefault();
      if (this.props.confirm) {
        return this.props.confirm(date, event);
      }
      var dateMoment = this.toMoment(date);
      this.select({
        dateMoment: dateMoment,
        timestamp: +dateMoment
      }, event);
      return undefined;
    }
  }, {
    key: "navigate",
    value: function navigate(dir, event) {
      var _this4 = this;
      var props = this.p;
      var getNavigationDate = function getNavigationDate(dir, date, dateFormat) {
        var mom = _moment.default.isMoment(date) ? date : _this4.toMoment(date, dateFormat);
        return typeof dir == 'function' ? dir(mom) : mom.add(dir, 'day');
      };
      if (props.navigate) {
        return props.navigate(dir, event, getNavigationDate);
      }
      event.preventDefault();
      if (props.activeDate) {
        var nextMoment = getNavigationDate(dir, props.activeDate);
        this.gotoViewDate({
          dateMoment: nextMoment
        });
      }
      return undefined;
    }
  }, {
    key: "handleDayMouseEnter",
    value: function handleDayMouseEnter(dayProps) {
      var props = this.p;
      var rangeStart = props.rangeStart,
        range = props.range;
      var partial = !!(rangeStart && range.length < 2);
      if (partial) {
        this.setHoverRange((0, _clampRange.default)([rangeStart, dayProps.dateMoment]));
      }
    }
  }, {
    key: "handleClick",
    value: function handleClick(_ref3, event) {
      var timestamp = _ref3.timestamp,
        dateMoment = _ref3.dateMoment;
      var props = this.p;
      if (props.minDate && timestamp < props.minDate) {
        return;
      }
      if (props.maxDate && timestamp > props.maxDate) {
        return;
      }
      event.target.value = timestamp;
      this.select({
        dateMoment: dateMoment,
        timestamp: timestamp
      }, event);
    }
  }, {
    key: "select",
    value: function select(_ref4, event) {
      var dateMoment = _ref4.dateMoment,
        timestamp = _ref4.timestamp;
      if (dateMoment && timestamp === undefined) {
        timestamp = +dateMoment;
      }
      if (this.props.select) {
        return this.props.select({
          dateMoment: dateMoment,
          timestamp: timestamp
        }, event);
      }
      if (!timestamp) {
        timestamp = +dateMoment;
      }
      this.gotoViewDate({
        dateMoment: dateMoment,
        timestamp: timestamp
      });
      var props = this.p;
      var range = props.range;
      if (range) {
        this.selectRange({
          dateMoment: dateMoment,
          timestamp: timestamp
        }, event);
      } else {
        this.onChange({
          dateMoment: dateMoment,
          timestamp: timestamp
        }, event);
      }
      return undefined;
    }
  }, {
    key: "selectRange",
    value: function selectRange(_ref5, event) {
      var dateMoment = _ref5.dateMoment,
        timestamp = _ref5.timestamp;
      var props = this.p;
      var range = props.range;
      var rangeStart = props.rangeStart;
      if (dateMoment == null) {
        this.setState({
          rangeStart: null
        });
        this.onRangeChange([], event);
        return;
      }
      if (!rangeStart) {
        this.setState({
          rangeStart: dateMoment
        });
        if (range.length == 2) {
          this.onRangeChange([], event);
        }
      } else {
        this.setState({
          rangeStart: null
        });
        this.onRangeChange((0, _clampRange.default)([rangeStart, dateMoment]), event);
      }
    }
  }, {
    key: "format",
    value: function format(mom) {
      return mom == null ? '' : mom.format(this.props.dateFormat);
    }
  }, {
    key: "setHoverRange",
    value: function setHoverRange(hoverRange) {
      if (this.props.hoverRange === undefined) {
        this.setState({
          hoverRange: hoverRange
        });
      }
      if (this.props.onHoverRangeChange) {
        this.props.onHoverRangeChange(hoverRange);
      }
    }
  }, {
    key: "onRangeChange",
    value: function onRangeChange(range, event) {
      var _this5 = this;
      this.setState({
        range: this.props.range === undefined ? range : null
      });
      this.setHoverRange(null);
      if (this.props.onRangeChange) {
        var newRange = range.map(function (m) {
          var dateMoment = _this5.toMoment(m);
          return {
            dateString: dateMoment.format(_this5.props.dateFormat),
            dateMoment: dateMoment,
            timestamp: +dateMoment
          };
        });
        var formatted = newRange.map(function (o) {
          return o.dateString;
        });
        this.props.onRangeChange(formatted, newRange, event);
      }
    }
  }, {
    key: "onChange",
    value: function onChange(_ref6, event) {
      var dateMoment = _ref6.dateMoment,
        timestamp = _ref6.timestamp,
        noCollapse = _ref6.noCollapse;
      if (this.props.date === undefined) {
        this.setState({
          date: timestamp
        });
      }
      if (this.props.onChange) {
        var dateString = this.format(dateMoment);
        this.props.onChange(dateString, {
          dateMoment: dateMoment,
          timestamp: timestamp,
          dateString: dateString,
          noCollapse: noCollapse
        }, event);
      }
    }
  }, {
    key: "onNavViewDateChange",
    value: function onNavViewDateChange(dateString, _ref7) {
      var dateMoment = _ref7.dateMoment,
        timestamp = _ref7.timestamp;
      this.onViewDateChange({
        dateMoment: dateMoment,
        timestamp: timestamp
      });
    }
  }, {
    key: "onViewDateChange",
    value: function onViewDateChange(_ref8) {
      var dateMoment = _ref8.dateMoment,
        timestamp = _ref8.timestamp;
      var minDate;
      var maxDate;
      if (this.p.minDateMoment) {
        minDate = +this.toMoment(this.p.minDateMoment).startOf('month');
      }
      if (this.p.maxDateMoment) {
        maxDate = +this.toMoment(this.p.maxDateMoment).endOf('month');
      }
      if (this.props.constrainViewDate && !isDateInMinMax(timestamp, {
        minDate: minDate,
        maxDate: maxDate
      })) {
        return;
      }
      if (this.props.viewDate === undefined && this.props.navOnDateClick) {
        this.setState({
          viewDate: timestamp
        });
      }
      if (this.props.onViewDateChange) {
        var dateString = this.format(dateMoment);
        this.props.onViewDateChange(dateString, {
          dateMoment: dateMoment,
          dateString: dateString,
          timestamp: timestamp
        });
      }
    }
  }, {
    key: "isValidActiveDate",
    value: function isValidActiveDate(date, props) {
      return _isValidActiveDate(date, props || this.p);
    }
  }, {
    key: "onActiveDateChange",
    value: function onActiveDateChange(_ref9) {
      var dateMoment = _ref9.dateMoment,
        timestamp = _ref9.timestamp;
      if (!_isValidActiveDate(timestamp, this.p)) {
        return;
      }
      var props = this.p;
      var range = props.range;
      if (range && props.rangeStart) {
        var newRange = (0, _clampRange.default)([props.rangeStart, dateMoment]);
        if (props.partialRange) {
          this.onRangeChange(newRange);
        }
        this.setState({
          rangeStart: props.rangeStart,
          range: newRange
        });
      }
      if (this.props.activeDate === undefined) {
        this.setState({
          activeDate: timestamp
        });
      }
      if (this.props.onActiveDateChange) {
        var dateString = this.format(dateMoment);
        this.props.onActiveDateChange(dateString, {
          dateMoment: dateMoment,
          timestamp: timestamp,
          dateString: dateString
        });
      }
    }
  }, {
    key: "gotoViewDate",
    value: function gotoViewDate(_ref10) {
      var dateMoment = _ref10.dateMoment,
        timestamp = _ref10.timestamp;
      if (!timestamp) {
        timestamp = dateMoment == null ? null : +dateMoment;
      }
      this.onViewDateChange({
        dateMoment: dateMoment,
        timestamp: timestamp
      });
      this.onActiveDateChange({
        dateMoment: dateMoment,
        timestamp: timestamp
      });
    }
  }]);
  return MonthView;
}(_reactClass.default);
exports["default"] = MonthView;
MonthView.defaultProps = {
  rootClassName: 'inovua-react-toolkit-calendar__month-view',
  dateFormat: 'YYYY-MM-DD',
  theme: 'default',
  onBlur: function onBlur() {},
  onFocus: function onFocus() {},
  footerClearDate: null,
  okButton: true,
  partialRange: true,
  activateOnHover: false,
  constrainActiveInView: false,
  showDaysBeforeMonth: true,
  showDaysAfterMonth: true,
  highlightWeekends: true,
  highlightToday: true,
  navOnDateClick: true,
  navigation: true,
  constrainViewDate: true,
  highlightRangeOnMouseMove: false,
  isDatePicker: true,
  enableMonthDecadeView: true,
  focusOnNavMouseDown: true,
  focusOnFooterMouseDown: true,
  enableMonthDecadeViewAnimation: true,
  showMonthDecadeViewAnimation: 300
};
var DateType = _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.object, _propTypes.default.string]);
MonthView.propTypes = {
  rootClassName: _propTypes.default.string,
  navOnDateClick: _propTypes.default.bool,
  isDisabledDay: _propTypes.default.func,
  onChange: _propTypes.default.func,
  onViewDateChange: _propTypes.default.func,
  onActiveDateChange: _propTypes.default.func,
  dateFormat: _propTypes.default.string,
  date: DateType,
  theme: _propTypes.default.string,
  onBlur: _propTypes.default.func,
  onFocus: _propTypes.default.func,
  footerClearDate: _propTypes.default.object,
  partialRange: _propTypes.default.bool,
  activateOnHover: _propTypes.default.bool,
  constrainActiveInView: _propTypes.default.bool,
  showDaysBeforeMonth: _propTypes.default.bool,
  showDaysAfterMonth: _propTypes.default.bool,
  highlightWeekends: _propTypes.default.bool,
  highlightToday: _propTypes.default.bool,
  navigation: _propTypes.default.bool,
  constrainViewDate: _propTypes.default.bool,
  highlightRangeOnMouseMove: _propTypes.default.bool,
  isDatePicker: _propTypes.default.bool,
  onRenderDay: _propTypes.default.func,
  getTransitionTime: _propTypes.default.func,
  cleanup: _propTypes.default.func,
  navigate: _propTypes.default.func,
  onRangeChange: _propTypes.default.func,
  onHoverRangeChange: _propTypes.default.func,
  renderNavBar: _propTypes.default.func,
  select: _propTypes.default.func,
  renderChildren: _propTypes.default.func,
  onFooterTodayClick: _propTypes.default.func,
  onFooterClearClick: _propTypes.default.func,
  onFooterCancelClick: _propTypes.default.func,
  onMouseLeave: _propTypes.default.any,
  clockTabIndex: _propTypes.default.number,
  index: _propTypes.default.number,
  dayPropsMap: _propTypes.default.object,
  insideMultiView: _propTypes.default.bool,
  insideField: _propTypes.default.bool,
  enableMonthDecadeView: _propTypes.default.bool,
  focusOnNavMouseDown: _propTypes.default.bool,
  focusOnFooterMouseDown: _propTypes.default.bool,
  maxConstrained: _propTypes.default.bool,
  minConstrained: _propTypes.default.bool,
  enableMonthDecadeViewAnimation: _propTypes.default.bool,
  showMonthDecadeViewAnimation: _propTypes.default.number,
  disabled: _propTypes.default.bool,
  footer: _propTypes.default.bool,
  navBarArrows: _propTypes.default.shape({
    prev: _propTypes.default.node,
    next: _propTypes.default.node,
    right: _propTypes.default.node,
    left: _propTypes.default.node
  }),
  cancelButton: _propTypes.default.bool,
  cancelButtonText: _propTypes.default.node,
  okButton: _propTypes.default.bool,
  okButtonText: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string]),
  showClock: _propTypes.default.bool,
  defaultDate: DateType,
  activeDate: DateType,
  defaultActiveDate: DateType,
  rangeStart: DateType,
  range: _propTypes.default.arrayOf(DateType),
  defaultRange: _propTypes.default.arrayOf(DateType),
  hoverRange: _propTypes.default.arrayOf(DateType),
  defaultHoverRange: _propTypes.default.arrayOf(DateType),
  minDate: DateType,
  maxDate: DateType,
  viewDate: DateType,
  defaultViewDate: DateType
};

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/MonthView/navKeys.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/MonthView/navKeys.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = {
  ArrowUp: -7,
  ArrowDown: 7,
  ArrowLeft: -1,
  ArrowRight: 1,
  PageUp: function PageUp(mom) {
    return mom.add(-1, 'month');
  },
  PageDown: function PageDown(mom) {
    return mom.add(1, 'month');
  },
  Home: function Home(mom) {
    return mom.startOf('month');
  },
  End: function End(mom) {
    return mom.endOf('month');
  }
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/MonthView/onKeyDown.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/MonthView/onKeyDown.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = _default;
var _navKeys = _interopRequireDefault(__webpack_require__(/*! ./navKeys */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/MonthView/navKeys.js"));
function _default(event) {
  var key = event.key;
  if (this.props.onKeyDown) {
    if (this.props.onKeyDown(event) === false) {
      return;
    }
  }
  if (key == 'Enter' && this.p.activeDate) {
    this.confirm(this.p.activeDate, event);
  }
  var navKeys = this.p.navKeys || _navKeys.default;
  var dir = navKeys[key];
  if (!dir) {
    return;
  }
  event.preventDefault();
  this.navigate(dir, event);
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/MultiMonthView.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/MultiMonthView.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.renderNavBar = exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _reactClass = _interopRequireDefault(__webpack_require__(/*! ../../react-class */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/index.js"));
var _Flex = __webpack_require__(/*! ../../Flex */ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/index.js");
var _InlineBlock = _interopRequireDefault(__webpack_require__(/*! ./InlineBlock */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/InlineBlock/index.js"));
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _clampRange = _interopRequireDefault(__webpack_require__(/*! ./clampRange */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/clampRange.js"));
var _NavBar = _interopRequireDefault(__webpack_require__(/*! ./NavBar */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/NavBar.js"));
var _toMoment = _interopRequireDefault(__webpack_require__(/*! ./toMoment */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/toMoment.js"));
var _isInRange2 = _interopRequireDefault(__webpack_require__(/*! ./utils/isInRange */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/isInRange.js"));
var _BasicMonthView = __webpack_require__(/*! ./BasicMonthView */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/BasicMonthView.js");
var _MonthView = _interopRequireWildcard(__webpack_require__(/*! ./MonthView */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/MonthView/index.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var times = function times(count) {
  return (0, _toConsumableArray2.default)(new Array(count)).map(function (v, i) {
    return i;
  });
};
var prepareDate = function prepareDate(props, state) {
  if (props.range) {
    return null;
  }
  return props.date === undefined ? state.date : props.date;
};
var prepareViewDate = function prepareViewDate(props, state) {
  return props.viewDate === undefined ? state.viewDate : state.propViewDate || props.viewDate;
};
var prepareRange = function prepareRange(props, state) {
  return props.range && props.range.length ? props.range : state.range;
};
var prepareActiveDate = function prepareActiveDate(props, state) {
  var fallbackDate = prepareDate(props, state) || (prepareRange(props, state) || [])[0];
  var activeDate = props.activeDate === undefined ? state.activeDate || fallbackDate : props.activeDate;
  if (activeDate && props.inViewStart && props.inViewEnd && props.constrainActiveInView) {
    var activeMoment = this.toMoment(activeDate);
    if (!(0, _isInRange2.default)(activeMoment, [props.inViewStart, props.inViewEnd])) {
      var date = fallbackDate;
      var dateMoment = this.toMoment(date);
      if (date && (0, _isInRange2.default)(dateMoment, [props.inViewStart, props.inViewEnd])) {
        return date;
      }
      return null;
    }
  }
  return activeDate;
};
var prepareViews = function prepareViews(props) {
  var daysInView = [];
  var viewMoments = [];
  var viewMoment = props.viewMoment;
  var index = 0;
  var size = props.size;
  while (index < size) {
    var mom = this.toMoment(viewMoment).startOf('day').add(index, 'month');
    var days = (0, _BasicMonthView.getDaysInMonthView)(mom, props);
    viewMoments.push(mom);
    daysInView.push(days);
    index++;
  }
  props.daysInView = daysInView;
  props.viewMoments = viewMoments;
  var lastViewDays = daysInView[size - 1];
  props.inViewStart = daysInView[0][0];
  props.inViewEnd = lastViewDays[lastViewDays.length - 1];
};
var _renderNavBar = function renderNavBar(config, navBarProps) {
  var props = this.props;
  var index = config.index,
    viewMoment = config.viewMoment;
  navBarProps = (0, _assign.default)({}, navBarProps, {
    secondary: true,
    minDate: config.minDate || props.minDate,
    maxDate: config.maxDate || props.maxDate,
    renderNavNext: config.renderHiddenNav || this.renderHiddenNav,
    renderNavPrev: config.renderHiddenNav || this.renderHiddenNav,
    viewMoment: viewMoment,
    size: props.size,
    onViewDateChange: config.onViewDateChange || this.onNavViewDateChange,
    onUpdate: config.onUpdate || this.updateViewMoment,
    enableMonthDecadeView: props.enableMonthDecadeView
  });
  if (index == 0) {
    delete navBarProps.renderNavPrev;
  }
  if (index == props.perRow - 1) {
    delete navBarProps.renderNavNext;
  }
  var marginStyle;
  if (index % 2 == 0) {
    marginStyle = {
      marginRight: 1
    };
  } else {
    marginStyle = null;
  }
  return _react.default.createElement(_NavBar.default, _objectSpread({
    key: "multi_month_nav_bar",
    style: marginStyle
  }, navBarProps));
};
exports.renderNavBar = _renderNavBar;
var MultiMonthView = function (_Component) {
  (0, _inherits2.default)(MultiMonthView, _Component);
  var _super = _createSuper(MultiMonthView);
  function MultiMonthView(props) {
    var _this;
    (0, _classCallCheck2.default)(this, MultiMonthView);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "componentDidMount", function () {
      _this.updateToMoment(_this.props);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "componentDidUpdate", function (prevProps) {
      if (prevProps.locale !== _this.props.locale || prevProps.dateFormat !== _this.props.dateFormat) {
        _this.updateToMoment(_this.props);
      }
    });
    _this.state = {
      hoverRange: null,
      range: props.defaultRange,
      date: props.defaultDate,
      activeDate: props.defaultActiveDate,
      viewDate: props.defaultViewDate
    };
    return _this;
  }
  (0, _createClass2.default)(MultiMonthView, [{
    key: "updateToMoment",
    value: function updateToMoment(props) {
      this.toMoment = function (value, dateFormat) {
        return (0, _toMoment.default)(value, {
          locale: props.locale,
          dateFormat: dateFormat || props.dateFormat
        });
      };
    }
  }, {
    key: "prepareProps",
    value: function prepareProps(thisProps, state) {
      var _this2 = this;
      var props = (0, _assign.default)({}, thisProps);
      state = state || this.state;
      props.viewMoment = this.toMoment(prepareViewDate(props, state));
      props.viewStart = this.toMoment(props.viewMoment).startOf('month');
      props.viewEnd = this.toMoment(props.viewStart).add(props.size - 1, 'month').endOf('month');
      prepareViews.call(this, props);
      var activeDate = prepareActiveDate.call(this, props, state);
      if (activeDate) {
        props.activeDate = +this.toMoment(activeDate);
      }
      props.date = prepareDate(props, state);
      if (!props.date) {
        var range = prepareRange(props, state);
        if (range) {
          props.range = range.map(function (d) {
            return _this2.toMoment(d).startOf('day');
          });
          props.rangeStart = state.rangeStart || (props.range.length == 1 ? props.range[0] : null);
        }
      }
      return props;
    }
  }, {
    key: "render",
    value: function render() {
      this.views = [];
      var props = this.p = this.prepareProps(this.props, this.state);
      var size = props.size;
      var rowCount = Math.ceil(size / props.perRow);
      var children = times(rowCount).map(this.renderRow).filter(function (x) {
        return !!x;
      });
      var rootClassName = props.rootClassName;
      var className = (0, _join.default)(props.className, rootClassName, props.theme && "".concat(rootClassName, "--theme-").concat(props.theme));
      var footer = (0, _MonthView.renderFooter)(props, this);
      if (footer) {
        children.push(footer);
      }
      var flexProps = (0, _assign.default)({}, props);
      delete flexProps.activeDate;
      delete flexProps.clockTabIndex;
      delete flexProps.constrainActiveInView;
      delete flexProps.constrainViewDate;
      delete flexProps.date;
      delete flexProps.dateFormat;
      delete flexProps.daysInView;
      delete flexProps.defaultRange;
      delete flexProps.enableMonthDecadeView;
      delete flexProps.footer;
      delete flexProps.footerClearDate;
      delete flexProps.forceViewUpdate;
      delete flexProps.highlightRangeOnMouseMove;
      delete flexProps.inViewEnd;
      delete flexProps.inViewStart;
      delete flexProps.isDatePicker;
      delete flexProps.locale;
      delete flexProps.navigation;
      delete flexProps.onViewDateChange;
      delete flexProps.perRow;
      delete flexProps.range;
      delete flexProps.rangeStart;
      delete flexProps.renderNavBar;
      delete flexProps.theme;
      delete flexProps.viewDate;
      delete flexProps.viewEnd;
      delete flexProps.viewMoment;
      delete flexProps.viewMoments;
      delete flexProps.viewStart;
      delete flexProps.rootClassName;
      delete flexProps.enableMonthDecadeViewAnimation;
      delete flexProps.showMonthDecadeViewAnimation;
      delete flexProps.okButton;
      return _react.default.createElement(_Flex.Flex, _objectSpread(_objectSpread({
        key: "multi_month_view",
        column: true,
        inline: true,
        alignItems: "stretch",
        wrap: false
      }, flexProps), {}, {
        className: className
      }), children);
    }
  }, {
    key: "renderRow",
    value: function renderRow(rowIndex) {
      var _this3 = this;
      var props = this.p;
      var viewProps = (0, _assign.default)({}, this.p);
      delete viewProps.rootClassName;
      delete viewProps.forceViewUpdate;
      delete viewProps.index;
      delete viewProps.inViewEnd;
      delete viewProps.inViewStart;
      delete viewProps.navigate;
      delete viewProps.perRow;
      delete viewProps.viewEnd;
      delete viewProps.viewMoments;
      delete viewProps.viewStart;
      var children = times(props.perRow).map(function (i) {
        var index = rowIndex * props.perRow + i;
        var keys = "row_".concat(index * i);
        if (index >= props.size) {
          return null;
        }
        return _this3.renderView(viewProps, index, props.size, keys);
      });
      return _react.default.createElement(_Flex.Flex, {
        key: "row_index_".concat(rowIndex),
        inline: true,
        row: true,
        wrap: false,
        children: children
      });
    }
  }, {
    key: "renderView",
    value: function renderView(viewProps, index, size, keys) {
      var _this4 = this;
      var props = this.p;
      var viewMoment = props.viewMoments[index];
      var range;
      if (props.range) {
        range = props.rangeStart && props.range.length == 0 ? [props.rangeStart] : props.range;
      }
      var navBarKeys = keys * 8;
      return _react.default.createElement(_MonthView.default, _objectSpread(_objectSpread({
        ref: function ref(view) {
          _this4.views[index] = view;
        },
        constrainViewDate: false
      }, viewProps), {}, {
        className: null,
        index: index,
        key: keys,
        footer: false,
        constrainActiveInView: false,
        navigate: this.onMonthNavigate.bind(this, index),
        hoverRange: this.state.hoverRange,
        onHoverRangeChange: this.setHoverRange,
        activeDate: props.activeDate,
        onActiveDateChange: this.onActiveDateChange,
        onViewDateChange: this.onAdjustViewDateChange,
        date: props.date,
        defaultDate: null,
        onChange: this.onChange,
        range: range,
        defaultRange: null,
        onRangeChange: this.onRangeChange,
        viewMoment: viewMoment,
        insideMultiView: true,
        daysInView: props.daysInView[index],
        showDaysBeforeMonth: index == 0,
        showDaysAfterMonth: index == size - 1,
        select: this.select,
        renderNavBar: this.props.navigation && (this.props.renderNavBar || this.renderNavBar).bind(this, {
          index: index,
          viewMoment: viewMoment,
          navBarKeys: navBarKeys
        })
      }));
    }
  }, {
    key: "onFooterTodayClick",
    value: function onFooterTodayClick() {
      this.views[0].onFooterTodayClick();
    }
  }, {
    key: "onFooterClearClick",
    value: function onFooterClearClick() {
      this.views[0].onFooterClearClick();
    }
  }, {
    key: "onFooterOkClick",
    value: function onFooterOkClick() {
      this.views[0].onFooterOkClick();
    }
  }, {
    key: "onFooterCancelClick",
    value: function onFooterCancelClick() {
      this.views[0].onFooterCancelClick();
    }
  }, {
    key: "isFocused",
    value: function isFocused() {
      var firstView = this.views[0];
      if (firstView) {
        return firstView.isFocused();
      }
      return false;
    }
  }, {
    key: "focus",
    value: function focus() {
      var firstView = this.views[0];
      if (firstView) {
        firstView.focus();
      }
    }
  }, {
    key: "setHoverRange",
    value: function setHoverRange(hoverRange) {
      this.setState({
        hoverRange: hoverRange
      });
    }
  }, {
    key: "select",
    value: function select(_ref, event) {
      var dateMoment = _ref.dateMoment,
        timestamp = _ref.timestamp;
      var props = this.p;
      var visibleRange = [props.inViewStart, props.inViewEnd];
      this.onAdjustViewDateChange({
        dateMoment: dateMoment,
        timestamp: timestamp
      });
      this.onActiveDateChange({
        dateMoment: dateMoment,
        timestamp: timestamp
      });
      var range = props.range;
      if (range) {
        this.selectRange({
          dateMoment: dateMoment,
          timestamp: timestamp
        });
      } else {
        this.onChange({
          dateMoment: dateMoment,
          timestamp: timestamp
        }, event);
      }
    }
  }, {
    key: "selectRange",
    value: function selectRange(_ref2) {
      var dateMoment = _ref2.dateMoment,
        timestamp = _ref2.timestamp;
      return _MonthView.default.prototype.selectRange.call(this, {
        dateMoment: dateMoment,
        timestamp: timestamp
      });
    }
  }, {
    key: "onRangeChange",
    value: function onRangeChange(range) {
      return _MonthView.default.prototype.onRangeChange.call(this, range);
    }
  }, {
    key: "onViewKeyDown",
    value: function onViewKeyDown() {
      var view = this.views[0];
      if (view) {
        view.onViewKeyDown.apply(view, arguments);
      }
    }
  }, {
    key: "renderNavBar",
    value: function renderNavBar(config, navBarProps) {
      return _renderNavBar.call(this, config, navBarProps);
    }
  }, {
    key: "onMonthNavigate",
    value: function onMonthNavigate(index, dir, event, getNavigationDate) {
      var props = this.p;
      event.preventDefault();
      if (!props.activeDate) {
        return;
      }
      var key = event.key;
      var homeEndDate = key == 'Home' ? props.viewStart : props.viewEnd;
      var mom = key == 'Home' || key == 'End' ? homeEndDate : props.activeDate;
      var nextMoment = getNavigationDate(dir, this.toMoment(mom));
      var viewMoment = this.toMoment(nextMoment);
      this.onActiveDateChange({
        dateMoment: nextMoment,
        timestamp: +nextMoment
      });
      if (this.isInRange(viewMoment)) {
        return;
      }
      if (viewMoment.isAfter(props.viewEnd)) {
        viewMoment.add(-props.size + 1, 'month');
      }
      this.onViewDateChange({
        dateMoment: viewMoment,
        timestamp: +viewMoment
      });
    }
  }, {
    key: "onAdjustViewDateChange",
    value: function onAdjustViewDateChange(_ref3) {
      var dateMoment = _ref3.dateMoment,
        timestamp = _ref3.timestamp;
      var props = this.p;
      var update = dateMoment == null;
      if (dateMoment && dateMoment.isAfter(props.viewEnd)) {
        dateMoment = this.toMoment(dateMoment).add(-props.size + 1, 'month');
        timestamp = +dateMoment;
        update = true;
      } else if (dateMoment && dateMoment.isBefore(props.viewStart)) {
        update = true;
      }
      if (update) {
        this.onViewDateChange({
          dateMoment: dateMoment,
          timestamp: timestamp
        });
      }
    }
  }, {
    key: "updateViewMoment",
    value: function updateViewMoment(dateMoment, dir) {
      var sign = dir < 0 ? -1 : 1;
      var abs = Math.abs(dir);
      var newMoment = this.toMoment(this.p.viewStart);
      newMoment.add(sign, abs == 1 ? 'month' : 'year');
      return newMoment;
    }
  }, {
    key: "renderHiddenNav",
    value: function renderHiddenNav(props) {
      return _react.default.createElement(_InlineBlock.default, _objectSpread(_objectSpread({}, props), {}, {
        style: {
          visibility: 'hidden'
        }
      }));
    }
  }, {
    key: "isInRange",
    value: function isInRange(moment) {
      return (0, _isInRange2.default)(moment, [this.p.viewStart, this.p.viewEnd]);
    }
  }, {
    key: "isInView",
    value: function isInView(moment) {
      return this.isInRange(moment);
    }
  }, {
    key: "onNavViewDateChange",
    value: function onNavViewDateChange(dateString, _ref4) {
      var dateMoment = _ref4.dateMoment,
        timestamp = _ref4.timestamp;
      this.onViewDateChange({
        dateMoment: dateMoment,
        timestamp: timestamp
      });
    }
  }, {
    key: "onViewDateChange",
    value: function onViewDateChange(_ref5) {
      var dateMoment = _ref5.dateMoment,
        timestamp = _ref5.timestamp;
      if (this.props.viewDate === undefined) {
        this.setState({
          viewDate: timestamp
        });
      }
      if (this.props.onViewDateChange) {
        var dateString = this.format(dateMoment);
        this.props.onViewDateChange(dateString, {
          dateMoment: dateMoment,
          dateString: dateString,
          timestamp: timestamp
        });
      }
    }
  }, {
    key: "onActiveDateChange",
    value: function onActiveDateChange(_ref6) {
      var dateMoment = _ref6.dateMoment,
        timestamp = _ref6.timestamp;
      var valid = this.views.reduce(function (isValid, view) {
        return isValid && view.isValidActiveDate(timestamp);
      }, true);
      if (!valid) {
        return;
      }
      var props = this.p;
      var range = props.range;
      if (range && props.rangeStart) {
        this.setState({
          rangeStart: props.rangeStart,
          range: (0, _clampRange.default)([props.rangeStart, dateMoment])
        });
      }
      if (this.props.activeDate === undefined) {
        this.setState({
          activeDate: timestamp
        });
      }
      if (this.props.onActiveDateChange) {
        var dateString = this.format(dateMoment);
        this.props.onActiveDateChange(dateString, {
          dateMoment: dateMoment,
          dateString: dateString,
          timestamp: timestamp
        });
      }
    }
  }, {
    key: "gotoViewDate",
    value: function gotoViewDate(_ref7) {
      var dateMoment = _ref7.dateMoment,
        timestamp = _ref7.timestamp;
      if (!timestamp) {
        timestamp = +dateMoment;
      }
      this.onViewDateChange({
        dateMoment: dateMoment,
        timestamp: timestamp
      });
      this.onActiveDateChange({
        dateMoment: dateMoment,
        timestamp: timestamp
      });
    }
  }, {
    key: "format",
    value: function format(mom) {
      return mom == null ? '' : mom.format(this.props.dateFormat);
    }
  }, {
    key: "onChange",
    value: function onChange(_ref8, event) {
      var dateMoment = _ref8.dateMoment,
        timestamp = _ref8.timestamp;
      if (this.props.date === undefined) {
        this.setState({
          date: timestamp
        });
      }
      if (this.props.onChange) {
        var dateString = this.format(dateMoment);
        this.props.onChange(dateString, {
          dateMoment: dateMoment,
          dateString: dateString,
          timestamp: timestamp
        }, event);
      }
    }
  }, {
    key: "getViewSize",
    value: function getViewSize() {
      return this.props.size;
    }
  }]);
  return MultiMonthView;
}(_reactClass.default);
exports["default"] = MultiMonthView;
MultiMonthView.defaultProps = {
  rootClassName: 'inovua-react-toolkit-calendar__multi-month-view',
  perRow: 2,
  size: 2,
  enableMonthDecadeView: true,
  enableMonthDecadeViewAnimation: true,
  showMonthDecadeViewAnimation: 300,
  footerClearDate: null,
  okButton: true,
  isDatePicker: true,
  forceViewUpdate: false,
  navigation: true,
  theme: 'default',
  constrainActiveInView: true,
  dateFormat: 'YYYY-MM-DD'
};
MultiMonthView.propTypes = {
  rootClassName: _propTypes.default.string,
  theme: _propTypes.default.string,
  dateFormat: _propTypes.default.string,
  locale: _propTypes.default.string,
  perRow: _propTypes.default.number,
  size: _propTypes.default.number,
  daysInView: _propTypes.default.number,
  clockTabIndex: _propTypes.default.number,
  enableMonthDecadeView: _propTypes.default.bool,
  footerClearDate: _propTypes.default.bool,
  isDatePicker: _propTypes.default.bool,
  forceViewUpdate: _propTypes.default.bool,
  navigation: _propTypes.default.bool,
  constrainActiveInView: _propTypes.default.bool,
  constrainViewDate: _propTypes.default.bool,
  inViewStart: _propTypes.default.bool,
  inViewEnd: _propTypes.default.bool,
  footer: _propTypes.default.bool,
  highlightRangeOnMouseMove: _propTypes.default.bool,
  enableMonthDecadeViewAnimation: _propTypes.default.bool,
  viewStart: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string, _propTypes.default.number]),
  viewEnd: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string, _propTypes.default.number]),
  date: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string, _propTypes.default.number]),
  defaultDate: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string, _propTypes.default.number]),
  minDate: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string, _propTypes.default.number]),
  maxDate: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string, _propTypes.default.number]),
  viewDate: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string, _propTypes.default.number]),
  viewMoment: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string, _propTypes.default.number]),
  viewMoments: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string, _propTypes.default.number])),
  defaultViewDate: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string, _propTypes.default.number]),
  activeDate: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string, _propTypes.default.number]),
  defaultActiveDate: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string, _propTypes.default.number]),
  range: _propTypes.default.array,
  defaultRange: _propTypes.default.array
};

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/NavBar.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/NavBar.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _reactClass = _interopRequireDefault(__webpack_require__(/*! ../../react-class */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/index.js"));
var _Flex = __webpack_require__(/*! ../../Flex */ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/index.js");
var _InlineBlock = _interopRequireDefault(__webpack_require__(/*! ./InlineBlock */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/InlineBlock/index.js"));
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _assignDefined = _interopRequireDefault(__webpack_require__(/*! ./assignDefined */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/assignDefined.js"));
var _toMoment2 = _interopRequireDefault(__webpack_require__(/*! ./toMoment */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/toMoment.js"));
var _MonthDecadeView = _interopRequireDefault(__webpack_require__(/*! ./MonthDecadeView */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/MonthDecadeView.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var ARROWS = {
  prev: _react.default.createElement("svg", {
    width: "6",
    height: "10",
    viewBox: "0 0 6 10"
  }, _react.default.createElement("path", {
    fillRule: "evenodd",
    d: "M2.197 5l2.865-2.866c.311-.31.311-.814 0-1.125-.31-.31-.814-.31-1.125 0L.477 4.47c-.293.294-.293.769 0 1.061l3.46 3.46c.311.311.815.311 1.125 0 .311-.31.311-.814 0-1.124L2.197 5z"
  })),
  next: _react.default.createElement("svg", {
    width: "6",
    height: "10",
    viewBox: "0 0 6 10"
  }, _react.default.createElement("path", {
    fillRule: "evenodd",
    d: "M3.803 5L.938 7.866c-.311.31-.311.814 0 1.125.31.31.814.31 1.125 0l3.46-3.46c.293-.294.293-.769 0-1.061l-3.46-3.46c-.311-.311-.815-.311-1.126 0-.31.31-.31.814 0 1.124L3.803 5z"
  })),
  right: _react.default.createElement("svg", {
    width: "12",
    height: "10",
    viewBox: "0 0 12 10"
  }, _react.default.createElement("g", {
    fillRule: "evenodd"
  }, _react.default.createElement("path", {
    d: "M3.803 4.5L.938 7.366c-.311.31-.311.814 0 1.125.31.31.814.31 1.125 0l3.46-3.46c.293-.294.293-.769 0-1.061L2.063.51C1.751.198 1.247.198.936.51c-.31.31-.31.814 0 1.124L3.803 4.5zM9.803 4.5L6.937 7.366c-.31.31-.31.814 0 1.125.311.31.815.31 1.125 0l3.461-3.46c.293-.294.293-.769 0-1.061L8.063.51c-.311-.311-.815-.311-1.126 0-.31.31-.31.814 0 1.124L9.803 4.5z",
    transform: "translate(0 .5)"
  }))),
  left: _react.default.createElement("svg", {
    width: "12",
    height: "10",
    viewBox: "0 0 12 10"
  }, _react.default.createElement("g", {
    fillRule: "evenodd"
  }, _react.default.createElement("path", {
    d: "M3.803 4.5L.938 7.366c-.311.31-.311.814 0 1.125.31.31.814.31 1.125 0l3.46-3.46c.293-.294.293-.769 0-1.061L2.063.51C1.751.198 1.247.198.936.51c-.31.31-.31.814 0 1.124L3.803 4.5zM9.803 4.5L6.937 7.366c-.31.31-.31.814 0 1.125.311.31.815.31 1.125 0l3.461-3.46c.293-.294.293-.769 0-1.061L8.063.51c-.311-.311-.815-.311-1.126 0-.31.31-.31.814 0 1.124L9.803 4.5z",
    transform: "rotate(180 6 4.75)"
  })))
};
var NavBar = function (_Component) {
  (0, _inherits2.default)(NavBar, _Component);
  var _super = _createSuper(NavBar);
  function NavBar(props) {
    var _this;
    (0, _classCallCheck2.default)(this, NavBar);
    _this = _super.call(this, props);
    _this.state = {
      viewDate: props.defaultViewDate
    };
    return _this;
  }
  (0, _createClass2.default)(NavBar, [{
    key: "prepareViewDate",
    value: function prepareViewDate(props) {
      return props.viewDate === undefined ? this.state.viewDate : props.viewDate;
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.p = (0, _assign.default)({}, this.props);
      var rootClassName = props.rootClassName,
        index = props.index;
      var viewMoment = props.viewMoment = props.viewMoment || this.toMoment(this.prepareViewDate(props));
      props.monthDecadeViewEnabled = props.expandedMonthDecadeView || props.enableMonthDecadeView;
      var secondary = props.secondary;
      var className = (0, _join.default)(props.className, rootClassName, "".concat(rootClassName, "--theme-").concat(props.theme), "".concat(rootClassName, "--with-month-decade-view"));
      var monthDecadeView = props.monthDecadeViewEnabled ? this.renderMonthDecadeView() : null;
      var flexProps = (0, _assign.default)({}, props);
      delete flexProps.rootClassName;
      delete flexProps.arrows;
      delete flexProps.doubleArrows;
      delete flexProps.date;
      delete flexProps.enableMonthDecadeView;
      delete flexProps.monthDecadeViewEnabled;
      delete flexProps.isDatePickerNavBar;
      delete flexProps.minDate;
      delete flexProps.maxDate;
      delete flexProps.mainNavBar;
      delete flexProps.multiView;
      delete flexProps.navDateFormat;
      delete flexProps.onNavClick;
      delete flexProps.onUpdate;
      delete flexProps.onViewDateChange;
      delete flexProps.renderNavNext;
      delete flexProps.renderNavPrev;
      delete flexProps.secondary;
      delete flexProps.theme;
      delete flexProps.viewDate;
      delete flexProps.viewMoment;
      delete flexProps.showClock;
      delete flexProps.enableMonthDecadeViewAnimation;
      delete flexProps.showMonthDecadeViewAnimation;
      delete flexProps.cancelButtonText;
      delete flexProps.clearButtonText;
      delete flexProps.okButtonText;
      if (typeof props.cleanup == 'function') {
        props.cleanup(flexProps);
      }
      return _react.default.createElement(_Flex.Flex, _objectSpread(_objectSpread({
        key: "navBar",
        inline: true,
        row: true
      }, flexProps), {}, {
        className: className
      }), secondary && this.renderNav(-2, viewMoment, 'left'), this.renderNav(-1, viewMoment, 'prev'), _react.default.createElement(_Flex.Item, {
        key: "month_year",
        className: (0, _join.default)("".concat(rootClassName, "-date"), props.monthDecadeViewEnabled ? '' : "".concat(rootClassName, "-date-disabled")),
        style: {
          textAlign: 'center'
        },
        onMouseDown: props.monthDecadeViewEnabled ? this.toggleMonthDecadeView : null
      }, this.renderNavDate(viewMoment)), this.renderNav(1, viewMoment, 'next'), secondary && this.renderNav(2, viewMoment, 'right'), monthDecadeView);
    }
  }, {
    key: "renderMonthDecadeView",
    value: function renderMonthDecadeView() {
      var _this2 = this;
      if (!this.state.monthDecadeView) {
        return null;
      }
      var _this$p = this.p,
        viewMoment = _this$p.viewMoment,
        theme = _this$p.theme,
        locale = _this$p.locale,
        minDate = _this$p.minDate,
        maxDate = _this$p.maxDate,
        rootClassName = _this$p.rootClassName,
        size = _this$p.size,
        okButtonText = _this$p.okButtonText,
        cancelButtonText = _this$p.cancelButtonText,
        showClock = _this$p.showClock,
        enableMonthDecadeViewAnimation = _this$p.enableMonthDecadeViewAnimation,
        showMonthDecadeViewAnimation = _this$p.showMonthDecadeViewAnimation;
      var className = (0, _join.default)("".concat(rootClassName, "-month-decade-view"), (size <= 1 || size === undefined) && "".concat(rootClassName, "-month-decade-view-month"), showClock && "".concat(rootClassName, "-month-decade-view-calendar"));
      var modalClassName = (0, _join.default)("".concat(rootClassName, "-month-decade-view-modal"), enableMonthDecadeViewAnimation && "".concat(rootClassName, "-month-decade-view-show-animation"));
      var modalWrapperClassName = size || size === undefined ? modalClassName : null;
      var monthDecadeViewProps = (0, _assignDefined.default)({
        defaultViewDate: viewMoment,
        defaultDate: viewMoment,
        ref: function ref(view) {
          _this2.monthDecadeView = view;
        },
        focusDecadeView: false,
        className: className,
        theme: theme,
        okButtonText: okButtonText,
        cancelButtonText: cancelButtonText,
        onOkClick: this.onMonthDecadeViewOk,
        onCancelClick: this.onMonthDecadeViewCancel
      }, {
        minDate: minDate,
        maxDate: maxDate,
        locale: locale
      });
      if (this.props.renderMonthDecadeView) {
        return this.props.renderMonthDecadeView(monthDecadeViewProps);
      }
      return _react.default.createElement("div", {
        style: {
          animationDuration: "".concat(showMonthDecadeViewAnimation, "ms")
        },
        className: modalWrapperClassName
      }, _react.default.createElement(_MonthDecadeView.default, _objectSpread({}, monthDecadeViewProps)));
    }
  }, {
    key: "toggleMonthDecadeView",
    value: function toggleMonthDecadeView(event) {
      if (this.isMonthDecadeViewVisible()) {
        this.hideMonthDecadeView(event);
      } else {
        this.showMonthDecadeView(event);
      }
    }
  }, {
    key: "getMonthDecadeViewView",
    value: function getMonthDecadeViewView() {
      return this.monthDecadeView;
    }
  }, {
    key: "isMonthDecadeViewVisible",
    value: function isMonthDecadeViewVisible() {
      return !!this.monthDecadeView;
    }
  }, {
    key: "onMonthDecadeViewOk",
    value: function onMonthDecadeViewOk(dateString, _ref) {
      var dateMoment = _ref.dateMoment,
        timestamp = _ref.timestamp;
      this.hideMonthDecadeView();
      this.onViewDateChange({
        dateMoment: dateMoment,
        timestamp: timestamp
      });
    }
  }, {
    key: "onMonthDecadeViewCancel",
    value: function onMonthDecadeViewCancel() {
      this.hideMonthDecadeView();
    }
  }, {
    key: "showMonthDecadeView",
    value: function showMonthDecadeView(event) {
      event.preventDefault();
      this.setState({
        monthDecadeView: true
      });
      if (this.props.onShowMonthDecadeView) {
        this.props.onShowMonthDecadeView();
      }
    }
  }, {
    key: "hideMonthDecadeView",
    value: function hideMonthDecadeView(event) {
      if (event && event.preventDefault) {
        event.preventDefault();
      }
      this.setState({
        monthDecadeView: false
      });
      if (this.props.onHideMonthDecadeView) {
        this.props.onHideMonthDecadeView();
      }
    }
  }, {
    key: "toMoment",
    value: function toMoment(value, props) {
      props = props || this.props;
      return (0, _toMoment2.default)(value, {
        locale: props.locale,
        dateFormat: props.dateFormat
      });
    }
  }, {
    key: "renderNav",
    value: function renderNav(dir, viewMoment, name) {
      var props = this.p;
      var disabled = dir < 0 ? props.prevDisabled : props.nextDisabled;
      var secondary = Math.abs(dir) == 2;
      if (dir < 0 && props.minDate) {
        var gotoMoment = this.getGotoMoment(dir, viewMoment).endOf('month');
        if (gotoMoment.isBefore(this.toMoment(props.minDate))) {
          disabled = true;
        }
      }
      if (dir > 0 && props.maxDate) {
        var _gotoMoment = this.getGotoMoment(dir, viewMoment).startOf('month');
        if (_gotoMoment.isAfter(this.toMoment(props.maxDate))) {
          disabled = true;
        }
      }
      if (this.state.monthDecadeView) {
        disabled = true;
      }
      var rootClassName = props.rootClassName;
      var className = (0, _join.default)("".concat(rootClassName, "-arrow"), "".concat(rootClassName, "-arrow--").concat(name), secondary && "".concat(rootClassName, "-secondary-arrow"), disabled && "".concat(rootClassName, "-arrow--disabled"));
      var arrowClass = "".concat(rootClassName, "-arrows-pos");
      var arrowDivClass = "".concat(rootClassName, "-arrows-div");
      var arrow = props.arrows[dir] || props.arrows[name] || ARROWS[name];
      var children;
      var dirArrow = props.arrows[dir];
      if (dirArrow) {
        children = dirArrow;
      } else {
        var doubleArrows = dir < -1 ? arrow : dir > 1 ? arrow : null;
        children = dir < 0 ? _react.default.createElement("div", {
          className: arrowDivClass
        }, secondary ? _react.default.createElement("div", {
          className: arrowClass
        }, doubleArrows) : _react.default.createElement("div", {
          className: arrowClass
        }, arrow)) : _react.default.createElement("div", {
          className: arrowDivClass
        }, secondary ? _react.default.createElement("div", {
          className: arrowClass
        }, doubleArrows) : _react.default.createElement("div", {
          className: arrowClass
        }, arrow));
      }
      var navProps = {
        dir: dir,
        name: name,
        disabled: disabled,
        onClick: !disabled ? this.onNavClick.bind(this, dir, viewMoment) : null,
        className: className,
        children: children
      };
      if (props.renderNav) {
        return props.renderNav(navProps);
      }
      if (dir < 0 && props.renderNavPrev) {
        return props.renderNavPrev(navProps);
      }
      if (dir > 0 && props.renderNavNext) {
        return props.renderNavNext(navProps);
      }
      return _react.default.createElement(_InlineBlock.default, _objectSpread(_objectSpread({
        key: name
      }, navProps), {}, {
        disabled: null,
        name: null
      }));
    }
  }, {
    key: "getGotoMoment",
    value: function getGotoMoment(dir, viewMoment) {
      viewMoment = viewMoment || this.p.viewMoment;
      var sign = dir < 0 ? -1 : 1;
      var abs = Math.abs(dir);
      var mom = this.toMoment(viewMoment);
      mom.add(sign, abs == 1 ? 'month' : 'year');
      return mom;
    }
  }, {
    key: "onNavClick",
    value: function onNavClick(dir, viewMoment, event) {
      var props = this.props;
      var dateMoment = this.toMoment(viewMoment);
      if (props.onUpdate) {
        dateMoment = props.onUpdate(dateMoment, dir);
      } else {
        var sign = dir < 0 ? -1 : 1;
        var abs = Math.abs(dir);
        dateMoment.add(sign, abs == 1 ? 'month' : 'year');
      }
      var timestamp = +dateMoment;
      props.onNavClick(dir, viewMoment, event);
      var disabled = dir < 0 ? props.prevDisabled : props.nextDisabled;
      if (disabled) {
        return;
      }
      this.onViewDateChange({
        dateMoment: dateMoment,
        timestamp: timestamp
      });
    }
  }, {
    key: "renderNavDate",
    value: function renderNavDate(viewMoment) {
      var props = this.props;
      var text = viewMoment.format(props.navDateFormat);
      if (props.renderNavDate) {
        return props.renderNavDate(viewMoment, text);
      }
      return text;
    }
  }, {
    key: "onViewDateChange",
    value: function onViewDateChange(_ref2) {
      var dateMoment = _ref2.dateMoment,
        timestamp = _ref2.timestamp;
      if (this.props.viewDate === undefined) {
        this.setState({
          viewDate: timestamp
        });
      }
      if (this.props.onViewDateChange) {
        var dateString = dateMoment.format(this.props.dateFormat);
        this.props.onViewDateChange(dateString, {
          dateString: dateString,
          dateMoment: dateMoment,
          timestamp: timestamp
        });
      }
    }
  }]);
  return NavBar;
}(_reactClass.default);
exports["default"] = NavBar;
NavBar.defaultProps = {
  rootClassName: 'inovua-react-toolkit-calendar__nav-bar',
  arrows: {},
  doubleArrows: {},
  theme: 'default',
  isDatePickerNavBar: true,
  navDateFormat: 'MMM YYYY',
  enableMonthDecadeView: true,
  onNavClick: function onNavClick(dir, viewMoment) {},
  onViewDateChange: function onViewDateChange() {}
};
NavBar.propTypes = {
  rootClassName: _propTypes.default.string,
  secondary: _propTypes.default.bool,
  showClock: _propTypes.default.bool,
  enableMonthDecadeViewAnimation: _propTypes.default.bool,
  showMonthDecadeViewAnimation: _propTypes.default.number,
  renderNav: _propTypes.default.func,
  renderNavPrev: _propTypes.default.func,
  renderNavNext: _propTypes.default.func,
  arrows: _propTypes.default.object,
  doubleArrows: _propTypes.default.object,
  navDateFormat: _propTypes.default.string,
  onUpdate: _propTypes.default.func,
  onNavClick: _propTypes.default.func,
  onViewDateChange: _propTypes.default.func,
  onClick: _propTypes.default.any
};

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/TimeInput/getNewValue.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/TimeInput/getNewValue.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = _default;
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var _toTimeValue = _interopRequireDefault(__webpack_require__(/*! ./toTimeValue */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/TimeInput/toTimeValue.js"));
var _leftPad = _interopRequireDefault(__webpack_require__(/*! ../utils/leftPad */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/leftPad.js"));
var _clamp = __webpack_require__(/*! ../utils/clamp */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/clamp.js");
var removeAt = function removeAt(_ref) {
  var value = _ref.value,
    index = _ref.index,
    _ref$len = _ref.len,
    len = _ref$len === void 0 ? 1 : _ref$len;
  return value.substring(0, index) + value.substring(index + len);
};
var replaceAt = function replaceAt(_ref2) {
  var value = _ref2.value,
    index = _ref2.index,
    _ref2$len = _ref2.len,
    len = _ref2$len === void 0 ? 1 : _ref2$len,
    str = _ref2.str;
  return value.substring(0, index) + str + value.substring(index + len);
};
var replaceBetween = function replaceBetween(_ref3) {
  var value = _ref3.value,
    start = _ref3.start,
    end = _ref3.end,
    str = _ref3.str;
  return (value.substring(0, start) || '') + str + (value.substring(end) || '');
};
var toggleMeridiem = function toggleMeridiem(meridiem) {
  return {
    am: 'pm',
    AM: 'PM',
    pm: 'am',
    PM: 'pm'
  }[meridiem];
};
var getValueOnDelete = function getValueOnDelete(_ref4) {
  var oldValue = _ref4.oldValue,
    range = _ref4.range,
    key = _ref4.key,
    separator = _ref4.separator,
    meridiem = _ref4.meridiem;
  var start = range.start,
    end = range.end;
  var selectedValue = oldValue.substring(start, end);
  var value;
  if (selectedValue) {
    var _replacement = selectedValue.split('').map(function (c) {
      if (c == separator || c == ' ') {
        return c;
      }
      if (meridiem && c * 1 != c) {
        return c == 'p' ? 'a' : c == 'P' ? 'A' : c;
      }
      return 0;
    }).join('');
    value = replaceBetween({
      value: oldValue,
      start: start,
      end: end,
      str: _replacement
    });
    return {
      value: value,
      update: value != oldValue,
      caretPos: key == 'Backspace' ? start : end
    };
  }
  var back = key == 'Backspace';
  var index = start + (back ? -1 : 0);
  var caretPos = start + (back ? -1 : 1);
  if (index < 0) {
    return {
      value: oldValue,
      update: false
    };
  }
  var char = oldValue[index];
  value = oldValue;
  var replacement = char == separator || char == ' ' ? char : 0;
  if (char && char * 1 != char && replacement === 0 && meridiem) {
    if (char == 'p') {
      replacement = 'a';
    } else if (char == 'P') {
      replacement = 'A';
    } else if (char == 'M' || char == 'm' || char == 'a' || char == 'A') {
      replacement = char;
    }
  }
  value = replaceAt({
    value: oldValue,
    index: index,
    str: replacement
  });
  return {
    update: value != oldValue,
    value: value,
    caretPos: caretPos
  };
};
var ARROWS = {
  ArrowUp: 1,
  ArrowDown: -1,
  PageUp: 10,
  PageDown: -10
};
var TIME_PARTS = {
  24: [{
    start: 0,
    end: 2,
    name: 'hours',
    max: 23
  }, {
    start: 3,
    end: 5,
    name: 'minutes',
    max: 59
  }, {
    start: 6,
    end: 8,
    name: 'seconds',
    max: 59
  }],
  12: [{
    start: 0,
    end: 2,
    name: 'hours',
    max: 12,
    min: 1
  }, {
    start: 3,
    end: 5,
    name: 'minutes',
    max: 59
  }, {
    start: 6,
    end: 8,
    name: 'seconds',
    max: 59
  }]
};
var getActiveTimePartIndex = function getActiveTimePartIndex(_ref5) {
  var value = _ref5.value,
    timeValue = _ref5.timeValue,
    separator = _ref5.separator,
    range = _ref5.range,
    hours24 = _ref5.hours24,
    meridiem = _ref5.meridiem;
  var start = range.start;
  var timeParts = TIME_PARTS[hours24 ? 24 : 12];
  var partIndex = 0;
  var currentPart;
  while (currentPart = timeParts[partIndex]) {
    if (currentPart.name == 'seconds' && timeValue && !timeValue.seconds) {
      return 4;
    }
    if (start >= currentPart.start && start <= currentPart.end) {
      return partIndex;
    }
    partIndex++;
  }
  return 4;
};
var getTimePartAt = function getTimePartAt(index, _ref6) {
  var hours24 = _ref6.hours24;
  return (0, _assign.default)({}, TIME_PARTS[hours24 ? 24 : 12][index]);
};
var getActiveTimePart = function getActiveTimePart(_ref7) {
  var value = _ref7.value,
    timeValue = _ref7.timeValue,
    separator = _ref7.separator,
    range = _ref7.range,
    hours24 = _ref7.hours24,
    meridiem = _ref7.meridiem;
  var index = getActiveTimePartIndex({
    value: value,
    timeValue: timeValue,
    separator: separator,
    range: range,
    hours24: hours24
  });
  if (index == 4 && meridiem) {
    var timePart = {
      start: 6,
      end: 8,
      name: 'meridiem'
    };
    if (timeValue.seconds) {
      timePart.start += 3;
      timePart.end += 3;
    }
    return timePart;
  }
  return getTimePartAt(index, {
    hours24: hours24
  });
};
var getValueOnDirection = function getValueOnDirection(_ref8) {
  var oldValue = _ref8.oldValue,
    range = _ref8.range,
    separator = _ref8.separator,
    dir = _ref8.dir,
    incrementNext = _ref8.incrementNext,
    circular = _ref8.circular,
    propagate = _ref8.propagate,
    hours24 = _ref8.hours24,
    meridiem = _ref8.meridiem;
  var start = range.start,
    end = range.end;
  var value;
  var timeValue = (0, _toTimeValue.default)({
    value: oldValue,
    separator: separator,
    meridiem: meridiem
  });
  var activeTimePart = getActiveTimePart({
    value: oldValue,
    timeValue: timeValue,
    separator: separator,
    range: range,
    hours24: hours24,
    meridiem: meridiem
  });
  if (activeTimePart.name != 'meridiem') {
    timeValue[activeTimePart.name] = dir + timeValue[activeTimePart.name] * 1;
  }
  var hours = timeValue.hours,
    minutes = timeValue.minutes,
    seconds = timeValue.seconds;
  var toggleMeridiemValue = false;
  hours *= 1;
  minutes *= 1;
  if (seconds) {
    seconds *= 1;
  }
  if (activeTimePart.name != 'meridiem') {
    if (seconds && (seconds > 59 || seconds < 0)) {
      if (propagate) {
        minutes += seconds > 59 ? 1 : -1;
      }
      if (circular) {
        seconds %= 60;
        if (seconds < 0) {
          seconds = 60 + seconds;
        }
      }
    }
    if (minutes && (minutes > 59 || minutes < 0)) {
      if (propagate) {
        hours += minutes > 59 ? 1 : -1;
      }
      if (circular) {
        minutes %= 60;
        if (minutes < 0) {
          minutes = 60 + minutes;
        }
      }
    }
    if (meridiem && circular && (hours > 12 || hours < 1)) {
      toggleMeridiemValue = true;
    }
  }
  hours = (0, _leftPad.default)((0, _clamp.clampHour)(hours * 1, {
    circular: circular,
    max: activeTimePart.max,
    min: activeTimePart.min
  }));
  minutes = (0, _leftPad.default)((0, _clamp.clampMinute)(minutes * 1, {
    circular: circular
  }));
  if (seconds != undefined) {
    seconds = (0, _leftPad.default)((0, _clamp.clampSecond)(seconds * 1, {
      circular: circular
    }));
  }
  value = hours + separator + minutes;
  if (seconds) {
    value += separator + seconds;
  }
  if (activeTimePart.name == 'meridiem') {
    toggleMeridiemValue = true;
  }
  if (meridiem) {
    value += " ".concat(toggleMeridiemValue ? toggleMeridiem(timeValue.meridiem) : timeValue.meridiem);
  }
  return {
    value: value,
    caretPos: activeTimePart || range.start,
    update: oldValue != value
  };
};
var getValueOnNumber = function getValueOnNumber(_ref9) {
  var oldValue = _ref9.oldValue,
    num = _ref9.num,
    range = _ref9.range,
    separator = _ref9.separator,
    circular = _ref9.circular,
    hours24 = _ref9.hours24,
    meridiem = _ref9.meridiem;
  var activeTimePartIndex = getActiveTimePartIndex({
    value: oldValue,
    separator: separator,
    range: range,
    hours24: hours24
  });
  var activeTimePart = getTimePartAt(activeTimePartIndex, {
    hours24: hours24
  });
  if (activeTimePart && range.start == range.end && activeTimePart.end == range.end) {
    activeTimePart = getTimePartAt(activeTimePartIndex + 1, {
      hours24: hours24
    });
  }
  if (!activeTimePart) {
    return {
      value: value,
      update: false
    };
  }
  var name = activeTimePart.name;
  var timeParts = (0, _toTimeValue.default)({
    value: oldValue,
    separator: separator,
    meridiem: meridiem
  });
  var timePartValue = "".concat(timeParts[name]);
  var caretPos;
  if (range.start <= activeTimePart.start) {
    var maxFirstChar = "".concat(activeTimePart.max).charAt(0) * 1;
    caretPos = range.start + (num > maxFirstChar ? 3 : range.start < activeTimePart.start ? 2 : 1);
    timeParts[name] = num > maxFirstChar ? "0".concat(num) : num + timeParts[name].charAt(1);
  } else {
    caretPos = range.start + 2;
    timeParts[name] = (0, _clamp.clampNamed)(name, replaceAt({
      value: timePartValue,
      index: 1,
      str: num
    }) * 1, {
      circular: circular
    });
  }
  var hours = timeParts.hours,
    minutes = timeParts.minutes,
    seconds = timeParts.seconds;
  var value = hours + separator + minutes;
  if (seconds) {
    value += separator + seconds;
  }
  if (meridiem) {
    value += " ".concat(timeParts.meridiem);
  }
  return {
    value: value,
    caretPos: caretPos,
    update: true
  };
};
function _default(_ref10) {
  var oldValue = _ref10.oldValue,
    range = _ref10.range,
    event = _ref10.event,
    _ref10$separator = _ref10.separator,
    separator = _ref10$separator === void 0 ? ':' : _ref10$separator,
    incrementNext = _ref10.incrementNext,
    circular = _ref10.circular,
    propagate = _ref10.propagate,
    hours24 = _ref10.hours24,
    meridiem = _ref10.meridiem;
  var newChar = String.fromCharCode(event.which);
  var start = range.start,
    end = range.end;
  var key = event.key;
  if (key == 'Delete' || key == 'Backspace') {
    return getValueOnDelete({
      key: key,
      oldValue: oldValue,
      range: range,
      separator: separator,
      meridiem: meridiem
    });
  }
  var dir = ARROWS[key];
  if (dir) {
    return getValueOnDirection({
      hours24: hours24,
      meridiem: meridiem,
      dir: dir,
      oldValue: oldValue,
      range: range,
      circular: circular,
      propagate: propagate,
      separator: separator,
      incrementNext: incrementNext
    });
  }
  if (key == 'Unidentified' && newChar * 1 == newChar) {
    return getValueOnNumber({
      num: newChar * 1,
      circular: circular,
      separator: separator,
      oldValue: oldValue,
      range: range,
      meridiem: meridiem
    });
  }
  return {
    value: oldValue
  };
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/TimeInput/getSelectionEnd.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/TimeInput/getSelectionEnd.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = getSelectionEnd;
var _getGlobal = __webpack_require__(/*! ../../../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
var globalObject = (0, _getGlobal.getGlobal)();
var document = globalObject.document;
function getSelectionEnd(o) {
  if (o.createTextRange && !globalObject.getSelection) {
    var r = document.selection.createRange().duplicate();
    r.moveStart('character', -o.value.length);
    return r.text.length;
  }
  return o.selectionEnd;
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/TimeInput/getSelectionStart.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/TimeInput/getSelectionStart.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = getSelectionStart;
var _getGlobal = __webpack_require__(/*! ../../../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
var globalObject = (0, _getGlobal.getGlobal)();
var document = globalObject.document;
function getSelectionStart(o) {
  if (o.createTextRange && !globalObject.getSelection) {
    var r = document.selection.createRange().duplicate();
    r.moveEnd('character', o.value.length);
    if (r.text == '') return o.value.length;
    return o.value.lastIndexOf(r.text);
  }
  return o.selectionStart;
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/TimeInput/index.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/TimeInput/index.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
Object.defineProperty(exports, "getNewValue", ({
  enumerable: true,
  get: function get() {
    return _getNewValue2.default;
  }
}));
Object.defineProperty(exports, "getSelectionEnd", ({
  enumerable: true,
  get: function get() {
    return _getSelectionEnd.default;
  }
}));
Object.defineProperty(exports, "getSelectionStart", ({
  enumerable: true,
  get: function get() {
    return _getSelectionStart.default;
  }
}));
Object.defineProperty(exports, "setCaretPosition", ({
  enumerable: true,
  get: function get() {
    return _setCaretPosition2.default;
  }
}));
Object.defineProperty(exports, "toTimeValue", ({
  enumerable: true,
  get: function get() {
    return _toTimeValue.default;
  }
}));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _reactClass = _interopRequireDefault(__webpack_require__(/*! ../../../react-class */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/index.js"));
var _raf = _interopRequireDefault(__webpack_require__(/*! ../../../../common/raf */ "./node_modules/@inovua/reactdatagrid-community/common/raf.js"));
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var _Clock = _interopRequireDefault(__webpack_require__(/*! ../Clock */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/Clock.js"));
var _getSelectionStart = _interopRequireDefault(__webpack_require__(/*! ./getSelectionStart */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/TimeInput/getSelectionStart.js"));
var _getSelectionEnd = _interopRequireDefault(__webpack_require__(/*! ./getSelectionEnd */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/TimeInput/getSelectionEnd.js"));
var _setCaretPosition2 = _interopRequireDefault(__webpack_require__(/*! ./setCaretPosition */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/TimeInput/setCaretPosition.js"));
var _getNewValue2 = _interopRequireDefault(__webpack_require__(/*! ./getNewValue */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/TimeInput/getNewValue.js"));
var _toTimeValue = _interopRequireDefault(__webpack_require__(/*! ./toTimeValue */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/TimeInput/toTimeValue.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var TimeInput = function (_Component) {
  (0, _inherits2.default)(TimeInput, _Component);
  var _super = _createSuper(TimeInput);
  function TimeInput(props) {
    var _this;
    (0, _classCallCheck2.default)(this, TimeInput);
    _this = _super.call(this, props);
    var format = props.format || props.timeFormat;
    _this.timeInputRef = (0, _react.createRef)();
    if (format.indexOf('hh') != 0 && format.indexOf('HH') != 0 && format.indexOf('kk') != 0) {
      console.warn('Please start your time format with 2 digit hours.');
    }
    var hours24 = true;
    var meridiem = format.indexOf('a') != -1 || format.indexOf('A') != -1;
    if (format.indexOf('hh') == 0 && format.indexOf('kk') == 0) {
      hours24 = false;
    }
    var separator = props.separator || format && format.length > 2 ? format.charAt(2) : ':';
    var hasSeconds = format.indexOf('ss') != -1;
    if (hasSeconds && format.charAt(5) != separator) {
      console.warn('Expected minutes-seconds separator to be same as hours-minutes separator. (at position 5)');
    }
    var defaultValue = "00".concat(separator, "00");
    if (hasSeconds) {
      defaultValue += "".concat(separator, "00");
    }
    if (meridiem) {
      defaultValue += ' am';
    }
    _this.state = {
      valueRange: props.valueRange || 0,
      separator: separator,
      hours24: hours24,
      meridiem: meridiem,
      value: props.defaultValue || defaultValue
    };
    return _this;
  }
  (0, _createClass2.default)(TimeInput, [{
    key: "render",
    value: function render() {
      var props = this.p = (0, _assign.default)({}, this.props);
      props.value = this.state.value;
      return _react.default.createElement("input", _objectSpread(_objectSpread({}, props), {}, {
        ref: this.timeInputRef,
        defaultValue: undefined,
        value: props.value,
        onKeyDown: this.onKeyDown,
        onChange: this.onChange
      }));
    }
  }, {
    key: "onChange",
    value: function onChange(event) {
      var value = event.target.value;
    }
  }, {
    key: "onKeyDown",
    value: function onKeyDown(event) {
      var _this2 = this;
      var value = this.p.value;
      var valueRange = this.state.valueRange;
      if (this.props.onKeyDown) {
        this.props.onKeyDown(event);
      }
      var range = this.getSelectedRange();
      var separator = this.props.separator || this.state.separator || ':';
      var _getNewValue = (0, _getNewValue2.default)({
          range: range,
          event: event,
          circular: this.props.circular,
          propagate: this.props.propagate,
          oldValue: value,
          separator: separator,
          meridiem: this.state.meridiem,
          hours24: this.state.hours24,
          incrementNext: this.props.incrementNext
        }),
        newValue = _getNewValue.value,
        update = _getNewValue.update,
        caretPos = _getNewValue.caretPos;
      var updateCaretPos = function updateCaretPos() {
        if (caretPos != undefined) {
          _this2.setCaretPosition(caretPos);
        }
      };
      if (update || caretPos) {
        event.preventDefault();
      }
      if (update) {
        this.setValue(newValue, updateCaretPos);
      } else {
        (0, _raf.default)(updateCaretPos);
      }
    }
  }, {
    key: "getInput",
    value: function getInput() {
      return this.timeInputRef.current;
    }
  }, {
    key: "setCaretPosition",
    value: function setCaretPosition(pos) {
      var dom = this.getInput();
      dom && (0, _setCaretPosition2.default)(dom, pos);
    }
  }, {
    key: "setValue",
    value: function setValue(value, callback) {
      this.setState({
        now: Date.now(),
        value: value
      }, typeof callback == 'function' && callback);
      if (this.props.onChange) {
        this.props.onChange(value);
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (this.updateCallback) {
        this.updateCallback();
        this.updateCallback = null;
      }
    }
  }, {
    key: "getSelectedRange",
    value: function getSelectedRange() {
      var dom = this.getInput();
      return {
        start: (0, _getSelectionStart.default)(dom),
        end: (0, _getSelectionEnd.default)(dom)
      };
    }
  }, {
    key: "getSelectedValue",
    value: function getSelectedValue() {
      var range = this.getSelectedRange();
      var value = this.p.value;
      return value.substring(range.start, range.end);
    }
  }, {
    key: "onTimeChange",
    value: function onTimeChange(value) {
      var time = value.split(':');
      this.setState({
        minutes: time[0] * 60 + time[1]
      });
    }
  }, {
    key: "renderClock",
    value: function renderClock() {
      var props = this.p;
      var clock = props.children.filter(function (child) {
        return child && child.props && child.props.isTimePickerClock;
      })[0];
      var clockProps = {
        time: this.state.minutes || props.date,
        showSecondsHand: true
      };
      if (clock) {
        return _react.default.cloneElement(clock, clockProps);
      }
      return _react.default.createElement(_Clock.default, _objectSpread({}, clockProps));
    }
  }]);
  return TimeInput;
}(_reactClass.default);
exports["default"] = TimeInput;
TimeInput.defaultProps = {
  theme: 'default',
  circular: true,
  propagate: true,
  incrementNext: true
};
TimeInput.propTypes = {
  theme: _propTypes.default.string,
  circular: _propTypes.default.bool,
  propagate: _propTypes.default.bool,
  incrementNext: _propTypes.default.bool,
  format: _propTypes.default.string,
  value: function value(props, propName) {
    if (props[propName] !== undefined) {
      console.warn('Due to performance considerations, TimeInput will only be uncontrolled.');
    }
  }
};

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/TimeInput/setCaretPosition.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/TimeInput/setCaretPosition.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = setCaretPosition;
function setCaretPosition(elem, caretPos) {
  var start = caretPos;
  var end = caretPos;
  if (caretPos && (caretPos.start != undefined || caretPos.end != undefined)) {
    start = caretPos.start || 0;
    end = caretPos.end || start;
  }
  if (elem != null) {
    if (elem.createTextRange) {
      var range = elem.createTextRange();
      range.moveStart('character', start);
      range.moveEnd('character', end);
      range.select();
    } else {
      elem.focus();
      elem.setSelectionRange(start, end);
    }
  }
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/TimeInput/toTimeValue.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/TimeInput/toTimeValue.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _leftPad = _interopRequireDefault(__webpack_require__(/*! ../utils/leftPad */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/leftPad.js"));
var _default = function _default(_ref) {
  var value = _ref.value,
    _ref$separator = _ref.separator,
    separator = _ref$separator === void 0 ? ':' : _ref$separator,
    meridiem = _ref.meridiem;
  var parts = value.split(separator);
  var hours = parts[0];
  var minutes = parts[1];
  var seconds = parts[2];
  var result = {
    hours: hours,
    minutes: minutes
  };
  if (typeof seconds == 'string' && seconds.length) {
    result.seconds = seconds;
  }
  if (meridiem && seconds !== undefined && seconds * 1 != seconds) {
    result.seconds = (0, _leftPad.default)(parseInt(seconds, 10));
  }
  if (meridiem && seconds === undefined && minutes * 1 != minutes) {
    result.minutes = (0, _leftPad.default)(parseInt(minutes, 10));
  }
  if (meridiem) {
    var meridiems = ['am', 'AM', 'pm', 'PM'];
    var indexes = meridiems.map(function (m) {
      return (seconds || minutes).indexOf(m);
    });
    indexes.forEach(function (indexOf, i) {
      if (indexOf != -1) {
        result.meridiem = meridiems[i];
      }
    });
  }
  return result;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/TimePicker.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/TimePicker.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _reactClass = _interopRequireDefault(__webpack_require__(/*! ../../react-class */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/index.js"));
var _Flex = __webpack_require__(/*! ../../Flex */ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/index.js");
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _TimeInput = _interopRequireDefault(__webpack_require__(/*! ./TimeInput */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/TimeInput/index.js"));
var _Clock = _interopRequireDefault(__webpack_require__(/*! ./Clock */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/Clock.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var TimePicker = function (_Component) {
  (0, _inherits2.default)(TimePicker, _Component);
  var _super = _createSuper(TimePicker);
  function TimePicker(props) {
    var _this;
    (0, _classCallCheck2.default)(this, TimePicker);
    _this = _super.call(this, props);
    _this.state = {};
    return _this;
  }
  (0, _createClass2.default)(TimePicker, [{
    key: "render",
    value: function render() {
      var props = this.p = (0, _assign.default)({}, this.props);
      var rootClassName = props.rootClassName;
      props.children = _react.default.Children.toArray(props.children);
      var timeFormat = props.timeFormat.toLowerCase();
      props.hasTime = props.hasTime || timeFormat.indexOf('k') != -1 || timeFormat.indexOf('h') != -1;
      var className = (0, _join.default)(props.className, rootClassName, props.theme && "".concat(rootClassName, "--theme-").concat(props.theme));
      return _react.default.createElement(_Flex.Flex, _objectSpread(_objectSpread({
        inline: true,
        column: true,
        wrap: false
      }, this.props), {}, {
        className: className
      }), this.renderClock(), this.renderInput());
    }
  }, {
    key: "renderInput",
    value: function renderInput() {
      return _react.default.createElement(_TimeInput.default, {
        className: "".concat(this.props.rootClassName, "__time-picker-input"),
        format: this.props.timeFormat || this.props.format,
        defaultValue: this.props.value || this.props.defaultValue,
        onChange: this.onTimeChange
      });
    }
  }, {
    key: "onTimeChange",
    value: function onTimeChange(value) {
      var time = value.split(':');
      var seconds = time[0] * 3600 + parseInt(time[1], 10) * 60;
      if (time[2]) {
        seconds += parseInt(time[2], 10);
      }
      this.setState({
        seconds: seconds
      });
      if (this.props.onChange) {
        this.props.onChange(value);
      }
    }
  }, {
    key: "renderClock",
    value: function renderClock() {
      var props = this.p;
      var clock = props.children.filter(function (child) {
        return child && child.props && child.props.isTimePickerClock;
      })[0];
      var clockProps = {
        seconds: this.state.seconds,
        showSecondsHand: true
      };
      if (clock) {
        return _react.default.cloneElement(clock, clockProps);
      }
      return _react.default.createElement(_Clock.default, _objectSpread({}, clockProps));
    }
  }]);
  return TimePicker;
}(_reactClass.default);
exports["default"] = TimePicker;
TimePicker.defaultProps = {
  rootClassName: 'inovua-react-toolkit-calendar__time-picker',
  format: 'HH:mm:ss a',
  theme: 'default',
  isTimePicker: true
};
TimePicker.propTypes = {
  format: _propTypes.default.string,
  theme: _propTypes.default.string,
  isTimePicker: _propTypes.default.bool
};

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/TransitionView.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/TransitionView.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _reactClass = _interopRequireDefault(__webpack_require__(/*! ../../react-class */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/index.js"));
var _Flex = __webpack_require__(/*! ../../Flex */ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/index.js");
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _toMoment2 = _interopRequireDefault(__webpack_require__(/*! ./toMoment */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/toMoment.js"));
var _forwardTime = _interopRequireDefault(__webpack_require__(/*! ./utils/forwardTime */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/forwardTime.js"));
var _getTransitionEnd = _interopRequireDefault(__webpack_require__(/*! ./getTransitionEnd */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/getTransitionEnd.js"));
var _assignDefined = _interopRequireDefault(__webpack_require__(/*! ./assignDefined */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/assignDefined.js"));
var _MonthView = __webpack_require__(/*! ./MonthView */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/MonthView/index.js");
var _NavBar = _interopRequireDefault(__webpack_require__(/*! ./NavBar */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/NavBar.js"));
var _times = _interopRequireDefault(__webpack_require__(/*! ./utils/times */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/times.js"));
var _InlineBlock = _interopRequireDefault(__webpack_require__(/*! ./InlineBlock */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/InlineBlock/index.js"));
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var renderHiddenNav = function renderHiddenNav(props) {
  return _react.default.createElement(_InlineBlock.default, _objectSpread(_objectSpread({}, props), {}, {
    style: {
      visibility: 'hidden'
    }
  }));
};
var joinFunctions = function joinFunctions(a, b) {
  if (a && b) {
    return function () {
      a.apply(void 0, arguments);
      b.apply(void 0, arguments);
    };
  }
  return a || b;
};
var TRANSITION_DURATION = '0.4s';
var TransitionView = function (_Component) {
  (0, _inherits2.default)(TransitionView, _Component);
  var _super = _createSuper(TransitionView);
  function TransitionView(props) {
    var _this;
    (0, _classCallCheck2.default)(this, TransitionView);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "componentDidUpdate", function (prevProps) {
      if (prevProps.viewDate !== _this.props.viewDate) {
        _this.transitionTo(_this.props.viewDate, _this.props);
      }
    });
    var child = _react.default.Children.toArray(_this.props.children)[0];
    var childProps = child.props;
    var viewDate = props.viewDate || props.defaultViewDate || props.defaultDate || props.date || childProps.viewDate || childProps.defaultViewDate || childProps.defaultDate || childProps.date;
    var dateFormat = props.dateFormat || childProps.dateFormat;
    var locale = props.locale || childProps.locale;
    _this.state = {
      rendered: false,
      viewDate: _this.toMoment(viewDate, {
        dateFormat: dateFormat,
        locale: locale
      })
    };
    return _this;
  }
  (0, _createClass2.default)(TransitionView, [{
    key: "toMoment",
    value: function toMoment(value, props) {
      props = props || this.props;
      return (0, _toMoment2.default)(value, {
        locale: props.locale,
        dateFormat: props.dateFormat
      });
    }
  }, {
    key: "format",
    value: function format(mom, props) {
      props = props || this.props;
      return mom.format(props.dateFormat);
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      this.setState({
        rendered: true
      });
    }
  }, {
    key: "transitionTo",
    value: function transitionTo(date, props) {
      props = props || this.props;
      var dateMoment = this.toMoment(date, props);
      this.doTransition(dateMoment);
    }
  }, {
    key: "getViewChild",
    value: function getViewChild() {
      return _react.default.Children.toArray(this.props.children).filter(function (c) {
        return c && c.props && c.props.isDatePicker;
      })[0];
    }
  }, {
    key: "prepareChildProps",
    value: function prepareChildProps(child, extraProps) {
      if (this.view) {
        return this.view.p;
      }
      child = child || this.getViewChild();
      return (0, _assign.default)({}, child.props, extraProps);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;
      var props = this.props;
      var rootClassName = props.rootClassName;
      var child = this.child = this.getViewChild();
      var viewDate = this.state.viewDate || props.viewMoment || props.viewDate;
      var renderedChildProps = this.renderedChildProps = this.prepareChildProps(child, (0, _assignDefined.default)({
        viewDate: viewDate
      }));
      viewDate = this.state.viewDate || renderedChildProps.viewMoment || renderedChildProps.viewDate;
      if (!this.state.transition) {
        this.viewDate = viewDate;
      }
      var multiView = !!(child.props.size && child.props.size >= 2);
      var onViewDateChange = joinFunctions(this.onViewDateChange, props.onViewDateChange);
      var newProps = {
        key: 'picker',
        ref: function ref(v) {
          _this2.view = v;
        },
        viewDate: this.viewDate,
        onViewDateChange: onViewDateChange,
        navigation: multiView,
        constrainActiveInView: props.constrainActiveInView,
        className: (0, _join.default)(child.props.className, 'inovua-react-toolkit-calendar__center')
      };
      (0, _assignDefined.default)(newProps, {
        range: props.range,
        date: props.date,
        activeDate: props.activeDate,
        footer: false,
        insideField: props.insideField,
        defaultRange: props.defaultRange,
        defaultDate: props.defaultDate,
        defaultActiveDate: props.defaultActiveDate,
        onTimeChange: props.onTimeChange,
        onClockInputBlur: props.onClockInputBlur,
        onClockInputFocus: props.onClockInputFocus,
        onClockEnterKey: props.onClockEnterKey,
        onClockEscapeKey: props.onClockEscapeKey,
        showClock: props.showClock,
        tabIndex: props.tabIndex,
        dateFormat: props.dateFormat,
        locale: props.locale,
        theme: props.theme,
        minDate: props.minDate,
        maxDate: props.maxDate,
        onKeyDown: this.onKeyDown,
        onBlur: this.onBlur
      });
      if (props.onChange) {
        newProps.onChange = joinFunctions(props.onChange, renderedChildProps.onChange);
      }
      if (props.onRangeChange) {
        newProps.onRangeChange = joinFunctions(props.onRangeChange, renderedChildProps.onRangeChange);
      }
      if (props.onActiveDateChange) {
        newProps.onActiveDateChange = joinFunctions(props.onActiveDateChange, renderedChildProps.onActiveDateChange);
      }
      if (this.state.transition) {
        this.transitionDurationStyle = {
          transitionDuration: props.transitionDuration || TRANSITION_DURATION
        };
        newProps.style = (0, _assign.default)({}, child.props.style, this.transitionDurationStyle);
        newProps.className = (0, _join.default)(newProps.className, 'inovua-react-toolkit-calendar--transition', "inovua-react-toolkit-calendar--transition-".concat(this.state.transition == -1 ? 'left' : 'right'));
      }
      var navBar;
      var navBarProps = {
        minDate: props.minDate || renderedChildProps.minDate,
        maxDate: props.maxDate || renderedChildProps.maxDate,
        enableMonthDecadeView: props.enableMonthDecadeView === undefined ? renderedChildProps.enableMonthDecadeView : props.enableMonthDecadeView,
        secondary: true,
        viewDate: this.nextViewDate || this.viewDate,
        onViewDateChange: onViewDateChange,
        multiView: multiView,
        enableMonthDecadeViewAnimation: props.enableMonthDecadeViewAnimation,
        showMonthDecadeViewAnimation: props.showMonthDecadeViewAnimation
      };
      if (props.navigation) {
        navBar = this.renderNavBar((0, _assign.default)({}, navBarProps, {
          mainNavBar: true
        }));
      }
      var footer;
      if (props.footer) {
        footer = (0, _MonthView.renderFooter)(props, props.insideField ? props : this.view);
      }
      if (multiView) {
        newProps.renderNavBar = this.renderMultiViewNavBar.bind(this, navBarProps);
      }
      var clone = _react.default.cloneElement(child, newProps);
      var flexProps = (0, _assign.default)({}, props);
      delete flexProps.constrainActiveInView;
      delete flexProps.enableMonthDecadeView;
      delete flexProps.focusOnNavMouseDown;
      delete flexProps.focusOnTransitionEnd;
      delete flexProps.footerClearDate;
      delete flexProps.isDatePicker;
      delete flexProps.navigation;
      delete flexProps.onTransitionEnd;
      delete flexProps.onTransitionStart;
      delete flexProps.theme;
      delete flexProps.rootClassName;
      delete flexProps.enableMonthDecadeViewAnimation;
      delete flexProps.showMonthDecadeViewAnimation;
      delete flexProps.footer;
      return _react.default.createElement(_Flex.Flex, _objectSpread(_objectSpread({
        column: true,
        inline: true,
        wrap: false,
        alignItems: "stretch"
      }, flexProps), {}, {
        className: (0, _join.default)(props.className, rootClassName, props.theme && "".concat(rootClassName, "--theme-").concat(props.theme))
      }), navBar, _react.default.createElement(_Flex.Flex, {
        inline: true,
        row: true,
        style: {
          position: 'relative',
          overflow: 'hidden'
        }
      }, this.renderAt(-1, {
        multiView: multiView,
        navBarProps: navBarProps
      }), clone, this.renderAt(1, {
        multiView: multiView,
        navBarProps: navBarProps
      })), footer);
    }
  }, {
    key: "tryNavBarKeyDown",
    value: function tryNavBarKeyDown(event) {
      if (this.navBar && this.navBar.getMonthDecadeView) {
        var monthDecadeView = this.navBar.getMonthDecadeView();
        if (monthDecadeView && monthDecadeView.onKeyDown) {
          monthDecadeView.onKeyDown(event);
          return true;
        }
      }
      return false;
    }
  }, {
    key: "onKeyDown",
    value: function onKeyDown(event) {
      var initialKeyDown = this.child.onKeyDown;
      if (this.tryNavBarKeyDown(event)) {
        return false;
      }
      if (initialKeyDown) {
        return initialKeyDown(event);
      }
    }
  }, {
    key: "isMonthDecadeViewVisible",
    value: function isMonthDecadeViewVisible() {
      if (this.navBar && this.navBar.isMonthDecadeViewVisible) {
        return this.navBar.isMonthDecadeViewVisible();
      }
      return false;
    }
  }, {
    key: "showMonthDecadeView",
    value: function showMonthDecadeView() {
      if (this.navBar) {
        this.navBar.showMonthDecadeView();
      }
    }
  }, {
    key: "hideMonthDecadeView",
    value: function hideMonthDecadeView() {
      if (this.navBar) {
        this.navBar.hideMonthDecadeView();
      }
    }
  }, {
    key: "onBlur",
    value: function onBlur(event) {
      var initialBlur = this.child.onBlur;
      this.hideMonthDecadeView();
      if (initialBlur) {
        initialBlur(event);
      }
      return true;
    }
  }, {
    key: "renderMultiViewNavBar",
    value: function renderMultiViewNavBar(navBarProps, config) {
      var index = config.index;
      var count = this.child.props.perRow;
      if (index >= count) {
        var viewDate = this.toMoment(navBarProps.viewDate).add(index, 'month');
        return _react.default.createElement(_NavBar.default, _objectSpread(_objectSpread({}, navBarProps), {}, {
          renderNavNext: renderHiddenNav,
          renderNavPrev: renderHiddenNav,
          onViewDateChange: null,
          viewDate: this.toMoment(viewDate)
        }));
      }
      return null;
    }
  }, {
    key: "renderNavBar",
    value: function renderNavBar(navBarProps) {
      var _this3 = this;
      navBarProps = (0, _assign.default)({}, navBarProps);
      if (navBarProps.mainNavBar) {
        navBarProps.ref = function (navBar) {
          _this3.navBar = navBar;
        };
        navBarProps.onMouseDown = this.onNavMouseDown;
      }
      var props = this.props;
      var _navBarProps = navBarProps,
        multiView = _navBarProps.multiView;
      var navBar = _react.default.Children.toArray(props.children).filter(function (c) {
        return c && c.props && c.props.isDatePickerNavBar;
      })[0];
      var newProps = navBarProps;
      if (navBar) {
        newProps = (0, _assign.default)({}, navBarProps, navBar.props);
        newProps.viewDate = navBarProps.viewDate;
        newProps.onViewDateChange = navBarProps.onViewDateChange;
      }
      if (multiView) {
        var count = this.child.props.perRow;
        var viewSize = this.getViewSize();
        var bars = (0, _times.default)(count).map(function (index) {
          var onUpdate = function onUpdate(dateMoment, dir) {
            var mom = _this3.toMoment(newProps.viewDate);
            if (Math.abs(dir) == 1) {
              mom.add(dir * viewSize, 'month');
            } else {
              var sign = dir > 0 ? 1 : -1;
              mom.add(sign, 'year');
            }
            return mom;
          };
          var barProps = (0, _assign.default)({}, newProps, {
            onUpdate: onUpdate,
            renderNavNext: renderHiddenNav,
            renderNavPrev: renderHiddenNav,
            viewDate: _this3.toMoment(newProps.viewDate).add(index, 'month')
          });
          delete barProps.rootClassName;
          if (index == 0) {
            delete barProps.renderNavPrev;
          }
          if (index == count - 1) {
            delete barProps.renderNavNext;
          }
          return _react.default.createElement(_NavBar.default, _objectSpread({
            flex: true
          }, barProps));
        });
        return _react.default.createElement(_Flex.Flex, {
          row: true,
          children: bars
        });
      }
      return navBar ? _react.default.cloneElement(navBar, newProps) : _react.default.createElement(_NavBar.default, _objectSpread({}, newProps));
    }
  }, {
    key: "getViewSize",
    value: function getViewSize() {
      return this.view && this.view.getViewSize ? this.view.getViewSize() || 1 : 1;
    }
  }, {
    key: "renderAt",
    value: function renderAt(index, _ref) {
      var multiView = _ref.multiView,
        navBarProps = _ref.navBarProps;
      if (!this.state.rendered || !this.view) {
        return null;
      }
      var viewSize = this.getViewSize();
      var viewDiff = viewSize * index;
      var childProps = this.child.props;
      var renderedProps = this.renderedChildProps;
      var viewDate = this.toMoment(this.viewDate).add(viewDiff, 'month');
      if (this.nextViewDate && this.state.prepareTransition == -index) {
        viewDate = this.nextViewDate;
      }
      var date = renderedProps.date || renderedProps.moment;
      if (this.state.transitionTime) {
        date = (0, _forwardTime.default)(this.state.transitionTime, this.toMoment(date));
      }
      var newProps = (0, _assign.default)({
        date: date,
        readOnly: true,
        range: renderedProps.range,
        activeDate: renderedProps.activeDate,
        dateFormat: renderedProps.dateFormat,
        locale: renderedProps.locale,
        tabIndex: -1,
        clockTabIndex: -1,
        navigation: multiView,
        viewDate: viewDate,
        key: index,
        footer: false,
        className: (0, _join.default)(childProps.className, "inovua-react-toolkit-calendar__".concat(index == -1 ? 'prev' : 'next'))
      });
      (0, _assignDefined.default)(newProps, {
        showClock: renderedProps.showClock,
        minDate: renderedProps.minDate,
        maxDate: renderedProps.maxDate
      });
      if (this.state.transition && this.state.transition != index) {
        newProps.style = (0, _assign.default)({}, childProps.style, this.transitionDurationStyle);
        newProps.className = (0, _join.default)(newProps.className, 'inovua-react-toolkit-calendar--transition', "inovua-react-toolkit-calendar--transition-".concat(this.state.transition == -1 ? 'left' : 'right'));
      }
      if (multiView) {
        newProps.renderNavBar = this.renderMultiViewNavBar.bind(this, (0, _assign.default)({}, navBarProps, {
          viewDate: viewDate,
          onViewDateChange: null
        }));
      }
      return _react.default.cloneElement(this.child, newProps);
    }
  }, {
    key: "getView",
    value: function getView() {
      return this.view;
    }
  }, {
    key: "isInView",
    value: function isInView() {
      var _this$view;
      return (_this$view = this.view).isInView.apply(_this$view, arguments);
    }
  }, {
    key: "onViewDateChange",
    value: function onViewDateChange(dateString, _ref2) {
      var dateMoment = _ref2.dateMoment;
      this.doTransition(dateMoment);
    }
  }, {
    key: "doTransition",
    value: function doTransition(dateMoment) {
      var _this4 = this;
      if (this.state.transition) {
        return;
      }
      dateMoment = this.toMoment(dateMoment);
      var newMoment = this.toMoment(dateMoment).startOf('month');
      var viewMoment = this.toMoment(this.viewDate).startOf('month');
      if (newMoment.format('YYYY-MM') == viewMoment.format('YYYY-MM')) {
        return;
      }
      var navNext = newMoment.isAfter(viewMoment);
      var transition = navNext ? -1 : 1;
      var viewSize = this.getViewSize();
      if (Math.abs(viewSize) > 1) {
        var temp = this.toMoment(viewMoment).add(viewSize * -transition, 'month');
        if (navNext) {
          dateMoment = dateMoment.isAfter(temp) ? dateMoment : temp;
        } else {
          dateMoment = dateMoment.isBefore(temp) ? dateMoment : temp;
        }
      }
      var transitionTime = this.props.getTransitionTime ? this.props.getTransitionTime() : null;
      this.setState({
        transitionTime: transitionTime,
        prepareTransition: transition
      }, function () {
        setTimeout(function () {
          if (!_this4.getViewDOMNode()) {
            return;
          }
          _this4.nextViewDate = dateMoment;
          _this4.addTransitionEnd();
          _this4.setState({
            transition: transition
          });
        });
      });
    }
  }, {
    key: "getViewDOMNode",
    value: function getViewDOMNode() {
      return this.view.getDOMNode ? this.view.getDOMNode() : null;
    }
  }, {
    key: "addTransitionEnd",
    value: function addTransitionEnd() {
      var dom = this.getViewDOMNode();
      if (dom) {
        dom.addEventListener((0, _getTransitionEnd.default)(), this.onTransitionEnd, false);
      }
    }
  }, {
    key: "removeTransitionEnd",
    value: function removeTransitionEnd(dom) {
      dom = dom || this.getViewDOMNode();
      if (dom) {
        dom.removeEventListener((0, _getTransitionEnd.default)(), this.onTransitionEnd);
      }
    }
  }, {
    key: "onTransitionEnd",
    value: function onTransitionEnd() {
      this.removeTransitionEnd();
      if (!this.nextViewDate) {
        return;
      }
      this.setState({
        viewDate: this.nextViewDate,
        transition: 0,
        prepareTransition: 0
      });
      if (this.props.focusOnTransitionEnd) {
        this.focus();
      }
      delete this.nextViewDate;
    }
  }, {
    key: "onNavMouseDown",
    value: function onNavMouseDown() {
      if (this.props.focusOnNavMouseDown && !this.isFocused()) {
        this.focus();
      }
    }
  }, {
    key: "isFocused",
    value: function isFocused() {
      var view = this.getView();
      if (view) {
        return view.isFocused();
      }
      return false;
    }
  }, {
    key: "focus",
    value: function focus() {
      this.getView().focus();
    }
  }]);
  return TransitionView;
}(_reactClass.default);
exports["default"] = TransitionView;
TransitionView.propTypes = {
  children: _propTypes.default.node.isRequired,
  rootClassName: _propTypes.default.string,
  focusOnNavMouseDown: _propTypes.default.bool,
  onTransitionStart: _propTypes.default.func,
  onTransitionEnd: _propTypes.default.func,
  footerClearDate: _propTypes.default.bool,
  enableMonthDecadeView: _propTypes.default.bool,
  constrainActiveInView: _propTypes.default.bool,
  focusOnTransitionEnd: _propTypes.default.bool,
  navigation: _propTypes.default.bool,
  theme: _propTypes.default.string,
  isDatePicker: _propTypes.default.bool,
  enableMonthDecadeViewAnimation: _propTypes.default.bool,
  showMonthDecadeViewAnimation: _propTypes.default.number
};
TransitionView.defaultProps = {
  rootClassName: 'inovua-react-toolkit-calendar__transition-month-view',
  focusOnNavMouseDown: true,
  enableMonthDecadeViewAnimation: true,
  showMonthDecadeViewAnimation: 300,
  onTransitionStart: function onTransitionStart() {},
  onTransitionEnd: function onTransitionEnd() {},
  footerClearDate: null,
  enableMonthDecadeView: true,
  constrainActiveInView: false,
  focusOnTransitionEnd: false,
  navigation: true,
  theme: 'default-light',
  isDatePicker: true
};

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/YearView.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/YearView.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _reactClass = _interopRequireDefault(__webpack_require__(/*! ../../react-class */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/index.js"));
var _Flex = __webpack_require__(/*! ../../Flex */ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/index.js");
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _times = _interopRequireDefault(__webpack_require__(/*! ./utils/times */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/times.js"));
var _toMoment2 = _interopRequireDefault(__webpack_require__(/*! ./toMoment */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/toMoment.js"));
var _bemFactory = _interopRequireDefault(__webpack_require__(/*! ./bemFactory */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/bemFactory.js"));
var _DecadeView = __webpack_require__(/*! ./DecadeView */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/DecadeView.js");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var bem = (0, _bemFactory.default)('react-calendar__year-view');
var NAV_KEYS = {
  ArrowUp: function ArrowUp(mom) {
    if (mom.get('month') >= 4) {
      mom.add(-4, 'month');
    }
    return mom;
  },
  ArrowDown: function ArrowDown(mom) {
    if (mom.get('month') <= 7) {
      mom.add(4, 'month');
    }
    return mom;
  },
  ArrowLeft: function ArrowLeft(mom) {
    if (mom.get('month') >= 1) {
      mom.add(-1, 'month');
    }
    return mom;
  },
  ArrowRight: function ArrowRight(mom) {
    if (mom.get('month') <= 10) {
      mom.add(1, 'month');
    }
    return mom;
  },
  Home: function Home(mom) {
    return mom.startOf('year').startOf('month');
  },
  End: function End(mom) {
    return mom.endOf('year').startOf('month');
  },
  PageUp: function PageUp(mom) {
    var month = mom.get('month') - 4;
    var extra4 = month - 4;
    if (month >= 0) {
      if (extra4 >= 0) {
        return mom.set('month', extra4);
      }
      return mom.set('month', month);
    }
    return mom;
  },
  PageDown: function PageDown(mom) {
    var month = mom.get('month') + 4;
    var extra4 = month + 4;
    if (month <= 11) {
      if (extra4 <= 11) {
        return mom.set('month', extra4);
      }
      return mom.set('month', month);
    }
    return mom;
  }
};
var YearView = function (_Component) {
  (0, _inherits2.default)(YearView, _Component);
  var _super = _createSuper(YearView);
  function YearView(props) {
    var _this;
    (0, _classCallCheck2.default)(this, YearView);
    _this = _super.call(this, props);
    _this.state = (0, _DecadeView.getInitialState)(props);
    _this.yearViewRef = (0, _react.createRef)();
    return _this;
  }
  (0, _createClass2.default)(YearView, [{
    key: "getMonthsInYear",
    value: function getMonthsInYear(value) {
      var _this2 = this;
      var start = this.toMoment(value).startOf('year');
      return (0, _times.default)(12).map(function (i) {
        return _this2.toMoment(start).add(i, 'month');
      });
    }
  }, {
    key: "toMoment",
    value: function toMoment(date) {
      return (0, _toMoment2.default)(date, this.props);
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.p = (0, _assign.default)({}, this.props);
      var rootClassName = props.rootClassName;
      var dateProps = (0, _DecadeView.prepareDateProps)(props, this.state);
      (0, _assign.default)(props, dateProps);
      var className = (0, _join.default)(props.className, rootClassName, props.theme && "".concat(rootClassName, "--theme-").concat(props.theme));
      var monthsInView = this.getMonthsInYear(props.viewMoment);
      var flexProps = (0, _assign.default)({}, props);
      delete flexProps.rootClassName;
      delete flexProps.activeDate;
      delete flexProps.activeMoment;
      delete flexProps.adjustDateStartOf;
      delete flexProps.adjustMaxDateStartOf;
      delete flexProps.adjustMinDateStartOf;
      delete flexProps.cleanup;
      delete flexProps.constrainViewDate;
      delete flexProps.date;
      delete flexProps.dateFormat;
      delete flexProps.isYearView;
      delete flexProps.maxConstrained;
      delete flexProps.maxDate;
      delete flexProps.maxDateMoment;
      delete flexProps.minConstrained;
      delete flexProps.minDate;
      delete flexProps.minDateMoment;
      delete flexProps.moment;
      delete flexProps.monthFormat;
      delete flexProps.navKeys;
      delete flexProps.onActiveDateChange;
      delete flexProps.onViewDateChange;
      delete flexProps.onlyCompareMonth;
      delete flexProps.timestamp;
      delete flexProps.theme;
      delete flexProps.viewDate;
      delete flexProps.viewMoment;
      if (typeof props.cleanup == 'function') {
        props.cleanup(flexProps);
      }
      return _react.default.createElement(_Flex.Flex, _objectSpread(_objectSpread({
        inline: true,
        column: true,
        ref: this.yearViewRef,
        alignItems: "stretch",
        tabIndex: 0
      }, flexProps), {}, {
        onKeyDown: this.onKeyDown,
        className: className
      }), this.renderMonths(props, monthsInView));
    }
  }, {
    key: "renderMonths",
    value: function renderMonths(props, months) {
      var _this3 = this;
      var nodes = months.map(function (monthMoment) {
        return _this3.renderMonth(props, monthMoment);
      });
      var buckets = (0, _times.default)(Math.ceil(nodes.length / 4)).map(function (i) {
        return nodes.slice(i * 4, (i + 1) * 4);
      });
      var className = "".concat(this.props.rootClassName, "-row");
      return buckets.map(function (bucket, i) {
        return _react.default.createElement(_Flex.Flex, {
          alignItems: "center",
          flex: true,
          row: true,
          inline: true,
          key: "row_".concat(i),
          className: className
        }, bucket);
      });
    }
  }, {
    key: "format",
    value: function format(mom, _format) {
      _format = _format || this.props.monthFormat;
      return mom.format(_format);
    }
  }, {
    key: "renderMonth",
    value: function renderMonth(props, dateMoment) {
      var index = dateMoment.get('month');
      var monthText = props.monthNames ? props.monthNames[index] || this.format(dateMoment) : this.format(dateMoment);
      var timestamp = +dateMoment;
      var isActiveDate = props.onlyCompareMonth && props.activeMoment ? dateMoment.get('month') == props.activeMoment.get('month') : timestamp === props.activeDate;
      var isValue = props.onlyCompareMonth && props.moment ? dateMoment.get('month') == props.moment.get('month') : timestamp === props.timestamp;
      var disabled = props.minDate != null && timestamp < props.minDate || props.maxDate != null && timestamp > props.maxDate;
      var rootClassName = props.rootClassName;
      var className = (0, _join.default)("".concat(rootClassName, "-month"), !disabled && isActiveDate && "".concat(rootClassName, "-month--active"), !disabled && isValue && "".concat(rootClassName, "-month--value"), disabled && "".concat(rootClassName, "-month--disabled"));
      var onClick = disabled ? null : this.handleClick.bind(this, {
        dateMoment: dateMoment,
        timestamp: timestamp
      });
      return _react.default.createElement(_Flex.Item, {
        key: monthText,
        className: className,
        onClick: onClick
      }, monthText);
    }
  }, {
    key: "handleClick",
    value: function handleClick(_ref, event) {
      var timestamp = _ref.timestamp,
        dateMoment = _ref.dateMoment;
      event.target.value = timestamp;
      this.select({
        dateMoment: dateMoment,
        timestamp: timestamp
      }, event);
    }
  }, {
    key: "onKeyDown",
    value: function onKeyDown(event) {
      return _DecadeView.onKeyDown.call(this, event);
    }
  }, {
    key: "confirm",
    value: function confirm(date, event) {
      return _DecadeView.confirm.call(this, date, event);
    }
  }, {
    key: "navigate",
    value: function navigate(direction, event) {
      return _DecadeView.navigate.call(this, direction, event);
    }
  }, {
    key: "select",
    value: function select(_ref2, event) {
      var dateMoment = _ref2.dateMoment,
        timestamp = _ref2.timestamp;
      return _DecadeView.select.call(this, {
        dateMoment: dateMoment,
        timestamp: timestamp
      }, event);
    }
  }, {
    key: "onViewDateChange",
    value: function onViewDateChange(_ref3) {
      var dateMoment = _ref3.dateMoment,
        timestamp = _ref3.timestamp;
      return _DecadeView.onViewDateChange.call(this, {
        dateMoment: dateMoment,
        timestamp: timestamp
      });
    }
  }, {
    key: "gotoViewDate",
    value: function gotoViewDate(_ref4) {
      var dateMoment = _ref4.dateMoment,
        timestamp = _ref4.timestamp;
      return _DecadeView.gotoViewDate.call(this, {
        dateMoment: dateMoment,
        timestamp: timestamp
      });
    }
  }, {
    key: "onActiveDateChange",
    value: function onActiveDateChange(_ref5) {
      var dateMoment = _ref5.dateMoment,
        timestamp = _ref5.timestamp;
      return _DecadeView.onActiveDateChange.call(this, {
        dateMoment: dateMoment,
        timestamp: timestamp
      });
    }
  }, {
    key: "onChange",
    value: function onChange(_ref6, event) {
      var dateMoment = _ref6.dateMoment,
        timestamp = _ref6.timestamp;
      return _DecadeView.onChange.call(this, {
        dateMoment: dateMoment,
        timestamp: timestamp
      }, event);
    }
  }, {
    key: "focus",
    value: function focus() {
      this.yearViewRef.current.focus();
    }
  }, {
    key: "getDOMNode",
    value: function getDOMNode() {
      return this.yearViewRef.current;
    }
  }]);
  return YearView;
}(_reactClass.default);
exports["default"] = YearView;
YearView.defaultProps = {
  rootClassName: 'inovua-react-toolkit-calendar__year-view',
  isYearView: true,
  navKeys: NAV_KEYS,
  constrainViewDate: true,
  theme: 'default',
  monthFormat: 'MMM',
  dateFormat: 'YYYY-MM-DD',
  onlyCompareMonth: true,
  adjustDateStartOf: 'month',
  adjustMinDateStartOf: 'month',
  adjustMaxDateStartOf: 'month'
};
YearView.propTypes = {
  rootClassName: _propTypes.default.string,
  navKeys: _propTypes.default.object,
  isYearView: _propTypes.default.bool,
  constrainViewDate: _propTypes.default.bool,
  onlyCompareMonth: _propTypes.default.bool,
  theme: _propTypes.default.string,
  monthFormat: _propTypes.default.string,
  dateFormat: _propTypes.default.string,
  adjustDateStartOf: _propTypes.default.string,
  adjustMinDateStartOf: _propTypes.default.string,
  adjustMaxDateStartOf: _propTypes.default.string
};

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/assignDefined.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/assignDefined.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var filter = function filter(object) {
  return Object.keys(object).reduce(function (acc, prop) {
    var value = object[prop];
    if (value !== undefined) {
      acc[prop] = value;
    }
    return acc;
  }, {});
};
var _default = function _default(target) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }
  return _assign.default.apply(void 0, [target].concat((0, _toConsumableArray2.default)(args.map(filter))));
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/bemFactory.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/bemFactory.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = function _default(className) {
  return function (element, modifier) {
    var el = element ? "-".concat(element) : '';
    var mod = modifier ? "--".concat(modifier) : '';
    return "".concat(className).concat(el).concat(mod);
  };
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/clampRange.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/clampRange.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = function _default(range) {
  if (range[1] && range[0].isAfter(range[1])) {
    range = [range[1], range[0]];
  }
  return range;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/getTransitionEnd.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/getTransitionEnd.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var map = {
  WebkitTransition: 'webkitTransitionEnd',
  MozTransition: 'transitionend',
  OTransition: 'oTransitionEnd',
  msTransition: 'MSTransitionEnd',
  transition: 'transitionend'
};
var EL;
var RESULT;
var _default = function _default() {
  if (!EL) {
    EL = document.createElement('p');
  }
  if (RESULT) {
    return RESULT;
  }
  for (var transition in map) {
    if (EL.style[transition] != null) {
      RESULT = map[transition];
      break;
    }
  }
  return RESULT;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/joinFunctions.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/joinFunctions.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = function _default(a, b) {
  if (a && b) {
    return function () {
      a.apply(void 0, arguments);
      b.apply(void 0, arguments);
    };
  }
  return a || b;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/toMoment.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/toMoment.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js"));
var _moment = _interopRequireDefault(__webpack_require__(/*! moment */ "./node_modules/moment/moment.js"));
var _default = function _default(value, dateFormat, config) {
  if ((0, _typeof2.default)(dateFormat) === 'object') {
    config = dateFormat;
    dateFormat = null;
  }
  var strict = !!(config && config.strict);
  var locale = config && config.locale;
  dateFormat = dateFormat || config && config.dateFormat || 'YYYY-MM-DD';
  if (typeof value == 'string') {
    return (0, _moment.default)(value, dateFormat, locale, strict);
  }
  value = value == null ? new Date() : value;
  return (0, _moment.default)(value, undefined, locale, strict);
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/clamp.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/clamp.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = exports.clampSecond = exports.clampNamed = exports.clampMinute = exports.clampHour = void 0;
var clamp = function clamp(value, _ref) {
  var min = _ref.min,
    max = _ref.max,
    _ref$circular = _ref.circular,
    circular = _ref$circular === void 0 ? true : _ref$circular;
  return value < min ? circular ? max : min : value > max ? circular ? min : max : value;
};
var clampHour = function clampHour(value, _ref2) {
  var max = _ref2.max,
    min = _ref2.min,
    circular = _ref2.circular;
  return clamp(value, {
    min: min || 0,
    max: max || 23,
    circular: circular
  });
};
exports.clampHour = clampHour;
var clampMinute = function clampMinute(value, _ref3) {
  var circular = _ref3.circular;
  return clamp(value, {
    min: 0,
    max: 59,
    circular: circular
  });
};
exports.clampMinute = clampMinute;
var clampSecond = function clampSecond(value, _ref4) {
  var circular = _ref4.circular;
  return clamp(value, {
    min: 0,
    max: 59,
    circular: circular
  });
};
exports.clampSecond = clampSecond;
var MAP = {
  second: clampSecond,
  seconds: clampSecond,
  minute: clampMinute,
  minutes: clampMinute,
  hour: clampHour,
  hours: clampHour
};
var clampNamed = function clampNamed(name, value, _ref5) {
  var circular = _ref5.circular,
    max = _ref5.max,
    min = _ref5.min;
  return MAP[name](value, {
    circular: circular,
    max: max,
    min: min
  });
};
exports.clampNamed = clampNamed;
var _default = clamp;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/format.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/format.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _toMoment = _interopRequireDefault(__webpack_require__(/*! ../toMoment */ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/toMoment.js"));
var CONFIG = {
  dayFormat: 'D',
  monthFormat: 'MMMM',
  yearFormat: 'YYYY'
};
var f = function f(mom, format) {
  return (0, _toMoment.default)(mom).format(format);
};
var _default = {
  day: function day(mom, format) {
    return f(mom, format || CONFIG.dayFormat);
  },
  month: function month(mom, format) {
    return f(mom, format || CONFIG.monthFormat);
  },
  year: function year(mom, format) {
    return f(mom, format || CONFIG.yearFormat);
  }
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/forwardTime.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/forwardTime.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = function _default(from, to) {
  if (from) {
    ['hour', 'minute', 'second', 'millisecond'].forEach(function (part) {
      to.set(part, from.get ? from.get(part) : from[part]);
    });
  }
  return to;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/getWeekDayNames.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/getWeekDayNames.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = getWeekDayNames;
var _moment = _interopRequireDefault(__webpack_require__(/*! moment */ "./node_modules/moment/moment.js"));
var DEFAULT_WEEK_START_DAY = (0, _moment.default)().startOf('week').format('d') * 1;
function getWeekDayNames(startDay, locale) {
  var weekDays;
  if (locale) {
    var data = _moment.default.localeData(locale);
    weekDays = data && data._weekdaysShort ? data._weekdaysShort : weekDays;
  }
  weekDays = (weekDays || _moment.default.weekdaysMin()).concat();
  var names = weekDays;
  var index = startDay == null ? DEFAULT_WEEK_START_DAY : startDay;
  while (index > 0) {
    names.push(names.shift());
    index--;
  }
  return names;
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/isInRange.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/isInRange.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js"));
var _default = function _default(moment, configOrRange) {
  var range = configOrRange;
  var inclusive = true;
  if (!Array.isArray(configOrRange) && (0, _typeof2.default)(configOrRange) == 'object') {
    range = configOrRange.range;
    if (configOrRange.inclusive !== undefined) {
      inclusive = !!configOrRange.inclusive;
    }
  }
  var start = range[0];
  var end = range.length >= 2 && range[range.length - 1];
  if (!moment) {
    return false;
  }
  if (start && end) {
    var insideRange = start.isBefore(moment) && end.isAfter(moment);
    return inclusive ? insideRange || start.isSame(moment) || end.isSame(moment) : insideRange;
  }
  return false;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/leftPad.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/leftPad.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = function _default(str) {
  if (typeof str == 'string' && str.length < 2) {
    return str.length ? "0".concat(str) : '00';
  }
  if (typeof str == 'number') {
    return str < 10 ? "0".concat(str) : "".concat(str);
  }
  return str;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/times.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Calendar/src/utils/times.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var times = function times(count) {
  return (count >= 0 ? (0, _toConsumableArray2.default)(new Array(count)) : []).map(function (v, i) {
    return i;
  });
};
var _default = times;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/CheckBox/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/CheckBox/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _src = _interopRequireDefault(__webpack_require__(/*! ./src */ "./node_modules/@inovua/reactdatagrid-community/packages/CheckBox/src/index.js"));
var _default = _src.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/CheckBox/src/CheckBox.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/CheckBox/src/CheckBox.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _reactClass = __webpack_require__(/*! ../../../packages/react-class */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/index.js");
var _uglified = _interopRequireDefault(__webpack_require__(/*! ../../../packages/uglified */ "./node_modules/@inovua/reactdatagrid-community/packages/uglified/index.js"));
var _cleanProps = _interopRequireDefault(__webpack_require__(/*! ../../../common/cleanProps */ "./node_modules/@inovua/reactdatagrid-community/common/cleanProps.js"));
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _getClassNames = _interopRequireDefault(__webpack_require__(/*! ./utils/getClassNames */ "./node_modules/@inovua/reactdatagrid-community/packages/CheckBox/src/utils/getClassNames.js"));
var _icons = __webpack_require__(/*! ./icons */ "./node_modules/@inovua/reactdatagrid-community/packages/CheckBox/src/icons.js");
var _InovuaCheckBox$propT;
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var stopPropagation = function stopPropagation(e) {
  return e.stopPropagation();
};
var isValidCheckValue = function isValidCheckValue(value, props) {
  return value === props.checkedValue || value === props.uncheckedValue || value === props.indeterminateValue && props.supportIndeterminate;
};
var nextValue = function nextValue(oldValue, props) {
  if (oldValue === props.checkedValue) {
    return props.uncheckedValue;
  }
  if (oldValue === props.uncheckedValue) {
    return props.supportIndeterminate ? props.indeterminateValue : props.checkedValue;
  }
  if (props.supportIndeterminate && oldValue === props.indeterminateValue) {
    return props.checkedValue;
  }
  return props.uncheckedValue;
};
var getComponentStyle = function getComponentStyle(props, state) {
  var focused = state.focused;
  var disabled = props.disabled,
    focusedStyle = props.focusedStyle,
    disabledStyle = props.disabledStyle,
    readOnly = props.readOnly,
    readOnlyStyle = props.readOnlyStyle,
    style = props.style;
  var styles = [style || {}];
  if (focused) {
    styles.push(focusedStyle);
  }
  if (disabled) {
    styles.push(disabledStyle);
  }
  if (readOnly) {
    styles.push(readOnlyStyle);
  }
  return _assign.default.apply(void 0, [{}].concat(styles));
};
var getComputedIconStyle = function getComputedIconStyle(config) {
  var focused = config.focused,
    disabled = config.disabled,
    focusedIconStyle = config.focusedIconStyle,
    disabledIconStyle = config.disabledIconStyle,
    iconStyle = config.iconStyle;
  var styles = [iconStyle];
  styles.push(getIconSizeStyle(config));
  if (focused) {
    styles.push(focusedIconStyle);
  }
  if (disabled) {
    styles.push(disabledIconStyle);
  }
  return _assign.default.apply(void 0, [{}].concat(styles));
};
var getIconClassName = function getIconClassName(props) {
  var iconClassName = '';
  if (props.iconClassName) {
    iconClassName = props.iconClassName;
  }
  if (props.disabled && props.disabledIconClassName) {
    iconClassName = (0, _join.default)(iconClassName, props.disabledIconClassName);
  }
  if (props.focused && props.focusedIconClassName) {
    iconClassName = (0, _join.default)(iconClassName, props.focusedIconClassName);
  }
  if (props.readOnly && props.readOnlyIconClassName) {
    iconClassName = (0, _join.default)(iconClassName, props.readOnlyIconClassName);
  }
  return iconClassName;
};
var renderIconFunctionOrJSX = function renderIconFunctionOrJSX(iconRender, props, _ref) {
  var style = _ref.style,
    className = _ref.className;
  if (typeof iconRender === 'function') {
    return iconRender({
      style: style,
      className: className
    }, props);
  }
  return _react.default.cloneElement(iconRender, {
    style: _objectSpread(_objectSpread({}, iconRender.props.style), style),
    className: (0, _join.default)(iconRender.props.className, className)
  });
};
var renderCheckedIcon = function renderCheckedIcon(props, iconProps) {
  var checkedIcon = props.checkedIcon,
    checkedIconSrc = props.checkedIconSrc;
  if (checkedIconSrc) {
    return _react.default.createElement("img", _objectSpread(_objectSpread({}, iconProps), {}, {
      src: checkedIconSrc
    }));
  }
  return renderIconFunctionOrJSX(checkedIcon, props, iconProps);
};
var renderUncheckedIcon = function renderUncheckedIcon(props, iconProps) {
  var uncheckedIcon = props.uncheckedIcon,
    uncheckedIconSrc = props.uncheckedIconSrc;
  if (uncheckedIconSrc) {
    return _react.default.createElement("img", _objectSpread(_objectSpread({}, iconProps), {}, {
      src: uncheckedIconSrc
    }));
  }
  return renderIconFunctionOrJSX(uncheckedIcon, props, iconProps);
};
var renderIndeterminateIcon = function renderIndeterminateIcon(props, iconProps) {
  var indeterminateIcon = props.indeterminateIcon,
    indeterminateIconSrc = props.indeterminateIconSrc;
  if (indeterminateIconSrc) {
    return _react.default.createElement("img", _objectSpread(_objectSpread({}, iconProps), {}, {
      src: indeterminateIconSrc
    }));
  }
  return renderIconFunctionOrJSX(indeterminateIcon, props, iconProps);
};
var renderIcon = function renderIcon(config) {
  var checkedDescriptor = getCheckedDescriptor(config.checked, config);
  var checkBoxIconStyle = getComputedIconStyle(config);
  var iconProps = {
    className: getIconClassName(config),
    style: checkBoxIconStyle
  };
  switch (checkedDescriptor) {
    case CHECKED_STATE:
      return renderCheckedIcon(config, iconProps);
    case UNCHECKED_STATE:
      return renderUncheckedIcon(config, iconProps);
    case INDETERMINATE_STATE:
      return renderIndeterminateIcon(config, iconProps);
  }
};
var getIconSizeStyle = function getIconSizeStyle(props) {
  var style = {};
  var iconSize = props.iconSize;
  if (Array.isArray(iconSize)) {
    style.width = iconSize[0];
    style.height = iconSize[1];
  } else {
    style.width = style.height = iconSize;
  }
  return style;
};
var CHECKED_STATE = 'checked';
var UNCHECKED_STATE = 'unchecked';
var INDETERMINATE_STATE = 'indeterminate';
var getCheckedDescriptor = function getCheckedDescriptor(checked, props) {
  var checkedValue = props.checkedValue,
    supportIndeterminate = props.supportIndeterminate,
    indeterminateValue = props.indeterminateValue;
  if (checked === checkedValue) {
    return CHECKED_STATE;
  }
  if (supportIndeterminate && checked === indeterminateValue) {
    return INDETERMINATE_STATE;
  }
  return UNCHECKED_STATE;
};
var renderHiddenInput = function renderHiddenInput(props) {
  var withHiddenInput = props.withHiddenInput,
    name = props.name;
  var checked = props.checked;
  var checkedDescriptor = getCheckedDescriptor(checked, props);
  switch (checkedDescriptor) {
    case CHECKED_STATE:
      checked = props.checkedSubmitValue === undefined ? props.checkedValue : props.checkedSubmitValue;
      break;
    case UNCHECKED_STATE:
      checked = props.uncheckedSubmitValue === undefined ? props.uncheckedValue : props.uncheckedSubmitValue;
      break;
    case INDETERMINATE_STATE:
      checked = props.indeterminateSubmitValue === undefined ? props.indeterminateValue : props.indeterminateSubmitValue;
  }
  if (checked === null) {
    checked = '';
  }
  if (withHiddenInput) {
    return _react.default.createElement("input", {
      type: "hidden",
      name: name,
      value: checked
    });
  }
  return null;
};
var getChecked = function getChecked(props, state) {
  var checked = isControlledComponent(props) ? props.checked : state.checked;
  return isValidCheckValue(checked, props) ? checked : props.uncheckedValue;
};
var isControlledComponent = function isControlledComponent(props) {
  return props.checked !== undefined;
};
var InovuaCheckBox = function (_Component) {
  (0, _inherits2.default)(InovuaCheckBox, _Component);
  var _super = _createSuper(InovuaCheckBox);
  function InovuaCheckBox(props) {
    var _this;
    (0, _classCallCheck2.default)(this, InovuaCheckBox);
    _this = _super.call(this, props);
    (0, _reactClass.autoBind)((0, _assertThisInitialized2.default)(_this));
    var defaultChecked = props.defaultChecked,
      uncheckedValue = props.uncheckedValue;
    _this.state = {
      checked: isValidCheckValue(defaultChecked, props) ? defaultChecked : uncheckedValue
    };
    _this.checkboxRef = (0, _react.createRef)();
    return _this;
  }
  (0, _createClass2.default)(InovuaCheckBox, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      this.checkUpdateIndeterminate(this.p);
      if (prevProps.supportIndeterminate && !this.props.supportIndeterminate) {
        this.setNativeIndeterminate(false);
      }
      if (!prevProps.autoFocus && this.props.autoFocus && !this.isFocused()) {
        this.focus();
      }
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      this.checkUpdateIndeterminate();
      if (this.props.autoFocus) {
        this.focus();
      }
    }
  }, {
    key: "focus",
    value: function focus() {
      this.checkboxRef.current.focus();
    }
  }, {
    key: "checkUpdateIndeterminate",
    value: function checkUpdateIndeterminate() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.p;
      if (props.browserNative && props.supportIndeterminate) {
        this.setNativeIndeterminate(getCheckedDescriptor(props.checked, props) === INDETERMINATE_STATE);
      }
    }
  }, {
    key: "isFocused",
    value: function isFocused() {
      return this.state.focused;
    }
  }, {
    key: "handleFocus",
    value: function handleFocus(event) {
      var onFocus = this.p.onFocus;
      this.setState({
        focused: true
      });
      onFocus && onFocus(event);
    }
  }, {
    key: "handleBlur",
    value: function handleBlur(event) {
      var onBlur = this.p.onBlur;
      this.setState({
        focused: false
      });
      onBlur && onBlur(event);
    }
  }, {
    key: "changeToNextValue",
    value: function changeToNextValue(event) {
      var _this$p = this.p,
        readOnly = _this$p.readOnly,
        checked = _this$p.checked,
        nextValue = _this$p.nextValue;
      if (readOnly) {
        return;
      }
      var nextCheckedValue = nextValue(checked, this.p);
      this.setChecked(nextCheckedValue, event);
    }
  }, {
    key: "setChecked",
    value: function setChecked(value, event) {
      var _this$p2 = this.p,
        disabled = _this$p2.disabled,
        onChange = _this$p2.onChange;
      if (disabled) {
        return;
      }
      if (!isValidCheckValue(value, this.p)) {
        return;
      }
      if (!isControlledComponent(this.props)) {
        this.setState({
          checked: value
        });
      }
      if (typeof onChange == 'function') {
        onChange(value, event);
      }
    }
  }, {
    key: "handleClick",
    value: function handleClick(event) {
      var _this$p3 = this.p,
        onClick = _this$p3.onClick,
        disabled = _this$p3.disabled;
      if (disabled) {
        return;
      }
      this.changeToNextValue(event);
      if (onClick) {
        onClick(event);
      }
    }
  }, {
    key: "handleKeyDown",
    value: function handleKeyDown(event) {
      var onKeyDown = this.p.onKeyDown;
      if (event.key === ' ') {
        event.preventDefault();
        this.changeToNextValue(event);
      }
      if (typeof onKeyDown == 'function') {
        onKeyDown(event);
      }
    }
  }, {
    key: "getProps",
    value: function getProps(props, state) {
      var checked = getChecked(props, state);
      var style = getComponentStyle(props, state);
      var className = (0, _getClassNames.default)(props, state, {
        checked: checked
      });
      var shouldSubmitIsFunction = typeof props.shouldSubmit === 'function';
      var shouldSubmitValue = shouldSubmitIsFunction ? props.shouldSubmit(checked, props) : typeof props.shouldSubmit === 'undefined' || props.shouldSubmit;
      if (props.showWarnings && shouldSubmitIsFunction && shouldSubmitValue && !props.name) {
        console.warn('shouldSubmit function returned true, but "name" prop is missing');
      }
      var withHiddenInput = !!(props.name && shouldSubmitValue);
      var focused = state.focused;
      return _objectSpread(_objectSpread({}, props), {}, {
        checked: checked,
        style: style,
        withHiddenInput: withHiddenInput,
        focused: focused,
        className: className
      });
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.props,
        state = this.state;
      var _this$p4 = this.p = this.getProps(props, state),
        children = _this$p4.children,
        className = _this$p4.className,
        style = _this$p4.style,
        tabIndex = _this$p4.tabIndex,
        iconCheckOnly = _this$p4.iconCheckOnly,
        browserNative = _this$p4.browserNative,
        focusable = _this$p4.focusable;
      var eventHandlers = {
        onBlur: this.handleBlur,
        onFocus: this.handleFocus,
        onKeyDown: this.handleKeyDown
      };
      if (!iconCheckOnly) {
        eventHandlers.onClick = this.handleClick;
      }
      var domProps = _objectSpread(_objectSpread(_objectSpread({}, (0, _cleanProps.default)(props, InovuaCheckBox.propTypes)), eventHandlers), {}, {
        className: className,
        style: style,
        ref: this.checkboxRef,
        tabIndex: props.disabled === true ? null : tabIndex
      });
      if (!props.focusable) {
        delete domProps.tabIndex;
      }
      return browserNative ? this.renderBrowserNative(domProps) : _react.default.createElement("div", _objectSpread({}, domProps), this.renderCheckbox(this.p, iconCheckOnly && {
        onClick: this.handleClick
      }), children && _react.default.createElement("div", {
        className: "".concat(props.rootClassName, "__inner-content-wrapper")
      }, children));
    }
  }, {
    key: "renderBrowserNative",
    value: function renderBrowserNative(domProps) {
      var _this$props = this.props,
        children = _this$props.children,
        iconCheckOnly = _this$props.iconCheckOnly;
      var Factory = iconCheckOnly ? 'div' : 'label';
      return _react.default.createElement(Factory, _objectSpread(_objectSpread({}, domProps), {}, {
        onClick: this.props.onClick,
        onChange: stopPropagation
      }), this.renderBrowserNativeInput(), children);
    }
  }, {
    key: "renderBrowserNativeInput",
    value: function renderBrowserNativeInput() {
      var _this2 = this;
      var _this$p5 = this.p,
        tabIndex = _this$p5.tabIndex,
        rootClassName = _this$p5.rootClassName,
        disabled = _this$p5.disabled,
        checked = _this$p5.checked,
        renderNativeBrowserInput = _this$p5.renderNativeBrowserInput,
        withHiddenInput = _this$p5.withHiddenInput,
        name = _this$p5.name;
      var className = (0, _join.default)(this.p.className, "".concat(rootClassName, "--browser-native"));
      var inputProps = {
        disabled: disabled,
        className: className,
        type: 'checkbox',
        ref: function ref(_ref2) {
          return _this2.node = _ref2;
        },
        onClick: this.handleClick,
        checked: !!checked,
        tabIndex: disabled === true ? null : tabIndex
      };
      if (withHiddenInput) {
        inputProps.name = name;
      }
      var result;
      if (typeof renderNativeBrowserInput === 'function') {
        result = renderNativeBrowserInput({
          inputProps: inputProps,
          props: this.p
        });
      }
      if (result === undefined) {
        result = _react.default.createElement("input", _objectSpread({}, inputProps));
      }
      return result;
    }
  }, {
    key: "renderCheckbox",
    value: function renderCheckbox(config, eventHandlers) {
      var input = config.disabled !== true && renderHiddenInput(config);
      var icon = renderIcon(config);
      var domProps = {};
      if (config.disabled) {
        domProps.disabled = 'disabled';
      }
      return _react.default.createElement("div", _objectSpread(_objectSpread({
        className: "".concat(config.rootClassName, "__icon-wrapper")
      }, domProps), eventHandlers), input, icon);
    }
  }, {
    key: "setNativeIndeterminate",
    value: function setNativeIndeterminate(indeterminate) {
      if (this.node) {
        this.node.indeterminate = indeterminate;
      }
    }
  }]);
  return InovuaCheckBox;
}(_react.Component);
InovuaCheckBox.defaultProps = {
  rootClassName: 'inovua-react-toolkit-checkbox',
  browserNative: false,
  iconStyle: {},
  disabledIconStyle: {},
  focusedIconStyle: {},
  disabledStyle: {},
  readOnlyStyle: {},
  focusedStyle: {},
  supportIndeterminate: false,
  focusable: true,
  disabled: false,
  readOnly: false,
  tabIndex: 0,
  checkedValue: true,
  uncheckedValue: false,
  indeterminateValue: null,
  checkedSubmitValue: undefined,
  uncheckedSubmitValue: undefined,
  indeterminateSubmitValue: undefined,
  checked: undefined,
  defaultChecked: undefined,
  iconSize: 16,
  checkedIcon: _icons.checkedIcon,
  uncheckedIcon: _icons.uncheckedIcon,
  indeterminateIcon: _icons.indeterminateIcon,
  iconCheckOnly: false,
  shouldSubmit: undefined,
  nextValue: nextValue,
  childrenPosition: 'end',
  inlineBlock: true,
  theme: 'default-light',
  showWarnings: !_uglified.default
};
var func = _propTypes.default.func,
  number = _propTypes.default.number,
  object = _propTypes.default.object,
  string = _propTypes.default.string,
  bool = _propTypes.default.bool,
  any = _propTypes.default.any;
var nonNullPropType = function nonNullPropType(props, propName, componentName) {
  if (props[propName] === null) {
    return new Error("".concat(propName, " is null in ").concat(componentName, ". This is not valid for input; use undefined instead."));
  }
  return null;
};
InovuaCheckBox.propTypes = (_InovuaCheckBox$propT = {
  rootClassName: string,
  browserNative: bool,
  focusable: bool,
  renderNativeBrowserInput: func,
  shouldSubmit: function shouldSubmit(props, propName, componentName) {
    if (props.shouldSubmit && typeof props.shouldSubmit !== 'function' && !props.name) {
      return new Error("\"shouldSubmit\" was true, but component ".concat(componentName, " requires prop \"name\" to be submitted."));
    }
  },
  value: function value(props) {
    if (typeof props.value !== 'undefined') {
      return new Error('"value" prop is not supported. Use "checked" instead.');
    }
  },
  defaultValue: function defaultValue(props) {
    if (typeof props.defaultValue !== 'undefined') {
      return new Error('"defaultValue" prop is not supported. Use "checked" instead.');
    }
  },
  nextValue: func,
  name: string,
  iconClassName: string,
  readOnlyClassName: string,
  disabledClassName: string,
  focusedClassName: string,
  checked: any,
  defaultChecked: any,
  disabled: bool,
  readOnly: bool,
  tabIndex: number,
  supportIndeterminate: bool,
  checkedValue: any,
  uncheckedValue: any,
  indeterminateValue: any,
  checkedSubmitValue: nonNullPropType,
  uncheckedSubmitValue: nonNullPropType,
  indeterminateSubmitValue: nonNullPropType,
  iconSize: _propTypes.default.oneOfType([string, _propTypes.default.arrayOf([string]), number, _propTypes.default.arrayOf(number)]),
  checkedIconSrc: string,
  checkedIcon: any,
  iconCheckOnly: bool,
  uncheckedIconSrc: string,
  uncheckedIcon: any,
  indeterminateIconSrc: string,
  indeterminateIcon: any,
  childrenPosition: _propTypes.default.oneOf(['start', 'end']),
  inlineBlock: bool,
  rtl: bool,
  theme: string,
  iconStyle: object,
  disabledIconStyle: object,
  focusedIconStyle: object
}, (0, _defineProperty2.default)(_InovuaCheckBox$propT, "iconClassName", string), (0, _defineProperty2.default)(_InovuaCheckBox$propT, "disabledIconClassName", string), (0, _defineProperty2.default)(_InovuaCheckBox$propT, "focusedIconClassName", string), (0, _defineProperty2.default)(_InovuaCheckBox$propT, "readOnlyIconClassName", string), (0, _defineProperty2.default)(_InovuaCheckBox$propT, "disabledStyle", object), (0, _defineProperty2.default)(_InovuaCheckBox$propT, "readOnlyStyle", object), (0, _defineProperty2.default)(_InovuaCheckBox$propT, "focusedStyle", object), (0, _defineProperty2.default)(_InovuaCheckBox$propT, "showWarnings", bool), _InovuaCheckBox$propT);
var _default = InovuaCheckBox;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/CheckBox/src/icons.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/CheckBox/src/icons.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.uncheckedIcon = exports.indeterminateIcon = exports.checkedIcon = void 0;
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var checkedIcon = function checkedIcon(_ref) {
  var style = _ref.style,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? 16 : _ref$size,
    className = _ref.className;
  return _react.default.createElement("svg", {
    width: size,
    height: size,
    style: style,
    className: className,
    viewBox: "0 0 16 16"
  }, _react.default.createElement("g", {
    fillRule: "evenodd"
  }, _react.default.createElement("rect", {
    width: size,
    height: size,
    stroke: "none",
    rx: "1"
  }), _react.default.createElement("path", {
    fill: "none",
    strokeLinecap: "round",
    strokeWidth: "2",
    d: "M3.357 9.018L7.229 12 12.613 5"
  })));
};
exports.checkedIcon = checkedIcon;
var uncheckedIcon = function uncheckedIcon(_ref2) {
  var style = _ref2.style,
    _ref2$size = _ref2.size,
    size = _ref2$size === void 0 ? 16 : _ref2$size,
    className = _ref2.className;
  return _react.default.createElement("svg", {
    width: size,
    height: size,
    className: className,
    style: style,
    viewBox: "0 0 16 16"
  }, _react.default.createElement("rect", {
    width: size - 2,
    height: size - 2,
    x: "1",
    y: "1",
    fill: "none",
    fillRule: "evenodd",
    strokeWidth: "2",
    rx: "1"
  }));
};
exports.uncheckedIcon = uncheckedIcon;
var indeterminateIcon = function indeterminateIcon(_ref3) {
  var style = _ref3.style,
    _ref3$size = _ref3.size,
    size = _ref3$size === void 0 ? 16 : _ref3$size,
    className = _ref3.className;
  return _react.default.createElement("svg", {
    width: size,
    height: size,
    style: style,
    className: className,
    viewBox: "0 0 16 16"
  }, _react.default.createElement("g", {
    fillRule: "evenodd"
  }, _react.default.createElement("g", null, _react.default.createElement("rect", {
    width: size,
    height: size,
    fill: "none",
    rx: "1"
  })), _react.default.createElement("g", null, _react.default.createElement("rect", {
    width: "10",
    height: "2",
    x: "3",
    y: "7",
    rx: "1"
  }))));
};
exports.indeterminateIcon = indeterminateIcon;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/CheckBox/src/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/CheckBox/src/index.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _CheckBox = _interopRequireDefault(__webpack_require__(/*! ./CheckBox */ "./node_modules/@inovua/reactdatagrid-community/packages/CheckBox/src/CheckBox.js"));
var _default = _CheckBox.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/CheckBox/src/utils/getClassNames.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/CheckBox/src/utils/getClassNames.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var getClassNames = function getClassNames(props) {
  var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
    checked = _ref.checked;
  var rtl = props.rtl,
    inlineBlock = props.inlineBlock,
    readOnly = props.readOnly,
    readOnlyClassName = props.readOnlyClassName,
    theme = props.theme,
    disabled = props.disabled,
    disabledClassName = props.disabledClassName,
    focusedClassName = props.focusedClassName,
    className = props.className,
    childrenPosition = props.childrenPosition;
  var focused = state.focused;
  return (0, _join.default)(props.rootClassName, className, childrenPosition && "".concat(props.rootClassName, "--children-position-").concat(childrenPosition), rtl ? "".concat(props.rootClassName, "--rtl") : "".concat(props.rootClassName, "--ltr"), readOnly && (0, _join.default)("".concat(props.rootClassName, "--read-only"), readOnlyClassName), focused && (0, _join.default)("".concat(props.rootClassName, "--focused"), focusedClassName), disabled && (0, _join.default)("".concat(props.rootClassName, "--disabled"), disabledClassName), inlineBlock && "".concat(props.rootClassName, "--inline-block"), checked === true ? "".concat(props.rootClassName, "--checked") : checked === false ? "".concat(props.rootClassName, "--unchecked") : "".concat(props.rootClassName, "--indeterminate"), theme && "".concat(props.rootClassName, "--theme-").concat(theme));
};
var _default = getClassNames;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _src = _interopRequireDefault(__webpack_require__(/*! ./src */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/index.js"));
var _default = _src.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/ClearButton.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/ClearButton.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _Icons = __webpack_require__(/*! ./Icons */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/Icons.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var ClearButton = function ClearButton(_ref) {
  var onClear = _ref.onClear,
    className = _ref.className,
    closeIcon = _ref.closeIcon,
    size = _ref.size;
  var closeIconProps = {
    className: className,
    size: size,
    onClick: function onClick(event) {
      event.preventDefault();
      event.stopPropagation();
      onClear();
    }
  };
  var closeIconEl;
  if (closeIcon && closeIcon !== true) {
    var closeIconParams = {
      onClear: onClear,
      domProps: closeIconProps
    };
    closeIconEl = typeof closeIcon === 'function' ? closeIcon(closeIconParams) : closeIcon;
  }
  if (closeIconEl === undefined) {
    closeIconEl = _react.default.createElement(_Icons.CloseIcon, _objectSpread({}, closeIconProps));
  }
  return closeIconEl;
};
ClearButton.defaultProps = {
  size: 10
};
var _default = ClearButton;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/ComboBox.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/ComboBox.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof3 = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = exports.REMAINING_ITEMS = void 0;
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _cleanProps = _interopRequireDefault(__webpack_require__(/*! ../../../common/cleanProps */ "./node_modules/@inovua/reactdatagrid-community/common/cleanProps.js"));
var _NotifyResize = __webpack_require__(/*! ../../NotifyResize */ "./node_modules/@inovua/reactdatagrid-community/packages/NotifyResize/index.js");
var _throttle = _interopRequireDefault(__webpack_require__(/*! ../../../common/throttle */ "./node_modules/@inovua/reactdatagrid-community/common/throttle.js"));
var _containsNode = _interopRequireDefault(__webpack_require__(/*! ../../../common/containsNode */ "./node_modules/@inovua/reactdatagrid-community/common/containsNode.js"));
var _TextInput = _interopRequireDefault(__webpack_require__(/*! ./TextInput */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/TextInput.js"));
var _Value = _interopRequireDefault(__webpack_require__(/*! ./Value */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/Value.js"));
var _ClearButton = _interopRequireDefault(__webpack_require__(/*! ./ClearButton */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/ClearButton.js"));
var _ToggleButton = _interopRequireDefault(__webpack_require__(/*! ./ToggleButton */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/ToggleButton.js"));
var _List = _interopRequireDefault(__webpack_require__(/*! ./List */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/List/index.js"));
var _Icons = __webpack_require__(/*! ./Icons */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/Icons.js");
var _shouldComponentUpdate2 = _interopRequireDefault(__webpack_require__(/*! ./utils/shouldComponentUpdate */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/shouldComponentUpdate.js"));
var _getRootClassName = _interopRequireDefault(__webpack_require__(/*! ./utils/getRootClassName */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getRootClassName.js"));
var _getListProps2 = _interopRequireDefault(__webpack_require__(/*! ./utils/getListProps */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getListProps.js"));
var _getValueProps2 = _interopRequireDefault(__webpack_require__(/*! ./utils/getValueProps */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getValueProps.js"));
var _getDataProp = _interopRequireDefault(__webpack_require__(/*! ./utils/getDataProp */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getDataProp.js"));
var _getNewMultipleValue = _interopRequireDefault(__webpack_require__(/*! ./utils/getNewMultipleValue */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getNewMultipleValue.js"));
var _getNewSingleValue = _interopRequireDefault(__webpack_require__(/*! ./utils/getNewSingleValue */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getNewSingleValue.js"));
var _findItemIndex = _interopRequireDefault(__webpack_require__(/*! ./utils/findItemIndex */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/findItemIndex.js"));
var _filterByValue = _interopRequireDefault(__webpack_require__(/*! ./utils/filterByValue */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/filterByValue.js"));
var _filterByText = _interopRequireDefault(__webpack_require__(/*! ./utils/filterByText */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/filterByText.js"));
var _deselectValue = _interopRequireDefault(__webpack_require__(/*! ./utils/deselectValue */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/deselectValue.js"));
var _getNewActiveTagOnRemove = _interopRequireDefault(__webpack_require__(/*! ./utils/getNewActiveTagOnRemove */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getNewActiveTagOnRemove.js"));
var _getNextItem = _interopRequireDefault(__webpack_require__(/*! ./utils/getNextItem */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getNextItem.js"));
var _groupItems = _interopRequireDefault(__webpack_require__(/*! ./utils/groupItems */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/groupItems.js"));
var _getValueMap = _interopRequireDefault(__webpack_require__(/*! ./utils/getValueMap */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getValueMap.js"));
var _getGroups = _interopRequireDefault(__webpack_require__(/*! ./utils/getGroups */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getGroups.js"));
var _PaginationToolbar = __webpack_require__(/*! ../../PaginationToolbar */ "./node_modules/@inovua/reactdatagrid-community/packages/PaginationToolbar/index.js");
var _getGlobal = __webpack_require__(/*! ../../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof3(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var globalObject = (0, _getGlobal.getGlobal)();
var REMAINING_ITEMS = 'REMAINING_ITEMS';
exports.REMAINING_ITEMS = REMAINING_ITEMS;
var emptyObject = {};
var InovuaComboBox = function (_Component) {
  (0, _inherits2.default)(InovuaComboBox, _Component);
  var _super = _createSuper(InovuaComboBox);
  function InovuaComboBox(props) {
    var _this;
    (0, _classCallCheck2.default)(this, InovuaComboBox);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "componentDidUpdate", function (prevProps) {
      if (_this.isExpandedControlled() && _this.props.expanded !== prevProps.expanded) {
        _this.onExpand();
      }
      if (prevProps.dataSource !== _this.props.dataSource) {
        _this.loadDataSource(_this.props.dataSource, _this.props);
      }
      if (_this.props.idProperty !== prevProps.idProperty) {
        _this.updateGetIdProperty(_this.props);
      }
      if (_this.props.displayProperty !== prevProps.displayProperty) {
        _this.updateGetDisplayProperty(_this.props);
      }
      if (_this.props.filterProperty !== prevProps.filterProperty) {
        _this.updateGetFilterProperty(_this.props);
      }
      if (_this.props.groupProperty !== prevProps.groupProperty) {
        _this.updateGroups({
          groupProperty: _this.props.groupProperty
        });
      }
      if (_this.isTextControled() && _this.props.text !== prevProps.text) {
        _this.onTextUpdate(_this.props.text);
      }
      if (_this.isActiveItemControlled() && prevProps.changeValueOnNavigation && !prevProps.multiple && prevProps.activeItem !== _this.props.activeItem) {
        _this.setValue(_this.props.activeItem, {
          action: 'navigate'
        });
      }
      if (_this.isExpandedControlled() && !prevProps.expanded && _this.props.expanded) {
        _this.loadLazyDataSource({
          action: 'expand',
          text: ''
        });
      }
    });
    _this.refTools = function (tools) {
      _this.toolsNode = tools;
    };
    _this.state = {
      loading: props.defaultLoading || !!(props.dataSource && props.dataSource.then),
      value: props.defaultValue,
      valueMap: {},
      text: props.defaultText,
      activeTag: props.defaultActiveTag,
      activeItem: props.defaultActiveItem || !props.multiple && props.defaultValue,
      expanded: props.defaultExpanded,
      toolsSize: {
        width: 0,
        height: 0
      },
      over: false,
      focus: false
    };
    _this.getData = _this.getData.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleItemClick = _this.handleItemClick.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleTextChange = _this.handleTextChange.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleTextInputClick = _this.handleTextInputClick.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleTagClick = _this.handleTagClick.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleRemoveTag = _this.handleRemoveTag.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleComboClick = _this.handleComboClick.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleComboKeyDown = _this.handleComboKeyDown.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleComboFocus = _this.handleComboFocus.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleComboBlur = _this.handleComboBlur.bind((0, _assertThisInitialized2.default)(_this));
    _this.getComboNode = _this.getComboNode.bind((0, _assertThisInitialized2.default)(_this));
    _this.clear = _this.clear.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleMouseEnter = _this.handleMouseEnter.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleMouseLeave = _this.handleMouseLeave.bind((0, _assertThisInitialized2.default)(_this));
    _this.toggleExpand = _this.toggleExpand.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleToolsSize = _this.handleToolsSize.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleRemoveMultipleTag = _this.handleRemoveMultipleTag.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleListScrollBottom = _this.handleListScrollBottom.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleDelete = _this.handleDelete.bind((0, _assertThisInitialized2.default)(_this));
    _this.getListNode = _this.getListNode.bind((0, _assertThisInitialized2.default)(_this));
    _this.updateGetIdProperty();
    _this.updateGetDisplayProperty();
    _this.updateGetFilterProperty();
    _this.addTextInputRef = function (ref) {
      _this.textInput = ref;
    };
    _this.addRootRef = function (ref) {
      _this.comboNode = ref;
    };
    _this.addListRef = function (ref) {
      _this.listNode = ref;
    };
    _this.setActiveItem = (0, _throttle.default)(_this.setActiveItem, 16);
    return _this;
  }
  (0, _createClass2.default)(InovuaComboBox, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.props.autoFocus) {
        this.focus();
      }
      if (this.state.activeItem && this.state.activeItemIndex == null) {
        this.setState({
          activeItemIndex: this.getItemIndexById(this.state.activeItem)
        });
      }
      if (!this.isRemoteFilter()) {
        this.doFilter();
      }
      if (!this.props.lazyDataSource) {
        this.loadDataSource(this.props.dataSource);
      }
    }
  }, {
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps, nextState) {
      return (0, _shouldComponentUpdate2.default)(this, nextProps, nextState);
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.props,
        state = this.state;
      var textInput = this.renderTextInput();
      var className = (0, _getRootClassName.default)({
        props: props,
        state: state,
        computed: {
          value: this.getValue()
        }
      });
      var expanded = this.getExpanded();
      var items = this.getSelectedItems();
      var groupedItems = this.groupedItems = this.getGroupedItems(this.getSelectedItems());
      this.areItemsGrouped = this.groupedItems && this.groupedItems.remainingItems && this.groupedItems.remainingItems.length;
      var style = this.getRootStyle();
      var filteredData = this.getFilteredData();
      var text = this.getText();
      this.isNewCustomTagValid = (!filteredData || filteredData.length === 0) && !!text && props.allowCustomTagCreation;
      return _react.default.createElement("div", _objectSpread(_objectSpread({}, (0, _cleanProps.default)(props, InovuaComboBox.propTypes)), {}, {
        onClick: this.handleComboClick,
        onMouseDown: this.handleComboMouseDown,
        onKeyDown: this.handleComboKeyDown,
        onFocus: this.handleComboFocus,
        onBlur: this.handleComboBlur,
        className: className,
        style: style,
        ref: this.addRootRef,
        onMouseEnter: this.handleMouseEnter,
        onMouseLeave: this.handleMouseLeave,
        tabIndex: 0
      }), _react.default.createElement(_Value.default, _objectSpread(_objectSpread({}, this.getValueProps({
        items: items,
        groupedItems: groupedItems
      })), {}, {
        textInput: textInput,
        toolsSize: state.toolsSize
      })), _react.default.createElement("div", {
        className: "".concat(props.rootClassName, "__tools"),
        ref: this.refTools
      }, this.renderSpinner(), this.renderClearIcon(), this.renderToggleIcon(), this.props.tagEllipsis && _react.default.createElement(_NotifyResize.NotifyResize, {
        notifyOnMount: true,
        onResize: this.handleToolsSize
      })), expanded && this.renderList());
    }
  }, {
    key: "getRootStyle",
    value: function getRootStyle() {
      var props = this.props,
        state = this.state;
      var style = _objectSpread({}, props.style);
      if (props.borderRadius) {
        style.borderRadius = props.borderRadius;
      }
      if (props.padding) {
        style.padding = props.padding;
      }
      if (props.border) {
        style.border = props.border;
      }
      if (props.background) {
        style.background = props.background;
      }
      if (!this.getValue() && props.emptyStyle) {
        style = _objectSpread(_objectSpread({}, style), props.emptyStyle);
      }
      if (props.disabledStyle && props.disabled) {
        style = _objectSpread(_objectSpread({}, style), props.disabledStyle);
      }
      if (state.focus && props.focusedStyle) {
        style = _objectSpread(_objectSpread({}, style), props.focusedStyle);
      }
      return style;
    }
  }, {
    key: "renderList",
    value: function renderList() {
      var listProps = this.getListProps();
      var result;
      if (typeof this.props.renderList === 'function') {
        result = this.props.renderList({
          domProps: listProps,
          items: this.getFilteredData()
        });
      }
      if (result === undefined) {
        result = _react.default.createElement(_List.default, _objectSpread({}, listProps));
      }
      if (typeof this.props.renderListComponent === 'function') {
        var res = this.props.renderListComponent(result);
        if ((0, _typeof2.default)(res) !== undefined) {
          return res;
        }
        result = res;
      }
      return result;
    }
  }, {
    key: "renderClearIcon",
    value: function renderClearIcon() {
      var props = this.props,
        state = this.state;
      var searchable = props.searchable;
      var text = this.getText();
      var value = this.getValue();
      var showClearIcon = (text || value != null) && props.clearIcon;
      if (props.showClearIconOnMouseOver) {
        if (!state.over) {
          showClearIcon = false;
        }
      }
      if (searchable === false) {
        showClearIcon = false;
      }
      if (!showClearIcon) {
        return null;
      }
      var clearButton = _react.default.createElement(_ClearButton.default, {
        onClear: this.clear,
        closeIcon: props.clearIcon,
        className: "".concat(props.rootClassName, "__clear-icon")
      });
      return clearButton;
    }
  }, {
    key: "renderToggleIcon",
    value: function renderToggleIcon() {
      var props = this.props;
      if (!props.toggleIcon) {
        return null;
      }
      return _react.default.createElement(_ToggleButton.default, {
        onToggle: this.toggleExpand,
        className: "".concat(props.rootClassName, "__toggle-icon"),
        toggleIcon: props.toggleIcon,
        expanded: this.getExpanded()
      });
    }
  }, {
    key: "renderTextInput",
    value: function renderTextInput() {
      if (this.props.disabled) {
        return null;
      }
      var text = this.getText();
      var value = text;
      if (!this.props.multiple) {
        if (text == null) {
          value = this.getValue() == null ? '' : this.getItemLabel();
        } else {
          value = text;
        }
      }
      var data = this.getFilteredData();
      var suggestion = null;
      if (this.props.minAutocompleteLength <= (value && value.length) && data && data[0]) {
        suggestion = this.getDisplayProperty(data[0]);
      }
      var inputProps = {
        key: 'text_input',
        value: value,
        theme: this.props.theme,
        suggestion: suggestion,
        placeholder: this.props.placeholder,
        rootClassName: "".concat(this.props.rootClassName, "__input"),
        className: this.props.inputClassName,
        style: this.props.inputStyle,
        onChange: this.handleTextChange,
        ref: this.addTextInputRef,
        onClick: this.handleTextInputClick,
        throttle: this.props.filterDelay,
        autocomplete: this.props.autocomplete,
        tabIndex: this.props.tabIndex,
        autocompleteDelay: this.props.autocompleteDelay,
        searchable: this.props.searchable
      };
      var result;
      if (typeof this.props.renderInput === 'function') {
        result = this.props.renderInput({
          text: text,
          domProps: inputProps,
          onChange: inputProps.onChange
        });
      }
      if (result === undefined) {
        result = _react.default.createElement(_TextInput.default, _objectSpread({}, inputProps));
      }
      return result;
    }
  }, {
    key: "renderSpinner",
    value: function renderSpinner() {
      if (!this.props.loadingSpinner) {
        return null;
      }
      var loading = this.getLoading();
      if (!loading && !this.getExpanded()) {
        return null;
      }
      var spinner = this.props.loadingSpinner === true ? _react.default.createElement(_Icons.LoadingIcon, {
        className: "".concat(this.props.rootClassName, "__loading-spinner")
      }) : this.props.loadingSpinner;
      return loading ? spinner : (0, _react.cloneElement)(spinner, {
        style: spinner.props.style ? _objectSpread(_objectSpread({}, spinner.props.style), {}, {
          display: 'none'
        }) : {
          display: 'none'
        }
      });
    }
  }, {
    key: "getListProps",
    value: function getListProps() {
      var props = this.props,
        state = this.state;
      var data = this.getFilteredData();
      var groupsLength = this.state.groups && Object.keys(this.state.groups).length || 0;
      var listProps = (0, _getListProps2.default)({
        props: props,
        state: state,
        computed: {
          data: data,
          loading: this.getLoading(),
          activeItem: this.getActiveItem(),
          value: this.getValue(),
          dataLength: data && data.length + groupsLength || 0,
          getIdProperty: this.getIdProperty,
          getDisplayProperty: this.getDisplayProperty,
          onItemClick: this.handleItemClick,
          getComboNode: this.getComboNode,
          ref: this.addListRef,
          onScrollBottom: this.handleListScrollBottom,
          text: this.getText(),
          isNewCustomTagValid: this.isNewCustomTagValid
        }
      });
      return listProps;
    }
  }, {
    key: "getValueProps",
    value: function getValueProps(_ref) {
      var items = _ref.items,
        groupedItems = _ref.groupedItems,
        item = _ref.item;
      var props = this.props,
        state = this.state;
      var value = this.getValue();
      return (0, _getValueProps2.default)({
        props: props,
        state: state,
        computed: {
          items: items,
          item: item,
          groupedItems: groupedItems,
          value: value,
          label: this.getItemLabel(),
          activeTag: this.getActiveTag()
        },
        tagProps: {
          activeStyle: props.tagActiveStyle,
          onClick: this.handleTagClick,
          onCloseTagClick: this.handleRemoveTag,
          onMultipleTagClose: this.handleRemoveMultipleTag
        }
      });
    }
  }, {
    key: "loadDataSource",
    value: function loadDataSource(dataSource) {
      var _this2 = this;
      var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.props;
      var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : emptyObject,
        appendTo = _ref2.appendTo,
        action = _ref2.action,
        value = _ref2.value,
        text = _ref2.text,
        skip = _ref2.skip,
        limit = _ref2.limit,
        hasNextPage = _ref2.hasNextPage;
      if (Array.isArray(dataSource)) {
        if (this.getLoading()) {
          this.setLoading(false);
        }
        this.setData(dataSource, props, {
          appendTo: appendTo
        });
        return;
      }
      if (dataSource && Array.isArray(dataSource.data)) {
        if (this.getLoading()) {
          this.setLoading(false);
        }
        this.setData(dataSource.data, props, {
          remoteCount: dataSource.count != null ? dataSource.count * 1 : null,
          appendTo: appendTo
        });
        return;
      }
      if (dataSource && dataSource.then) {
        this.setLoading(true);
        dataSource.then(function (data) {
          _this2.props.onDataSourceLoad(data);
          _this2.loadDataSource(data, props, {
            appendTo: appendTo
          });
        });
        return;
      }
      if (typeof dataSource === 'function') {
        var config = _objectSpread(_objectSpread({}, props), {}, {
          data: this.state.data,
          hasNextPage: hasNextPage !== undefined ? hasNextPage : this.hasNextPage(),
          text: this.isRemoteFilter() ? text !== undefined ? text : this.getText() : undefined,
          skip: skip || 0,
          action: action,
          append: !!appendTo,
          value: value !== undefined ? value : this.getValue(),
          limit: limit !== undefined ? limit : this.props.limit
        });
        var dataResult = dataSource(config);
        this.loadDataSource(dataResult, undefined, {
          appendTo: config.append === false ? null : appendTo
        });
      }
      if (!dataSource) {
        this.setData(null, props);
      }
    }
  }, {
    key: "setData",
    value: function setData(data) {
      var _this3 = this;
      var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.props;
      var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : emptyObject,
        remoteCount = _ref3.remoteCount,
        appendTo = _ref3.appendTo;
      if (!data) {
        this.setState({
          data: null,
          dataMap: null,
          filteredData: null,
          remoteCount: null
        });
        return null;
      }
      if (Array.isArray(appendTo)) {
        data = appendTo.concat(data);
      }
      var dataMap = data.reduce(function (acc, item) {
        acc[_this3.getIdProperty(item)] = item;
        return acc;
      }, {});
      if (props.groupProperty) {
        this.updateGroups({
          data: data,
          groupProperty: props.groupProperty
        });
      }
      this.updateValueMap({
        value: this.getValue(props),
        dataMap: dataMap,
        oldValueMap: this.getValueMap()
      });
      this.updateFilteredData({
        data: data
      });
      this.setState({
        data: data,
        dataMap: dataMap,
        remoteCount: remoteCount
      });
    }
  }, {
    key: "getPageCount",
    value: function getPageCount() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;
      var count = this.getDataCountForPagination(props);
      return (0, _PaginationToolbar.getPageCount)({
        count: count,
        limit: props.limit
      });
    }
  }, {
    key: "hasNextPage",
    value: function hasNextPage() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;
      return this.getCurrentPage(props) < this.getPageCount(props);
    }
  }, {
    key: "getCurrentPage",
    value: function getCurrentPage() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;
      var limit = props.limit,
        skip = props.skip;
      return (0, _PaginationToolbar.getCurrentPage)({
        skip: this.previousSkip ? this.previousSkip : 0,
        limit: limit
      });
    }
  }, {
    key: "isLastPage",
    value: function isLastPage() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;
    }
  }, {
    key: "getDataCountForPagination",
    value: function getDataCountForPagination() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;
      var data = this.getData();
      var count = this.isPaginationEnabled(props) ? props.remoteCount || this.state.remoteCount : data ? data.length : 0;
      return count || 0;
    }
  }, {
    key: "getFilteredData",
    value: function getFilteredData() {
      return this.state.filteredData;
    }
  }, {
    key: "getData",
    value: function getData() {
      return this.state.data;
    }
  }, {
    key: "loadLazyDataSource",
    value: function loadLazyDataSource(_ref4) {
      var action = _ref4.action,
        text = _ref4.text;
      if (!this.props.lazyDataSource) {
        return null;
      }
      var params = {
        action: action,
        text: text,
        value: this.getValue()
      };
      this.setData(null);
      this.loadDataSource(this.props.dataSource, undefined, params);
      return null;
    }
  }, {
    key: "isPaginationEnabled",
    value: function isPaginationEnabled() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;
      var hasLoadNextPage = typeof props.loadNextPage === 'function';
      var hasFunctionalDataSource = typeof props.dataSource === 'function';
      if (props.enablePagination === false) {
        return false;
      }
      return props.enablePagination ? hasLoadNextPage || hasFunctionalDataSource : hasLoadNextPage;
    }
  }, {
    key: "remoteFilterData",
    value: function remoteFilterData() {
      var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        _ref5$text = _ref5.text,
        text = _ref5$text === void 0 ? this.getText() : _ref5$text,
        _ref5$value = _ref5.value,
        value = _ref5$value === void 0 ? this.getValue() : _ref5$value,
        filterType = _ref5.filterType;
      this.previousSkip = null;
      this.loadDataSource(this.props.dataSource, undefined, {
        text: text,
        skip: 0
      });
    }
  }, {
    key: "loadNextPage",
    value: function loadNextPage() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;
      var filteredData = this.getFilteredData();
      if (filteredData && filteredData.length < 3) {
        return null;
      }
      if (this.previousSkip == null) {
        this.previousSkip = props.skip;
      }
      var limit = props.limit;
      var hasNextPage = this.hasNextPage();
      var newSkip = this.previousSkip + limit;
      this.previousSkip = newSkip;
      if (!this.isPaginationEnabled()) {
        return;
      }
      var fn = typeof props.dataSource === 'function' ? props.dataSource : null;
      if (fn && hasNextPage) {
        var currentData = this.state.data;
        this.loadDataSource(this.props.dataSource, undefined, {
          appendTo: currentData,
          hasNextPage: hasNextPage,
          skip: newSkip,
          limit: limit,
          filter: this.currentFilter
        });
      }
    }
  }, {
    key: "isRemoteDataSource",
    value: function isRemoteDataSource() {
      return typeof this.props.dataSource === 'function';
    }
  }, {
    key: "isRemoteFilter",
    value: function isRemoteFilter() {
      return (0, _typeof2.default)(this.isRemoteDataSource()) && this.props.remoteFilter;
    }
  }, {
    key: "doFilter",
    value: function doFilter() {
      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        text = _ref6.text,
        value = _ref6.value,
        force = _ref6.force,
        data = _ref6.data,
        filterType = _ref6.filterType,
        action = _ref6.action;
      if (this.currentFilter === text && !force) {
        return;
      }
      this.currentFilter = text;
      if (this.isRemoteFilter()) {
        if (action === 'select') {
          return;
        }
        this.remoteFilterData({
          value: value,
          text: text,
          filterType: filterType
        });
      } else {
        this.updateFilteredData({
          text: text,
          value: value,
          data: data,
          filterType: filterType
        });
      }
    }
  }, {
    key: "updateFilteredData",
    value: function updateFilteredData() {
      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        _ref7$text = _ref7.text,
        text = _ref7$text === void 0 ? this.getText() : _ref7$text,
        _ref7$value = _ref7.value,
        value = _ref7$value === void 0 ? this.getValue() : _ref7$value,
        _ref7$data = _ref7.data,
        data = _ref7$data === void 0 ? this.state.data : _ref7$data,
        filterType = _ref7.filterType;
      var filteredData = data;
      if (!Array.isArray(filteredData)) {
        return filteredData;
      }
      if (!this.isRemoteFilter()) {
        filteredData = this.filterDataByText({
          text: text,
          data: filteredData
        });
        filteredData = this.filterDataByValue({
          value: value,
          text: text,
          data: filteredData
        });
      }
      var isFilteredByText = filterType === 'text' && data.length !== filteredData.length;
      if (isFilteredByText && this.props.activeFirstItemOnFilter) {
        var firstItem = filteredData && filteredData[0];
        if (firstItem) {
          var id = this.getIdProperty(firstItem);
          this.setActiveItem(id);
        } else {
          this.setActiveItem(null);
        }
      }
      this.setState({
        filteredData: filteredData
      });
    }
  }, {
    key: "filterDataByValue",
    value: function filterDataByValue(_ref8) {
      var _ref8$value = _ref8.value,
        value = _ref8$value === void 0 ? this.getValue() : _ref8$value,
        _ref8$data = _ref8.data,
        data = _ref8$data === void 0 ? this.state.data : _ref8$data;
      if (!Array.isArray(data)) {
        return data;
      }
      var newData = data;
      if (data && value && this.props.removeSelectedItems) {
        newData = (0, _filterByValue.default)({
          data: newData,
          getIdProperty: this.getIdProperty,
          value: value
        });
      }
      return newData;
    }
  }, {
    key: "filterDataByText",
    value: function filterDataByText(_ref9) {
      var _ref9$text = _ref9.text,
        text = _ref9$text === void 0 ? this.getText() : _ref9$text,
        _ref9$data = _ref9.data,
        data = _ref9$data === void 0 ? this.state.data : _ref9$data;
      if (!data || !text) {
        return data;
      }
      var newData = data;
      if (this.isFilterTextActive()) {
        var filterFunction = this.props.filterFunction;
        newData = (0, _filterByText.default)({
          data: data,
          text: text,
          filterFunction: filterFunction,
          getFilterProperty: this.getFilterProperty || this.getDisplayProperty,
          mode: this.props.filterMode,
          hightlight: this.props.highlightMatchedText
        });
      }
      return newData;
    }
  }, {
    key: "getDataMap",
    value: function getDataMap() {
      return this.state.dataMap;
    }
  }, {
    key: "getValueMap",
    value: function getValueMap() {
      return this.state.valueMap;
    }
  }, {
    key: "isValueControlled",
    value: function isValueControlled() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;
      return props.value !== undefined;
    }
  }, {
    key: "getValue",
    value: function getValue() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;
      return this.isValueControlled(props) ? props.value : this.state.value;
    }
  }, {
    key: "setValue",
    value: function setValue(newValue) {
      var _ref10 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        action = _ref10.action;
      if (this.props.disabled) {
        return null;
      }
      if (this.props.readOnly) {
        return null;
      }
      if (this.props.maxValueLength && newValue && newValue.length > this.props.maxValueLength) {
        return null;
      }
      if (this.props.collapseOnSelect && action !== 'navigate') {
        this.collapse();
      }
      if (this.props.autoBlur) {
        this.blur();
      }
      if (!this.isValueControlled()) {
        this.setState({
          value: newValue
        });
      }
      this.setText(null, {
        skipFilter: true
      });
      this.updateValueMap({
        value: newValue
      });
      this.props.onChange(newValue);
    }
  }, {
    key: "isFilterTextActive",
    value: function isFilterTextActive() {
      var text = this.getText();
      var data = this.getFilteredData();
      return data && text && this.props.searchable && text.length >= this.props.filterMinLength;
    }
  }, {
    key: "updateValueMap",
    value: function updateValueMap(_ref11) {
      var _this4 = this;
      var value = _ref11.value,
        dataMap = _ref11.dataMap,
        oldValueMap = _ref11.oldValueMap;
      var newValueMap = (0, _getValueMap.default)({
        value: value,
        dataMap: dataMap || this.getDataMap(),
        oldValueMap: oldValueMap || this.getValueMap()
      });
      if (newValueMap) {
        newValueMap = Object.keys(newValueMap).reduce(function (acc, id) {
          var item = newValueMap[id];
          acc[id] = _objectSpread(_objectSpread({}, item), {}, {
            id: _this4.getIdProperty(item),
            label: _this4.getDisplayProperty(item) || item
          });
          return acc;
        }, {});
      }
      this.setState({
        valueMap: newValueMap
      });
    }
  }, {
    key: "selectItem",
    value: function selectItem(id) {
      var dataMap = this.getDataMap();
      var item = dataMap && dataMap[id];
      if (!item && !this.props.allowCustomTagCreation) {
        return null;
      }
      if (typeof this.props.isSelectedItemValid === 'function') {
        var isItemValid = this.props.isSelectedItemValid(item);
        if (!isItemValid) {
          return null;
        }
      }
      var value = this.getValue();
      var newValue;
      if (this.props.multiple) {
        newValue = (0, _getNewMultipleValue.default)({
          id: id,
          value: value
        });
      } else {
        newValue = (0, _getNewSingleValue.default)({
          id: id,
          value: value,
          toggle: this.props.changeValueOnNavigation ? false : this.props.allowSelectionToggle
        });
      }
      this.setValue(newValue, {
        action: 'select'
      });
      this.props.onItemClick({
        item: item,
        id: id
      });
    }
  }, {
    key: "deselectItem",
    value: function deselectItem(id) {
      var value = this.getValue();
      var newValue = (0, _deselectValue.default)({
        id: id,
        value: value,
        getIdProperty: this.getIdProperty
      });
      this.setValue(newValue);
    }
  }, {
    key: "deselectItems",
    value: function deselectItems() {
      var _this5 = this;
      var ids = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      var value = this.getValue();
      var newValue = ids.reduce(function (acc, id) {
        acc = (0, _deselectValue.default)({
          id: id,
          value: acc,
          getIdProperty: _this5.getIdProperty
        });
        return acc;
      }, value);
      this.setValue(newValue);
    }
  }, {
    key: "getExpanded",
    value: function getExpanded() {
      return this.isExpandedControlled() ? this.props.expanded : this.expanded != null ? this.expanded : this.state.expanded;
    }
  }, {
    key: "isExpandedControlled",
    value: function isExpandedControlled() {
      return this.props.expanded !== undefined;
    }
  }, {
    key: "setExpanded",
    value: function setExpanded(expanded) {
      var _this6 = this;
      if (this.expandedPromise) {
        this.expandedPromise.then(function (result) {
          if (_this6.getExpanded() !== expanded) {
            _this6.setExpanded(expanded);
          }
        });
        return;
      }
      this.expandedPromise = this.doSetExpanded(expanded).then(function () {
        delete _this6.expandedPromise;
      });
    }
  }, {
    key: "doSetExpanded",
    value: function doSetExpanded(expanded) {
      var _this7 = this;
      if (this.props.disabled) {
        return Promise.resolve(null);
      }
      var currentExpanded = this.getExpanded();
      if (currentExpanded === expanded) {
        return Promise.resolve(expanded);
      }
      if (!expanded && this.isRemoteFilter()) {
        this.previousSkip = null;
      }
      globalObject.requestAnimationFrame(function () {
        if (_this7.toolsNode) {
          _this7.handleToolsSize();
        }
      });
      var promise;
      if (!this.isExpandedControlled()) {
        promise = new Promise(function (resolve, reject) {
          _this7.setState({
            expanded: expanded
          }, function () {
            resolve(expanded);
          });
        });
      } else {
        promise = Promise.resolve(expanded);
      }
      if (expanded) {
        if (this.isRemoteDataSource() && this.state.data === undefined) {
          this.loadDataSource(this.props.dataSource);
        } else {
          if (this.wasExpandedAtLeastOnce) {
            this.doFilter({
              text: '',
              action: 'expand',
              force: true
            });
          }
        }
      }
      if (expanded && !this.wasExpandedAtLeastOnce) {
        this.wasExpandedAtLeastOnce = true;
      }
      if (expanded) {
        this.onExpand();
      } else {
        this.props.onCollapse();
      }
      this.props.onExpandChange(expanded);
      this.props.onExpandedChange(expanded);
      return promise;
    }
  }, {
    key: "onExpand",
    value: function onExpand() {
      this.props.onExpand();
      if (this.props.highlightFirst) {
        var activeItem = this.getActiveItem();
        if (!activeItem) {
          var firstItem = this.getItemByIndex(0);
          if (firstItem) {
            var id = this.getIdProperty(firstItem);
            this.setActiveItem(id);
          }
        }
      }
    }
  }, {
    key: "isActiveTagControlled",
    value: function isActiveTagControlled() {
      return this.props.activeTag !== undefined;
    }
  }, {
    key: "setActiveTag",
    value: function setActiveTag(id) {
      if (this.props.disabled) {
        return null;
      }
      if (!this.isActiveTagControlled()) {
        this.setState({
          activeTag: id
        });
      }
      this.props.onActiveTagChange(id);
    }
  }, {
    key: "deselectActiveTag",
    value: function deselectActiveTag() {
      var activeTag = this.getActiveTag();
      if (activeTag) {
        this.setActiveTag(null);
      }
    }
  }, {
    key: "getActiveTag",
    value: function getActiveTag() {
      return this.isActiveTagControlled() ? this.props.activeTag : this.state.activeTag;
    }
  }, {
    key: "getSelectedItems",
    value: function getSelectedItems() {
      var _this8 = this;
      var valueMap = this.getValueMap();
      var value = this.getValue();
      var items = null;
      if (value) {
        value = Array.isArray(value) ? value : [value];
        items = value.map(function (id) {
          return valueMap[id] || {
            id: (0, _typeof2.default)(id) === 'object' ? _this8.getIdProperty(id) : id,
            label: (0, _typeof2.default)(id) === 'object' ? _this8.getDisplayProperty(id) : _this8.getItemLabel(id)
          };
        });
      }
      return items;
    }
  }, {
    key: "getItemLabel",
    value: function getItemLabel(id) {
      id = id === undefined ? this.getValue() : id;
      var valueMap = this.getValueMap();
      var dataMap = this.getDataMap();
      var label;
      if (valueMap && valueMap[id]) {
        label = valueMap[id].label;
      } else if (dataMap && dataMap[id]) {
        label = this.getDisplayProperty(dataMap[id]);
      }
      if (label === undefined) {
        label = this.props.defaultDisplayValue !== undefined && id != null ? this.props.defaultDisplayValue : id;
      }
      return label;
    }
  }, {
    key: "getGroupedItems",
    value: function getGroupedItems(items) {
      var maxTagsLength = this.props.maxTagsLength;
      if (maxTagsLength == null || !items) {
        return null;
      }
      return (0, _groupItems.default)({
        maxTagsLength: maxTagsLength,
        items: items
      });
    }
  }, {
    key: "isActiveItemControlled",
    value: function isActiveItemControlled() {
      return this.props.activeItem !== undefined;
    }
  }, {
    key: "setActiveItem",
    value: function setActiveItem(id) {
      if (this.props.disabled) {
        return null;
      }
      var activeItem = this.getActiveItem();
      if (activeItem === id) {
        return null;
      }
      if (!this.isActiveItemControlled()) {
        var activeItemIndex = null;
        if (id) {
          activeItemIndex = this.getItemIndexById(id);
        }
        this.setState({
          activeItemIndex: activeItemIndex,
          activeItem: id
        });
        if (this.props.changeValueOnNavigation && !this.props.multiple) {
          this.setValue(id, {
            action: 'navigate'
          });
        }
      }
      this.scrollToId(id);
      this.props.onActiveItemChange(id);
    }
  }, {
    key: "getActiveItem",
    value: function getActiveItem() {
      return this.isActiveItemControlled() ? this.props.activeItem : this.state.activeItem;
    }
  }, {
    key: "isTextControled",
    value: function isTextControled() {
      return this.props.text != null;
    }
  }, {
    key: "getText",
    value: function getText() {
      return this.isTextControled() ? this.props.text : this.state.text;
    }
  }, {
    key: "setText",
    value: function setText(text) {
      var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : emptyObject;
      var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : emptyFn;
      if (typeof config === 'function') {
        callback = config;
        config = emptyObject;
      }
      if (text === this.getText()) {
        callback();
        return;
      }
      if (!this.isTextControled()) {
        this.setStateText(text, config, callback);
      }
      this.props.onTextChange(text);
    }
  }, {
    key: "setStateText",
    value: function setStateText(text) {
      var _this9 = this;
      var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : emptyObject;
      var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : emptyFn;
      if (typeof config === 'function') {
        callback = config;
        config = emptyObject;
      }
      this.setState({
        text: text
      }, function () {
        _this9.onTextUpdate(text, config);
        callback();
      });
    }
  }, {
    key: "onTextUpdate",
    value: function onTextUpdate(text) {
      var _ref12 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : emptyObject,
        skipFilter = _ref12.skipFilter;
      this.clearValueOnEmptyIfNecessary(text);
      if (!skipFilter) {
        this.doFilter({
          text: text,
          filterType: 'text'
        });
      }
    }
  }, {
    key: "clearValueOnEmptyIfNecessary",
    value: function clearValueOnEmptyIfNecessary(text) {
      if (this.props.clearValueOnEmpty && !this.props.multiple && text === '') {
        this.setValue(null);
      }
    }
  }, {
    key: "getLoading",
    value: function getLoading() {
      return this.isLoadingControlled() ? this.props.loading : this.state.loading;
    }
  }, {
    key: "isLoadingControlled",
    value: function isLoadingControlled() {
      return this.props.loading != null;
    }
  }, {
    key: "setLoading",
    value: function setLoading(loading) {
      if (loading === this.state.loading) {
        return;
      }
      if (!this.isLoadingControlled()) {
        this.setState({
          loading: loading
        });
      }
      this.props.onLoadingChange(loading);
    }
  }, {
    key: "handleComboClick",
    value: function handleComboClick(event) {
      event.preventDefault();
      if (this.props.toggleExpandOnClick) {
        this.toggleExpand();
      } else if (this.props.expandOnClick) {
        this.expand();
      }
      if (this.props.focusOnClick && !this.hasFocus()) {
        this.focus();
      }
    }
  }, {
    key: "handleMouseEnter",
    value: function handleMouseEnter() {
      this.setState({
        over: true
      });
    }
  }, {
    key: "handleMouseLeave",
    value: function handleMouseLeave() {
      this.setState({
        over: false
      });
    }
  }, {
    key: "handleComboFocus",
    value: function handleComboFocus() {
      if (this.props.expandOnFocus) {
        this.expand();
      }
      this.setState({
        focus: true
      });
      this.props.onFocus();
    }
  }, {
    key: "handleComboBlur",
    value: function handleComboBlur(event) {
      var _this10 = this;
      if (this.isFocused() && event && event.relatedTarget && (0, _containsNode.default)(this.comboNode, event.relatedTarget)) {
        globalObject.requestAnimationFrame(function () {
          _this10.focus();
        });
        return;
      }
      if (this.props.collapseOnBlur) {
        this.collapse();
      }
      if (this.props.clearTextOnBlur) {
        this.setText(null);
      }
      this.setState({
        focus: false
      });
      this.props.onBlur();
    }
  }, {
    key: "isFocused",
    value: function isFocused() {
      return this.state.focus;
    }
  }, {
    key: "handleItemClick",
    value: function handleItemClick(id) {
      if (!this.isFocused() && this.props.focusOnClick) {
        this.focus();
      }
      this.setActiveItem(id);
      this.selectItem(id);
    }
  }, {
    key: "handleTextChange",
    value: function handleTextChange(text) {
      var _this11 = this;
      this.deselectActiveTag();
      this.setText(text, {
        skipFilter: this.props.expandOnTextChange && !this.getExpanded()
      }, function () {
        if (_this11.props.expandOnTextChange) {
          _this11.expand();
        }
      });
    }
  }, {
    key: "handleTextInputClick",
    value: function handleTextInputClick() {
      this.deselectActiveTag();
    }
  }, {
    key: "handleRemoveTag",
    value: function handleRemoveTag(id) {
      this.removeTag(id);
    }
  }, {
    key: "handleRemoveMultipleTag",
    value: function handleRemoveMultipleTag(ids) {
      this.deselectItems(ids);
    }
  }, {
    key: "handleListScrollBottom",
    value: function handleListScrollBottom() {
      this.loadNextPage();
    }
  }, {
    key: "removeTag",
    value: function removeTag(id) {
      var dir = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;
      var activeTag = this.getActiveTag();
      if (activeTag === id && activeTag != null) {
        var value = this.getValue();
        var newActiveTag = (0, _getNewActiveTagOnRemove.default)({
          id: id,
          value: value,
          dir: dir
        });
        this.setActiveTag(newActiveTag);
      }
      this.deselectItem(id);
    }
  }, {
    key: "removeRemainingTags",
    value: function removeRemainingTags() {
      var ids = this.groupedItems.remainingItems.map(function (item) {
        return item.id;
      });
      var visibleItems = this.groupedItems.visibleItems;
      var activeTag = this.getActiveTag();
      if (activeTag === REMAINING_ITEMS) {
        var lastItem = Array.isArray(visibleItems) && visibleItems[visibleItems.length - 1];
        if (lastItem) {
          this.setActiveTag(lastItem.id);
        }
      } else {
        this.deselectActiveTag();
      }
      this.removeTags(ids);
    }
  }, {
    key: "removeTags",
    value: function removeTags(ids) {
      this.deselectItems(ids);
    }
  }, {
    key: "handleTagClick",
    value: function handleTagClick(id) {
      var activeTag = this.getActiveTag();
      if (activeTag === id) {
        this.setActiveTag(null);
      } else {
        this.setActiveTag(id);
      }
      this.props.onTagClick(this.getItemById(id));
      if (this.props.focusOnClick && !this.hasFocus()) {
        this.focus();
      }
    }
  }, {
    key: "handleComboMouseDown",
    value: function handleComboMouseDown(event) {
      event.preventDefault();
    }
  }, {
    key: "handleComboKeyDown",
    value: function handleComboKeyDown(event) {
      if (this.props.allowCustomTagCreation && event.key === 'Enter') {
        if (this.isNewCustomTagValid) {
          this.selectItem(this.getText());
          this.setText(null);
        }
      }
      if (this.props.enableNavigation) {
        if (this.props.enableListNavigation) {
          switch (event.key) {
            case 'ArrowDown':
              this.navigateToNextItem(1, event);
              break;
            case 'ArrowUp':
              this.navigateToNextItem(-1, event);
              break;
            case 'Enter':
              this.handleEnterKeyPress(event);
              break;
            case 'Space':
              this.selectActiveItem();
              break;
          }
        }
        if (this.props.enableTagNavigation) {
          switch (event.key) {
            case 'ArrowLeft':
              this.navigateToNextTag(-1, event);
              break;
            case 'ArrowRight':
              this.navigateToNextTag(1, event);
              break;
            case 'Backspace':
              this.handleBackspace(event);
              break;
            case 'Delete':
              this.handleDelete(event);
          }
        }
      }
      if (event.key === 'Escape') {
        var expanded = this.getExpanded();
        if (this.props.collapseOnEscape) {
          if (expanded) {
            this.collapse();
          }
        }
        if (!expanded && this.getActiveTag()) {
          this.setActiveTag(null);
        }
        if (!this.props.multiple) {
          this.setText(null);
        }
      }
      if (this.props.onKeyDown) {
        this.props.onKeyDown(event, this);
      }
    }
  }, {
    key: "navigateToNextItem",
    value: function navigateToNextItem(direction, event) {
      var data = this.getFilteredData();
      if (event && event.preventDefault) {
        event.preventDefault();
      }
      if (this.getExpanded()) {
        var activeItem = this.getActiveItem();
        var newActiveItem;
        if (activeItem != null) {
          newActiveItem = (0, _getNextItem.default)({
            direction: direction,
            data: data,
            id: activeItem,
            activeItem: activeItem,
            getIdProperty: this.getIdProperty
          });
        } else {
          var firstItemId;
          var lastItemId;
          if (data && data.length) {
            firstItemId = this.getIdProperty(data[0]);
            lastItemId = this.getIdProperty(data[data.length - 1]);
            if (direction && firstItemId != null) {
              newActiveItem = firstItemId;
            }
            if (direction === -1 && lastItemId != null) {
              newActiveItem = lastItemId;
            }
          }
        }
        this.setActiveItem(newActiveItem);
      } else {
        this.expand();
      }
    }
  }, {
    key: "selectActiveItem",
    value: function selectActiveItem() {
      var activeItem = this.getActiveItem();
      if (activeItem) {
        this.selectItem(activeItem);
      }
    }
  }, {
    key: "handleEnterKeyPress",
    value: function handleEnterKeyPress(event) {
      var expanded = this.getExpanded();
      if (expanded) {
        this.selectActiveItem();
      }
      var activeItem = this.getActiveItem();
      if (this.props.collapseOnSelectWithEnter) {
        if (activeItem && expanded) {
          this.collapse();
        }
      }
      if (this.props.navigateToNextAfterSelection && this.props.multiple && activeItem) {
        this.navigateToNextItem(1, event);
      }
    }
  }, {
    key: "navigateToNextTag",
    value: function navigateToNextTag(direction, event) {
      if (!this.isNavigationAllowed(direction)) {
        return null;
      }
      if (event && event.preventDefault) {
        event.preventDefault();
      }
      var newActiveTag;
      var items = this.getSelectedItems();
      var itemsIds;
      if (this.areItemsGrouped) {
        var visibleItems = this.groupedItems.visibleItems.map(function (item) {
          return item.id;
        });
        itemsIds = [].concat((0, _toConsumableArray2.default)(visibleItems), [REMAINING_ITEMS]);
      } else {
        itemsIds = items.map(function (item) {
          return item.id;
        });
      }
      var currentActiveTag = this.getActiveTag();
      var currentIndex = itemsIds.indexOf(currentActiveTag);
      var lastIndex = itemsIds.length - 1;
      var lastTag = itemsIds[lastIndex];
      var firstTag = itemsIds[0];
      var isFirstTag = currentIndex === 0;
      var isLastTag = currentIndex === lastIndex;
      if (direction === -1 && isFirstTag) {
        this.setActiveTag(null);
        return null;
      }
      if (direction === 1 && isLastTag) {
        this.setActiveTag(null);
        return null;
      }
      if (currentActiveTag === null || currentIndex === -1) {
        newActiveTag = direction === -1 ? lastTag : firstTag;
      } else {
        if (direction === -1) {
          newActiveTag = isFirstTag ? lastTag : itemsIds[currentIndex - 1];
        } else if (direction === 1) {
          newActiveTag = isLastTag ? firstTag : itemsIds[currentIndex + 1];
        }
      }
      this.setActiveTag(newActiveTag);
      return null;
    }
  }, {
    key: "isNavigationAllowed",
    value: function isNavigationAllowed(direction) {
      if (!this.props.multiple) {
        return false;
      }
      var inputNode = this.getTextInputNode();
      if (inputNode.hasSelection()) {
        return false;
      }
      var currentActiveTag = this.getActiveTag();
      var canNavigateLeft = inputNode.isCursorAtStartPosition() && direction === -1;
      var canNavigateRight = inputNode.isCursorAtEndPosition() && direction === 1;
      if (!canNavigateRight && !canNavigateLeft && !currentActiveTag) {
        return false;
      }
      var items = this.getSelectedItems();
      if (!Array.isArray(items)) {
        return false;
      }
      if (items.length === 1 && currentActiveTag) {
        this.setActiveTag(null);
        return false;
      }
      return true;
    }
  }, {
    key: "handleBackspace",
    value: function handleBackspace(event) {
      if (this.props.multiple) {
        this.handleTagBackspaceRemove(event);
      }
    }
  }, {
    key: "handleDelete",
    value: function handleDelete(event) {
      var activeTag = this.getActiveTag();
      if (this.props.multiple && activeTag) {
        this.removeTag(activeTag, 1);
      }
    }
  }, {
    key: "handleTagBackspaceRemove",
    value: function handleTagBackspaceRemove(event) {
      if (!this.props.removeTagOnBackspace) {
        return null;
      }
      var value = this.getValue();
      if (!value) {
        return null;
      }
      var activeTag = this.getActiveTag();
      if (activeTag != null) {
        event.preventDefault();
        if (activeTag === REMAINING_ITEMS) {
          this.removeRemainingTags();
        } else {
          this.removeTag(activeTag, -1);
        }
        return null;
      }
      var inputNode = this.getTextInputNode();
      var canDeleteTag = value && value.length && inputNode.isCursorAtStartPosition();
      if (canDeleteTag) {
        if (this.areItemsGrouped) {
          var ids = this.groupedItems.remainingItems.map(function (item) {
            return item.id;
          });
          this.removeTags(ids);
        } else {
          var items = this.getSelectedItems();
          var lastItem = items[items.length - 1];
          var lastItemId = lastItem.id;
          if (this.props.keepTagTextOnRemove) {
            var label = lastItem.label;
            if (label && typeof label === 'string') {
              this.setText(label);
            }
          }
          this.removeTag(lastItemId);
        }
      }
      return null;
    }
  }, {
    key: "handleToolsSize",
    value: function handleToolsSize() {
      var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.toolsNode ? this.toolsNode.getBoundingClientRect() : {
        width: 0,
        height: 0
      };
      var node = this.comboNode;
      var computedStyle = globalObject.getComputedStyle(node);
      var width = size.width + parseInt(computedStyle.paddingLeft, 10) + parseInt(computedStyle.paddingRight, 10);
      this.setState({
        toolsSize: {
          height: size.height,
          width: width
        }
      });
    }
  }, {
    key: "expand",
    value: function expand() {
      this.setExpanded(true);
    }
  }, {
    key: "collapse",
    value: function collapse() {
      this.setExpanded(false);
    }
  }, {
    key: "scrollToIndex",
    value: function scrollToIndex(index) {
      var listNode = this.getListNode();
      return listNode && listNode.scrollToIndex(index);
    }
  }, {
    key: "getItemIndexById",
    value: function getItemIndexById(id) {
      var index = (0, _findItemIndex.default)({
        id: id,
        data: this.getFilteredData(),
        getIdProperty: this.getIdProperty
      });
      return index;
    }
  }, {
    key: "scrollToId",
    value: function scrollToId(id) {
      var index = this.getItemIndexById(id);
      if (index != null) {
        this.scrollToIndex(index);
      }
    }
  }, {
    key: "toggleExpand",
    value: function toggleExpand() {
      var expanded = this.getExpanded();
      if (expanded) {
        this.collapse();
      } else {
        this.expand();
      }
    }
  }, {
    key: "getItemByIndex",
    value: function getItemByIndex(index) {
      var data = this.getFilteredData();
      if (!data || !Array.isArray(data) || !data[index]) {
        return null;
      }
      return data[index];
    }
  }, {
    key: "getItemById",
    value: function getItemById(id) {
      var dataMap = this.getDataMap();
      return dataMap && dataMap[id] || id;
    }
  }, {
    key: "updateGetIdProperty",
    value: function updateGetIdProperty(props) {
      props = props || this.props;
      this.getIdProperty = (0, _getDataProp.default)(props.idProperty);
    }
  }, {
    key: "updateGetDisplayProperty",
    value: function updateGetDisplayProperty(props) {
      props = props || this.props;
      this.getDisplayProperty = (0, _getDataProp.default)(props.displayProperty);
    }
  }, {
    key: "updateGetFilterProperty",
    value: function updateGetFilterProperty(props) {
      props = props || this.props;
      this.getFilterProperty = (0, _getDataProp.default)(props.filterProperty);
    }
  }, {
    key: "updateGroups",
    value: function updateGroups(_ref13) {
      var _ref13$groupProperty = _ref13.groupProperty,
        groupProperty = _ref13$groupProperty === void 0 ? this.props.groupProperty : _ref13$groupProperty,
        _ref13$data = _ref13.data,
        data = _ref13$data === void 0 ? this.getFilteredData() : _ref13$data;
      if (!data) {
        return null;
      }
      var groups = (0, _getGroups.default)(data, groupProperty);
      this.setState({
        groups: groups
      });
    }
  }, {
    key: "focus",
    value: function focus() {
      var textInput = this.getTextInputNode();
      if (textInput && textInput.focus && !this.hasFocus()) {
        textInput.focus();
      }
    }
  }, {
    key: "blur",
    value: function blur() {
      var textInput = this.getTextInputNode();
      if (textInput && textInput.blur) {
        textInput.blur();
      }
    }
  }, {
    key: "hasFocus",
    value: function hasFocus() {
      var textInput = this.getTextInputNode();
      if (textInput && textInput.hasFocus) {
        return textInput.hasFocus();
      }
      return false;
    }
  }, {
    key: "getTextInputNode",
    value: function getTextInputNode() {
      return this.textInput;
    }
  }, {
    key: "getComboNode",
    value: function getComboNode() {
      return this.comboNode;
    }
  }, {
    key: "getListNode",
    value: function getListNode() {
      return this.listNode;
    }
  }, {
    key: "getVirtualListNode",
    value: function getVirtualListNode() {
      return this.listNode && this.listNode.getVirtualListNode();
    }
  }, {
    key: "getlListNode",
    value: function getlListNode() {
      return this.listNode && this.listNode.getlListNode();
    }
  }, {
    key: "addItem",
    value: function addItem(item) {
      var newData = [].concat((0, _toConsumableArray2.default)(this.getData()), [item]);
      this.setData(newData);
    }
  }, {
    key: "clear",
    value: function clear() {
      var _this12 = this;
      this.setValue(null);
      this.setText(null);
      globalObject.requestAnimationFrame(function () {
        if (_this12.toolsNode) {
          _this12.handleToolsSize();
        }
      });
    }
  }, {
    key: "getItem",
    value: function getItem(id) {
      return this.getItemById(id);
    }
  }, {
    key: "getItemCount",
    value: function getItemCount() {
      var data = this.getData();
      return Array.isArray(data) ? data.length : null;
    }
  }, {
    key: "insertItem",
    value: function insertItem(_ref14) {
      var index = _ref14.index,
        item = _ref14.item;
      var data = this.getData();
      var newData = [].concat((0, _toConsumableArray2.default)(data.slice(0, index)), [item], (0, _toConsumableArray2.default)(data.slice(index)));
      this.setData(newData);
    }
  }, {
    key: "removeItems",
    value: function removeItems(ids) {
      var _this13 = this;
      ids = Array.isArray(ids) ? ids : [ids];
      var data = this.getData();
      var newData = data.filter(function (item) {
        var id = _this13.getIdProperty(item);
        return ids.indexOf(id) === -1;
      });
      this.setData(newData);
    }
  }, {
    key: "toggle",
    value: function toggle() {
      var expanded = this.getExpanded();
      this.setExpanded(!expanded);
    }
  }]);
  return InovuaComboBox;
}(_react.Component);
function emptyFn() {}
InovuaComboBox.defaultProps = {
  rootClassName: 'inovua-react-toolkit-combo-box',
  inlineFlex: false,
  itemEllipsis: true,
  borderRadius: 0,
  shadow: true,
  showShadowOnMouseOver: false,
  clearTextOnBlur: true,
  onKeyDown: emptyFn,
  autoFocus: false,
  autoBlur: false,
  focusOnClick: true,
  onFocus: emptyFn,
  onBlur: emptyFn,
  defaultActiveItem: null,
  highlightFirst: false,
  onTextChange: emptyFn,
  searchable: true,
  tagCloseIconPosition: 'end',
  removeTagOnBackspace: true,
  tagEllipsis: true,
  filterMinLength: 0,
  filterDelay: 300,
  activeFirstItemOnFilter: true,
  clearIcon: true,
  toggleIcon: true,
  showClearIconOnMouseOver: false,
  clearTextOnSelect: true,
  filterMode: 'contains',
  highlightMatchedText: false,
  onActiveTagChange: emptyFn,
  enableTagNavigation: true,
  onTagClick: emptyFn,
  onActiveItemChange: emptyFn,
  keepTagTextOnRemove: true,
  onItemClick: emptyFn,
  onChange: emptyFn,
  minAutocompleteLength: 3,
  autocompleteDelay: 300,
  autocomplete: false,
  defaultValue: null,
  multiple: false,
  removeSelectedItems: false,
  allowSelectionToggle: true,
  clearValueOnEmpty: true,
  onDataSourceLoad: emptyFn,
  idProperty: 'id',
  displayProperty: 'label',
  groupProperty: 'group',
  limit: 50,
  skip: 0,
  onLoadingChange: emptyFn,
  listLoadingText: 'Loading...',
  loadingSpinner: true,
  listEmptyText: 'No data found',
  defaultText: null,
  defaultExpanded: false,
  onExpandedChange: emptyFn,
  onExpandChange: emptyFn,
  collapseOnEscape: true,
  expandOnClick: true,
  expandOnFocus: true,
  collapseOnBlur: true,
  onExpand: emptyFn,
  onCollapse: emptyFn,
  expandOnTextChange: true,
  toggleExpandOnClick: true,
  wrapMultiple: true,
  theme: 'default-light',
  enableNavigation: true,
  enableListNavigation: true,
  navigateToNextAfterSelection: true,
  positions: ['bottom', 'top'],
  offset: 2,
  constrainTo: true
};
var VALUE_TYPE = _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.object, _propTypes.default.bool, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.object, _propTypes.default.bool]))]);
InovuaComboBox.propTypes = {
  rootClassName: _propTypes.default.string,
  theme: _propTypes.default.string,
  inlineFlex: _propTypes.default.bool,
  shouldComponentUpdate: _propTypes.default.func,
  lazyDataSource: _propTypes.default.bool,
  remoteFilter: _propTypes.default.bool,
  disabled: _propTypes.default.bool,
  readOnly: _propTypes.default.bool,
  rtl: _propTypes.default.bool,
  tabIndex: _propTypes.default.number,
  collapseOnSelect: _propTypes.default.bool,
  clearTextOnBlur: _propTypes.default.bool,
  listEmptyText: _propTypes.default.node,
  listMaxHeight: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  listMinHeight: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  maxTagsLength: _propTypes.default.number,
  defaultLoading: _propTypes.default.bool,
  loading: _propTypes.default.bool,
  onLoadingChange: _propTypes.default.func,
  listLoadingText: _propTypes.default.node,
  loadingSpinner: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.bool]),
  onKeyDown: _propTypes.default.func,
  onTagClick: _propTypes.default.func,
  clearIcon: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.func, _propTypes.default.node]),
  toggleIcon: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.func, _propTypes.default.node]),
  showClearIconOnMouseOver: _propTypes.default.bool,
  autoFocus: _propTypes.default.bool,
  autoBlur: _propTypes.default.bool,
  focusOnClick: _propTypes.default.bool,
  onFocus: _propTypes.default.func,
  onBlur: _propTypes.default.func,
  borderRadius: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  padding: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  border: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  background: _propTypes.default.string,
  shadow: _propTypes.default.bool,
  showShadowOnMouseOver: _propTypes.default.bool,
  emptyClassName: _propTypes.default.string,
  emptyStyle: _propTypes.default.object,
  disabledClassName: _propTypes.default.string,
  disabledStyle: _propTypes.default.object,
  focusedClassName: _propTypes.default.string,
  focusedStyle: _propTypes.default.object,
  itemBackground: _propTypes.default.string,
  disabledItemStyle: _propTypes.default.object,
  disabledItemClassName: _propTypes.default.string,
  renderItem: _propTypes.default.func,
  itemEllipsis: _propTypes.default.bool,
  activeItemStyle: _propTypes.default.object,
  activeItemClassName: _propTypes.default.string,
  selectedItemStyle: _propTypes.default.object,
  limit: _propTypes.default.number,
  skip: _propTypes.default.number,
  loadNextPage: _propTypes.default.func,
  searchable: _propTypes.default.bool,
  placeholder: _propTypes.default.node,
  text: _propTypes.default.string,
  defaultText: _propTypes.default.string,
  onTextChange: _propTypes.default.func,
  filterFunction: _propTypes.default.func,
  filterProperty: _propTypes.default.string,
  loadLazyDataSource: _propTypes.default.func,
  filterMinLength: _propTypes.default.number,
  filterDelay: _propTypes.default.number,
  activeFirstItemOnFilter: _propTypes.default.bool,
  renderInput: _propTypes.default.func,
  inputClassName: _propTypes.default.string,
  inputStyle: _propTypes.default.object,
  clearTextOnSelect: _propTypes.default.bool,
  filterMode: _propTypes.default.oneOf(['startsWith', 'contains']),
  highlightMatchedText: _propTypes.default.bool,
  autocomplete: _propTypes.default.bool,
  minAutocompleteLength: _propTypes.default.number,
  autocompleteDelay: _propTypes.default.number,
  enableNavigatio: _propTypes.default.bool,
  keepTagTextOnRemove: _propTypes.default.bool,
  tagActiveStyle: _propTypes.default.object,
  enableTagNavigation: _propTypes.default.bool,
  activeTag: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  defaultActiveTag: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  onActiveTagChange: _propTypes.default.func,
  allowCustomTagCreation: _propTypes.default.bool,
  enableNavigation: _propTypes.default.bool,
  enableListNavigation: _propTypes.default.bool,
  highlightFirst: _propTypes.default.bool,
  activeItem: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  defaultActiveItem: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  onActiveItemChange: _propTypes.default.func,
  navigateToNextAfterSelection: _propTypes.default.bool,
  onItemClick: _propTypes.default.func,
  onChange: _propTypes.default.func,
  listClassName: _propTypes.default.string,
  selectedStyle: _propTypes.default.object,
  selectedClassName: _propTypes.default.string,
  renderGroup: _propTypes.default.func,
  renderFooter: _propTypes.default.func,
  renderHeader: _propTypes.default.func,
  renderList: _propTypes.default.func,
  renderListComponent: _propTypes.default.func,
  value: VALUE_TYPE,
  defaultValue: VALUE_TYPE,
  defaultDisplayValue: VALUE_TYPE,
  removeSelectedItems: _propTypes.default.bool,
  isSelectedItemValid: _propTypes.default.func,
  maxValueLength: _propTypes.default.number,
  changeValueOnNavigation: _propTypes.default.bool,
  allowSelectionToggle: _propTypes.default.bool,
  clearSelectedOnTextChange: _propTypes.default.bool,
  clearValueOnEmpty: _propTypes.default.bool,
  isNewCustomTagValid: _propTypes.default.func,
  multiple: _propTypes.default.bool,
  renderTag: _propTypes.default.func,
  renderTagLabel: _propTypes.default.func,
  renderRemainingTags: _propTypes.default.func,
  renderTags: _propTypes.default.func,
  tagStyle: _propTypes.default.object,
  tagBorder: _propTypes.default.string,
  tagPadding: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  tagHeight: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  tagWidth: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  tagMinSize: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string, _propTypes.default.shape({
    height: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
    width: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string])
  })]),
  tagMaxSize: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string, _propTypes.default.shape({
    height: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
    width: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string])
  })]),
  tagCloseIcon: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.node, _propTypes.default.func]),
  tagCloseIconPosition: _propTypes.default.oneOf(['start', 'end']),
  tagEllipsis: _propTypes.default.bool,
  removeTagOnBackspace: _propTypes.default.bool,
  renderDisplayValue: _propTypes.default.func,
  dataSource: function dataSource(props, propName) {
    var dataSource = props[propName];
    if (dataSource != null && typeof dataSource !== 'function' && !Array.isArray(dataSource) && !(dataSource && dataSource.then)) {
      return new Error('dataSource must be an array, null, a promise or a function returning a promise.');
    }
    return null;
  },
  onDataSourceLoad: _propTypes.default.func,
  idProperty: _propTypes.default.string,
  displayProperty: _propTypes.default.string,
  groupProperty: _propTypes.default.string,
  listStyle: _propTypes.default.object,
  relativeToViewport: _propTypes.default.bool,
  expanded: _propTypes.default.bool,
  defaultExpanded: _propTypes.default.bool,
  onExpandedChange: _propTypes.default.func,
  onExpandChange: _propTypes.default.func,
  collapseOnEscape: _propTypes.default.bool,
  expandOnClick: _propTypes.default.bool,
  expandOnFocus: _propTypes.default.bool,
  collapseOnBlur: _propTypes.default.bool,
  enablePagination: _propTypes.default.bool,
  onExpand: _propTypes.default.func,
  onCollapse: _propTypes.default.func,
  virtualListFactory: _propTypes.default.func,
  renderListScroller: _propTypes.default.func,
  renderVirtualList: _propTypes.default.func,
  expandOnTextChange: _propTypes.default.bool,
  toggleExpandOnClick: _propTypes.default.bool,
  collapseOnSelectWithEnter: _propTypes.default.bool,
  wrapMultiple: _propTypes.default.bool,
  newCustomTagText: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]),
  positions: _propTypes.default.arrayOf(_propTypes.default.string),
  constrainTo: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object, _propTypes.default.bool]),
  offset: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
    x: _propTypes.default.number,
    y: _propTypes.default.number
  }), _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
    x: _propTypes.default.number,
    y: _propTypes.default.number
  })]))])
};
var _default = InovuaComboBox;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/Icons.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/Icons.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CloseIcon = CloseIcon;
exports.LoadingIcon = LoadingIcon;
exports.ToggleIcon = ToggleIcon;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/objectWithoutProperties */ "./node_modules/@babel/runtime/helpers/objectWithoutProperties.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _excluded = ["size", "className", "svgProps"],
  _excluded2 = ["onClick", "className", "expanded", "size"],
  _excluded3 = ["size", "svgProps", "className"];
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function CloseIcon(_ref) {
  var _ref$size = _ref.size,
    size = _ref$size === void 0 ? 10 : _ref$size,
    className = _ref.className,
    svgProps = _ref.svgProps,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  return _react.default.createElement("div", _objectSpread(_objectSpread({}, rest), {}, {
    className: className
  }), _react.default.createElement("svg", _objectSpread(_objectSpread({}, svgProps), {}, {
    width: size,
    height: size,
    viewBox: "0 0 10 10"
  }), _react.default.createElement("path", {
    fill: "none",
    fillRule: "evenodd",
    strokeLinecap: "round",
    strokeWidth: "1.33",
    d: "M1 1l8 8m0-8L1 9"
  })));
}
CloseIcon.propTypes = {
  className: _propTypes.default.string,
  size: _propTypes.default.number
};
function ToggleIcon(_ref2) {
  var onClick = _ref2.onClick,
    className = _ref2.className,
    expanded = _ref2.expanded,
    _ref2$size = _ref2.size,
    size = _ref2$size === void 0 ? 10 : _ref2$size,
    rest = (0, _objectWithoutProperties2.default)(_ref2, _excluded2);
  return _react.default.createElement("div", _objectSpread(_objectSpread({}, rest), {}, {
    className: className,
    onClick: onClick
  }), _react.default.createElement("svg", {
    width: size,
    height: size / 2,
    viewBox: "0 0 10 5"
  }, expanded ? _react.default.createElement("path", {
    fillRule: "evenodd",
    d: "M5.262.262l4.106 4.106c.144.144.144.379 0 .524-.07.069-.164.108-.262.108H.894c-.204 0-.37-.166-.37-.37 0-.099.039-.193.108-.262L4.738.262c.145-.145.38-.145.524 0z"
  }) : _react.default.createElement("path", {
    fillRule: "evenodd",
    d: "M4.738 4.738L.632.632C.488.488.488.253.632.108.702.04.796 0 .894 0h8.212c.204 0 .37.166.37.37 0 .099-.039.193-.108.262L5.262 4.738c-.145.145-.38.145-.524 0z"
  })));
}
function LoadingIcon(_ref3) {
  var _ref3$size = _ref3.size,
    size = _ref3$size === void 0 ? 17 : _ref3$size,
    _ref3$svgProps = _ref3.svgProps,
    svgProps = _ref3$svgProps === void 0 ? {} : _ref3$svgProps,
    className = _ref3.className,
    rest = (0, _objectWithoutProperties2.default)(_ref3, _excluded3);
  return _react.default.createElement("div", _objectSpread(_objectSpread({}, rest), {}, {
    className: className
  }), _react.default.createElement("svg", _objectSpread(_objectSpread({}, svgProps), {}, {
    width: size,
    height: size,
    viewBox: "0 0 24 24"
  }), _react.default.createElement("path", {
    d: "M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8c-.45-.83-.7-1.79-.7-2.8 0-3.31 2.69-6 6-6zm6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26z"
  })));
}
LoadingIcon.propTypes = {
  size: _propTypes.default.number
};

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/List/FakeVirtualList.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/List/FakeVirtualList.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _cleanProps = _interopRequireDefault(__webpack_require__(/*! ../../../../common/cleanProps */ "./node_modules/@inovua/reactdatagrid-community/common/cleanProps.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var FakeVirtualList = function (_Component) {
  (0, _inherits2.default)(FakeVirtualList, _Component);
  var _super = _createSuper(FakeVirtualList);
  function FakeVirtualList(props) {
    var _this;
    (0, _classCallCheck2.default)(this, FakeVirtualList);
    _this = _super.call(this, props);
    _this.handleOnScroll = _this.handleOnScroll.bind((0, _assertThisInitialized2.default)(_this));
    _this.targetRef = function (node) {
      if (!node) {
        _this.targetNode = null;
      }
      _this.targetNode = node;
    };
    return _this;
  }
  (0, _createClass2.default)(FakeVirtualList, [{
    key: "render",
    value: function render() {
      var props = this.props;
      var count = this.props.count;
      var list = [];
      if (count > 0) {
        for (var i = 0; i < count; i++) {
          list.push(props.renderRow({
            index: i
          }));
        }
      }
      var listProps = _objectSpread(_objectSpread({
        ref: this.targetRef,
        children: list
      }, (0, _cleanProps.default)(props, FakeVirtualList.propTypes)), {}, {
        onScroll: this.handleOnScroll
      });
      var result;
      if (this.props.renderListScroller) {
        result = this.props.renderListScroller(listProps);
      }
      if (result === undefined) {
        result = _react.default.createElement("div", _objectSpread({}, listProps));
      }
      return result;
    }
  }, {
    key: "getContainerNode",
    value: function getContainerNode() {
      return this.targetNode && this.targetNode.getContainerTargetNode ? this.targetNode.getContainerTargetNode() : this.targetNode;
    }
  }, {
    key: "getRootNode",
    value: function getRootNode() {
      return this.targetNode;
    }
  }, {
    key: "getScrollerNode",
    value: function getScrollerNode() {
      return this.targetNode && this.targetNode.getScrollerNode ? this.targetNode.getScrollerNode() : this.targetNode;
    }
  }, {
    key: "scrollToIndex",
    value: function scrollToIndex(index) {
      var containerNode = this.getContainerNode();
      var rootNode = this.getRootNode();
      var scrollerNode = this.getScrollerNode();
      if (!containerNode) {
        return null;
      }
      if (containerNode && !containerNode.childNodes.length) {
        return null;
      }
      var itemNode = containerNode.childNodes[index];
      if (!itemNode) {
        return null;
      }
      var itemHeight = itemNode.offsetHeight;
      var itemOffsetTop = itemNode.offsetTop;
      var scrollTop = scrollerNode.scrollTop;
      var containerHeight = rootNode.offsetHeight;
      if (scrollTop > itemOffsetTop) {
        scrollerNode.scrollTop = itemOffsetTop;
      }
      if (scrollTop + containerHeight < itemHeight + itemOffsetTop) {
        scrollerNode.scrollTop = itemOffsetTop + itemHeight - containerHeight;
      }
      return true;
    }
  }, {
    key: "handleOnScroll",
    value: function handleOnScroll(event) {
      var rootNode = this.getRootNode();
      var scrollTop = event.target.scrollTop;
      var listHeight = rootNode.offsetHeight;
      var scrollHeight = rootNode.scrollHeight;
      if (scrollTop + listHeight + 5 >= scrollHeight) {
        this.props.scrollProps.onContainerScrollVerticalMax();
      }
    }
  }]);
  return FakeVirtualList;
}(_react.Component);
FakeVirtualList.propTypes = {
  autoHide: _propTypes.default.bool,
  count: _propTypes.default.number,
  renderRow: _propTypes.default.func,
  minRowHeight: _propTypes.default.number,
  tagIndex: _propTypes.default.number,
  shouldComponentUpdate: _propTypes.default.func,
  renderListScroller: _propTypes.default.func,
  scrollProps: _propTypes.default.object,
  virtualized: _propTypes.default.bool,
  showScrollbars: _propTypes.default.bool
};
var _default = FakeVirtualList;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/List/Item.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/List/Item.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof3 = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _cleanProps = _interopRequireDefault(__webpack_require__(/*! ../../../../common/cleanProps */ "./node_modules/@inovua/reactdatagrid-community/common/cleanProps.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../utils/join */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/join.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof3(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var Item = function (_Component) {
  (0, _inherits2.default)(Item, _Component);
  var _super = _createSuper(Item);
  function Item(props) {
    var _this;
    (0, _classCallCheck2.default)(this, Item);
    _this = _super.call(this, props);
    _this.handleClick = _this.handleClick.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleMouseDown = _this.handleMouseDown.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }
  (0, _createClass2.default)(Item, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
        selected = _this$props.selected,
        rootClassName = _this$props.rootClassName,
        selectedStyle = _this$props.selectedStyle,
        active = _this$props.active,
        background = _this$props.background,
        item = _this$props.item,
        index = _this$props.index,
        disabledStyle = _this$props.disabledStyle,
        disabledClassName = _this$props.disabledClassName,
        activeStyle = _this$props.activeStyle,
        activeClassName = _this$props.activeClassName,
        selectedClassName = _this$props.selectedClassName,
        renderItem = _this$props.renderItem,
        rtl = _this$props.rtl,
        itemHeight = _this$props.itemHeight,
        itemEllipsis = _this$props.itemEllipsis;
      var disabled = item.disabled;
      var className = (0, _join.default)(this.props.className, rootClassName, selected && "".concat(rootClassName, "--selected"), rtl && "".concat(rootClassName, "--rtl"), active && "".concat(rootClassName, "--active"), disabled && "".concat(rootClassName, "--disabled"), itemEllipsis && "".concat(rootClassName, "--ellipsis"), disabled && disabledClassName, active && activeClassName, selected && selectedClassName);
      var style = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, this.props.style), active && activeStyle), disabled && disabledStyle), selected && selectedStyle);
      if (itemHeight) {
        style.height = itemHeight;
      }
      if (background) {
        style.background = background;
      }
      var label = this.props.label;
      var matchText = item.matchText;
      if (typeof label === 'string' && matchText) {
        label = matchText.map(function (textPart, index) {
          if ((0, _typeof2.default)(textPart) === 'object') {
            return _react.default.createElement("span", {
              className: "".concat(rootClassName, "__highlight"),
              key: index
            }, textPart.match);
          }
          return textPart;
        });
      }
      var domProps = _objectSpread(_objectSpread({}, (0, _cleanProps.default)(this.props, Item.propTypes)), {}, {
        style: style,
        className: className,
        onClick: this.handleClick,
        onMouseDown: this.handleMouseDown,
        children: label
      });
      var result;
      if (typeof renderItem === 'function') {
        result = renderItem({
          domProps: domProps,
          label: label,
          item: item,
          index: index
        });
      }
      if (result === undefined) {
        result = _react.default.createElement("div", _objectSpread({}, domProps));
      }
      return result;
    }
  }, {
    key: "handleMouseDown",
    value: function handleMouseDown(event) {
      event.preventDefault();
    }
  }, {
    key: "handleClick",
    value: function handleClick() {
      if (this.props.item.disabled) {
        return null;
      }
      this.props.onClick(this.props.id);
    }
  }]);
  return Item;
}(_react.Component);
function emptyFn() {}
Item.defaultProps = {
  onClick: emptyFn,
  selectedStyle: {},
  item: {}
};
Item.propTypes = {
  rootClassName: _propTypes.default.string,
  itemHeight: _propTypes.default.number,
  itemEllipsis: _propTypes.default.bool,
  renderItem: _propTypes.default.func,
  selectedClassName: _propTypes.default.string,
  selectedStyle: _propTypes.default.object,
  background: _propTypes.default.string,
  active: _propTypes.default.bool,
  label: _propTypes.default.node,
  id: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool]),
  item: _propTypes.default.object,
  onClick: _propTypes.default.func,
  index: _propTypes.default.number,
  rtl: _propTypes.default.bool,
  disabledStyle: _propTypes.default.object,
  disabledClassName: _propTypes.default.string,
  activeStyle: _propTypes.default.object,
  activeClassName: _propTypes.default.string
};
var _default = Item;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/List/List.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/List/List.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _cleanProps = _interopRequireDefault(__webpack_require__(/*! ../../../../common/cleanProps */ "./node_modules/@inovua/reactdatagrid-community/common/cleanProps.js"));
var _Overlay = _interopRequireDefault(__webpack_require__(/*! ../../../Overlay */ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/index.js"));
var _FakeVirtualList = _interopRequireDefault(__webpack_require__(/*! ./FakeVirtualList */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/List/FakeVirtualList.js"));
var _Item = _interopRequireDefault(__webpack_require__(/*! ./Item */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/List/Item.js"));
var _getClassName = _interopRequireDefault(__webpack_require__(/*! ./utils/getClassName */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/List/utils/getClassName.js"));
var _isSelected = _interopRequireDefault(__webpack_require__(/*! ../utils/isSelected */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/isSelected.js"));
var _getPositionRelativeToElement = _interopRequireDefault(__webpack_require__(/*! ../../../../common/getPositionRelativeToElement */ "./node_modules/@inovua/reactdatagrid-community/common/getPositionRelativeToElement/index.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var List = function (_Component) {
  (0, _inherits2.default)(List, _Component);
  var _super = _createSuper(List);
  function List(props) {
    var _this;
    (0, _classCallCheck2.default)(this, List);
    _this = _super.call(this, props);
    _this.renderRow = _this.renderRow.bind((0, _assertThisInitialized2.default)(_this));
    _this.getOverlayTarget = _this.getOverlayTarget.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleOnClick = _this.handleOnClick.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleItemClick = _this.handleItemClick.bind((0, _assertThisInitialized2.default)(_this));
    _this.virtualListShouldComponentUpdate = _this.virtualListShouldComponentUpdate.bind((0, _assertThisInitialized2.default)(_this));
    _this.setRootNode = function (ref) {
      _this.listNode = ref;
    };
    _this.addVirtualListRef = function (ref) {
      _this.virtualListNode = ref;
    };
    _this.state = {
      succesfullPosition: 'bottom'
    };
    _this.listAligned = false;
    return _this;
  }
  (0, _createClass2.default)(List, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.componentIsMounted = false;
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;
      this.componentIsMounted = true;
      if (!this.props.relativeToViewport) {
        setTimeout(function () {
          _this2.updateListPosition();
        }, 0);
      }
      if (this.props.activeItemIndex != null) {
        setTimeout(function () {
          if (_this2.componentIsMounted) {
            _this2.scrollToIndex(_this2.props.activeItemIndex);
          }
        }, 16);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var state = this.state,
        props = this.props;
      var renderFooter = props.renderFooter,
        renderHeader = props.renderHeader,
        isNewCustomTagValid = props.isNewCustomTagValid;
      this.currentGroup = null;
      var className = (0, _getClassName.default)({
        state: state,
        props: props
      });
      var style = props.style;
      if (this.state.position) {
        style = _objectSpread(_objectSpread({}, style), this.state.position);
      }
      if (this.state.succesfullPosition && this.props.offset) {
        var positionName = this.state.succesfullPosition === 'bc-tc' ? 'top' : 'bottom';
        if (this.props.offset) {
          style = _objectSpread(_objectSpread({}, style), {}, (0, _defineProperty2.default)({}, positionName == 'top' ? 'marginBottom' : 'marginTop', this.props.offset));
        }
      }
      if (!this.props.relativeToViewport && !this.listAligned) {
        style = _objectSpread(_objectSpread({}, style), {}, {
          visibility: 'hidden',
          position: 'fixed'
        });
      }
      var result = _react.default.createElement("div", _objectSpread(_objectSpread({}, (0, _cleanProps.default)(props, List.propTypes)), {}, {
        className: className,
        style: style,
        ref: this.setRootNode,
        onClick: this.handleOnClick
      }), this.renderLoadingText(), isNewCustomTagValid && this.renderNewCustomTagText(), typeof renderHeader === 'function' && this.renderHeader(), this.renderEmptyText(), this.renderVirtualList(), typeof renderFooter === 'function' && this.renderFooter());
      if (this.props.relativeToViewport) {
        var overlayProps = _objectSpread(_objectSpread({}, props.overlayProps), {}, {
          target: this.getOverlayTarget,
          relativeToViewport: this.props.relativeToViewport,
          constrainTo: this.props.constrainTo,
          positions: this.props.positions
        });
        return _react.default.createElement(_Overlay.default, _objectSpread({}, overlayProps), result);
      }
      return result;
    }
  }, {
    key: "getOverlayTarget",
    value: function getOverlayTarget() {
      return this.props.getComboNode();
    }
  }, {
    key: "renderFooter",
    value: function renderFooter() {
      return this.props.renderFooter({
        props: this.props,
        data: this.props.data,
        value: this.props.value
      });
    }
  }, {
    key: "renderHeader",
    value: function renderHeader() {
      return this.props.renderHeader({
        props: this.props,
        data: this.props.data,
        value: this.props.value
      });
    }
  }, {
    key: "renderEmptyText",
    value: function renderEmptyText() {
      var data = this.props.data;
      if (data && data.length || this.props.loading) {
        return null;
      }
      if (this.props.isNewCustomTagValid) {
        return null;
      }
      return _react.default.createElement("div", {
        className: "".concat(this.props.rootClassName, "__empty-text")
      }, this.props.emptyText);
    }
  }, {
    key: "renderNewCustomTagText",
    value: function renderNewCustomTagText() {
      var text = this.props.text;
      if (this.props.newCustomTagText) {
        return typeof this.props.newCustomTagText === 'function' ? this.props.newCustomTagText({
          text: text
        }) : this.props.newCustomTagText;
      }
      return _react.default.createElement("div", {
        className: "".concat(this.props.rootClassName, "__new-custom-tag-text")
      }, "Create option \"", text, "\"");
    }
  }, {
    key: "renderLoadingText",
    value: function renderLoadingText() {
      if (!this.props.loading) {
        return null;
      }
      if (!this.props.loadingText) {
        return null;
      }
      return _react.default.createElement("div", {
        className: "".concat(this.props.rootClassName, "__loading-text")
      }, this.props.loadingText);
    }
  }, {
    key: "renderVirtualList",
    value: function renderVirtualList() {
      var className = "".concat(this.props.rootClassName, "__virtual-list");
      var count = this.props.dataLength;
      var VirtualList = this.props.virtualListFactory;
      var renderVirtualList = this.props.renderVirtualList;
      if (!count) {
        return null;
      }
      var style = {};
      if (this.props.maxHeight) {
        style.maxHeight = this.props.maxHeight;
      }
      if (this.state.constrainedHeight) {
        var constrainedOffset = 16;
        var constrainedHeight = this.props.maxHeight ? Math.min(this.props.maxHeight, this.state.constrainedHeight - constrainedOffset) : this.state.constrainedHeight - constrainedOffset;
        style.maxHeight = constrainedHeight;
      }
      if (typeof style.maxHeight === 'number' && typeof this.props.minHeight == 'number') {
        style.maxHeight = Math.max(style.maxHeight || 0, style.minHeight || 0);
      }
      var virtualListProps = {
        ref: this.addVirtualListRef,
        className: className,
        autoHide: false,
        count: count,
        theme: this.props.theme,
        renderRow: this.renderRow,
        minRowHeight: 10,
        tabIndex: null,
        shouldComponentUpdate: this.virtualListShouldComponentUpdate,
        scrollProps: {
          onContainerScrollVerticalMax: this.props.onScrollBottom
        },
        style: style
      };
      var result;
      if (renderVirtualList) {
        result = renderVirtualList(virtualListProps);
      }
      if (result === undefined) {
        if (VirtualList === _FakeVirtualList.default) {
          virtualListProps.renderListScroller = this.props.renderListScroller;
        }
        result = _react.default.createElement(VirtualList, _objectSpread({}, virtualListProps));
      }
      if (result && result.props) {
        this.rowHeight = result.props.rowHeight;
      }
      return result;
    }
  }, {
    key: "virtualListShouldComponentUpdate",
    value: function virtualListShouldComponentUpdate() {
      return true;
    }
  }, {
    key: "renderRow",
    value: function renderRow(_ref) {
      var index = _ref.index;
      var groups = this.props.groups;
      if (groups && groups[index]) {
        return this.renderGroup(groups[index], index);
      }
      var _this$props = this.props,
        data = _this$props.data,
        getIdProperty = _this$props.getIdProperty,
        getDisplayProperty = _this$props.getDisplayProperty,
        rootClassName = _this$props.rootClassName,
        itemEllipsis = _this$props.itemEllipsis,
        value = _this$props.value,
        activeItem = _this$props.activeItem,
        renderItem = _this$props.renderItem,
        rtl = _this$props.rtl;
      var renderIndex = this.currentGroup ? index - this.currentGroup.indexAjustment : index;
      var item = data[renderIndex];
      var id = getIdProperty(item);
      var label = getDisplayProperty(item);
      var selected = (0, _isSelected.default)({
        value: value,
        id: id
      });
      var active = id === activeItem;
      var itemProps = _objectSpread(_objectSpread({}, this.props.itemProps), {}, {
        index: renderIndex,
        itemHeight: this.rowHeight,
        itemEllipsis: itemEllipsis,
        item: item,
        id: id,
        label: label,
        selected: selected,
        active: active,
        renderItem: renderItem,
        rtl: rtl,
        rootClassName: "".concat(rootClassName, "__item"),
        onClick: this.handleItemClick,
        key: id || label
      });
      return _react.default.createElement(_Item.default, _objectSpread({}, itemProps));
    }
  }, {
    key: "renderGroup",
    value: function renderGroup(group, index) {
      this.currentGroup = group;
      var title = group.title;
      var groupProps = {
        children: title,
        key: title,
        className: "".concat(this.props.rootClassName, "__group")
      };
      var result;
      if (typeof this.props.renderGroup === 'function') {
        result = this.props.renderGroup({
          domProps: groupProps,
          index: index,
          group: group
        });
      }
      if (result === undefined) {
        result = _react.default.createElement("div", _objectSpread({}, groupProps));
      }
      return result;
    }
  }, {
    key: "handleOnClick",
    value: function handleOnClick(event) {
      event.stopPropagation();
    }
  }, {
    key: "handleItemClick",
    value: function handleItemClick(index) {
      this.props.onItemClick(index);
    }
  }, {
    key: "updateListPosition",
    value: function updateListPosition() {
      var comboNode = this.props.getComboNode();
      if (!comboNode) {
        return null;
      }
      var listNode = this.listNode;
      if (!listNode) {
        return null;
      }
      var positionConfig = (0, _getPositionRelativeToElement.default)({
        targetNode: comboNode,
        overlayNode: listNode,
        offset: this.props.offset,
        constrainTo: this.props.constrainTo,
        relativeToViewport: this.props.relativeToViewport,
        positions: this.props.positions
      });
      this.listAligned = true;
      if (positionConfig) {
        var constrainedHeight = positionConfig.constrainedHeight,
          positionRegion = positionConfig.positionRegion,
          succesfullPosition = positionConfig.succesfullPosition,
          position = positionConfig.position;
        this.setState({
          positionRegion: positionRegion,
          succesfullPosition: succesfullPosition,
          constrainedHeight: constrainedHeight ? positionRegion.getHeight() : null
        });
      }
    }
  }, {
    key: "getVirtualListNode",
    value: function getVirtualListNode() {
      return this.virtualListNode;
    }
  }, {
    key: "getlListNode",
    value: function getlListNode() {
      return this.listNode;
    }
  }, {
    key: "scrollToIndex",
    value: function scrollToIndex(index) {
      var virtualListNode = this.getVirtualListNode();
      return virtualListNode && virtualListNode.scrollToIndex(index);
    }
  }]);
  return List;
}(_react.Component);
function emptyFn() {}
List.defaultProps = {
  selectedStyle: {},
  style: {},
  onItemClick: emptyFn,
  getComboNode: emptyFn,
  positions: ['bottom', 'top'],
  offset: 0,
  constrainTo: true,
  virtualListFactory: _FakeVirtualList.default,
  overlayProps: {
    theme: null,
    syncWidth: true,
    rafOnMount: false,
    adjustOnPositionBottom: false,
    updatePositionOnScroll: true,
    offset: 2,
    visible: true
  }
};
List.propTypes = {
  data: _propTypes.default.array,
  autoPosition: _propTypes.default.bool,
  emptyText: _propTypes.default.node,
  dataLength: _propTypes.default.number,
  rootClassName: _propTypes.default.string,
  highlightFirst: _propTypes.default.bool,
  maxHeight: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  minHeight: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  groups: _propTypes.default.object,
  itemEllipsis: _propTypes.default.bool,
  onScrollBottom: _propTypes.default.func,
  renderListScroller: _propTypes.default.func,
  renderGroup: _propTypes.default.func,
  renderFooter: _propTypes.default.func,
  renderHeader: _propTypes.default.func,
  renderItem: _propTypes.default.func,
  activeItemIndex: _propTypes.default.number,
  virtualListFactory: _propTypes.default.func,
  renderVirtualList: _propTypes.default.func,
  text: _propTypes.default.string,
  newCustomTagText: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]),
  isNewCustomTagValid: _propTypes.default.bool,
  positions: _propTypes.default.arrayOf(_propTypes.default.string),
  constrainTo: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object, _propTypes.default.bool]),
  offset: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
    x: _propTypes.default.number,
    y: _propTypes.default.number
  }), _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
    x: _propTypes.default.number,
    y: _propTypes.default.number
  })]))]),
  loadingText: _propTypes.default.node,
  loading: _propTypes.default.bool,
  relativeToViewport: _propTypes.default.bool,
  overlayProps: _propTypes.default.object,
  itemProps: _propTypes.default.object,
  activeItem: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool]),
  selectedStyle: _propTypes.default.object,
  getIdProperty: _propTypes.default.func,
  getDisplayProperty: _propTypes.default.func,
  rtl: _propTypes.default.bool,
  onItemClick: _propTypes.default.func,
  getComboNode: _propTypes.default.func
};
var _default = List;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/List/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/List/index.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _List = _interopRequireDefault(__webpack_require__(/*! ./List */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/List/List.js"));
var _default = _List.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/List/utils/getClassName.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/List/utils/getClassName.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _join = _interopRequireDefault(__webpack_require__(/*! ../../utils/join */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/join.js"));
function getClassName(_ref) {
  var props = _ref.props,
    _ref$state = _ref.state,
    state = _ref$state === void 0 ? {} : _ref$state;
  var listPosition = props.listPosition,
    _props$data = props.data,
    data = _props$data === void 0 ? [] : _props$data,
    className = props.className,
    theme = props.theme,
    rootClassName = props.rootClassName,
    loading = props.loading,
    relativeToViewport = props.relativeToViewport;
  var succesfullPosition = state.succesfullPosition;
  var constructedClassName = (0, _join.default)(rootClassName, className, listPosition && "".concat(rootClassName, "--").concat(listPosition), loading && "".concat(rootClassName, "--loading"), theme && "".concat(rootClassName, "--theme-").concat(theme), relativeToViewport && "".concat(rootClassName, "--relative-to-viewport"), data && !data.length && "".concat(rootClassName, "--empty"));
  if (succesfullPosition) {
    var positionName = succesfullPosition === 'bc-tc' ? 'top' : 'bottom';
    constructedClassName = (0, _join.default)(constructedClassName, "".concat(rootClassName, "--position-").concat(positionName));
  }
  return constructedClassName;
}
var _default = getClassName;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/Tag.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/Tag.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof3 = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _cleanProps = _interopRequireDefault(__webpack_require__(/*! ../../../common/cleanProps */ "./node_modules/@inovua/reactdatagrid-community/common/cleanProps.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ./utils/join */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/join.js"));
var _getMinMaxSize = _interopRequireDefault(__webpack_require__(/*! ./utils/getMinMaxSize */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getMinMaxSize.js"));
var _Icons = __webpack_require__(/*! ./Icons */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/Icons.js");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof3(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var Tag = function (_Component) {
  (0, _inherits2.default)(Tag, _Component);
  var _super = _createSuper(Tag);
  function Tag(props) {
    var _this;
    (0, _classCallCheck2.default)(this, Tag);
    _this = _super.call(this, props);
    _this.handleOnClose = _this.handleOnClose.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleOnMultipleClose = _this.handleOnMultipleClose.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }
  (0, _createClass2.default)(Tag, [{
    key: "render",
    value: function render() {
      var props = this.props;
      var item = props.item,
        index = props.index,
        items = props.items,
        rootClassName = props.rootClassName,
        closeIconPosition = props.closeIconPosition,
        _onClick = props.onClick,
        active = props.active,
        multiple = props.multiple,
        renderTag = props.renderTag,
        isMultiple = props.isMultiple;
      var className = this.getClassName({
        active: active
      });
      var labelClassName = "".concat(rootClassName, "__label");
      var style = this.getStyle();
      var closeIcon = this.renderCloseIcon();
      var label = this.renderLabel();
      var domProps = _objectSpread(_objectSpread({}, (0, _cleanProps.default)(props, Tag.propTypes)), {}, {
        key: "tag_".concat(index),
        style: style,
        className: className,
        onMouseDown: function onMouseDown(event) {
          event.preventDefault();
        },
        onClick: function onClick(event) {
          event.stopPropagation();
          _onClick(item.id);
        },
        children: [closeIconPosition === 'start' && closeIcon, _react.default.createElement("span", {
          key: "tag_label",
          className: labelClassName
        }, label), closeIconPosition === 'end' && closeIcon]
      });
      var result;
      if (typeof renderTag === 'function') {
        result = renderTag({
          domProps: domProps,
          item: item,
          index: index,
          items: items,
          isMultiple: isMultiple,
          props: props
        });
      }
      if (result === undefined) {
        return _react.default.createElement("div", _objectSpread({}, domProps));
      }
      return result || null;
    }
  }, {
    key: "getClassName",
    value: function getClassName(_ref) {
      var active = _ref.active;
      var _this$props = this.props,
        rootClassName = _this$props.rootClassName,
        ellipsis = _this$props.ellipsis,
        isMultiple = _this$props.isMultiple;
      var className = (0, _join.default)(rootClassName, active && "".concat(rootClassName, "--active"), ellipsis && "".concat(rootClassName, "--ellipsis"), isMultiple && "".concat(rootClassName, "--multiple"));
      return className;
    }
  }, {
    key: "getStyle",
    value: function getStyle() {
      var props = this.props;
      var border = props.border,
        padding = props.padding,
        height = props.height,
        width = props.width,
        maxWidth = props.maxWidth,
        activeStyle = props.activeStyle,
        active = props.active;
      var minMaxSize = (0, _getMinMaxSize.default)(props);
      var style = _objectSpread(_objectSpread({}, props.style), minMaxSize);
      if (border) {
        style.border = border;
      }
      if (padding) {
        style.padding = padding;
      }
      if (width) {
        style.width = width;
      }
      if (height) {
        style.height = height;
      }
      if (maxWidth) {
        style.maxWidth = maxWidth;
      }
      if (active && activeStyle) {
        style = _objectSpread(_objectSpread({}, style), activeStyle);
      }
      return style;
    }
  }, {
    key: "renderLabel",
    value: function renderLabel() {
      var _this$props2 = this.props,
        index = _this$props2.index,
        maxTagsLength = _this$props2.maxTagsLength,
        renderTagLabel = _this$props2.renderTagLabel,
        items = _this$props2.items,
        item = _this$props2.item,
        isMultiple = _this$props2.isMultiple;
      var label = item.label;
      if (isMultiple) {
        if (item.length === 1) {
          label = item[0].label;
        } else {
          label = items.length === item.length ? "".concat(item.length, " item").concat(item.length ? 's' : '', " selected") : "and other ".concat(item.length, " selected");
        }
      }
      if (renderTagLabel) {
        return renderTagLabel({
          label: label,
          item: item,
          items: items,
          count: items.length,
          index: index,
          isMultiple: isMultiple,
          maxTagsLength: maxTagsLength,
          combined: isMultiple
        });
      }
      return label;
    }
  }, {
    key: "renderCloseIcon",
    value: function renderCloseIcon() {
      var _this$props3 = this.props,
        closeIcon = _this$props3.closeIcon,
        rootClassName = _this$props3.rootClassName,
        isMultiple = _this$props3.isMultiple,
        item = _this$props3.item;
      var closeClassName = "".concat(rootClassName, "__clear-icon");
      if (!closeIcon) {
        return null;
      }
      var closeIconProps = {
        key: 'close_icon',
        onClick: isMultiple ? this.handleOnMultipleClose : this.handleOnClose,
        className: closeClassName
      };
      var closeIconEl = closeIcon;
      if (typeof closeIcon === 'function') {
        var closeIconParams = {
          item: item,
          onDeselect: closeIconProps.onClick,
          domProps: closeIconProps
        };
        closeIconEl = closeIcon(closeIconParams);
      } else {
        if (closeIcon && (0, _typeof2.default)(closeIcon) == 'object') {
          closeIconEl = (0, _react.cloneElement)(closeIcon, {
            className: (0, _join.default)(closeIcon.props && closeIcon.props.className, closeIconProps.className),
            onClick: closeIcon.props && closeIcon.props.onClick ? function (event) {
              closeIcon.props.onClick(event);
              closeIconProps.onClick(event);
            } : closeIconProps.onClick
          });
        }
      }
      if (closeIconEl === true || closeIconEl === undefined) {
        closeIconEl = _react.default.createElement(_Icons.CloseIcon, _objectSpread({}, closeIconProps));
      }
      return closeIconEl;
    }
  }, {
    key: "handleOnMultipleClose",
    value: function handleOnMultipleClose() {
      var ids = this.props.item.map(function (item) {
        return item.id;
      });
      this.props.onMultipleTagClose(ids);
    }
  }, {
    key: "handleOnClose",
    value: function handleOnClose(event) {
      var _this$props4 = this.props,
        onCloseTagClick = _this$props4.onCloseTagClick,
        item = _this$props4.item;
      event.preventDefault();
      event.stopPropagation();
      var id = item.id;
      onCloseTagClick(id);
    }
  }]);
  return Tag;
}(_react.Component);
Tag.displayName = 'Tag';
function emptyFn() {}
Tag.defaultProps = {
  onCloseTagClick: emptyFn,
  onMultipleTagClose: emptyFn,
  onClick: emptyFn,
  closeIconPosition: 'end',
  item: {},
  ellipsis: true,
  closeIcon: true
};
Tag.propTypes = {
  active: _propTypes.default.bool,
  renderTag: _propTypes.default.func,
  renderTagLabel: _propTypes.default.func,
  index: _propTypes.default.number,
  onCloseTagClick: _propTypes.default.func,
  onMultipleTagClose: _propTypes.default.func,
  closeIcon: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.node, _propTypes.default.func]),
  closeIconPosition: _propTypes.default.oneOf(['start', 'end']),
  isRemaining: _propTypes.default.bool,
  onClick: _propTypes.default.func,
  item: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),
  items: _propTypes.default.array,
  isMultiple: _propTypes.default.bool,
  rootClassName: _propTypes.default.string,
  tags: _propTypes.default.array,
  border: _propTypes.default.string,
  visibleItems: _propTypes.default.array,
  activeStyle: _propTypes.default.object,
  padding: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  height: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  width: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  minSize: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string, _propTypes.default.shape({
    height: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
    width: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string])
  })]),
  maxSize: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string, _propTypes.default.shape({
    height: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
    width: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string])
  })]),
  maxWidth: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  maxTagsLength: _propTypes.default.number,
  ellipsis: _propTypes.default.bool
};
var _default = Tag;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/TextInput.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/TextInput.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _cleanProps = _interopRequireDefault(__webpack_require__(/*! ../../../common/cleanProps */ "./node_modules/@inovua/reactdatagrid-community/common/cleanProps.js"));
var _getSelectionStart2 = _interopRequireDefault(__webpack_require__(/*! ./utils/getSelectionStart */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getSelectionStart.js"));
var _getSelectionEnd2 = _interopRequireDefault(__webpack_require__(/*! ./utils/getSelectionEnd */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getSelectionEnd.js"));
var _setInputSelection = _interopRequireDefault(__webpack_require__(/*! ./utils/setInputSelection */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/setInputSelection.js"));
var _throttle = _interopRequireDefault(__webpack_require__(/*! ../../../common/throttle */ "./node_modules/@inovua/reactdatagrid-community/common/throttle.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _getCursorPosition = _interopRequireDefault(__webpack_require__(/*! ./utils/getCursorPosition */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getCursorPosition.js"));
var _getGlobal = __webpack_require__(/*! ../../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var globalObject = (0, _getGlobal.getGlobal)();
var TextInput = function (_Component) {
  (0, _inherits2.default)(TextInput, _Component);
  var _super = _createSuper(TextInput);
  function TextInput(props) {
    var _this;
    (0, _classCallCheck2.default)(this, TextInput);
    _this = _super.call(this, props);
    _this.handleChange = _this.handleChange.bind((0, _assertThisInitialized2.default)(_this));
    _this.updateValue = _this.updateValue.bind((0, _assertThisInitialized2.default)(_this));
    if (props.throttle) {
      _this.updateThrottledUpdateValue(props.throttle);
    }
    _this.state = {
      value: props.value
    };
    return _this;
  }
  (0, _createClass2.default)(TextInput, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      var _this2 = this;
      var previousValue = prevProps.value || '';
      var currentValue = this.props.value || '';
      if (previousValue != currentValue) {
        clearTimeout(this.suggestionTimeOut);
      }
      if (this.props.suggestion && this.props.suggestion !== currentValue && this.props.autocomplete && currentValue !== previousValue && currentValue.length > previousValue.length) {
        this.suggestionTimeOut = setTimeout(function () {
          _this2.selectForwardIfNecessary();
        }, this.props.autocompleteDelay);
      }
      if (this.props.throttle && prevProps.value !== this.props.value) {
        this.setState({
          value: this.props.value
        });
      }
      if (prevProps.throttle !== this.props.throttle) {
        this.updateThrottledUpdateValue(this.props.throttle);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.suggestionTimeOut) {
        clearTimeout(this.suggestionTimeOut);
        this.suggestionTimeOut = null;
      }
    }
  }, {
    key: "updateThrottledUpdateValue",
    value: function updateThrottledUpdateValue(throttleDelay) {
      this.throttledUpdateValue = (0, _throttle.default)(this.updateValue, throttleDelay, {
        trailing: true,
        leading: false
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;
      var _this$props = this.props,
        rootClassName = _this$props.rootClassName,
        onClick = _this$props.onClick,
        maxWidth = _this$props.maxWidth,
        visible = _this$props.visible,
        searchable = _this$props.searchable;
      var className = (0, _join.default)("".concat(rootClassName, "__wrapper"), this.props.className, !visible && "".concat(rootClassName, "__wrapper--invisible"), !searchable && "".concat(rootClassName, "__wrapper--non-searchable"));
      var value = this.getValue() || '';
      var valueLength = value != null && value.length;
      var size = valueLength ? valueLength + 1 : 1;
      var inputStyle = {};
      if (size === 1 && valueLength === 0) {
        inputStyle.width = 1;
      }
      if (maxWidth) {
        inputStyle.maxWidth = maxWidth;
      }
      return _react.default.createElement("span", _objectSpread(_objectSpread({}, (0, _cleanProps.default)(this.props, TextInput.propTypes)), {}, {
        onClick: onClick,
        className: className
      }), _react.default.createElement("input", {
        style: inputStyle,
        className: rootClassName,
        ref: function ref(_ref) {
          return _this3.inputNode = _ref;
        },
        type: "text",
        value: value || '',
        onChange: this.handleChange,
        onClick: this.onClick,
        tabIndex: this.props.tabIndex,
        onMouseDown: this.handleMouseDown,
        size: size
      }), !value && this.renderPlaceholder());
    }
  }, {
    key: "renderPlaceholder",
    value: function renderPlaceholder() {
      var _this4 = this;
      if (!this.props.placeholder) {
        return null;
      }
      var placeholderProps = {
        className: "".concat(this.props.rootClassName, "__placeholder")
      };
      return _react.default.createElement("span", _objectSpread(_objectSpread({}, placeholderProps), {}, {
        ref: function ref(_ref2) {
          return _this4.placeholderNode = _ref2;
        }
      }), this.props.placeholder);
    }
  }, {
    key: "getValue",
    value: function getValue() {
      var value = this.props.throttle ? this.state.value : this.props.value;
      return value;
    }
  }, {
    key: "focus",
    value: function focus() {
      if (this.inputNode && this.inputNode.focus) {
        this.inputNode.focus();
      }
    }
  }, {
    key: "blur",
    value: function blur() {
      if (this.inputNode && this.inputNode.blur) {
        this.inputNode.blur();
      }
    }
  }, {
    key: "hasFocus",
    value: function hasFocus() {
      var activeElement = globalObject && globalObject.document && globalObject.document.activeElement;
      return this.inputNode === activeElement;
    }
  }, {
    key: "handleChange",
    value: function handleChange(event) {
      var value = event.target.value;
      if (this.props.throttle) {
        this.setState({
          value: value
        });
        this.throttledUpdateValue(value);
      } else {
        this.updateValue(value);
      }
    }
  }, {
    key: "handleMouseDown",
    value: function handleMouseDown(event) {
      event.stopPropagation();
    }
  }, {
    key: "onClick",
    value: function onClick(event) {
      event.stopPropagation();
    }
  }, {
    key: "updateValue",
    value: function updateValue(value) {
      this.props.onChange(value);
    }
  }, {
    key: "selectForwardIfNecessary",
    value: function selectForwardIfNecessary() {
      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.value;
      if (!value || typeof value !== 'string') {
        return null;
      }
      var suggestion = this.props.suggestion;
      if (typeof suggestion !== 'string') {
        return null;
      }
      if (suggestion.toLowerCase().indexOf(value.toLowerCase()) === -1) {
        return null;
      }
      var firstPartLength = value.length;
      var inputNode = this.inputNode;
      this.inputNode.value = suggestion;
      this.inputNode.size = this.inputNode.value.length;
      this.inputNode.style.width = 'auto';
      (0, _setInputSelection.default)(inputNode, firstPartLength, suggestion.length);
      return true;
    }
  }, {
    key: "getSelectionStart",
    value: function getSelectionStart() {
      return (0, _getSelectionStart2.default)(this.inputNode);
    }
  }, {
    key: "getSelectionEnd",
    value: function getSelectionEnd() {
      return (0, _getSelectionEnd2.default)(this.inputNode);
    }
  }, {
    key: "hasSelection",
    value: function hasSelection() {
      return this.getSelectionStart() !== this.getSelectionEnd();
    }
  }, {
    key: "isCursorAtStartPosition",
    value: function isCursorAtStartPosition() {
      return this.getSelectionStart() === 0;
    }
  }, {
    key: "isCursorAtEndPosition",
    value: function isCursorAtEndPosition() {
      var cursorLastPissiblePosition = this.props.value && this.props.value.length;
      return (0, _getCursorPosition.default)(this.inputNode) === cursorLastPissiblePosition;
    }
  }]);
  return TextInput;
}(_react.Component);
function emptyFn() {}
TextInput.defaultProps = {
  onChange: emptyFn,
  value: '',
  autocomplete: true
};
TextInput.propTypes = {
  rootClassName: _propTypes.default.string,
  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.arrayOf(_propTypes.default.number)]),
  placeholder: _propTypes.default.node,
  onChange: _propTypes.default.func,
  maxWidth: _propTypes.default.number,
  throttle: _propTypes.default.number,
  tabIndex: _propTypes.default.number,
  autocomplete: _propTypes.default.bool,
  autocompleteDelay: _propTypes.default.number,
  visible: _propTypes.default.bool,
  suggestion: _propTypes.default.any,
  searchable: _propTypes.default.bool
};
var _default = TextInput;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/ToggleButton.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/ToggleButton.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _Icons = __webpack_require__(/*! ./Icons */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/Icons.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var ToggleButton = function ToggleButton(_ref) {
  var onToggle = _ref.onToggle,
    className = _ref.className,
    toggleIcon = _ref.toggleIcon,
    size = _ref.size,
    expanded = _ref.expanded;
  var toggleIconProps = {
    className: className,
    size: size,
    expanded: expanded,
    onClick: function onClick(event) {
      event.preventDefault();
      onToggle();
    }
  };
  var toggleButtonEl;
  if (toggleIcon) {
    var params = {
      onToggle: onToggle,
      expanded: expanded,
      domProps: toggleIconProps
    };
    toggleButtonEl = typeof toggleIcon === 'function' ? toggleIcon(params) : toggleIcon;
  }
  if (toggleButtonEl === true || toggleButtonEl == undefined) {
    toggleButtonEl = _react.default.createElement(_Icons.ToggleIcon, _objectSpread({}, toggleIconProps));
  }
  return toggleButtonEl;
};
ToggleButton.defaultProps = {
  size: 10
};
ToggleButton.propTypes = {
  expanded: _propTypes.default.bool,
  size: _propTypes.default.number
};
var _default = ToggleButton;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/Value.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/Value.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ./utils/join */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/join.js"));
var _ComboBox = __webpack_require__(/*! ./ComboBox */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/ComboBox.js");
var _Tag = _interopRequireDefault(__webpack_require__(/*! ./Tag */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/Tag.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var Value = function (_Component) {
  (0, _inherits2.default)(Value, _Component);
  var _super = _createSuper(Value);
  function Value(props) {
    var _this;
    (0, _classCallCheck2.default)(this, Value);
    _this = _super.call(this, props);
    _this.state = {
      size: null
    };
    return _this;
  }
  (0, _createClass2.default)(Value, [{
    key: "render",
    value: function render() {
      var props = this.props;
      var value = props.value,
        multiple = props.multiple,
        rootClassName = props.rootClassName,
        toolsSize = props.toolsSize,
        focus = props.focus,
        rtl = props.rtl,
        searchable = props.searchable,
        wrapMultiple = props.wrapMultiple,
        label = props.label;
      var showTags = value != null && multiple;
      var style = _objectSpread({}, props.style);
      if (toolsSize) {
        style.maxWidth = "calc(100% - ".concat(toolsSize.width, "px)");
      }
      var className = (0, _join.default)(rootClassName, wrapMultiple ? "".concat(rootClassName, "--wrap") : "".concat(rootClassName, "--no-wrap"), "".concat(rootClassName, "--").concat(rtl ? 'rtl' : 'ltr'));
      var isDisplayValueVisible = !showTags && !focus;
      if (!showTags && !searchable) {
        isDisplayValueVisible = true;
      }
      if (value == null) {
        isDisplayValueVisible = false;
      }
      var displayValue = isDisplayValueVisible ? this.renderDisplayValue() : null;
      return _react.default.createElement("div", {
        className: className,
        style: style
      }, showTags && this.renderTags(), displayValue, this.renderTextInput({
        isDisplayValueVisible: displayValue
      }));
    }
  }, {
    key: "renderTextInput",
    value: function renderTextInput(_ref) {
      var isDisplayValueVisible = _ref.isDisplayValueVisible;
      var textInput = this.props.textInput;
      if (!textInput) {
        return null;
      }
      if (textInput.type !== 'input') {
        return _react.default.cloneElement(textInput, _objectSpread(_objectSpread({}, textInput.props), {}, {
          visible: !isDisplayValueVisible && this.props.searchable
        }));
      }
      return textInput;
    }
  }, {
    key: "renderDisplayValue",
    value: function renderDisplayValue() {
      var _this$props = this.props,
        rootClassName = _this$props.rootClassName,
        label = _this$props.label,
        renderDisplayValue = _this$props.renderDisplayValue;
      var domProps = {
        className: "".concat(rootClassName, "__display-value"),
        children: label
      };
      var result = null;
      if (typeof renderDisplayValue === 'function') {
        result = renderDisplayValue({
          domProps: domProps,
          label: label
        });
      }
      if (result == null) {
        result = _react.default.createElement("div", _objectSpread({}, domProps));
      }
      return result;
    }
  }, {
    key: "renderTags",
    value: function renderTags() {
      var _this2 = this;
      var _this$props2 = this.props,
        renderTags = _this$props2.renderTags,
        value = _this$props2.value,
        items = _this$props2.items,
        groupedItems = _this$props2.groupedItems;
      if (!items) {
        return null;
      }
      var remainingItems;
      var visibleItems;
      if (groupedItems) {
        remainingItems = groupedItems.remainingItems;
        visibleItems = groupedItems.visibleItems;
      } else {
        visibleItems = items;
      }
      var remainingTags = remainingItems && this.renderTag(remainingItems, this.props.maxTagsLength, {
        visibleItems: visibleItems
      });
      var visibleTags = visibleItems && visibleItems.map(function (item, index) {
        return _this2.renderTag(item, index);
      });
      var tags = [].concat((0, _toConsumableArray2.default)(visibleTags), [remainingTags]);
      if (typeof renderTags === 'function') {
        tags = renderTags({
          tags: tags,
          items: items,
          value: value,
          visibleItems: visibleItems,
          remainingItems: remainingItems
        });
      }
      return tags;
    }
  }, {
    key: "renderTag",
    value: function renderTag(item, index) {
      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var items = this.props.items;
      if (!item) {
        return null;
      }
      var _this$props3 = this.props,
        rootClassName = _this$props3.rootClassName,
        renderTag = _this$props3.renderTag,
        activeTag = _this$props3.activeTag,
        maxTagsLength = _this$props3.maxTagsLength,
        renderTagLabel = _this$props3.renderTagLabel,
        renderRemainingTags = _this$props3.renderRemainingTags;
      var tagRootClassName = "".concat(rootClassName, "__tag");
      var isMultiple = Array.isArray(item);
      var active = isMultiple ? activeTag === _ComboBox.REMAINING_ITEMS : activeTag === item.id;
      var tagProps = _objectSpread(_objectSpread(_objectSpread({
        item: item,
        items: items,
        active: active,
        isMultiple: isMultiple,
        renderTagLabel: renderTagLabel,
        maxTagsLength: maxTagsLength,
        index: index,
        renderTag: renderTag
      }, config), this.props.tagProps), {}, {
        rootClassName: tagRootClassName,
        key: index
      });
      var tag;
      if (isMultiple && typeof renderRemainingTags === 'function') {
        tag = renderRemainingTags({
          remainingItems: item,
          visibleItems: config.visibleItems,
          domProps: tagProps
        });
      }
      if (tag === undefined) {
        tag = _react.default.createElement(_Tag.default, _objectSpread({}, tagProps));
      }
      return tag;
    }
  }]);
  return Value;
}(_react.Component);
Value.defaultProps = {
  tagProps: {},
  groupedItems: null,
  items: []
};
var VALUE_TYPE = _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.object, _propTypes.default.bool, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.object, _propTypes.default.bool]))]);
Value.propTypes = {
  size: _propTypes.default.shape({
    width: _propTypes.default.number,
    height: _propTypes.default.number
  }),
  focus: _propTypes.default.bool,
  items: _propTypes.default.array,
  item: _propTypes.default.object,
  groupedItems: _propTypes.default.shape({
    visibleItems: _propTypes.default.array,
    remainingItems: _propTypes.default.array
  }),
  renderTag: _propTypes.default.func,
  renderRemainingTags: _propTypes.default.func,
  renderTags: _propTypes.default.func,
  renderTagLabel: _propTypes.default.func,
  tagProps: _propTypes.default.object,
  maxTagsLength: _propTypes.default.number,
  rootClassName: _propTypes.default.string,
  multiple: _propTypes.default.bool,
  textInput: _propTypes.default.node,
  value: VALUE_TYPE
};
var _default = Value;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/index.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _ComboBox = _interopRequireDefault(__webpack_require__(/*! ./ComboBox */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/ComboBox.js"));
var _default = _ComboBox.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/deselectValue.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/deselectValue.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js"));
function deselectValue(_ref) {
  var id = _ref.id,
    value = _ref.value,
    _ref$getIdProperty = _ref.getIdProperty,
    getIdProperty = _ref$getIdProperty === void 0 ? function (item) {
      return item && item.id;
    } : _ref$getIdProperty;
  var newValue;
  var singleValueId = (0, _typeof2.default)(value) === 'object' ? getIdProperty(value) : value;
  if (id === singleValueId || singleValueId === null) {
    newValue = null;
  }
  if (Array.isArray(value)) {
    newValue = value.filter(function (value) {
      var valueId = (0, _typeof2.default)(value) === 'object' ? getIdProperty(value) : value;
      return valueId !== id;
    });
    if (!newValue.length) {
      newValue = null;
    }
  }
  return newValue;
}
var _default = deselectValue;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/filterByText.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/filterByText.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _hightlightText = _interopRequireDefault(__webpack_require__(/*! ./hightlightText */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/hightlightText.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var defaultFilterFunction = function defaultFilterFunction(_ref) {
  var label = _ref.label,
    text = _ref.text,
    mode = _ref.mode;
  label = label.toLowerCase ? label.toLowerCase() : "".concat(label);
  text = text.toLowerCase ? text.toLowerCase() : "".concat(text);
  return mode === 'contains' ? label.indexOf(text) !== -1 : label.startsWith(text);
};
function filterByText(_ref2) {
  var data = _ref2.data,
    getFilterProperty = _ref2.getFilterProperty,
    text = _ref2.text,
    _ref2$filterFunction = _ref2.filterFunction,
    filterFunction = _ref2$filterFunction === void 0 ? defaultFilterFunction : _ref2$filterFunction,
    _ref2$mode = _ref2.mode,
    mode = _ref2$mode === void 0 ? 'contains' : _ref2$mode,
    hightlight = _ref2.hightlight;
  if (!Array.isArray(data)) {
    return null;
  }
  var filteredData = data.reduce(function (acc, item) {
    var label = getFilterProperty(item);
    var match = filterFunction({
      label: label,
      text: text,
      item: item,
      mode: mode
    });
    if (match) {
      if (hightlight) {
        var newItem = _objectSpread(_objectSpread({}, item), {}, {
          mode: mode,
          matchText: (0, _hightlightText.default)({
            queryText: text,
            text: label
          })
        });
        acc.push(newItem);
      } else {
        acc.push(item);
      }
    }
    return acc;
  }, []);
  return filteredData;
}
var _default = filterByText;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/filterByValue.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/filterByValue.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _isSelected = _interopRequireDefault(__webpack_require__(/*! ./isSelected */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/isSelected.js"));
function filterByValue(_ref) {
  var data = _ref.data,
    getIdProperty = _ref.getIdProperty,
    value = _ref.value;
  return data.filter(function (item) {
    var id = getIdProperty(item);
    return !(0, _isSelected.default)({
      id: id,
      value: value
    });
  });
}
var _default = filterByValue;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/findItemIndex.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/findItemIndex.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
function findItemIndex(_ref) {
  var id = _ref.id,
    data = _ref.data,
    getIdProperty = _ref.getIdProperty;
  if (!Array.isArray(data) || !getIdProperty || id == null) {
    return null;
  }
  var filteredList = data.reduce(function (acc, item, index) {
    if (getIdProperty(item) === id) {
      acc = index;
    }
    return acc;
  }, null);
  return filteredList !== null ? filteredList : null;
}
var _default = findItemIndex;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getCursorPosition.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getCursorPosition.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
function getCursorPosition(field) {
  var cursorPosition = 0;
  if (document.selection) {
    field.focus();
    var oSel = document.selection.createRange();
    oSel.moveStart('character', -field.value.length);
    cursorPosition = oSel.text.length;
  } else if (field.selectionStart || field.selectionStart == '0') {
    cursorPosition = field.selectionStart;
  }
  return cursorPosition;
}
var _default = getCursorPosition;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getDataProp.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getDataProp.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var getDataProp = function getDataProp(propName) {
  if (propName == null) {
    return null;
  }
  return function (item) {
    if (!item) {
      return null;
    }
    return typeof propName === 'function' ? propName(item) : item[propName];
  };
};
var _default = getDataProp;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getGroups.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getGroups.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
function getGroups(data) {
  var groupProperty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'group';
  var groupsConfig = data.reduce(function (acc, item, index) {
    var groupTitle = item[groupProperty];
    var currentGroup = acc.groups[acc.currentGroup];
    if (groupTitle && groupTitle !== (currentGroup && currentGroup.title)) {
      var newGroup = {
        title: groupTitle,
        indexAjustment: acc.indexAjustment + 1
      };
      var groupIndex = index + acc.indexAjustment;
      acc.groups[groupIndex] = newGroup;
      acc.currentGroup = groupIndex;
      acc.indexAjustment += 1;
    }
    return acc;
  }, {
    groups: {},
    currentGroup: 0,
    indexAjustment: 0
  });
  return groupsConfig.groups;
}
var _default = getGroups;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getListProps.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getListProps.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function getListProps(_ref) {
  var props = _ref.props,
    _ref$state = _ref.state,
    state = _ref$state === void 0 ? {} : _ref$state,
    computed = _ref.computed;
  return _objectSpread(_objectSpread({}, computed), {}, {
    style: props.listStyle,
    relativeToViewport: props.relativeToViewport,
    virtualListFactory: props.virtualListFactory,
    renderListScroller: props.renderListScroller,
    renderVirtualList: props.renderVirtualList,
    className: props.listClassName,
    rootClassName: "".concat(props.rootClassName, "__list"),
    emptyText: props.listEmptyText,
    maxHeight: props.listMaxHeight,
    minHeight: props.listMinHeight,
    positions: props.positions,
    constrainTo: props.constrainTo,
    offset: props.offset,
    rtl: props.rtl,
    theme: props.theme,
    highlightFirst: props.highlightFirst,
    loadingText: props.listLoadingText,
    groups: state.groups,
    renderGroup: props.renderGroup,
    renderFooter: props.renderFooter,
    renderHeader: props.renderHeader,
    renderItem: props.renderItem,
    itemEllipsis: props.itemEllipsis,
    activeItemIndex: state.activeItemIndex,
    newCustomTagText: props.newCustomTagText,
    autoPosition: props.autoPosition,
    itemProps: {
      background: props.itemBackground,
      disabledStyle: props.disabledItemStyle,
      disabledClassName: props.disabledItemClassName,
      activeStyle: props.activeItemStyle,
      activeClassName: props.activeItemClassName,
      selectedStyle: props.selectedStyle,
      selectedClassName: props.selectedClassName
    }
  });
}
var _default = getListProps;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getMinMaxSize.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getMinMaxSize.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js"));
function getMinMaxSize(props) {
  var sizeType;
  var single;
  var style = props.style || {};
  var result = {};
  if (props.minSize) {
    sizeType = (0, _typeof2.default)(props.minSize);
    single = sizeType == 'number' || sizeType == 'string';
    if (single) {
      result.minWidth = props.minSize;
      result.minHeight = props.minSize;
    } else {
      if (props.minSize.width) {
        result.minWidth = props.minSize.width;
      }
      if (props.minSize.height) {
        result.minHeight = props.minSize.height;
      }
    }
  }
  if (props.maxSize) {
    sizeType = (0, _typeof2.default)(props.maxSize);
    single = sizeType == 'number' || sizeType == 'string';
    if (single) {
      result.maxWidth = props.maxSize;
      result.maxHeight = props.maxSize;
    } else {
      if (props.maxSize.width) {
        result.maxWidth = props.maxSize.width;
      }
      if (props.maxSize.height) {
        result.maxHeight = props.maxSize.height;
      }
    }
  }
  if (result.minWidth == undefined && style.minWidth != undefined) {
    result.minWidth = style.minWidth;
  }
  if (result.maxWidth == undefined && style.maxWidth != undefined) {
    result.maxWidth = style.maxWidth;
  }
  if (result.minHeight == undefined && style.minHeight != undefined) {
    result.minHeight = style.minHeight;
  }
  if (result.maxHeight == undefined && style.maxHeight != undefined) {
    result.maxHeight = style.maxHeight;
  }
  return result;
}
var _default = getMinMaxSize;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getNewActiveTagOnRemove.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getNewActiveTagOnRemove.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _clamp = _interopRequireDefault(__webpack_require__(/*! ../../../../common/clamp */ "./node_modules/@inovua/reactdatagrid-community/common/clamp.js"));
function getNewActiveTagOnRemove(_ref) {
  var id = _ref.id,
    value = _ref.value,
    dir = _ref.dir;
  dir = dir || -1;
  if (!Array.isArray(value) || value.length === 1) {
    return null;
  }
  var newActiveTag = null;
  var currentIndex = value.indexOf(id);
  var lastIndex = value.length - 1;
  var newIndex = (0, _clamp.default)(currentIndex + dir, 0, lastIndex);
  if (dir == 1 && currentIndex === lastIndex) {
    newIndex = (0, _clamp.default)(currentIndex - 1, 0, lastIndex);
  }
  if (dir == -1 && currentIndex == 0 && lastIndex > 0) {
    newIndex = 1;
  }
  newActiveTag = value[newIndex];
  return newActiveTag;
}
var _default = getNewActiveTagOnRemove;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getNewMultipleValue.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getNewMultipleValue.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
function getNewMultipleValue(_ref) {
  var id = _ref.id,
    value = _ref.value;
  var newValue;
  var isArray = Array.isArray(value);
  var hasValue = isArray && value.indexOf(id) !== -1;
  if (hasValue) {
    newValue = value.filter(function (itemId) {
      return itemId !== id;
    });
    newValue = newValue.length ? newValue : null;
  } else {
    newValue = isArray ? [].concat((0, _toConsumableArray2.default)(value), [id]) : [id];
  }
  return newValue;
}
var _default = getNewMultipleValue;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getNewSingleValue.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getNewSingleValue.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
function getNewSingleValue(_ref) {
  var id = _ref.id,
    value = _ref.value,
    _ref$toggle = _ref.toggle,
    toggle = _ref$toggle === void 0 ? true : _ref$toggle;
  if (value == null) {
    return id;
  }
  if (toggle) {
    return id === value ? null : id;
  }
  return id;
}
var _default = getNewSingleValue;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getNextItem.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getNextItem.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _findItemIndex = _interopRequireDefault(__webpack_require__(/*! ./findItemIndex */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/findItemIndex.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function getNextItem(config) {
  var data = config.data,
    id = config.id,
    getIdProperty = config.getIdProperty,
    _config$direction = config.direction,
    direction = _config$direction === void 0 ? 1 : _config$direction;
  if (!Array.isArray(data) || !data.length || !getIdProperty || id == null) {
    return null;
  }
  if (data.length === 1) {
    return id;
  }
  var enabledItems = data.filter(function (item) {
    return !item.disabled;
  });
  if (enabledItems.length === 0) {
    return null;
  }
  var currentIndex = (0, _findItemIndex.default)({
    data: data,
    id: id,
    getIdProperty: getIdProperty
  });
  var nextIndex;
  if (direction === 1) {
    nextIndex = currentIndex + 1;
    nextIndex = nextIndex > data.length - 1 ? 0 : nextIndex;
  } else {
    nextIndex = currentIndex - 1;
    nextIndex = nextIndex >= 0 ? nextIndex : data.length - 1;
  }
  var newItem = data[nextIndex];
  var newActiveId = getIdProperty(newItem);
  if (newItem.disabled) {
    newActiveId = getNextItem(_objectSpread(_objectSpread({}, config), {}, {
      id: newActiveId
    }));
  }
  return newActiveId;
}
var _default = getNextItem;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getRootClassName.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getRootClassName.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _join = _interopRequireDefault(__webpack_require__(/*! ./join */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/join.js"));
function getRootClassName(_ref) {
  var _ref$props = _ref.props,
    props = _ref$props === void 0 ? {} : _ref$props,
    _ref$state = _ref.state,
    state = _ref$state === void 0 ? {} : _ref$state,
    _ref$computed = _ref.computed,
    computed = _ref$computed === void 0 ? {} : _ref$computed;
  var rootClassName = props.rootClassName,
    className = props.className,
    rtl = props.rtl,
    shadow = props.shadow,
    showShadowOnMouseOver = props.showShadowOnMouseOver,
    disabled = props.disabled,
    readOnly = props.readOnly,
    emptyClassName = props.emptyClassName,
    disabledClassName = props.disabledClassName,
    focusedClassName = props.focusedClassName,
    inlineFlex = props.inlineFlex,
    multiple = props.multiple,
    theme = props.theme;
  var over = state.over,
    focus = state.focus;
  var value = computed.value;
  var showShadow = showShadowOnMouseOver ? over && shadow : shadow;
  return (0, _join.default)(rootClassName, className, rtl ? "".concat(rootClassName, "--rtl") : "".concat(rootClassName, "--ltr"), showShadow && "".concat(rootClassName, "--shadow"), multiple && "".concat(rootClassName, "--multiple"), disabled && "".concat(rootClassName, "--disabled"), readOnly && "".concat(rootClassName, "--readOnly"), theme && "".concat(rootClassName, "--theme-").concat(theme), inlineFlex && "".concat(rootClassName, "--inlineFlex"), focus && "".concat(rootClassName, "--focus"), !value && emptyClassName, disabled && disabledClassName, focus && focusedClassName);
}
var _default = getRootClassName;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getSelectionEnd.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getSelectionEnd.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _getGlobal = __webpack_require__(/*! ../../../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
var globalObject = (0, _getGlobal.getGlobal)();
function getSelectionEnd(input) {
  if (!input) {
    return null;
  }
  var document = globalObject.document;
  if (input.createTextRange && !globalObject.getSelection) {
    var range = document.selection.crangeeateRange().duplicate();
    range.moveStart('character', -input.value.length);
    return range.text.length;
  }
  return input.selectionEnd;
}
var _default = getSelectionEnd;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getSelectionStart.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getSelectionStart.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _getGlobal = __webpack_require__(/*! ../../../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
var globalObject = (0, _getGlobal.getGlobal)();
function getSelectionStart(input) {
  if (!input) {
    return null;
  }
  if (input.createTextRange && !globalObject.getSelection) {
    var document = globalObject.document;
    var range = document.selection.createRange().duplicate();
    range.moveEnd('character', input.value.length);
    if (range.text == '') {
      return input.value.length;
    }
    return input.value.lastIndexOf(range.text);
  }
  return input.selectionStart;
}
var _default = getSelectionStart;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getValueMap.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getValueMap.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var contains = function contains(stack, needle) {
  for (var i = 0; i < stack.length; i++) {
    if (stack[i] == needle) {
      return true;
    }
  }
  return false;
};
function getValueMap(_ref) {
  var value = _ref.value,
    dataMap = _ref.dataMap,
    oldValueMap = _ref.oldValueMap;
  if (value == null) {
    return oldValueMap;
  }
  var valueMap = _objectSpread({}, oldValueMap);
  value = Array.isArray(value) ? value : [value];
  valueMap = Object.keys(valueMap).reduce(function (acc, id) {
    if (contains(value, id)) {
      acc[id] = valueMap[id];
    }
    return acc;
  }, {});
  value.forEach(function (id) {
    if (dataMap && dataMap[id]) {
      valueMap[id] = dataMap[id];
    }
  });
  return valueMap;
}
var _default = getValueMap;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getValueProps.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getValueProps.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function getValueProps(_ref) {
  var _objectSpread2;
  var state = _ref.state,
    props = _ref.props,
    computed = _ref.computed,
    tagProps = _ref.tagProps;
  var multiple = props.multiple,
    renderTag = props.renderTag,
    renderTags = props.renderTags,
    tagBorder = props.tagBorder,
    tagStyle = props.tagStyle,
    tagPadding = props.tagPadding,
    tagHeight = props.tagHeight,
    tagWidth = props.tagWidth,
    tagMinSize = props.tagMinSize,
    tagMaxSize = props.tagMaxSize,
    wrapMultiple = props.wrapMultiple,
    tagCloseIcon = props.tagCloseIcon,
    tagCloseIconPosition = props.tagCloseIconPosition,
    maxTagsLength = props.maxTagsLength,
    rtl = props.rtl,
    renderRemainingTags = props.renderRemainingTags,
    renderDisplayValue = props.renderDisplayValue,
    searchable = props.searchable,
    renderTagLabel = props.renderTagLabel;
  var focus = state.focus;
  var rootClassName = "".concat(props.rootClassName, "__value");
  tagProps = _objectSpread(_objectSpread({}, tagProps), {}, {
    closeIcon: tagCloseIcon,
    border: tagBorder,
    style: tagStyle,
    padding: tagPadding,
    height: tagHeight,
    width: tagWidth,
    minSize: tagMinSize,
    maxSize: tagMaxSize,
    closeIconPosition: tagCloseIconPosition,
    ellipsis: props.tagEllipsis
  });
  var valueProps = _objectSpread((_objectSpread2 = {
    renderTagLabel: renderTagLabel,
    multiple: multiple,
    searchable: searchable,
    rootClassName: rootClassName,
    renderTag: renderTag,
    renderRemainingTags: renderRemainingTags,
    renderTags: renderTags,
    tagProps: tagProps,
    wrapMultiple: wrapMultiple,
    maxTagsLength: maxTagsLength,
    focus: focus
  }, (0, _defineProperty2.default)(_objectSpread2, "maxTagsLength", maxTagsLength), (0, _defineProperty2.default)(_objectSpread2, "rtl", rtl), (0, _defineProperty2.default)(_objectSpread2, "renderDisplayValue", renderDisplayValue), _objectSpread2), computed);
  return valueProps;
}
var _default = getValueProps;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/groupItems.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/groupItems.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
function groupItems(_ref) {
  var items = _ref.items,
    maxTagsLength = _ref.maxTagsLength;
  var visibleItems = items;
  var remainingItems = null;
  if (items.length > maxTagsLength) {
    var cutFrom = maxTagsLength;
    remainingItems = items.slice(cutFrom);
    visibleItems = items.slice(0, cutFrom);
  }
  return {
    visibleItems: visibleItems,
    remainingItems: remainingItems
  };
}
var _default = groupItems;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/hightlightText.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/hightlightText.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
function hightlightText(_ref) {
  var queryText = _ref.queryText,
    text = _ref.text,
    _ref$mode = _ref.mode,
    mode = _ref$mode === void 0 ? 'contains' : _ref$mode;
  var regex = mode === 'contains' ? new RegExp(queryText, 'gi') : new RegExp("^".concat(queryText), 'gi');
  var matchText = [];
  var searchQueryLen = queryText.length;
  var localMatch;
  var previousLocalMatch;
  while ((localMatch = regex.exec(text)) !== null) {
    var index = localMatch.index;
    var previousSegmentIndex = previousLocalMatch ? previousLocalMatch.index + searchQueryLen : 0;
    matchText.push(text.slice(previousSegmentIndex, index));
    matchText.push({
      match: text.slice(localMatch.index, localMatch.index + searchQueryLen)
    });
    previousLocalMatch = localMatch;
  }
  matchText.push(text.slice(previousLocalMatch.index + searchQueryLen));
  matchText = matchText.filter(function (match) {
    return match;
  });
  return matchText;
}
var _default = hightlightText;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/isSelected.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/isSelected.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
function isSelected(_ref) {
  var id = _ref.id,
    value = _ref.value;
  if (Array.isArray(value)) {
    return value.indexOf(id) !== -1;
  }
  return id === value;
}
var _default = isSelected;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/join.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/join.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = _default;
var notEmpty = function notEmpty(x) {
  return !!x;
};
function _default() {
  return [].slice.call(arguments).filter(notEmpty).join(' ');
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/setInputSelection.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/setInputSelection.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
function setInputSelection(input, startPos, endPos) {
  if (input.selectionStart !== undefined) {
    input.selectionStart = startPos;
    input.selectionEnd = endPos;
  } else if (document.selection && document.selection.createRange) {
    input.select();
    var range = document.selection.createRange();
    range.collapse(true);
    range.moveEnd('character', endPos);
    range.moveStart('character', startPos);
    range.select();
  }
}
var _default = setInputSelection;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/shouldComponentUpdate.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/shouldComponentUpdate.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _shallowequal = _interopRequireDefault(__webpack_require__(/*! ../../../../common/shallowequal */ "./node_modules/@inovua/reactdatagrid-community/common/shallowequal.js"));
var _default = function _default(inst, nextProps, nextState) {
  var props = inst.props;
  var state = inst.state;
  if (nextProps.shouldComponentUpdate) {
    return nextProps.shouldComponentUpdate({
      nextProps: nextProps,
      props: props,
      nextState: nextState,
      state: state
    });
  }
  return !(0, _shallowequal.default)(nextProps, props) || !(0, _shallowequal.default)(nextState, state);
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/DropdownButton/index.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/DropdownButton/index.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _src = _interopRequireDefault(__webpack_require__(/*! ./src */ "./node_modules/@inovua/reactdatagrid-community/packages/DropdownButton/src/index.js"));
var _default = _src.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/DropdownButton/src/DropdownButton.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/DropdownButton/src/DropdownButton.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _regionAlign = _interopRequireDefault(__webpack_require__(/*! ../../../packages/region-align */ "./node_modules/@inovua/reactdatagrid-community/packages/region-align/index.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _Menu = _interopRequireDefault(__webpack_require__(/*! ../../Menu */ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/index.js"));
var _Button = _interopRequireDefault(__webpack_require__(/*! ../../Button */ "./node_modules/@inovua/reactdatagrid-community/packages/Button/index.js"));
var _ToggleIcon = _interopRequireDefault(__webpack_require__(/*! ../../../common/ToggleIcon */ "./node_modules/@inovua/reactdatagrid-community/common/ToggleIcon.js"));
var _cleanProps = _interopRequireDefault(__webpack_require__(/*! ../../../common/cleanProps */ "./node_modules/@inovua/reactdatagrid-community/common/cleanProps.js"));
var _containsNode = _interopRequireDefault(__webpack_require__(/*! ../../../common/containsNode */ "./node_modules/@inovua/reactdatagrid-community/common/containsNode.js"));
var _getGlobal = __webpack_require__(/*! ../../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var globalObject = (0, _getGlobal.getGlobal)();
var ALIGN_OFFSET = {
  top: 5
};
var returnFalse = function returnFalse() {
  return false;
};
var InovuaDropDownButton = function (_Component) {
  (0, _inherits2.default)(InovuaDropDownButton, _Component);
  var _super = _createSuper(InovuaDropDownButton);
  function InovuaDropDownButton(props) {
    var _this;
    (0, _classCallCheck2.default)(this, InovuaDropDownButton);
    _this = _super.call(this, props);
    _this.state = {
      expanded: props.defaultExpanded,
      focused: false
    };
    _this.handleClick = _this.handleClick.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleFocus = _this.handleFocus.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleBlur = _this.handleBlur.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleKeyDown = _this.handleKeyDown.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleClickOutside = _this.handleClickOutside.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleWindowScroll = _this.handleWindowScroll.bind((0, _assertThisInitialized2.default)(_this));
    _this.onMenuDismiss = _this.onMenuDismiss.bind((0, _assertThisInitialized2.default)(_this));
    _this.rootRef = function (ref) {
      _this.rootNode = ref;
    };
    return _this;
  }
  (0, _createClass2.default)(InovuaDropDownButton, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps, nextState) {
      if (nextProps.shouldComponentUpdate) {
        return nextProps.shouldComponentUpdate(nextProps, nextState, this);
      }
      return true;
    }
  }, {
    key: "onMenuDismiss",
    value: function onMenuDismiss() {
      this.props.onDismiss();
    }
  }, {
    key: "handleKeyDown",
    value: function handleKeyDown(event) {
      var key = event.key;
      if (this.props.hideMenuOnEscape && this.getExpanded()) {
        this.collapse();
        event.preventDefault();
      }
      if (this.props.onKeyDown) {
        this.props.onKeyDown(event);
      }
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      this.updateComponentReferenceRegion();
      if (this.props.dismissOnScroll) {
        window.addEventListener('scroll', this.handleWindowScroll, {
          capture: true
        });
        window.addEventListener('scroll', this.handleWindowScroll, {
          capture: false
        });
      }
      globalObject.addEventListener('click', this.handleClickOutside);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      globalObject.removeEventListener('click', this.handleClickOutside);
      globalObject.removeEventListener('scroll', this.handleWindowScroll, {
        capture: true
      });
      globalObject.removeEventListener('scroll', this.handleWindowScroll, {
        capture: false
      });
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.props;
      var className = (0, _join.default)(props.rootClassName, props.className, props.theme && "".concat(props.rootClassName, "--theme-").concat(props.theme), this.state.focused && "".concat(props.rootClassName, "--focused"), props.disabled && "".concat(props.rootClassName, "--disabled"), this.getExpanded() && "".concat(props.rootClassName, "--expanded"), props.rtl ? "".concat(props.rootClassName, "--rtl") : "".concat(props.rootClassName, "--ltr"));
      return _react.default.createElement("div", _objectSpread(_objectSpread({}, (0, _cleanProps.default)(props, InovuaDropDownButton.propTypes)), {}, {
        ref: this.rootRef,
        className: className
      }), this.renderButton(), this.renderMenu());
    }
  }, {
    key: "renderButton",
    value: function renderButton() {
      var _objectSpread2;
      var props = this.props;
      var className = "".concat(props.rootClassName, "__button");
      var buttonProps = _objectSpread(_objectSpread(_objectSpread({}, this.getCommonProps()), {}, {
        key: 'button',
        iconPosition: this.props.iconPosition || this.props.arrowPosition,
        style: _objectSpread({}, props.buttonProps)
      }, props.buttonProps), {}, (_objectSpread2 = {
        className: className,
        icon: props.icon,
        disabled: props.disabled,
        onClick: this.handleClick,
        rtl: props.rtl,
        onFocus: this.handleFocus,
        onBlur: this.handleBlur,
        onKeyDown: this.handleKeyDown
      }, (0, _defineProperty2.default)(_objectSpread2, "icon", [props.icon && props.icon.type ? (0, _react.cloneElement)(props.icon, {
        key: 'inovua-ddbuttonicon'
      }) : props.icon, this.renderArrow()]), (0, _defineProperty2.default)(_objectSpread2, "children", props.children), (0, _defineProperty2.default)(_objectSpread2, "tagName", 'div'), _objectSpread2));
      var result;
      if (typeof props.renderButton === 'function') {
        result = props.renderButton(buttonProps);
      }
      if (result === undefined) {
        result = _react.default.createElement(_Button.default, _objectSpread({}, buttonProps));
      }
      return result;
    }
  }, {
    key: "handleClick",
    value: function handleClick(event) {
      if (this.props.hideMenuOnClick) {
        this.toggle();
      } else {
        this.expand();
      }
      this.props.onClick(event);
    }
  }, {
    key: "handleFocus",
    value: function handleFocus(event) {
      if (this.props.disabled) {
        return;
      }
      this.setState({
        focused: true
      });
      this.props.onFocus(event);
    }
  }, {
    key: "handleBlur",
    value: function handleBlur(event) {
      if (this.props.disabled) {
        return;
      }
      this.setState({
        focused: false
      });
      this.props.onBlur(event);
    }
  }, {
    key: "expand",
    value: function expand() {
      this.setExpanded(true);
    }
  }, {
    key: "collapse",
    value: function collapse() {
      this.setExpanded(false);
    }
  }, {
    key: "toggle",
    value: function toggle() {
      var expanded = this.getExpanded();
      this.setExpanded(!expanded);
    }
  }, {
    key: "isExpandedControlled",
    value: function isExpandedControlled() {
      return this.props.expanded != undefined;
    }
  }, {
    key: "setExpanded",
    value: function setExpanded(expanded) {
      if (expanded === this.getExpanded()) {
        return null;
      }
      if (!this.isExpandedControlled()) {
        this.setState({
          expanded: expanded
        });
        this.updateComponentReferenceRegion();
      }
      if (!expanded) {
        this.props.onDismiss();
      }
      this.props.onExpandedChange(expanded);
    }
  }, {
    key: "getExpanded",
    value: function getExpanded() {
      return this.isExpandedControlled() ? this.props.expanded : this.state.expanded;
    }
  }, {
    key: "updateComponentReferenceRegion",
    value: function updateComponentReferenceRegion() {
      var node = this.props.getAlignNode ? this.props.getAlignNode() : this.rootNode;
      if (!node) {
        return null;
      }
      var referenceRegion = _regionAlign.default.from(node);
      this.setState({
        referenceRegion: referenceRegion
      });
    }
  }, {
    key: "renderMenu",
    value: function renderMenu() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;
      var expanded = this.getExpanded();
      if (!expanded && !this.props.renderMenuWhenCollapsed) {
        return;
      }
      if (!props.items || !props.items.length) {
        return null;
      }
      var style = _objectSpread({}, props.menuProps.style);
      if (!expanded) {
        style.display = 'none';
      }
      var menuProps = _objectSpread(_objectSpread(_objectSpread({}, this.getCommonProps()), {}, {
        key: 'menu',
        items: props.items,
        alignOffset: ALIGN_OFFSET,
        constrainTo: props.constrainTo
      }, props.menuProps), {}, {
        alignTo: this.state.referenceRegion,
        alignPositions: props.alignPositions,
        onChildClick: props.onMenuClick,
        rtl: props.rtl,
        style: style,
        visible: expanded,
        theme: 'default-light',
        className: "".concat(props.rootClassName, "__menu"),
        onDismiss: this.onMenuDismiss
      });
      if (!expanded && !this.prevExpanded && this.props.optimizeMenuSCUWhenCollapsed) {
        menuProps.shouldComponentUpdate = returnFalse;
      }
      this.prevExpanded = expanded;
      var MenuComp = this.props.menu ? this.props.menu : _Menu.default;
      if (!MenuComp) {
        return null;
      }
      var result;
      if (typeof props.renderMenu === 'function') {
        result = props.renderMenu(menuProps);
      }
      if (result === undefined) {
        result = _react.default.createElement(MenuComp, _objectSpread({}, menuProps));
      }
      return result;
    }
  }, {
    key: "renderArrow",
    value: function renderArrow() {
      var props = this.props;
      var result = null;
      if (props.arrow !== true) {
        if (typeof props.arrow === 'function') {
          result = props.arrow(this.getExpanded());
        } else {
          result = props.arrow;
        }
      }
      if (result === null) {
        result = _react.default.createElement(_ToggleIcon.default, {
          key: "icon",
          className: "".concat(props.rootClassName, "__arrow"),
          expanded: this.getExpanded()
        });
      }
      return result;
    }
  }, {
    key: "getCommonProps",
    value: function getCommonProps() {
      var props = this.props;
      return {
        theme: props.theme
      };
    }
  }, {
    key: "handleClickOutside",
    value: function handleClickOutside(event) {
      var node = this.rootNode;
      var target = event.target;
      if (!node || !target) {
        return null;
      }
      if (node !== target && !node.contains(target)) {
        if (this.props.hideMenuOnClickOutside) {
          this.collapse();
        }
      }
    }
  }, {
    key: "handleWindowScroll",
    value: function handleWindowScroll(event) {
      if (this.getExpanded() && !(0, _containsNode.default)(this.rootNode, event.target)) {
        this.setExpanded(false);
      }
    }
  }]);
  return InovuaDropDownButton;
}(_react.Component);
function emptyFn() {}
InovuaDropDownButton.defaultProps = {
  rootClassName: 'inovua-react-toolkit-dropdown-button',
  theme: 'default-light',
  menuProps: {},
  rtl: false,
  menu: null,
  alignPositions: ['tl-bl', 'tr-br', 'bl-tl', 'br-tr', 'tl-tr', 'bl-br', 'tr-tl', 'tr-br'],
  arrow: true,
  arrowPosition: 'end',
  constrainTo: true,
  disabled: false,
  hideMenuOnClick: true,
  hideMenuOnClickOutside: true,
  hideMenuOnEscape: true,
  onExpandedChange: emptyFn,
  onMenuClick: emptyFn,
  optimizeMenuSCUWhenCollapsed: false,
  onClick: emptyFn,
  onFocus: emptyFn,
  onBlur: emptyFn,
  onDismiss: emptyFn,
  defaultExpanded: false,
  dismissOnScroll: false,
  isInovuaButton: true
};
InovuaDropDownButton.propTypes = {
  theme: _propTypes.default.string,
  rtl: _propTypes.default.bool,
  dismissOnScroll: _propTypes.default.bool,
  icon: _propTypes.default.node,
  iconPosition: _propTypes.default.oneOf(['left', 'right', 'start', 'end']),
  rootClassName: _propTypes.default.string,
  menuProps: _propTypes.default.object,
  buttonProps: _propTypes.default.object,
  disabled: _propTypes.default.bool,
  menu: _propTypes.default.func,
  arrow: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.bool, _propTypes.default.func]),
  alignPositions: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.arrayOf(_propTypes.default.string)]),
  onDismiss: _propTypes.default.func,
  arrowPosition: _propTypes.default.oneOf(['left', 'right', 'start', 'end']),
  hideMenuOnClick: _propTypes.default.bool,
  hideMenuOnEscape: _propTypes.default.bool,
  hideMenuOnClickOutside: _propTypes.default.bool,
  renderMenuWhenCollapsed: _propTypes.default.bool,
  optimizeMenuSCUWhenCollapsed: _propTypes.default.bool,
  onExpandedChange: _propTypes.default.func,
  onMenuClick: _propTypes.default.func,
  onClick: _propTypes.default.func,
  getAlignNode: _propTypes.default.func,
  constrainTo: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string, _propTypes.default.bool, _propTypes.default.func]),
  items: _propTypes.default.array,
  expanded: _propTypes.default.bool,
  defaultExpanded: _propTypes.default.bool,
  pressed: _propTypes.default.bool,
  renderMenu: _propTypes.default.func,
  renderButton: _propTypes.default.func,
  isInovuaButton: _propTypes.default.bool
};
var _default = InovuaDropDownButton;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/DropdownButton/src/index.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/DropdownButton/src/index.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _DropdownButton = _interopRequireDefault(__webpack_require__(/*! ./DropdownButton */ "./node_modules/@inovua/reactdatagrid-community/packages/DropdownButton/src/DropdownButton.js"));
var _default = _DropdownButton.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Field/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Field/index.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _src = _interopRequireDefault(__webpack_require__(/*! ./src */ "./node_modules/@inovua/reactdatagrid-community/packages/Field/src/index.js"));
var _default = _src.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Field/src/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Field/src/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var InovuaField = function (_Component) {
  (0, _inherits2.default)(InovuaField, _Component);
  var _super = _createSuper(InovuaField);
  function InovuaField(props) {
    var _this;
    (0, _classCallCheck2.default)(this, InovuaField);
    _this = _super.call(this, props);
    _this.ref = function (ref) {
      _this.input = ref;
    };
    _this.onChange = _this.onChange.bind((0, _assertThisInitialized2.default)(_this));
    return _this;
  }
  (0, _createClass2.default)(InovuaField, [{
    key: "render",
    value: function render() {
      var inputProps = _objectSpread({}, this.props);
      delete inputProps.stopChangePropagation;
      return _react.default.createElement("input", _objectSpread(_objectSpread({}, inputProps), {}, {
        onChange: this.onChange,
        ref: this.ref
      }));
    }
  }, {
    key: "focus",
    value: function focus() {
      if (this.input) {
        this.input.focus();
      }
    }
  }, {
    key: "onChange",
    value: function onChange(event) {
      if (this.props.stopChangePropagation) {
        event.stopPropagation();
      }
      this.props.onChange(event.target.value, event);
    }
  }, {
    key: "getNode",
    value: function getNode() {
      return this.input;
    }
  }]);
  return InovuaField;
}(_react.Component);
InovuaField.propTypes = {
  type: _propTypes.default.string,
  stopChangePropagation: _propTypes.default.bool
};
InovuaField.defaultProps = {
  stopChangePropagation: true,
  onChange: function onChange() {},
  type: 'text'
};
var _default = InovuaField;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Flex/index.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "Flex", ({
  enumerable: true,
  get: function get() {
    return _src.Flex;
  }
}));
Object.defineProperty(exports, "Item", ({
  enumerable: true,
  get: function get() {
    return _src.Item;
  }
}));
exports["default"] = void 0;
var _src = _interopRequireWildcard(__webpack_require__(/*! ./src */ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/src/index.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var _default = {
  Flex: _src.default,
  Item: _src.default
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/src/Flex.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Flex/src/Flex.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _props2className = _interopRequireDefault(__webpack_require__(/*! ./props2className */ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/src/props2className.js"));
var _cleanup = _interopRequireDefault(__webpack_require__(/*! ./cleanup */ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/src/cleanup.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var InovuaFlex = (0, _react.forwardRef)(function (props, ref) {
  var className = (0, _join.default)('inovua-react-toolkit-flex', (0, _props2className.default)(props));
  var allProps = _objectSpread({}, props);
  (0, _cleanup.default)(allProps);
  allProps.className = className;
  delete allProps.livePagination;
  if (props.factory) {
    return props.factory(allProps);
  }
  return _react.default.createElement("div", _objectSpread({
    ref: ref
  }, allProps));
});
InovuaFlex.defaultProps = {
  row: true,
  wrap: true,
  alignItems: 'center',
  display: 'flex'
};
InovuaFlex.propTypes = {
  shouldComponentUpdate: _propTypes.default.func,
  flex: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool]),
  display: _propTypes.default.oneOf(['flex', 'inline-flex']),
  inline: _propTypes.default.bool,
  reverse: _propTypes.default.bool,
  row: _propTypes.default.bool,
  column: _propTypes.default.bool,
  wrap: _propTypes.default.bool,
  alignItems: _propTypes.default.string,
  alignContent: _propTypes.default.string,
  justifyContent: _propTypes.default.string
};
var _default = _react.default.memo(InovuaFlex);
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/src/Item.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Flex/src/Item.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _shouldComponentUpdate2 = _interopRequireDefault(__webpack_require__(/*! ./shouldComponentUpdate */ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/src/shouldComponentUpdate.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _props2className = _interopRequireDefault(__webpack_require__(/*! ./props2className */ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/src/props2className.js"));
var _cleanup = _interopRequireDefault(__webpack_require__(/*! ./cleanup */ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/src/cleanup.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var InovuaFlexItem = function (_Component) {
  (0, _inherits2.default)(InovuaFlexItem, _Component);
  var _super = _createSuper(InovuaFlexItem);
  function InovuaFlexItem() {
    (0, _classCallCheck2.default)(this, InovuaFlexItem);
    return _super.apply(this, arguments);
  }
  (0, _createClass2.default)(InovuaFlexItem, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps, nextState) {
      var shouldUpdate = (0, _shouldComponentUpdate2.default)(this, nextProps, nextState);
      return shouldUpdate;
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.props;
      var className = (0, _join.default)('inovua-react-toolkit-flex-item', (0, _props2className.default)(props));
      var allProps = _objectSpread({}, props);
      (0, _cleanup.default)(allProps);
      allProps.className = className;
      if (props.factory) {
        return props.factory(allProps);
      }
      return _react.default.createElement("div", _objectSpread({}, allProps));
    }
  }]);
  return InovuaFlexItem;
}(_react.Component);
InovuaFlexItem.defaultProps = {
  flex: 1
};
InovuaFlexItem.propTypes = {
  shouldComponentUpdate: _propTypes.default.func,
  display: _propTypes.default.oneOf(['flex', 'inline-flex']),
  inline: function inline(props, propName) {
    if (props[propName] !== undefined) {
      return new Error("\"inline\" prop should not be used on \"Item\". Use \"display='inline-flex'\" instead");
    }
  },
  flex: _propTypes.default.any,
  flexGrow: _propTypes.default.any,
  flexShrink: _propTypes.default.any,
  flexBasis: _propTypes.default.any
};
var _default = InovuaFlexItem;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/src/cleanup.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Flex/src/cleanup.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = function _default(props) {
  delete props.display;
  delete props.shouldComponentUpdate;
  delete props.wrap;
  delete props.row;
  delete props.column;
  delete props.alignItems;
  delete props.alignSelf;
  delete props.alignContent;
  delete props.justifyContent;
  delete props.flex;
  delete props.flexGrow;
  delete props.flexFlow;
  delete props.flexShrink;
  delete props.flexBasis;
  delete props.inline;
  delete props.wrap;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/src/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Flex/src/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "Flex", ({
  enumerable: true,
  get: function get() {
    return _Flex.default;
  }
}));
Object.defineProperty(exports, "Item", ({
  enumerable: true,
  get: function get() {
    return _Item.default;
  }
}));
exports["default"] = void 0;
var _Flex = _interopRequireDefault(__webpack_require__(/*! ./Flex */ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/src/Flex.js"));
var _Item = _interopRequireDefault(__webpack_require__(/*! ./Item */ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/src/Item.js"));
var _default = {
  Flex: _Flex.default,
  Item: _Item.default
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/src/prefix.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Flex/src/prefix.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = 'inovua-react-toolkit-flex-v3';
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/src/props2className.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Flex/src/props2className.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _props2flex = _interopRequireDefault(__webpack_require__(/*! ./props2flex */ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/src/props2flex.js"));
var _prefix = _interopRequireDefault(__webpack_require__(/*! ./prefix */ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/src/prefix.js"));
var PREFIX = _prefix.default;
var _default = function _default(props) {
  var column = !!props.column;
  var row = !column && !!props.row;
  var reverse = props.reverse ? '-reverse' : '';
  var flex = (0, _props2flex.default)(props);
  var flexGrow = props.flexGrow;
  var flexShrink = props.flexShrink;
  var flexBasis = props.flexBasis;
  var display = props.inline ? 'inline-flex' : props.display;
  var className = (0, _join.default)(props.className, props.alignItems ? "".concat(PREFIX, "--align-items-").concat(props.alignItems) : null, props.alignContent ? "".concat(PREFIX, "--align-content-").concat(props.alignContent) : null, props.justifyContent ? "".concat(PREFIX, "--justify-content-").concat(props.justifyContent) : null, props.wrap ? "".concat(PREFIX, "--wrap") : null, props.alignSelf ? "".concat(PREFIX, "--align-self-").concat(props.alignSelf) : null, row ? "".concat(PREFIX, "--row").concat(reverse) : null, column ? "".concat(PREFIX, "--column").concat(reverse) : null, flex != null ? "".concat(PREFIX, "--flex-").concat(flex) : null, flexGrow != null ? "".concat(PREFIX, "--flex-grow-").concat(flexGrow) : null, flexShrink != null ? "".concat(PREFIX, "--flex-shrink-").concat(flexShrink) : null, flexBasis != null ? "".concat(PREFIX, "--flex-basis-").concat(flexBasis) : null, display != null ? "".concat(PREFIX, "--display-").concat(display) : null);
  return className;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/src/props2flex.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Flex/src/props2flex.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = function _default(props) {
  return props.flex === false ? 0 : props.flex === true ? 1 : props.flex;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Flex/src/shouldComponentUpdate.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Flex/src/shouldComponentUpdate.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = function _default(inst, nextProps, nextState) {
  var props = inst.props;
  var state = inst.state;
  if (nextProps.shouldComponentUpdate) {
    return nextProps.shouldComponentUpdate({
      nextProps: nextProps,
      props: props,
      nextState: nextState,
      state: state
    });
  }
  return true;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/InertialScroller/index.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/InertialScroller/index.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "InertialManager", ({
  enumerable: true,
  get: function get() {
    return _InertialManager.default;
  }
}));
exports["default"] = void 0;
var _src = _interopRequireDefault(__webpack_require__(/*! ./src */ "./node_modules/@inovua/reactdatagrid-community/packages/InertialScroller/src/index.js"));
var _InertialManager = _interopRequireDefault(__webpack_require__(/*! ./src/InertialManager */ "./node_modules/@inovua/reactdatagrid-community/packages/InertialScroller/src/InertialManager.js"));
var _default = _src.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/InertialScroller/src/InertialManager.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/InertialScroller/src/InertialManager.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _isMobile = _interopRequireDefault(__webpack_require__(/*! ../../../common/isMobile */ "./node_modules/@inovua/reactdatagrid-community/common/isMobile.js"));
var _clamp = _interopRequireDefault(__webpack_require__(/*! ../../../common/clamp */ "./node_modules/@inovua/reactdatagrid-community/common/clamp.js"));
var _containsNode = _interopRequireDefault(__webpack_require__(/*! ../../../common/containsNode */ "./node_modules/@inovua/reactdatagrid-community/common/containsNode.js"));
var _matchesSelector = _interopRequireDefault(__webpack_require__(/*! ../../../common/matchesSelector */ "./node_modules/@inovua/reactdatagrid-community/common/matchesSelector.js"));
function ypos(e) {
  if (e.targetTouches && e.targetTouches.length >= 1) {
    return e.targetTouches[0].clientY;
  }
  return e.clientY;
}
var InertialManager = function () {
  function InertialManager(_ref) {
    var node = _ref.node,
      viewNode = _ref.viewNode,
      arrowSelector = _ref.arrowSelector,
      _ref$threshold = _ref.threshold,
      threshold = _ref$threshold === void 0 ? 5 : _ref$threshold,
      _ref$timeConstant = _ref.timeConstant,
      timeConstant = _ref$timeConstant === void 0 ? 360 : _ref$timeConstant,
      _ref$initialAmplitude = _ref.initialAmplitude,
      initialAmplitude = _ref$initialAmplitude === void 0 ? 0.8 : _ref$initialAmplitude,
      _ref$enableMouseDrag = _ref.enableMouseDrag,
      enableMouseDrag = _ref$enableMouseDrag === void 0 ? true : _ref$enableMouseDrag,
      _ref$enableTouchDrag = _ref.enableTouchDrag,
      enableTouchDrag = _ref$enableTouchDrag === void 0 ? true : _ref$enableTouchDrag,
      _ref$setScrollPositio = _ref.setScrollPosition,
      setScrollPosition = _ref$setScrollPositio === void 0 ? function () {} : _ref$setScrollPositio;
    (0, _classCallCheck2.default)(this, InertialManager);
    this.node = node;
    this.viewNode = viewNode;
    if (!arrowSelector) {
      throw 'Please provide an arrowselector';
    }
    this.arrowSelector = arrowSelector;
    this.tap = this.tap.bind(this);
    this.drag = this.drag.bind(this);
    this.release = this.release.bind(this);
    this.track = this.track.bind(this);
    this.autoScroll = this.autoScroll.bind(this);
    this.min = 0;
    this.max = null;
    this.pressed = null;
    this.reference = null;
    this.offset = 0;
    this.threshold = threshold;
    this.timeConstant = timeConstant;
    this.enableTouchDrag = enableTouchDrag;
    this.enableMouseDrag = enableMouseDrag;
    this.setScrollPosition = setScrollPosition;
    this.initialAmplitude = initialAmplitude;
    this.updateMaxScroll();
    this.addEventListeners();
  }
  (0, _createClass2.default)(InertialManager, [{
    key: "addEventListeners",
    value: function addEventListeners() {
      if (!this.node || !this.node.addEventListener) {
        return;
      }
      if (_isMobile.default && this.enableTouchDrag) {
        this.node.addEventListener('touchstart', this.tap, {
          passive: false
        });
        this.node.addEventListener('touchend', this.release, {
          passive: false
        });
        this.node.addEventListener('touchmove', this.drag, {
          passive: false
        });
      }
      if (!_isMobile.default && this.enableMouseDrag) {
        this.node.addEventListener('mousedown', this.tap, {
          passive: false
        });
        this.node.addEventListener('mouseup', this.release, {
          passive: false
        });
        this.node.addEventListener('mousemove', this.drag, {
          passive: false
        });
      }
    }
  }, {
    key: "removeEventListeners",
    value: function removeEventListeners() {
      if (this.node && this.node.removeEventListener) {
        this.node.removeEventListener('touchstart', this.tap, {
          passive: false
        });
        this.node.removeEventListener('touchend', this.release, {
          passive: false
        });
        this.node.removeEventListener('touchmove', this.drag, {
          passive: false
        });
        this.node.removeEventListener('mousedown', this.tap, {
          passive: false
        });
        this.node.removeEventListener('mouseup', this.release, {
          passive: false
        });
        this.node.removeEventListener('mousemove', this.drag, {
          passive: false
        });
      }
    }
  }, {
    key: "getEventListneres",
    value: function getEventListneres() {
      var events;
      if (_isMobile.default && this.enableTouchDrag) {
        events = {
          onTouchStart: this.tap,
          onTouchEnd: this.release,
          onTouchMove: this.drag
        };
      }
      if (!_isMobile.default && this.enableMouseDrag) {
        events = {
          onMouseDown: this.tap,
          onMouseUp: this.release,
          onMouseMove: this.drag
        };
      }
      return events;
    }
  }, {
    key: "isArrowTarget",
    value: function isArrowTarget(target) {
      if ((0, _matchesSelector.default)(target, this.arrowSelector)) {
        return true;
      }
      var arrows = this.arrowSelector ? this.arrows || (0, _toConsumableArray2.default)(this.node.querySelectorAll(this.arrowSelector)) : [];
      if (arrows.length) {
        this.arrows = arrows;
      }
      if (arrows.length && arrows.map(function (arrow) {
        return (0, _containsNode.default)(arrow, target);
      }).filter(function (x) {
        return x;
      })[0]) {
        return true;
      }
      return false;
    }
  }, {
    key: "tap",
    value: function tap(event) {
      if (!this.hasScroll()) {
        return;
      }
      if (this.isArrowTarget(event.target)) {
        event.preventDefault();
      }
      this.pressed = true;
      this.reference = ypos(event);
      this.timeStamp = Date.now();
      this.frame = this.offset;
      this.velocity = 0;
      this.amplitude = 0;
      clearInterval(this.ticker);
      this.ticker = setInterval(this.track, 16);
    }
  }, {
    key: "drag",
    value: function drag(event) {
      if (this.pressed) {
        if (!this.hasScroll()) {
          return;
        }
        event.preventDefault();
        var y = ypos(event);
        var delta = this.reference - y;
        if (delta > this.threshold || delta < -this.threshold) {
          this.reference = y;
          this.scrollTo(this.offset + delta);
        }
      }
    }
  }, {
    key: "release",
    value: function release(event) {
      if (!this.hasScroll() || !this.pressed) {
        return;
      }
      this.pressed = false;
      this.updateMaxScroll();
      if (this.isArrowTarget(event.target)) {
        event.preventDefault();
      }
      clearInterval(this.ticker);
      if (this.velocity > 10 || this.velocity < -10) {
        this.amplitude = this.initialAmplitude * this.velocity;
        this.target = Math.round(this.offset + this.amplitude);
        this.timestamp = Date.now();
        requestAnimationFrame(this.autoScroll);
      }
    }
  }, {
    key: "scrollTo",
    value: function scrollTo(offset) {
      if (!this.viewNode) {
        return null;
      }
      this.offset = (0, _clamp.default)(offset, 0, this.max);
      this.setScrollPosition(this.offset);
    }
  }, {
    key: "autoScroll",
    value: function autoScroll() {
      var elapsed, delta;
      var timeConstant = this.timeConstant;
      if (this.amplitude) {
        elapsed = Date.now() - this.timestamp;
        delta = -this.amplitude * Math.exp(-elapsed / timeConstant);
        if (delta > 0.1 || delta < -0.1) {
          this.scrollTo(this.target + delta);
          requestAnimationFrame(this.autoScroll);
        } else {
          this.scrollTo(this.target);
        }
      }
    }
  }, {
    key: "updateMaxScroll",
    value: function updateMaxScroll() {
      this.max = this.viewNode && this.viewNode.offsetHeight - this.node.offsetHeight;
    }
  }, {
    key: "hasScroll",
    value: function hasScroll() {
      if ((this.viewNode && this.viewNode.offsetHeight) !== undefined && (this.node && this.node.offsetHeight) !== undefined) {
        return this.viewNode.offsetHeight > this.node.offsetHeight;
      } else {
        return false;
      }
    }
  }, {
    key: "track",
    value: function track() {
      var now, elapsed, delta, v;
      now = Date.now();
      elapsed = now - this.timeStamp;
      this.timeStamp = now;
      delta = this.offset - this.frame;
      this.frame = this.offset;
      v = 1000 * delta / (1 + elapsed);
      this.velocity = 0.8 * v + 0.2 * this.velocity;
    }
  }]);
  return InertialManager;
}();
var _default = InertialManager;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/InertialScroller/src/InertialScroller.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/InertialScroller/src/InertialScroller.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _cleanProps = _interopRequireDefault(__webpack_require__(/*! ../../../common/cleanProps */ "./node_modules/@inovua/reactdatagrid-community/common/cleanProps.js"));
var _isMobile = _interopRequireDefault(__webpack_require__(/*! ../../../common/isMobile */ "./node_modules/@inovua/reactdatagrid-community/common/isMobile.js"));
var _clamp = _interopRequireDefault(__webpack_require__(/*! ../../../common/clamp */ "./node_modules/@inovua/reactdatagrid-community/common/clamp.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function ypos(e) {
  if (e.targetTouches && e.targetTouches.length >= 1) {
    return e.targetTouches[0].clientY;
  }
  return e.clientY;
}
var InovuaInertialScroller = function (_Component) {
  (0, _inherits2.default)(InovuaInertialScroller, _Component);
  var _super = _createSuper(InovuaInertialScroller);
  function InovuaInertialScroller(props) {
    var _this;
    (0, _classCallCheck2.default)(this, InovuaInertialScroller);
    _this = _super.call(this, props);
    _this.state = {};
    _this.setRootRef = function (ref) {
      _this.node = ref;
    };
    _this.setViewRef = function (ref) {
      _this.viewNode = ref;
    };
    _this.tap = _this.tap.bind((0, _assertThisInitialized2.default)(_this));
    _this.drag = _this.drag.bind((0, _assertThisInitialized2.default)(_this));
    _this.release = _this.release.bind((0, _assertThisInitialized2.default)(_this));
    _this.track = _this.track.bind((0, _assertThisInitialized2.default)(_this));
    _this.autoScroll = _this.autoScroll.bind((0, _assertThisInitialized2.default)(_this));
    _this.min = 0;
    _this.max = null;
    _this.pressed = null;
    _this.reference = null;
    _this.offset = 0;
    return _this;
  }
  (0, _createClass2.default)(InovuaInertialScroller, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.updateMaxScroll();
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.props;
      var className = (0, _join.default)(props.rootClassName, props.className, "".concat(props.rootClassName, "--theme-").concat(props.theme));
      var events;
      if (_isMobile.default && this.props.enableTouchDrag) {
        events = {
          onTouchStart: this.tap,
          onTouchEnd: this.release,
          onTouchMove: this.drag
        };
      }
      if (!_isMobile.default && props.enableMouseDrag) {
        events = {
          onMouseDown: this.tap,
          onMouseUp: this.release,
          onMouseMove: this.drag
        };
      }
      return _react.default.createElement("div", _objectSpread(_objectSpread({}, (0, _cleanProps.default)(props, InovuaInertialScroller.propTypes)), {}, {
        className: className,
        ref: this.setRootRef
      }, events), _react.default.createElement("div", {
        ref: this.setViewRef,
        className: "".concat(props.rootClassName, "__view")
      }, props.children));
    }
  }, {
    key: "tap",
    value: function tap(event) {
      this.pressed = true;
      this.reference = ypos(event);
      this.timeStamp = Date.now();
      this.frame = this.offset;
      this.velocity = 0;
      this.amplitude = 0;
      clearInterval(this.ticker);
      this.ticker = setInterval(this.track, 16);
      event.stopPropagation();
      event.preventDefault();
    }
  }, {
    key: "drag",
    value: function drag(event) {
      if (this.pressed) {
        var y = ypos(event);
        var delta = this.reference - y;
        if (delta > this.props.threshold || delta < -this.props.threshold) {
          this.reference = y;
          this.scrollTo(this.offset + delta);
        }
      }
    }
  }, {
    key: "release",
    value: function release(event) {
      this.pressed = false;
      this.updateMaxScroll();
      event.stopPropagation();
      event.preventDefault();
      clearInterval(this.ticker);
      if (this.velocity > 10 || this.velocity < -10) {
        this.amplitude = this.props.initialAmplitude * this.velocity;
        this.target = Math.round(this.offset + this.amplitude);
        this.timestamp = Date.now();
        requestAnimationFrame(this.autoScroll);
      }
    }
  }, {
    key: "scrollTo",
    value: function scrollTo(offset) {
      if (!this.viewNode) {
        return null;
      }
      this.offset = (0, _clamp.default)(offset, 0, this.max);
      this.viewNode.style.transform = "translateY(".concat(-this.offset, "px)");
    }
  }, {
    key: "autoScroll",
    value: function autoScroll() {
      var elapsed, delta;
      var timeConstant = this.props.timeConstant;
      if (this.amplitude) {
        elapsed = Date.now() - this.timestamp;
        delta = -this.amplitude * Math.exp(-elapsed / timeConstant);
        if (delta > 0.1 || delta < -0.1) {
          this.scrollTo(this.target + delta);
          requestAnimationFrame(this.autoScroll);
        } else {
          this.scrollTo(this.target);
        }
      }
    }
  }, {
    key: "updateMaxScroll",
    value: function updateMaxScroll() {
      this.max = this.viewNode && this.viewNode.offsetHeight - this.node.offsetHeight;
    }
  }, {
    key: "track",
    value: function track() {
      var now, elapsed, delta, v;
      now = Date.now();
      elapsed = now - this.timeStamp;
      this.timeStamp = now;
      delta = this.offset - this.frame;
      this.frame = this.offset;
      v = 1000 * delta / (1 + elapsed);
      this.velocity = 0.8 * v + 0.2 * this.velocity;
    }
  }]);
  return InovuaInertialScroller;
}(_react.Component);
function emptyFn() {}
InovuaInertialScroller.defaultProps = {
  theme: 'default',
  rootClassName: 'react-toolkit-inertial-scroller',
  threshold: 5,
  timeConstant: 360,
  initialAmplitude: 0.5,
  enableMouseDrag: true,
  enableTouchDrag: true
};
InovuaInertialScroller.propTypes = {
  theme: _propTypes.default.string,
  rootClassName: _propTypes.default.string,
  threshold: _propTypes.default.number,
  timeConstant: _propTypes.default.number,
  initialAmplitude: _propTypes.default.number,
  enableMouseDrag: _propTypes.default.bool,
  enableTouchDrag: _propTypes.default.bool
};
var _default = InovuaInertialScroller;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/InertialScroller/src/index.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/InertialScroller/src/index.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "InertialManager", ({
  enumerable: true,
  get: function get() {
    return _InertialManager.default;
  }
}));
exports["default"] = void 0;
var _InertialScroller = _interopRequireDefault(__webpack_require__(/*! ./InertialScroller */ "./node_modules/@inovua/reactdatagrid-community/packages/InertialScroller/src/InertialScroller.js"));
var _InertialManager = _interopRequireDefault(__webpack_require__(/*! ./InertialManager */ "./node_modules/@inovua/reactdatagrid-community/packages/InertialScroller/src/InertialManager.js"));
var _default = _InertialScroller.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/LoadMask/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/LoadMask/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _src = _interopRequireDefault(__webpack_require__(/*! ./src */ "./node_modules/@inovua/reactdatagrid-community/packages/LoadMask/src/index.js"));
var _default = _src.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/LoadMask/src/SpinLoader.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/LoadMask/src/SpinLoader.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var DEFAULT_CLASS_NAME = 'inovua-react-toolkit-load-mask__loader';
var LOADBAR_CLASSNAME = "".concat(DEFAULT_CLASS_NAME, "-loadbar");
var getMeasureName = function getMeasureName(duration) {
  if (typeof duration == 'number' || duration * 1 == duration) {
    return 's';
  }
  var measure;
  duration.match(/[a-zA-Z]*$/, function (match) {
    measure = match;
  });
  return measure || 's';
};
var InovuaSpinLoader = function (_React$Component) {
  (0, _inherits2.default)(InovuaSpinLoader, _React$Component);
  var _super = _createSuper(InovuaSpinLoader);
  function InovuaSpinLoader() {
    (0, _classCallCheck2.default)(this, InovuaSpinLoader);
    return _super.apply(this, arguments);
  }
  (0, _createClass2.default)(InovuaSpinLoader, [{
    key: "render",
    value: function render() {
      var props = this.props;
      var style = _objectSpread(_objectSpread({}, props.style), {}, {
        width: props.size,
        height: props.size
      });
      var className = (0, _join.default)(props.className, DEFAULT_CLASS_NAME, "".concat(DEFAULT_CLASS_NAME, "--spin"), props.theme && "".concat(DEFAULT_CLASS_NAME, "--theme-").concat(props.theme));
      var animationDuration = props.animationDuration;
      var measureName = animationDuration ? getMeasureName(animationDuration) : '';
      var bars = (0, _toConsumableArray2.default)(Array(12)).map(function (_, i) {
        var index = i + 1;
        return _react.default.createElement("div", {
          key: index,
          className: "".concat(LOADBAR_CLASSNAME, " ").concat(LOADBAR_CLASSNAME, "--").concat(index)
        });
      });
      return _react.default.createElement("div", {
        style: style,
        className: className
      }, bars);
    }
  }]);
  return InovuaSpinLoader;
}(_react.default.Component);
InovuaSpinLoader.propTypes = {
  size: _propTypes.default.number,
  theme: _propTypes.default.string,
  animationDuration: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])
};
InovuaSpinLoader.defaultProps = {
  size: 40
};
var _default = InovuaSpinLoader;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/LoadMask/src/SvgLoader.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/LoadMask/src/SvgLoader.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var DEFAULT_CLASS_NAME = 'inovua-react-toolkit-load-mask__loader';
var InovuaSvgLoader = function (_React$Component) {
  (0, _inherits2.default)(InovuaSvgLoader, _React$Component);
  var _super = _createSuper(InovuaSvgLoader);
  function InovuaSvgLoader() {
    (0, _classCallCheck2.default)(this, InovuaSvgLoader);
    return _super.apply(this, arguments);
  }
  (0, _createClass2.default)(InovuaSvgLoader, [{
    key: "render",
    value: function render() {
      var props = this.props;
      var style = _objectSpread(_objectSpread({}, props.style), {}, {
        width: props.size,
        height: props.size
      });
      if (props.animationDuration) {
        style.animationDuration = props.animationDuration;
      }
      var className = (0, _join.default)(props.className, DEFAULT_CLASS_NAME, "".concat(DEFAULT_CLASS_NAME, "--svg"), props.theme && "".concat(DEFAULT_CLASS_NAME, "--theme-").concat(props.theme));
      return _react.default.createElement("div", {
        style: style,
        className: className
      }, _react.default.createElement("svg", {
        className: "".concat(DEFAULT_CLASS_NAME, "-spinner"),
        width: props.size,
        height: props.size,
        viewBox: "0 0 32 32"
      }, _react.default.createElement("path", {
        fillRule: "evenodd",
        d: "M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16zm0-4c6.627 0 12-5.373 12-12S22.627 4 16 4 4 9.373 4 16s5.373 12 12 12z"
      })));
    }
  }]);
  return InovuaSvgLoader;
}(_react.default.Component);
exports["default"] = InovuaSvgLoader;
InovuaSvgLoader.propTypes = {
  size: _propTypes.default.number,
  theme: _propTypes.default.string,
  animationDuration: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])
};
InovuaSvgLoader.defaultProps = {
  size: 40
};

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/LoadMask/src/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/LoadMask/src/index.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _cleanProps = _interopRequireDefault(__webpack_require__(/*! ../../../common/cleanProps */ "./node_modules/@inovua/reactdatagrid-community/common/cleanProps.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _SvgLoader = _interopRequireDefault(__webpack_require__(/*! ./SvgLoader */ "./node_modules/@inovua/reactdatagrid-community/packages/LoadMask/src/SvgLoader.js"));
var _SpinLoader = _interopRequireDefault(__webpack_require__(/*! ./SpinLoader */ "./node_modules/@inovua/reactdatagrid-community/packages/LoadMask/src/SpinLoader.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var DEFAULT_CLASS_NAME = 'inovua-react-toolkit-load-mask';
var InovuaLoadMask = (0, _react.forwardRef)(function (props, ref) {
  var visibleClassName = props.visible ? "".concat(props.rootClassName, "--visible") : '';
  var className = (0, _join.default)(props.className, props.rootClassName, visibleClassName, props.theme && "".concat(props.rootClassName, "--theme-").concat(props.theme));
  var layerClassName = (0, _join.default)(props.backgroundLayerClassName, "".concat(props.rootClassName, "__background-layer"));
  var style = _objectSpread({}, props.style);
  var layerStyle = _objectSpread({}, props.backgroundLayerStyle);
  if (props.zIndex != null) {
    style.zIndex = props.zIndex;
  }
  if (props.background !== true) {
    layerStyle.background = props.background === false ? 'transparent' : props.background;
  }
  if (props.backgroundOpacity != null) {
    layerStyle.opacity = props.backgroundOpacity;
  }
  var pointerEvents = props.pointerEvents;
  if (pointerEvents !== true) {
    style.pointerEvents = pointerEvents === false ? 'none' : pointerEvents;
  }
  var Loader = props.svgLoader ? _SvgLoader.default : _SpinLoader.default;
  return _react.default.createElement("div", _objectSpread(_objectSpread({
    ref: ref
  }, (0, _cleanProps.default)(props, InovuaLoadMask.propTypes)), {}, {
    className: className,
    style: style
  }), _react.default.createElement("div", {
    style: layerStyle,
    className: layerClassName
  }), _react.default.createElement("div", {
    className: "".concat(props.rootClassName, "__loader-container")
  }, _react.default.createElement(Loader, {
    size: props.size,
    theme: props.theme,
    animationDuration: props.animationDuration
  }), props.children));
});
InovuaLoadMask.defaultProps = {
  visible: true,
  svgLoader: true,
  theme: 'default-light',
  zIndex: 100,
  pointerEvents: true,
  backgroundOpacity: 0.6,
  background: true,
  backgroundLayerStyle: {},
  rootClassName: DEFAULT_CLASS_NAME
};
InovuaLoadMask.propTypes = {
  animationDuration: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  svgLoader: _propTypes.default.bool,
  zIndex: _propTypes.default.number,
  visible: _propTypes.default.bool,
  pointerEvents: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),
  backgroundOpacity: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  background: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),
  theme: _propTypes.default.string,
  backgroundLayerClassName: _propTypes.default.string,
  backgroundLayerStyle: _propTypes.default.object,
  rootClassName: _propTypes.default.string
};
var _default = InovuaLoadMask;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Menu/index.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _src = _interopRequireDefault(__webpack_require__(/*! ./src */ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/index.js"));
var _default = _src.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/Expander.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/Expander.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var Expander = function Expander(_ref) {
  var className = _ref.className,
    rootClassName = _ref.rootClassName,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? 20 : _ref$size,
    onClick = _ref.onClick,
    fill = _ref.fill,
    rtl = _ref.rtl;
  return _react.default.createElement("div", {
    className: "".concat(rootClassName, "__expander-wrapper")
  }, _react.default.createElement("div", {
    className: "".concat(rootClassName, "__expander-icon")
  }, _react.default.createElement("svg", {
    className: (0, _join.default)(className, "".concat(rootClassName, "__expander")),
    onClick: onClick,
    fill: fill,
    height: size,
    width: size / 2,
    viewBox: "0 0 5 10"
  }, rtl ? _react.default.createElement("path", {
    fillRule: "evenodd",
    d: "M.262 4.738L4.368.632c.144-.144.379-.144.524 0C4.96.702 5 .796 5 .894v8.212c0 .204-.166.37-.37.37-.099 0-.193-.039-.262-.108L.262 5.262c-.145-.145-.145-.38 0-.524z"
  }) : _react.default.createElement("path", {
    fillRule: "evenodd",
    d: "M4.738 5.262L.632 9.368c-.144.144-.379.144-.524 0C.04 9.298 0 9.204 0 9.106V.894C0 .69.166.524.37.524c.099 0 .193.039.262.108l4.106 4.106c.145.145.145.38 0 .524z"
  }))));
};
Expander.isExpander = true;
var _default = Expander;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/Menu.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/Menu.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _reactClass = _interopRequireDefault(__webpack_require__(/*! ../../../packages/react-class */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/index.js"));
var _regionAlign = _interopRequireDefault(__webpack_require__(/*! ../../../packages/region-align */ "./node_modules/@inovua/reactdatagrid-community/packages/region-align/index.js"));
var _uglified = _interopRequireDefault(__webpack_require__(/*! ../../../packages/uglified */ "./node_modules/@inovua/reactdatagrid-community/packages/uglified/index.js"));
var _shallowequal = _interopRequireDefault(__webpack_require__(/*! ../../../common/shallowequal */ "./node_modules/@inovua/reactdatagrid-community/common/shallowequal.js"));
var _ArrowScroller = _interopRequireDefault(__webpack_require__(/*! ../../ArrowScroller */ "./node_modules/@inovua/reactdatagrid-community/packages/ArrowScroller/index.js"));
var _MenuItem = _interopRequireDefault(__webpack_require__(/*! ./MenuItem */ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/MenuItem/index.js"));
var _MenuSeparator = _interopRequireDefault(__webpack_require__(/*! ./MenuSeparator */ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/MenuSeparator.js"));
var _containsNode = _interopRequireDefault(__webpack_require__(/*! ../../../common/containsNode */ "./node_modules/@inovua/reactdatagrid-community/common/containsNode.js"));
var _cleanProps = _interopRequireDefault(__webpack_require__(/*! ../../../common/cleanProps */ "./node_modules/@inovua/reactdatagrid-community/common/cleanProps.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var _getConstrainRegion = _interopRequireDefault(__webpack_require__(/*! ../../../common/getConstrainRegion */ "./node_modules/@inovua/reactdatagrid-community/common/getConstrainRegion.js"));
var _isMobile = _interopRequireDefault(__webpack_require__(/*! ../../../common/isMobile */ "./node_modules/@inovua/reactdatagrid-community/common/isMobile.js"));
var _prepareStyle = _interopRequireDefault(__webpack_require__(/*! ./utils/prepareStyle */ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/utils/prepareStyle.js"));
var _getFirstNonDisabledItem = _interopRequireDefault(__webpack_require__(/*! ./utils/getFirstNonDisabledItem */ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/utils/getFirstNonDisabledItem.js"));
var _getNextNavigableItem = _interopRequireDefault(__webpack_require__(/*! ./utils/getNextNavigableItem */ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/utils/getNextNavigableItem.js"));
var _getSeparatorIndexes = _interopRequireDefault(__webpack_require__(/*! ./utils/getSeparatorIndexes */ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/utils/getSeparatorIndexes.js"));
var _prepareAlignOffset = _interopRequireDefault(__webpack_require__(/*! ./utils/prepareAlignOffset */ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/utils/prepareAlignOffset.js"));
var _getSingleSelectNames = _interopRequireDefault(__webpack_require__(/*! ./utils/getSingleSelectNames */ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/utils/getSingleSelectNames.js"));
var _increaseColSpan = __webpack_require__(/*! ./utils/increaseColSpan */ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/utils/increaseColSpan.js");
var _getRegionRelativeToParent = _interopRequireDefault(__webpack_require__(/*! ./getRegionRelativeToParent */ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/getRegionRelativeToParent.js"));
var _shouldComponentUpdate2 = _interopRequireDefault(__webpack_require__(/*! ../../../common/shouldComponentUpdate */ "./node_modules/@inovua/reactdatagrid-community/common/shouldComponentUpdate.js"));
var _getSubMenuStyle = _interopRequireDefault(__webpack_require__(/*! ./getSubMenuStyle */ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/getSubMenuStyle.js"));
var _getItemStyleProps = _interopRequireDefault(__webpack_require__(/*! ./utils/getItemStyleProps */ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/utils/getItemStyleProps.js"));
var _submenuAlignPositions = __webpack_require__(/*! ./submenuAlignPositions */ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/submenuAlignPositions.js");
var _ua = __webpack_require__(/*! ../../../common/ua */ "./node_modules/@inovua/reactdatagrid-community/common/ua.js");
var _getGlobal = __webpack_require__(/*! ../../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var globalObject = (0, _getGlobal.getGlobal)();
function emptyFn() {}
var raf = globalObject.requestAnimationFrame;
var getAlignToRegion = function getAlignToRegion(alignTo, node) {
  if (typeof alignTo === 'function') {
    alignTo = alignTo(node);
  }
  if (typeof alignTo == 'string') {
    alignTo = globalObject.document ? globalObject.document.querySelector(alignTo) : alignTo;
  }
  return _regionAlign.default.from(alignTo);
};
var InovuaMenu = function (_Component) {
  (0, _inherits2.default)(InovuaMenu, _Component);
  var _super = _createSuper(InovuaMenu);
  function InovuaMenu(props) {
    var _this;
    (0, _classCallCheck2.default)(this, InovuaMenu);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "updatePosition", function () {
      _this.checkAlignment(undefined, true);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "updateAlignment", function (alignTo) {
      _this.checkAlignment(undefined, true, alignTo);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleDocumentScroll", function () {
      if (_this.props.updatePositionOnScroll) {
        _this.updatePosition();
      }
    });
    _this.state = {
      mouseOver: false,
      hidden: true,
      enableAnimation: false,
      transitionEnded: false,
      hasScroll: false,
      activeSubMenuIndex: null,
      nextActiveSubMenuIndex: null,
      showUpArrow: false,
      showDownArrow: true,
      focusedItem: props.enableKeyboardNavigation ? props.defaultFocusedItem : null,
      selected: props.defaultSelected
    };
    _this.setupShowHideDelay();
    _this.setRootRef = function (ref) {
      _this.node = ref;
    };
    _this.setItemRef = function (index) {
      return function (ref) {
        if (!_this.childrenRefs) {
          _this.childrenRefs = [];
        }
        _this.childrenRefs[index] = ref;
      };
    };
    _this.setSubMenuRef = function (ref) {
      _this.subMenu = ref;
    };
    _this.setSubMenuWrapRef = function (ref) {
      _this.subMenuWrap = ref;
    };
    _this.setScrollerRef = function (ref) {
      _this.scroller = ref;
    };
    _this.setTableRef = function (ref) {
      _this.table = ref;
    };
    return _this;
  }
  (0, _createClass2.default)(InovuaMenu, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      return (0, _shouldComponentUpdate2.default)(this, nextProps, nextProps);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.componentIsMounted = false;
      this.chidrenRefs = null;
      this.props.componentWillUnmount(this, {
        hasFocus: this.hasFocus(),
        depth: this.props.depth
      });
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      if (this.props.autoFocus && prevState.hidden && !this.state.hidden) {
        this.focus();
      }
      if (prevProps.visible && !this.props.visible) {
        this.setState({
          positionStyle: null
        });
      }
      if (!prevProps.visible && this.props.visible || !(0, _shallowequal.default)(prevProps.alignTo, this.props.alignTo) || this.props.constrainTo != prevProps.constrainTo) {
        this.checkAlignment(this.props, true);
      }
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;
      this.componentIsMounted = true;
      if (this.props.visible === false) {
        return;
      }
      if (this.props.componentDidMount) {
        this.props.componentDidMount(this);
      }
      this.checkAlignment();
      this.setupEnterAnimation();
      if (this.props.autoFocus) {
        requestAnimationFrame(function () {
          _this2.focus();
        });
      }
      if (this.props.updatePositionOnScroll) {
        window.addEventListener('scroll', this.handleDocumentScroll, {
          passive: true
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var state = this.state,
        props = this.props;
      var style = (0, _prepareStyle.default)(props, state);
      var className = this.prepareClassName(props, state);
      var table = this.renderTable();
      var scrollerArrow = props.showScrollArrows === undefined ? 'auto' : !!props.showScrollArrows;
      return _react.default.createElement("div", _objectSpread(_objectSpread({
        tabIndex: 0
      }, (0, _cleanProps.default)(props, InovuaMenu.propTypes)), {}, {
        ref: this.setRootRef,
        onMouseLeave: this.handleMouseLeave,
        onMouseEnter: this.handleMouseEnter,
        onKeyDown: this.handleKeyDown,
        onBlur: this.handleOnBlur,
        className: className,
        style: style
      }), this.state.activeSubMenuIndex !== null && this.renderSubMenu(props, state), props.disableScroller ? table : _react.default.createElement(_ArrowScroller.default, _objectSpread({
        scroller: scrollerArrow
      }, this.getScrollerProps()), table));
    }
  }, {
    key: "renderTable",
    value: function renderTable() {
      var props = this.props,
        state = this.state;
      var className = (0, _join.default)("".concat(props.rootClassName, "__table"), props.tableClassName);
      return _react.default.createElement("table", {
        cellSpacing: 0,
        cellPadding: 0,
        className: className,
        ref: this.setTableRef
      }, _react.default.createElement("tbody", null, this.renderItems()));
    }
  }, {
    key: "renderItems",
    value: function renderItems() {
      var _this3 = this;
      var props = this.props,
        state = this.state;
      if (!props.items) {
        return null;
      }
      var commonProps = this.getCommonItemProps();
      var siblingItemHasSubMenu = this.doesAnyItemHasSubMenu();
      var siblingItemHasSelectInput = this.dosAnyItemHaveSelectInput();
      var hasDescription = props.items.filter(function (item) {
        return !!item.secondaryLabel;
      }).length;
      var hasIcon = props.items.filter(function (item) {
        return !!item.icon;
      }).length;
      return props.items.map(function (item, index, items) {
        if (item === '-') {
          return _react.default.createElement(_MenuSeparator.default, {
            style: props.menuSeparatorStyle,
            key: index,
            rootClassName: props.rootClassName
          });
        }
        var columns = props.columns;
        if (hasDescription) {
          columns = [].concat((0, _toConsumableArray2.default)(columns), [{
            name: 'secondaryLabel',
            isDescription: true,
            style: _objectSpread(_objectSpread({}, props.secondaryLabelStyle), item.secondaryLabelStyle)
          }]);
        }
        if (hasIcon) {
          columns = [{
            name: 'icon',
            isIcon: true
          }].concat((0, _toConsumableArray2.default)(columns));
        }
        if (props.labelStyle || item.labelStyle) {
          columns = columns.map(function (column) {
            if (!column) {
              return column;
            }
            if (typeof column === 'string' && column === 'label') {
              return {
                name: 'label',
                style: _objectSpread(_objectSpread({}, props.labelStyle), item.labelStyle)
              };
            }
            if (column && column.name && column.name === 'label') {
              return _objectSpread(_objectSpread({}, column), {}, {
                style: _objectSpread(_objectSpread({}, columns.style), props.labelStyle)
              });
            }
            return column;
          });
        }
        var hasSubMenu = item.items && !!item.items.length || item.children && !!item.children.length;
        var focused = state.focusedItem === index;
        var expanded = commonProps.expandedIndex === index;
        var className = props.itemClassName;
        var selectionProps = _this3.getSelectionProps(item);
        if (props.enableSelection && siblingItemHasSelectInput && !selectionProps) {
          if (props.selectionInputPosition === 'start') {
            columns = (0, _increaseColSpan.increaseFirstColumnColSpan)(columns);
          } else {
            columns = (0, _increaseColSpan.increaseLastColumnColSpan)(columns);
          }
        }
        if (!hasSubMenu && siblingItemHasSubMenu) {
          columns = (0, _increaseColSpan.increaseLastColumnColSpan)(columns);
        }
        var itemProps = _objectSpread(_objectSpread(_objectSpread({
          index: index,
          item: item,
          hasSubMenu: hasSubMenu,
          items: items,
          focused: focused,
          expanded: expanded,
          className: className,
          columns: columns,
          key: index,
          disabled: item.disabled,
          theme: props.theme,
          ref: _this3.setItemRef(index)
        }, commonProps), selectionProps), item.props);
        var Component = props.itemFactory || _MenuItem.default;
        return _react.default.createElement(Component, _objectSpread({}, itemProps));
      });
    }
  }, {
    key: "getSelectionProps",
    value: function getSelectionProps(item) {
      var props = this.props;
      if (!props.items || props.items && !props.items.length) {
        return null;
      }
      var selected = this.getSelected();
      var singleSelectNames = (0, _getSingleSelectNames.default)({
        items: props.items,
        nameProperty: props.nameProperty
      });
      var selectionProps;
      if (props.enableSelection) {
        var value = item[props.valueProperty];
        var name = item[props.nameProperty];
        var multiple = singleSelectNames && !singleSelectNames[name];
        var checked = multiple ? value !== undefined ? selected[name] === value : selected[name] === name : selected[name] === value;
        if (name) {
          selectionProps = {
            name: name,
            value: value,
            checked: checked,
            multiple: multiple,
            allowUnselect: props.allowUnselect,
            enableSelection: true,
            browserNativeSelectInputs: props.browserNativeSelectInputs,
            renderCheckInput: item.renderCheckInput !== undefined ? item.renderCheckInput : props.renderCheckInput,
            renderRadioInput: item.renderRadioInput !== undefined ? item.renderRadioInput : props.renderRadioInput,
            selectionInputPosition: item.selectionInputPosition !== undefined ? item.selectionInputPosition : props.selectionInputPosition
          };
        }
      }
      return selectionProps;
    }
  }, {
    key: "getCommonItemProps",
    value: function getCommonItemProps() {
      var _objectSpread2;
      var props = this.props;
      var menuHasSubmenu = !!props.items.filter(function (item) {
        return item.items && item.items.length;
      }).length;
      var itemStyleProps = (0, _getItemStyleProps.default)(props);
      return _objectSpread((_objectSpread2 = {
        menuHasSubmenu: menuHasSubmenu,
        expanderStyle: props.expanderStyle,
        expanderSize: props.expanderSize,
        globalCellStyle: props.cellStyle,
        itemDisabledStyle: props.itemDisabledStyle,
        itemDisabledClassName: props.itemDisabledClassName,
        itemOverStyle: props.itemOverStyle,
        itemActiveStyle: props.itemActiveStyle
      }, (0, _defineProperty2.default)(_objectSpread2, "menuHasSubmenu", props.menuHasSubmenu), (0, _defineProperty2.default)(_objectSpread2, "rootClassName", props.rootClassName), (0, _defineProperty2.default)(_objectSpread2, "showWarnings", props.showWarnings), (0, _defineProperty2.default)(_objectSpread2, "titleStyle", props.titleStyle), (0, _defineProperty2.default)(_objectSpread2, "onClick", this.onMenuItemClick), (0, _defineProperty2.default)(_objectSpread2, "onMouseOver", this.onMenuItemMouseEnter), (0, _defineProperty2.default)(_objectSpread2, "onMouseOut", this.onMenuItemMouseLeave), (0, _defineProperty2.default)(_objectSpread2, "submenuWillUnmount", this.onSubmenuWillUnmount), (0, _defineProperty2.default)(_objectSpread2, "onExpanderClick", this.onMenuItemExpanderClick), (0, _defineProperty2.default)(_objectSpread2, "onSelectChange", this.handleSelectionChange), (0, _defineProperty2.default)(_objectSpread2, "selectOnClick", props.selectOnClick), (0, _defineProperty2.default)(_objectSpread2, "expander", props.expander), (0, _defineProperty2.default)(_objectSpread2, "rtl", props.rtl), (0, _defineProperty2.default)(_objectSpread2, "height", props.itemHeight), (0, _defineProperty2.default)(_objectSpread2, "checkIconSize", props.checkIconSize), (0, _defineProperty2.default)(_objectSpread2, "radioIconSize", props.radioIconSize), (0, _defineProperty2.default)(_objectSpread2, "closeSubmenuRecursively", this.closeSubmenuRecursively), (0, _defineProperty2.default)(_objectSpread2, "closeSubMenu", this.closeSubMenu), (0, _defineProperty2.default)(_objectSpread2, "expandedIndex", this.getExpandedIndex()), _objectSpread2), itemStyleProps);
    }
  }, {
    key: "renderSubMenu",
    value: function renderSubMenu(props, state) {
      var domNode = this.node;
      var menuProps = this.getSubMenuProps();
      var wrapperStyle = _getSubMenuStyle.default.bind(this)(_objectSpread(_objectSpread({}, props), {}, {
        alignPositions: this.getDefaultAlignPositions()
      }), state, domNode);
      var wrapperClassName = "".concat(this.props.rootClassName, "__submenu-wrapper");
      return _react.default.createElement("div", {
        className: wrapperClassName,
        ref: this.setSubMenuWrapRef,
        style: wrapperStyle,
        onMouseEnter: this.handleSubMenuMouseEnter,
        onMouseLeave: this.handleSubMenuMouseLeave
      }, _react.default.createElement(InovuaMenu, _objectSpread({
        key: state.activeSubMenuIndex
      }, menuProps)));
    }
  }, {
    key: "hasItemSubMenu",
    value: function hasItemSubMenu(index) {
      var items = this.getItemsByIndex(index);
      return items && items.length;
    }
  }, {
    key: "getItemsByIndex",
    value: function getItemsByIndex(index) {
      var item = this.props.items && this.props.items[index];
      if (!item) {
        return null;
      }
      var items = item && item.items;
      return items;
    }
  }, {
    key: "getSubMenuProps",
    value: function getSubMenuProps() {
      var props = this.props,
        state = this.state;
      var index = this.state.activeSubMenuIndex;
      var items = this.getItemsByIndex(index);
      var item = this.props.items[index];
      var overridingProps = _objectSpread(_objectSpread({}, this.props.submenuProps), item.menuProps);
      if (overridingProps.selected === undefined && overridingProps.defaultSelected === undefined) {
        overridingProps.selected = this.getSelected();
      }
      var menuProps = _objectSpread(_objectSpread(_objectSpread({}, this.props), {}, {
        onDismiss: emptyFn
      }, overridingProps), {}, {
        items: items,
        depth: props.depth + 1,
        ref: this.setSubMenuRef,
        subMenu: true,
        parentMenu: this,
        closeSubMenu: this.closeSubMenu,
        closeSubmenuRecursively: this.closeSubmenuRecursively,
        componentWillUnmount: this.submenuWillUnmount,
        parentIndex: index,
        maxHeight: state.submenuMaxHeight || props.submenuMaxHeight || state.maxHeight || props.maxHeight,
        onActivate: this.onSubMenuActivate,
        onInactivate: this.onSubMenuInactivate,
        scrollerProps: props.scrollerProps,
        constrainTo: props.constrainTo,
        expander: props.expander,
        onSelectionChange: this.handleSubmenuSelectionChange,
        alignPosition: state.submenuAlignPosition
      });
      delete menuProps.autoFocus;
      delete menuProps.className;
      delete menuProps.onClick;
      delete menuProps.defaultFocusedItem;
      delete menuProps.onChildClick;
      delete menuProps.visible;
      return menuProps;
    }
  }, {
    key: "getAlignPositions",
    value: function getAlignPositions(props) {
      if (props.alignPositions == null) {
        return this.getDefaultAlignPositions();
      }
      return props.alignPositions;
    }
  }, {
    key: "getDefaultAlignPositions",
    value: function getDefaultAlignPositions() {
      var props = this.props;
      return props.rtl ? _submenuAlignPositions.alignPositionRTL : _submenuAlignPositions.alignPositionLTR;
    }
  }, {
    key: "getScrollerProps",
    value: function getScrollerProps() {
      var _this4 = this,
        _objectSpread3;
      var props = this.props,
        state = this.state;
      var className = (0, _join.default)(props.scrollerProps.className, "".concat(props.rootClassName, "__scroll-container"));
      var style = (0, _assign.default)({}, props.scrollerProps.style);
      var maxHeight = state.maxHeight != undefined && props.submenu ? state.maxHeight : props.maxHeight;
      if (maxHeight != null) {
        (0, _assign.default)(style, {
          maxHeight: maxHeight
        });
      }
      var scrollProps = _objectSpread(_objectSpread({}, props.scrollerProps), {}, (_objectSpread3 = {
        renderScroller: props.renderScroller,
        nativeScroll: props.nativeScroll,
        scrollContainerProps: props.scrollContainerProps,
        className: className,
        notifyResizeDelay: props.notifyResizeDelay,
        ref: this.setScrollerRef,
        style: style,
        theme: props.theme,
        vertical: true
      }, (0, _defineProperty2.default)(_objectSpread3, "theme", props.theme), (0, _defineProperty2.default)(_objectSpread3, "scrollOnMouseEnter", props.scrollOnMouseEnter), (0, _defineProperty2.default)(_objectSpread3, "onHasScrollChange", function onHasScrollChange(hasScroll) {
        return _this4.setState({
          hasScroll: hasScroll
        });
      }), _objectSpread3));
      return scrollProps;
    }
  }, {
    key: "prepareClassName",
    value: function prepareClassName(props, state) {
      var hidden = props.visible != undefined ? !props.visible : state.hidden;
      var className = (0, _join.default)(props.rootClassName, props.theme && "".concat(props.rootClassName, "--theme-").concat(props.theme), props.className, !props.visible || props.items && !props.items.length && "".concat(props.rootClassName, "--no-display"), props.absolute && "".concat(props.rootClassName, "--absolute"), !props.rtl ? "".concat(props.rootClassName, "--ltr") : "".concat(props.rootClassName, "--rtl"), hidden && "".concat(props.rootClassName, "--hidden"), _isMobile.default && "".concat(props.rootClassName, "--mobile"), props.subMenu && "".concat(props.rootClassName, "__submenu"), "".concat(props.rootClassName, "--depth-").concat(props.depth), state.hasScroll && "".concat(props.rootClassName, "--has-overflow"), props.shadow && "".concat(props.rootClassName, "--shadow"), state.hasScroll && "".concat(props.rootClassName, "--has-scroll"));
      if (props.alignPosition !== undefined) {
        var position = props.alignPosition === 1 ? 'up' : 'down';
        className = (0, _join.default)(className, "".concat(props.rootClassName, "--position-").concat(position));
      }
      if (state.enableAnimation) {
        className = (0, _join.default)(className, "".concat(props.rootClassName, "--animation-enabled"), state.transitionEnded && "".concat(props.rootClassName, "--transition-end"), state.transitionStart && "".concat(props.rootClassName, "--transition-start"));
      }
      return className;
    }
  }, {
    key: "handleMouseEnter",
    value: function handleMouseEnter(event) {
      if (typeof this.props.onMouseEnter === 'function') {
        this.props.onMouseEnter(event);
      }
      this.setState({
        mouseInside: true
      });
      this.onActivate();
    }
  }, {
    key: "handleMouseLeave",
    value: function handleMouseLeave(event) {
      if (typeof this.props.onMouseLeave === 'function') {
        this.props.onMouseLeave(event);
      }
      this.setNextSubmenu();
      this.setState({
        mouseInside: false
      });
      if (!this.state.activeSubMenuIndex && !this.state.nextActiveSubMenuIndex) {
        this.onInactivate({
          hasFocus: this.hasFocus(),
          parentIndex: this.props.parentIndex
        });
      }
    }
  }, {
    key: "handleKeyDown",
    value: function handleKeyDown(event) {
      if (typeof this.props.onKeyDown === 'function') {
        this.props.onKeyDown(event);
      }
      if (!this.props.enableKeyboardNavigation) {
        return;
      }
      var stop = function stop(event) {
        event.stopPropagation();
      };
      stop(event);
      switch (event.key) {
        case 'ArrowUp':
          this.handleArrowUp(event);
          break;
        case 'ArrowDown':
          this.handleArrowDown(event);
          break;
        case 'ArrowLeft':
          this.handleArrowLeft(event);
          break;
        case 'ArrowRight':
          this.handleArrowRight(event);
          break;
        case 'Enter':
          this.handleEnterOnFocusedItem(event);
          break;
        case 'Escape':
          this.handleEscape(event);
        case ' ':
          this.handleSpaceOnFocusedItem(event);
          break;
      }
    }
  }, {
    key: "handleEscape",
    value: function handleEscape(event) {
      if (this.props.dismissWithEscape) {
        this.dismiss(event);
      }
    }
  }, {
    key: "handleArrowUp",
    value: function handleArrowUp(event) {
      var lastItemIndex = this.props.items && this.props.items.length ? this.props.items.length : null;
      var props = this.props;
      var focusedItemIndex = this.state.focusedItem != null ? this.state.focusedItem : lastItemIndex;
      var newFocusedItemIndex = (0, _getNextNavigableItem.default)(props.items, focusedItemIndex, -1);
      if (newFocusedItemIndex == null) {
        return;
      }
      this.setFocusedIndex(newFocusedItemIndex);
    }
  }, {
    key: "handleArrowDown",
    value: function handleArrowDown(event) {
      var props = this.props;
      var focusedItemIndex = this.state.focusedItem != null ? this.state.focusedItem : -1;
      var newFocusedItemIndex = (0, _getNextNavigableItem.default)(props.items, focusedItemIndex, 1);
      if (newFocusedItemIndex == null) {
        return;
      }
      this.setFocusedIndex(newFocusedItemIndex);
    }
  }, {
    key: "handleArrowLeft",
    value: function handleArrowLeft(event) {
      if (this.props.rtl) {
        this.openSubMenuAction(this.state.focusedItem);
      } else {
        this.closeSubMenuAction();
      }
    }
  }, {
    key: "handleArrowRight",
    value: function handleArrowRight(event) {
      if (this.props.rtl) {
        this.closeSubMenuAction();
      } else {
        this.openSubMenuAction(this.state.focusedItem);
      }
    }
  }, {
    key: "handleEnterOnFocusedItem",
    value: function handleEnterOnFocusedItem(event) {
      var focusedItem = this.getFocusedItem();
      if (this.props.simulateClickOnEnterKeyPress && focusedItem != null && typeof focusedItem.handleClick === 'function') {
        focusedItem.handleClick({
          stopPropagation: function stopPropagation() {}
        });
      }
    }
  }, {
    key: "handleSpaceOnFocusedItem",
    value: function handleSpaceOnFocusedItem() {
      var activeItemProps = this.getFocusedItemProps();
      if (!activeItemProps) {
        return;
      }
      this.handleSelectionChange({
        name: activeItemProps.name,
        value: activeItemProps.value,
        checked: !activeItemProps.checked,
        multiple: activeItemProps.multiple
      });
    }
  }, {
    key: "handleOnBlur",
    value: function handleOnBlur(event) {
      var _this5 = this;
      if (typeof this.props.onBlur === 'function') {
        this.props.onBlur(event);
      }
      if (this.props.stopBlurPropagation) {
        event.stopPropagation();
      }
      if (this.preventOnBlurRecursiveClose) {
        return;
      }
      this.dismissTriggeredByBlur = true;
      setTimeout(function () {
        if (!_this5.hasGeneralFocus()) {
          _this5.dismiss(event);
        }
      }, _ua.IS_IE ? this.props.hideSubMenuDelay : 20);
    }
  }, {
    key: "dismiss",
    value: function dismiss(event) {
      this.closeSubmenuRecursively();
      this.props.onDismiss(event);
    }
  }, {
    key: "scrollItemIntoView",
    value: function scrollItemIntoView(index) {
      var itemNode = this.getItemDOMNodeByIndex(index);
      if (!this.scroller || !itemNode) {
        return;
      }
      this.scroller.scrollIntoView(itemNode);
    }
  }, {
    key: "closeSubmenuRecursively",
    value: function closeSubmenuRecursively() {
      this.closeSubMenu();
      this.props.closeSubmenuRecursively();
    }
  }, {
    key: "closeSubMenuAction",
    value: function closeSubMenuAction() {
      if (this.hasSubMenuOpened()) {
        this.closeSubMenu();
      } else if (this.isSubMenu()) {
        this.preventOnBlurRecursiveClose = true;
        this.props.closeSubMenu({
          autoFocus: true
        });
      }
    }
  }, {
    key: "openSubMenuAction",
    value: function openSubMenuAction(focusedItemIndex) {
      var focusedItem = this.getItemByIndex(focusedItemIndex);
      if (!focusedItem) {
        return;
      }
      if (focusedItem && !focusedItem.hasSubmenu()) {
        return;
      }
      if (focusedItemIndex === this.state.activeSubMenuIndex) {
        this.subMenu && this.subMenu.focusFirstItem();
        return;
      }
      var menuOffset = focusedItem && focusedItem.getOffset();
      this.setSubMenu({
        menuOffset: menuOffset,
        index: focusedItemIndex
      });
    }
  }, {
    key: "onActivate",
    value: function onActivate() {
      if (!this.state.activated) {
        this.setState({
          activated: true
        });
        if (this.props.onActivate) {
          this.props.onActivate();
        }
      }
    }
  }, {
    key: "onInactivate",
    value: function onInactivate(options) {
      if (this.state.activated) {
        this.setState({
          activated: false
        });
        if (this.props.onInactivate) {
          this.props.onInactivate(options);
        }
      }
    }
  }, {
    key: "handleSubMenuMouseEnter",
    value: function handleSubMenuMouseEnter() {
      this.setState({
        mouseOverSubMenu: true
      });
    }
  }, {
    key: "handleSubMenuMouseLeave",
    value: function handleSubMenuMouseLeave() {
      this.setState({
        mouseOverSubMenu: false
      });
    }
  }, {
    key: "isSubMenuActive",
    value: function isSubMenuActive() {
      return this.state.subMenuActive;
    }
  }, {
    key: "onSubMenuActivate",
    value: function onSubMenuActivate() {
      this.setState({
        subMenuActive: true
      });
      if (this.closeSubmenuTimeout) {
        clearTimeout(this.closeSubmenuTimeout);
      }
    }
  }, {
    key: "onSubMenuInactivate",
    value: function onSubMenuInactivate(submenuConfig) {
      var _this6 = this;
      var ts = +new Date();
      var nextItem = this.state.nextItem;
      var nextTimestamp = this.state.nextTimestamp || 0;
      this.setState({
        subMenuActive: false,
        timestamp: ts
      }, function () {
        setTimeout(function () {
          if (ts != _this6.state.timestamp || nextItem && ts - nextTimestamp < 100) {
            _this6.setSubMenu({
              menuOffset: _this6.state.nextOffset,
              index: _this6.state.nextActiveSubMenuIndex
            }, function () {
              _this6.focus();
            });
            return;
          } else {
            _this6.focus();
          }
          var mouseHasEnteredSubmenuParentItem = submenuConfig && submenuConfig.parentIndex === _this6.itemOverIndex;
          if (!_this6.isSubMenuActive() && !mouseHasEnteredSubmenuParentItem) {
            _this6.closeSubMenu({
              autoFocus: submenuConfig && submenuConfig.hasFocus
            });
          }
        }, 10);
      });
    }
  }, {
    key: "onMenuItemMouseEnter",
    value: function onMenuItemMouseEnter(_ref) {
      var menuOffset = _ref.menuOffset,
        index = _ref.index,
        hasSubMenu = _ref.hasSubMenu;
      if (!this.componentIsMounted) {
        return;
      }
      this.itemOverIndex = index;
      if (!hasSubMenu) {
        if (this.state.activeSubMenuIndex != null) {
          this.setNextSubmenu({
            menuOffset: null,
            index: null
          });
        }
        return;
      }
      if (this.state.activeSubMenuIndex == null) {
        this.setSubMenu({
          menuOffset: menuOffset,
          index: index
        });
      } else {
        this.setNextSubmenu({
          menuOffset: menuOffset,
          index: index
        });
      }
    }
  }, {
    key: "onMenuItemMouseLeave",
    value: function onMenuItemMouseLeave(_ref2) {
      var leaveOffset = _ref2.leaveOffset,
        index = _ref2.index,
        event = _ref2.event;
      if (this.itemOverIndex === index) {
        this.itemOverIndex = null;
      }
      if (!leaveOffset) {
        return;
      }
      var elementAtMousePosition = globalObject.document.elementFromPoint(leaveOffset.x, leaveOffset.y);
      if (elementAtMousePosition === this.subMenuWrap || (0, _containsNode.default)(this.subMenuWrap, elementAtMousePosition)) {
        return;
      }
      if (this.state.activeSubMenuIndex !== null) {
        this.delayCloseSubmenu(leaveOffset);
      }
      if (this.showTimeout) {
        clearTimeout(this.showTimeout);
      }
    }
  }, {
    key: "delayCloseSubmenu",
    value: function delayCloseSubmenu() {
      var _this7 = this;
      if (!this.componentIsMounted) {
        return;
      }
      if (this.closeSubmenuTimeoutId) {
        return;
      }
      this.closeSubmenuTimeout = setTimeout(function () {
        _this7.closeSubmenuTimeout = null;
        _this7.setSubMenu({
          menuOffset: _this7.state.nextOffset,
          index: _this7.state.nextActiveSubMenuIndex
        });
      }, 100);
    }
  }, {
    key: "removeMouseMoveListener",
    value: function removeMouseMoveListener() {
      if (this.onWindowMouseMove) {
        globalObject.removeEventListener('mousemove', this.onWindowMouseMove);
        this.onWindowMouseMove = null;
      }
    }
  }, {
    key: "setSubMenu",
    value: function setSubMenu() {
      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        menuOffset = _ref3.menuOffset,
        _ref3$index = _ref3.index,
        index = _ref3$index === void 0 ? null : _ref3$index;
      var callback = arguments.length > 1 ? arguments[1] : undefined;
      this.removeMouseMoveListener();
      if (!this.componentIsMounted) {
        return;
      }
      if (this.state.activeSubMenuIndex === index) {
        if (callback) {
          callback();
        }
        return;
      }
      if (this.hasItemSubMenu(index) && !this.state.mouseInside) {
        this.onInactivate();
      }
      this.setState({
        menuOffset: menuOffset,
        activeSubMenuIndex: index,
        nextOffset: null,
        nextTimestamp: null,
        timestamp: +new Date()
      }, callback);
    }
  }, {
    key: "setNextSubmenu",
    value: function setNextSubmenu() {
      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        _ref4$menuOffset = _ref4.menuOffset,
        menuOffset = _ref4$menuOffset === void 0 ? null : _ref4$menuOffset,
        _ref4$index = _ref4.index,
        index = _ref4$index === void 0 ? null : _ref4$index;
      var ts = +new Date();
      this.setState({
        timestamp: ts,
        nextOffset: menuOffset,
        nextActiveSubMenuIndex: index,
        nextTimestamp: +new Date()
      });
    }
  }, {
    key: "closeSubMenu",
    value: function closeSubMenu(options) {
      return;
      this.setSubMenu();
      if (options && options.autoFocus) {
        this.focus();
      }
    }
  }, {
    key: "onMenuItemExpanderClick",
    value: function onMenuItemExpanderClick(event) {
      event.nativeEvent.expanderClick = true;
    }
  }, {
    key: "onMenuItemClick",
    value: function onMenuItemClick() {
      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var itemProps = arguments.length > 1 ? arguments[1] : undefined;
      var index = arguments.length > 2 ? arguments[2] : undefined;
      var props = this.props;
      var stopped = event && event.isPropagationStopped ? event.isPropagationStopped() : false;
      if (props.stopClickPropagation && event.stopPropagation) {
        event.stopPropagation();
      }
      if (_isMobile.default && itemProps && event && event.nativeEvent && event.nativeEvent.expanderClick) {
        var offset = {
          x: event.pageX,
          y: event.pageY
        };
        var menuOffset = (0, _getRegionRelativeToParent.default)(event.currentTarget, props.rootClassName);
        this.onMenuItemMouseEnter({
          hasSubMenu: itemProps.hasSubMenu,
          menuOffset: menuOffset,
          index: itemProps.index
        });
        return;
      }
      if (!stopped) {
        props.onClick(event, itemProps, index);
        if (_isMobile.default && props.onTouchStart) {
          props.onTouchStart(event, itemProps, index);
        }
        var dismissOnClick = itemProps && itemProps.item && itemProps.item.dismissOnClick !== undefined ? itemProps.item.dismissOnClick : props.dismissOnClick;
        if (props.autoDismiss) {
          if (!itemProps.hasSubMenu) {
            this.dismiss();
          } else if (dismissOnClick) {
            props.closeSubmenuRecursively();
          }
        } else if (dismissOnClick) {
          props.closeSubmenuRecursively();
        }
        if (props.selectOnClick && itemProps.name !== undefined) {
          this.handleSelectionChange({
            name: itemProps.name,
            value: itemProps.value,
            checked: !itemProps.checked,
            multiple: itemProps.multiple
          });
        }
        this.onChildClick(event, itemProps);
      }
      if (!this.isSeparator(index)) {
        this.setFocusedIndex(index);
      }
    }
  }, {
    key: "onChildClick",
    value: function onChildClick(event, props) {
      if (this.props.onChildClick) {
        this.props.onChildClick(event, props);
      }
      if (this.props.parentMenu) {
        this.props.parentMenu.onChildClick(event, props);
      }
    }
  }, {
    key: "setupShowHideDelay",
    value: function setupShowHideDelay() {
      var _this8 = this;
      var setSubMenu = this.setSubMenu;
      this.setSubMenu = function () {
        var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          menuOffset = _ref5.menuOffset,
          index = _ref5.index;
        var callback = arguments.length > 1 ? arguments[1] : undefined;
        if (_this8.showTimeout) {
          clearTimeout(_this8.showTimeout);
        }
        if (_this8.hideTimeout) {
          clearTimeout(_this8.hideTimeout);
        }
        if (index != null) {
          if (_this8.props.showSubMenuDelay) {
            _this8.showTimeout = setTimeout(function () {
              return setSubMenu({
                menuOffset: menuOffset,
                index: index
              }, callback);
            }, _this8.props.showSubMenuDelay);
          } else {
            setSubMenu({
              menuOffset: menuOffset,
              index: index
            }, callback);
          }
        } else {
          if (_this8.props.hideSubMenuDelay) {
            _this8.hideTimeout = setTimeout(function () {
              return setSubMenu({
                menuOffset: menuOffset,
                index: index
              }, callback);
            }, _this8.props.hideSubMenuDelay);
          } else {
            setSubMenu({
              menuOffset: menuOffset,
              index: index
            }, callback);
          }
        }
      };
    }
  }, {
    key: "setupEnterAnimation",
    value: function setupEnterAnimation() {
      var _this9 = this;
      setTimeout(function () {
        var enableAnimation = _this9.props.enableAnimation && _this9.props.subMenu || _this9.props.enableRootAnimation && !_this9.props.subMenu;
        if (_this9.componentIsMounted) {
          _this9.setState({
            hidden: false,
            enableAnimation: enableAnimation
          });
        }
        if (enableAnimation) {
          setTimeout(function () {
            if (_this9.componentIsMounted) {
              _this9.setState({
                transitionStart: true
              });
            }
            setTimeout(function () {
              if (_this9.componentIsMounted) {
                _this9.setState({
                  transitionEnded: true
                });
              }
            }, 16);
          }, 16);
        }
      }, 0);
    }
  }, {
    key: "checkAlignment",
    value: function checkAlignment(props, skipReset, alignTo) {
      var _this10 = this;
      props = props || this.props;
      alignTo = alignTo || props.alignTo;
      if (alignTo && alignTo instanceof HTMLElement && !(0, _containsNode.default)(document.body, alignTo)) {
        return;
      }
      if (props.visible === false) {
        return;
      }
      if ((props.constrainTo || alignTo) && !props.subMenu) {
        var doAlign = function doAlign() {
          var props = _this10.props;
          var alignPositions = _this10.getAlignPositions(props);
          var domNode = _this10.node;
          if (!domNode) {
            return;
          }
          domNode.style.visibility = '';
          var alignOffset = (0, _prepareAlignOffset.default)(props.alignOffset);
          var domRegion = _regionAlign.default.from(domNode);
          var actualRegion = domRegion.clone();
          var constrainRegion = props.constrainTo ? (0, _getConstrainRegion.default)(props.constrainTo, domNode) : null;
          var positionStyle;
          if (alignTo) {
            var alignRegion = getAlignToRegion(alignTo, domNode);
            actualRegion.alignTo(alignRegion, alignPositions, {
              offset: alignOffset,
              constrain: constrainRegion
            });
            var offsetParent = domNode.offsetParent;
            if (_ua.IS_FF && offsetParent === document.body && getComputedStyle(domNode).position === 'fixed') {
              offsetParent = null;
            }
            var offsetParentRect = offsetParent ? null : domNode.getBoundingClientRect();
            var offsetParentRegion = _regionAlign.default.from(offsetParent || {
              top: offsetParentRect.top,
              left: offsetParentRect.left
            });
            var newTop = actualRegion.top - offsetParentRegion.top;
            var newLeft = actualRegion.left - offsetParentRegion.left;
            var transform = "translate3d(".concat(Math.floor(newLeft), "px, ").concat(Math.floor(newTop), "px, 0px)");
            positionStyle = {
              transform: transform,
              top: 0,
              left: 0
            };
          }
          if (constrainRegion) {
            positionStyle = positionStyle || {};
            if (actualRegion.bottom >= constrainRegion.bottom) {
              positionStyle.maxHeight = constrainRegion.bottom - actualRegion.top;
            }
          }
          if (positionStyle) {
            _this10.setState({
              positionStyle: positionStyle
            });
          }
        };
        if (!skipReset) {
          this.node.style.transform = 'translate3d(0px, 0px, 0px)';
          this.node.style.visibility = 'hidden';
          this.node.style.top = '0px';
          this.node.style.left = '0px';
        }
        raf(doAlign);
      }
    }
  }, {
    key: "setFocusedIndex",
    value: function setFocusedIndex(newFocusedItem) {
      if (this.props.enableKeyboardNavigation) {
        var focusedItem = this.state.focusedItem;
        if (focusedItem === newFocusedItem) {
          newFocusedItem = null;
        }
        this.scrollItemIntoView(newFocusedItem);
        this.setState({
          focusedItem: newFocusedItem
        });
      }
    }
  }, {
    key: "getItemDOMNodeByIndex",
    value: function getItemDOMNodeByIndex(index) {
      var item = this.getItemByIndex(index);
      var itemNode = item && item.getDOMNode();
      return itemNode;
    }
  }, {
    key: "getItemByIndex",
    value: function getItemByIndex(index) {
      return this.childrenRefs[index];
    }
  }, {
    key: "getItemPropsByIndex",
    value: function getItemPropsByIndex(index) {
      var item = this.getItemByIndex(index);
      return item && item.props;
    }
  }, {
    key: "getFocusedItemProps",
    value: function getFocusedItemProps() {
      var focusedItemIndex = this.state.focusedItem;
      var focusedItemProps = this.getItemPropsByIndex(focusedItemIndex);
      return focusedItemProps;
    }
  }, {
    key: "getFocusedItem",
    value: function getFocusedItem() {
      return this.state.focusedItem != null && this.getItemByIndex(this.state.focusedItem);
    }
  }, {
    key: "focus",
    value: function focus() {
      if (!this.node) {
        return;
      }
      if (this.node.focus) {
        this.node.focus();
      }
    }
  }, {
    key: "hasSubMenuOpened",
    value: function hasSubMenuOpened() {
      return this.state.activeSubMenuIndex != null;
    }
  }, {
    key: "isSubMenu",
    value: function isSubMenu() {
      return !!this.props.subMenu;
    }
  }, {
    key: "doesAnyItemHasSubMenu",
    value: function doesAnyItemHasSubMenu() {
      var props = this.props;
      return props.items && !!props.items.filter(function (item) {
        return item.items && item.items.length;
      }).length;
    }
  }, {
    key: "dosAnyItemHaveSelectInput",
    value: function dosAnyItemHaveSelectInput() {
      var _this11 = this;
      var props = this.props;
      return props.items && !!props.items.filter(function (item) {
        return item[_this11.props.nameProperty];
      }).length;
    }
  }, {
    key: "hasGeneralFocus",
    value: function hasGeneralFocus() {
      var hasFocus = this.hasFocus();
      if (hasFocus) {
        return hasFocus;
      }
      if (this.hasSubMenuOpened()) {
        return this.hasSubMenuFocus();
      }
      return this.hasChildFocus();
    }
  }, {
    key: "hasSubMenuFocus",
    value: function hasSubMenuFocus() {
      if (this.subMenu) {
        return this.subMenu.hasFocus();
      }
      return null;
    }
  }, {
    key: "hasFocus",
    value: function hasFocus() {
      return globalObject.document ? this.node === globalObject.document.activeElement : false;
    }
  }, {
    key: "hasChildFocus",
    value: function hasChildFocus() {
      if (!globalObject.document) {
        return false;
      }
      return (0, _containsNode.default)(this.node, globalObject.document.activeElement);
    }
  }, {
    key: "onSubmenuWillUnmount",
    value: function onSubmenuWillUnmount(instance, config) {
      var _this12 = this;
      if (config && config.hasFocus) {
        setTimeout(function () {
          _this12.focus();
        }, 0);
      }
    }
  }, {
    key: "focusFirstItem",
    value: function focusFirstItem() {
      var fistNonDisabledItem = (0, _getFirstNonDisabledItem.default)(this.props.items);
      this.focusItem(fistNonDisabledItem);
    }
  }, {
    key: "focusItem",
    value: function focusItem(index) {
      this.focus();
      this.setFocusedIndex(index);
    }
  }, {
    key: "getSubmenuNode",
    value: function getSubmenuNode() {
      return this.subMenu && this.subMenu.getNode();
    }
  }, {
    key: "getNode",
    value: function getNode() {
      return this.node;
    }
  }, {
    key: "getSelected",
    value: function getSelected() {
      return this.isSelectedControlled() ? this.props.selected : this.state.selected;
    }
  }, {
    key: "isSelectedControlled",
    value: function isSelectedControlled() {
      return this.props.selected !== undefined;
    }
  }, {
    key: "handleSelectionChange",
    value: function handleSelectionChange(_ref6) {
      var name = _ref6.name,
        value = _ref6.value,
        checked = _ref6.checked,
        multiple = _ref6.multiple;
      var newSelected = _objectSpread({}, this.getSelected());
      var options = {
        name: name,
        value: value,
        checked: checked,
        multiple: multiple
      };
      if (!multiple) {
        newSelected[name] = value;
      } else if (checked) {
        newSelected[name] = value === undefined ? name : value;
      }
      if (!checked) {
        if (multiple || this.props.allowUnselect) {
          delete newSelected[name];
        }
      }
      this.setSelected(newSelected, options);
    }
  }, {
    key: "setSelected",
    value: function setSelected(newSelected, options) {
      if (!this.isSelectedControlled()) {
        this.setState({
          selected: newSelected
        });
      }
      this.props.onSelectionChange(newSelected, options);
    }
  }, {
    key: "handleSubmenuSelectionChange",
    value: function handleSubmenuSelectionChange(selected, options) {
      this.setSelected(selected, options);
    }
  }, {
    key: "getExpandedIndex",
    value: function getExpandedIndex() {
      return this.state.activeSubMenuIndex;
    }
  }, {
    key: "isSeparator",
    value: function isSeparator(index) {
      var props = this.props;
      var separatorIndexes = (0, _getSeparatorIndexes.default)(props.items);
      return separatorIndexes.indexOf(index) !== -1;
    }
  }]);
  return InovuaMenu;
}(_reactClass.default);
InovuaMenu.defaultProps = {
  rootClassName: 'inovua-react-toolkit-menu',
  depth: 0,
  rtl: false,
  isMenu: true,
  enableScroll: true,
  submenuStyle: null,
  scrollerProps: {},
  theme: 'default-light',
  dismissOnClick: true,
  disableScroller: false,
  shadow: true,
  submenuAlignOffset: _submenuAlignPositions.alignOffsetLTR,
  rtlSubmenuAlignOffset: _submenuAlignPositions.alignOffsetRTL,
  showSubMenuDelay: 150,
  hideSubMenuDelay: 150,
  expanderSize: 10,
  scrollOnMouseEnter: true,
  onClick: function onClick() {},
  onSelectionChange: function onSelectionChange() {},
  columns: ['label'],
  items: null,
  maxHeight: 'auto',
  scrollArrowIncrementType: 'step',
  enableAnimation: true,
  fadeDuration: 100,
  fadeTransitionFunction: 'ease',
  enableRootAnimation: false,
  itemStyle: {},
  itemOverStyle: {},
  itemDisabledStyle: {},
  itemExpandedStyle: {},
  cellStyle: {},
  stopClickPropagation: true,
  stopBlurPropagation: true,
  scrollProps: {},
  inTriangleWaitDelay: 300,
  alignOffset: {
    x: 0,
    y: 0
  },
  simulateClickOnEnterKeyPress: true,
  enableKeyboardNavigation: true,
  defaultFocusedItem: null,
  autoFocus: false,
  closeSubMenu: function closeSubMenu() {},
  closeSubmenuRecursively: function closeSubmenuRecursively() {},
  onDismiss: function onDismiss() {},
  componentWillUnmount: function componentWillUnmount() {},
  componentDidMount: function componentDidMount() {},
  useMouseInTriangleCheck: false,
  allowUnselect: false,
  enableSelection: false,
  nameProperty: 'name',
  valueProperty: 'value',
  selectionInputPosition: 'start',
  defaultSelected: {},
  selectOnClick: true,
  checkIconSize: 16,
  radioIconSize: 16,
  notifyResizeDelay: 16,
  browserNativeSelectInputs: false,
  showWarnings: !_uglified.default
};
InovuaMenu.propTypes = {
  rootClassName: _propTypes.default.string,
  items: _propTypes.default.array,
  columns: _propTypes.default.array,
  dismissOnClick: _propTypes.default.bool,
  autoDismiss: _propTypes.default.bool,
  disableScroller: _propTypes.default.bool,
  showSubMenuDelay: _propTypes.default.number,
  hideSubMenuDelay: _propTypes.default.number,
  notifyResizeDelay: _propTypes.default.number,
  scrollOnMouseEnter: _propTypes.default.bool,
  padding: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  border: _propTypes.default.string,
  borderRadius: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  rowActiveStyle: _propTypes.default.object,
  rowOverStyle: _propTypes.default.object,
  rowStyle: _propTypes.default.object,
  maxHeight: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  submenuMaxHeight: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  minSize: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string, _propTypes.default.shape({
    height: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
    width: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string])
  })]),
  maxSize: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string, _propTypes.default.shape({
    height: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
    width: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string])
  })]),
  onClick: _propTypes.default.func,
  showScrollArrows: _propTypes.default.bool,
  scrollProps: _propTypes.default.object,
  scrollArrowIncrementType: _propTypes.default.oneOf(['step', 'page']),
  renderScroller: _propTypes.default.func,
  enableAnimation: _propTypes.default.bool,
  fadeDuration: _propTypes.default.number,
  fadeTransitionFunction: _propTypes.default.string,
  enableRootAnimation: _propTypes.default.bool,
  itemStyle: _propTypes.default.object,
  itemClassName: _propTypes.default.string,
  itemActiveStyle: _propTypes.default.object,
  itemActiveClassName: _propTypes.default.string,
  itemOverStyle: _propTypes.default.object,
  itemOverClassName: _propTypes.default.string,
  itemDisabledStyle: _propTypes.default.object,
  itemDisabledClassName: _propTypes.default.string,
  itemExpandedStyle: _propTypes.default.object,
  itemExpandedClassName: _propTypes.default.string,
  itemFocusedStyle: _propTypes.default.object,
  itemFocusedClassName: _propTypes.default.string,
  itemOverFocusedStyle: _propTypes.default.object,
  visible: _propTypes.default.bool,
  itemHeight: _propTypes.default.number,
  cellStyle: _propTypes.default.object,
  secondaryLabelStyle: _propTypes.default.object,
  labelStyle: _propTypes.default.object,
  titleStyle: _propTypes.default.object,
  alignTo: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func, _propTypes.default.string]),
  inTriangleWaitDelay: _propTypes.default.number,
  alignPositions: _propTypes.default.arrayOf(_propTypes.default.string),
  alignOffset: _propTypes.default.oneOfType([_propTypes.default.array, _propTypes.default.object, _propTypes.default.number]),
  submenuAlignOffset: _propTypes.default.oneOfType([_propTypes.default.array, _propTypes.default.shape({
    x: _propTypes.default.number,
    y: _propTypes.default.number
  }), _propTypes.default.number]),
  rtlSubmenuAlignOffset: _propTypes.default.oneOfType([_propTypes.default.array, _propTypes.default.shape({
    x: _propTypes.default.number,
    y: _propTypes.default.number
  }), _propTypes.default.number]),
  alignPosition: _propTypes.default.oneOf([1, -1]),
  rtl: _propTypes.default.bool,
  enableKeyboardNavigation: _propTypes.default.bool,
  defaultFocusedItem: _propTypes.default.number,
  autoFocus: _propTypes.default.bool,
  closeSubMenu: _propTypes.default.func,
  closeSubmenuRecursively: _propTypes.default.func,
  simulateClickOnEnterKeyPress: _propTypes.default.bool,
  onChildClick: _propTypes.default.func,
  onDismiss: _propTypes.default.func,
  expanderStyle: _propTypes.default.object,
  depth: _propTypes.default.number,
  isMenu: _propTypes.default.bool,
  constrainTo: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string, _propTypes.default.bool, _propTypes.default.func]),
  enableScroll: _propTypes.default.bool,
  submenuStyle: _propTypes.default.object,
  scrollerProps: _propTypes.default.object,
  theme: _propTypes.default.string,
  stopClickPropagation: _propTypes.default.bool,
  componentWillUnmount: _propTypes.default.func,
  componentDidMount: _propTypes.default.func,
  itemStyleProps: _propTypes.default.object,
  childrenLength: _propTypes.default.number,
  separatorIndexes: _propTypes.default.string,
  tableClassName: _propTypes.default.string,
  shadow: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),
  stopBlurPropagation: _propTypes.default.bool,
  submenuProps: _propTypes.default.object,
  menuHasSubmenu: _propTypes.default.bool,
  depthSet: _propTypes.default.bool,
  subMenu: _propTypes.default.bool,
  parentIndex: _propTypes.default.number,
  parentMenu: _propTypes.default.object,
  onActivate: _propTypes.default.func,
  onInactivate: _propTypes.default.func,
  expander: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.bool, _propTypes.default.func]),
  expanderSize: _propTypes.default.number,
  overStyle: _propTypes.default.object,
  activeStyle: _propTypes.default.object,
  disabledStyle: _propTypes.default.object,
  expandedStyle: _propTypes.default.object,
  menuSeparatorStyle: _propTypes.default.object,
  useMouseInTriangleCheck: _propTypes.default.bool,
  selected: _propTypes.default.object,
  defaultSelected: _propTypes.default.object,
  allowUnselect: _propTypes.default.bool,
  enableSelection: _propTypes.default.bool,
  nativeScroll: _propTypes.default.bool,
  scrollContainerProps: _propTypes.default.object,
  nameProperty: _propTypes.default.string,
  valueProperty: _propTypes.default.string,
  renderCheckInput: _propTypes.default.func,
  renderRadioInput: _propTypes.default.func,
  onSelectionChange: _propTypes.default.func,
  selectionInputPosition: _propTypes.default.oneOf(['start', 'end']),
  selectOnClick: _propTypes.default.bool,
  checkIconSize: _propTypes.default.number,
  radioIconSize: _propTypes.default.number,
  showWarnings: _propTypes.default.bool,
  updatePositionOnScroll: _propTypes.default.bool,
  browserNativeSelectInputs: _propTypes.default.bool,
  dismissWithEscape: _propTypes.default.bool
};
var _default = InovuaMenu;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/MenuItem/MenuItemCell.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/MenuItem/MenuItemCell.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _reactClass = _interopRequireDefault(__webpack_require__(/*! ../../../../packages/react-class */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/index.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _cleanProps = _interopRequireDefault(__webpack_require__(/*! ../../../../common/cleanProps */ "./node_modules/@inovua/reactdatagrid-community/common/cleanProps.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var MenuItemCell = function (_Component) {
  (0, _inherits2.default)(MenuItemCell, _Component);
  var _super = _createSuper(MenuItemCell);
  function MenuItemCell() {
    (0, _classCallCheck2.default)(this, MenuItemCell);
    return _super.apply(this, arguments);
  }
  (0, _createClass2.default)(MenuItemCell, [{
    key: "render",
    value: function render() {
      var props = this.props;
      var cellProps = props.cellProps,
        rootClassName = props.rootClassName,
        align = props.align,
        rtl = props.rtl;
      var children = props.expander || props.children;
      var className = (0, _join.default)(props.className, cellProps.className, "".concat(rootClassName, "__cell"), rtl ? "".concat(rootClassName, "__cell--rtl") : "".concat(rootClassName, "__cell--ltr"), props.isDescription && "".concat(rootClassName, "__cell--secondaryLabel"), props.isIcon && "".concat(rootClassName, "__cell--icon"));
      var style = _objectSpread(_objectSpread({}, props.style), cellProps.style);
      if (align) {
        style.textAlign = align;
      }
      return _react.default.createElement("td", _objectSpread(_objectSpread(_objectSpread({}, (0, _cleanProps.default)(props, MenuItemCell.propTypes)), cellProps), {}, {
        style: style,
        className: className
      }), children);
    }
  }]);
  return MenuItemCell;
}(_reactClass.default);
exports["default"] = MenuItemCell;
MenuItemCell.defaultProps = {
  cellProps: {}
};
MenuItemCell.propTypes = {
  isDescription: _propTypes.default.bool,
  isIcon: _propTypes.default.bool,
  rootClassName: _propTypes.default.string,
  column: _propTypes.default.object,
  cellProps: _propTypes.default.object,
  rtl: _propTypes.default.bool,
  expander: _propTypes.default.node,
  align: _propTypes.default.oneOf(['start', 'end', 'center', 'left', 'right'])
};

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/MenuItem/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/MenuItem/index.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _reactClass = _interopRequireDefault(__webpack_require__(/*! ../../../../packages/react-class */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/index.js"));
var _MenuItemCell = _interopRequireDefault(__webpack_require__(/*! ./MenuItemCell */ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/MenuItem/MenuItemCell.js"));
var _Expander = _interopRequireDefault(__webpack_require__(/*! ../Expander */ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/Expander.js"));
var _renderCell = _interopRequireDefault(__webpack_require__(/*! ./renderCell */ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/MenuItem/renderCell.js"));
var _CheckBox = _interopRequireDefault(__webpack_require__(/*! ../../../CheckBox */ "./node_modules/@inovua/reactdatagrid-community/packages/CheckBox/index.js"));
var _RadioButton = _interopRequireDefault(__webpack_require__(/*! ../../../RadioButton */ "./node_modules/@inovua/reactdatagrid-community/packages/RadioButton/index.js"));
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _cleanProps = _interopRequireDefault(__webpack_require__(/*! ../../../../common/cleanProps */ "./node_modules/@inovua/reactdatagrid-community/common/cleanProps.js"));
var _getRegionRelativeToParent = _interopRequireDefault(__webpack_require__(/*! ../getRegionRelativeToParent */ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/getRegionRelativeToParent.js"));
var _getGlobal = __webpack_require__(/*! ../../../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var globalObject = (0, _getGlobal.getGlobal)();
var emptyFn = function emptyFn() {};
var MenuItem = function (_Component) {
  (0, _inherits2.default)(MenuItem, _Component);
  var _super = _createSuper(MenuItem);
  function MenuItem(props) {
    var _this;
    (0, _classCallCheck2.default)(this, MenuItem);
    _this = _super.call(this, props);
    _this.state = {};
    return _this;
  }
  (0, _createClass2.default)(MenuItem, [{
    key: "render",
    value: function render() {
      var _this2 = this;
      var props = this.preparedProps = this.prepareProps(this.props, this.state);
      var className = props.className;
      return _react.default.createElement("tr", _objectSpread(_objectSpread({}, (0, _cleanProps.default)(props, MenuItem.propTypes)), {}, {
        style: props.style,
        className: className,
        ref: function ref(node) {
          return _this2.node = node;
        }
      }), this.renderCells());
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      this.componentIsMounted = true;
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.componentIsMounted = false;
    }
  }, {
    key: "prepareProps",
    value: function prepareProps(props, state) {
      var preparedProps = _objectSpread(_objectSpread({}, props), {}, {
        mouseOver: !!state.mouseOver,
        active: !!state.active,
        disabled: !!props.disabled,
        className: this.getClassName(),
        style: this.getStyle(),
        onClick: this.handleClick,
        onMouseEnter: this.handleMouseEnter,
        onMouseLeave: this.handleMouseLeave,
        onMouseDown: this.handleMouseDown,
        onTouchStart: this.handleTouchStart
      });
      if (props.item.isTitle) {
        delete preparedProps.mouseOver;
        delete preparedProps.active;
        delete preparedProps.onClick;
        delete preparedProps.onMouseEnter;
        delete preparedProps.onMouseLeave;
        delete preparedProps.onMouseDown;
        delete preparedProps.onTouchStart;
      }
      return preparedProps;
    }
  }, {
    key: "handleClick",
    value: function handleClick(event) {
      var props = this.props;
      if (props.disabled && event.stopPropagation) {
        event.stopPropagation();
        return;
      }
      if (this.props.onClick) {
        this.props.onClick(event, props, props.index);
      }
      if (this.props.item.onClick) {
        this.props.item.onClick(event, props, props.index);
      }
    }
  }, {
    key: "handleMouseDown",
    value: function handleMouseDown() {
      var _this3 = this;
      var mouseUpListener = function mouseUpListener() {
        if (_this3.componentIsMounted) {
          _this3.setState({
            active: false
          });
        }
        globalObject.removeEventListener('mouseup', mouseUpListener);
      };
      globalObject.addEventListener('mouseup', mouseUpListener);
      if (this.componentIsMounted) {
        this.setState({
          active: true
        });
      }
    }
  }, {
    key: "handleTouchStart",
    value: function handleTouchStart(event) {
      var _this4 = this;
      var props = this.props;
      var mouseUpListener = function mouseUpListener() {
        if (_this4.componentIsMounted) {
          _this4.setState({
            active: false
          });
        }
        globalObject.removeEventListener('touchend', mouseUpListener);
      };
      globalObject.addEventListener('touchend', mouseUpListener);
      if (this.componentIsMounted) {
        this.setState({
          active: true
        });
      }
      if (!this.props.item.items) {
        return;
      }
      if (this.state.mouseOver) {
        this.handleMouseLeave(event);
      } else {
        this.handleMouseEnter(event);
      }
    }
  }, {
    key: "showMenu",
    value: function showMenu(menu, props) {
      props.showMenu(menu, this.getOffset());
    }
  }, {
    key: "handleMouseEnter",
    value: function handleMouseEnter(event) {
      var props = this.props;
      if (props.disabled) {
        return;
      }
      this.mouseInside = true;
      this.setState({
        mouseOver: true
      });
      if (props.onMouseOver) {
        var menuOffset;
        if (props.hasSubMenu) {
          menuOffset = this.getOffset();
        }
        props.onMouseOver({
          event: event,
          menuOffset: menuOffset,
          itemProps: props,
          index: props.index,
          hasSubMenu: props.hasSubMenu
        });
      }
    }
  }, {
    key: "handleMouseLeave",
    value: function handleMouseLeave(event) {
      var props = this.props;
      if (props.disabled) {
        return;
      }
      var offset = {
        x: event.clientX,
        y: event.clientY
      };
      if (this.componentIsMounted) {
        this.setState({
          active: false,
          mouseOver: false
        });
      }
      if (props.onMouseOut) {
        props.onMouseOut({
          itemPorps: props,
          leaveOffset: offset,
          index: props.index,
          hasSubMenu: props.hasSubMenu
        });
      }
    }
  }, {
    key: "renderCells",
    value: function renderCells() {
      var props = this.props;
      var cells = props.columns.map(function () {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _renderCell.default.apply(void 0, [props].concat(args));
      });
      if (props.enableSelection && props.name) {
        var input = this.renderSelectInput();
        if (this.props.selectionInputPosition === 'end') {
          cells.push(input);
        } else {
          cells.unshift(input);
        }
      }
      if (props.hasSubMenu) {
        var expander = this.renderExpander();
        cells.push(expander);
      }
      return cells;
    }
  }, {
    key: "getCommonCellProps",
    value: function getCommonCellProps() {
      var props = this.props;
      return {
        rootClassName: props.rootClassName,
        rtl: props.rtl
      };
    }
  }, {
    key: "renderSelectInput",
    value: function renderSelectInput() {
      var _this5 = this;
      var props = this.props;
      var multiple = props.multiple;
      var className = (0, _join.default)("".concat(props.rootClassName, "__cell__input"), props.browserNativeSelectInputs && "".concat(props.rootClassName, "__cell__input--browser-native"), multiple && "".concat(props.rootClassName, "__cell__input--multiple"));
      var onChange = function onChange(checked) {
        if (checked === undefined) {
          checked = !props.checked;
        }
        if (typeof checked !== 'boolean' && _this5.props.showWarnings) {
          console.warn('"onChange" should be called with a boolean param!');
        }
        props.onSelectChange({
          name: props.name,
          value: props.value,
          multiple: multiple,
          checked: checked
        });
      };
      var inputProps = {
        className: className,
        onChange: props.selectOnClick ? emptyFn : onChange,
        iconSize: multiple ? props.checkIconSize : props.radioIconSize,
        name: props.name,
        disabled: props.disabled,
        checked: props.checked,
        focusable: false,
        supportIndeterminate: false,
        browserNative: props.browserNativeSelectInputs,
        theme: props.theme
      };
      var cellProps = _objectSpread({
        key: 'select'
      }, this.getCommonCellProps());
      cellProps.className = (0, _join.default)(cellProps.className, "".concat(props.rootClassName, "__cell--has-input"), props.multiple && "".concat(props.rootClassName, "__cell--checkbox"), !props.multiple && "".concat(props.rootClassName, "__cell--radio"));
      var Input = multiple ? _CheckBox.default : _RadioButton.default;
      var renderFunction = multiple ? this.props.renderCheckInput : this.props.renderRadioInput;
      var result;
      if (typeof renderFunction === 'function') {
        result = renderFunction({
          domProps: inputProps,
          onChange: onChange,
          disabled: props.disabled,
          checked: props.checked
        });
      }
      if (result === undefined) {
        result = _react.default.createElement(Input, _objectSpread({}, inputProps));
      }
      return _react.default.createElement(_MenuItemCell.default, _objectSpread({}, cellProps), result);
    }
  }, {
    key: "renderExpander",
    value: function renderExpander() {
      var props = this.props;
      var expander = props.expander;
      if (props.item && props.item.expander !== undefined) {
        expander = props.item.expander;
      }
      var style = _objectSpread(_objectSpread({}, props.expanderStyle), props.item && props.item.expanderStyle);
      var expanderProps = _objectSpread({
        style: style,
        size: props.expanderSize,
        onClick: props.onExpanderClick
      }, this.getCommonCellProps());
      if (typeof expander === 'function') {
        expander = expander(expanderProps, props.item);
      }
      if (expander === undefined || expander === true) {
        expander = _react.default.createElement(_Expander.default, _objectSpread({}, expanderProps));
      }
      return _react.default.createElement(_MenuItemCell.default, _objectSpread({
        key: "expander",
        className: "".concat(props.rootClassName, "__cell--has-expander"),
        expander: expander
      }, expanderProps));
    }
  }, {
    key: "getStyle",
    value: function getStyle() {
      var props = this.props,
        state = this.state;
      var style = (0, _assign.default)({}, props.style, props.item.style);
      if (props.item.isTitle && props.titleStyle) {
        (0, _assign.default)(style, props.titleStyle, props.item.titleStyle);
      }
      if (state.mouseOver) {
        (0, _assign.default)(style, props.itemOverStyle, props.overStyle, props.item.overStyle);
      }
      if (state.active) {
        (0, _assign.default)(style, props.itemActiveStyle, props.activeStyle, props.item.activeStyle);
      }
      if (props.expanded) {
        (0, _assign.default)(style, props.expandedStyle, props.item.expandedStyle);
      }
      if (props.focused) {
        (0, _assign.default)(style, props.focusedStyle, props.item.focusedStyle);
      }
      if (props.focused && state.mouseOver) {
        (0, _assign.default)(style, props.overFocusedStyle, props.item.overFocusedStyle);
      }
      if (props.height) {
        (0, _assign.default)(style, {
          height: props.height
        });
      }
      if (props.disabled) {
        (0, _assign.default)(style, props.itemDisabledStyle, props.disabledStyle, props.item.disabledStyle);
      }
      return style;
    }
  }, {
    key: "getClassName",
    value: function getClassName() {
      var props = this.props,
        state = this.state;
      var baseClassName = "".concat(props.rootClassName, "__row");
      var className = (0, _join.default)(props.className, props.item.className, baseClassName, state.mouseOver && "".concat(baseClassName, "--over"), state.mouseOver && props.item.overClassName, state.mouseOver && props.overClassName, state.active && "".concat(baseClassName, "--active"), state.active && props.item.activeClassName, state.active && props.activeClassName, props.expanded && "".concat(baseClassName, "--expanded"), props.expanded && props.item.expandedClassName, props.expanded && props.expandedClassName, props.focused && "".concat(baseClassName, "--focused"), props.focused && props.item.focusedClassName, props.focused && props.focusedClassName, props.item.isTitle && "".concat(baseClassName, "--title"), props.checked && "".concat(baseClassName, "--checked"));
      if (props.disabled) {
        className = (0, _join.default)(props.className, baseClassName, props.disabled && "".concat(baseClassName, "--disabled"), props.disabled && props.itemDisabledClassName, props.disabled && props.item.disabledClassName);
      }
      return className;
    }
  }, {
    key: "getOffset",
    value: function getOffset() {
      return (0, _getRegionRelativeToParent.default)(this.node, this.props.rootClassName);
    }
  }, {
    key: "getPreparedProps",
    value: function getPreparedProps() {
      return this.preparedProps;
    }
  }, {
    key: "hasSubmenu",
    value: function hasSubmenu() {
      return !!this.props.hasSubMenu;
    }
  }, {
    key: "getDOMNode",
    value: function getDOMNode() {
      return this.node;
    }
  }, {
    key: "getValue",
    value: function getValue() {
      var props = this.props;
      return props.item[props.valueProperty];
    }
  }, {
    key: "getName",
    value: function getName() {
      var props = this.props;
      return props.item[props.valueProperty];
    }
  }]);
  return MenuItem;
}(_reactClass.default);
MenuItem.defaultProps = {
  isMenuItem: true,
  item: {},
  columns: ['label'],
  enableSelection: false,
  allowUnselect: false
};
MenuItem.propTypes = {
  rootClassName: _propTypes.default.string,
  style: _propTypes.default.object,
  titleStyle: _propTypes.default.object,
  height: _propTypes.default.number,
  dismissOnClick: _propTypes.default.bool,
  siblingItemHasSubMenu: _propTypes.default.bool,
  overStyle: _propTypes.default.object,
  overClassName: _propTypes.default.string,
  activeStyle: _propTypes.default.object,
  activeClassName: _propTypes.default.string,
  disabledStyle: _propTypes.default.object,
  disabledClassName: _propTypes.default.string,
  expandedStyle: _propTypes.default.object,
  expandedClassName: _propTypes.default.string,
  focusedStyle: _propTypes.default.object,
  focusedClassName: _propTypes.default.string,
  cellStyle: _propTypes.default.object,
  expanderStyle: _propTypes.default.object,
  overFocusedStyle: _propTypes.default.object,
  columns: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object])),
  item: _propTypes.default.object,
  expanded: _propTypes.default.bool,
  globalCellStyle: _propTypes.default.object,
  itemDisabledStyle: _propTypes.default.object,
  itemDisabledClassName: _propTypes.default.string,
  itemOverStyle: _propTypes.default.object,
  itemActiveStyle: _propTypes.default.object,
  menuHasSubmenu: _propTypes.default.bool,
  hasSubMenu: _propTypes.default.bool,
  items: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string])),
  isMenuItem: _propTypes.default.bool,
  focused: _propTypes.default.bool,
  index: _propTypes.default.number,
  rtl: _propTypes.default.bool,
  expander: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.bool, _propTypes.default.func]),
  expanderSize: _propTypes.default.number,
  expandedIndex: _propTypes.default.number,
  onExpanderClick: _propTypes.default.func,
  closeSubMenu: _propTypes.default.func,
  closeSubmenuRecursively: _propTypes.default.func,
  submenuWillUnmount: _propTypes.default.func,
  onMouseOver: _propTypes.default.func,
  onMouseOut: _propTypes.default.func,
  mouseOver: _propTypes.default.bool,
  active: _propTypes.default.bool,
  menu: _propTypes.default.node,
  onSelectChange: _propTypes.default.func,
  enableSelection: _propTypes.default.bool,
  allowUnselect: _propTypes.default.bool,
  selectOnClick: _propTypes.default.bool,
  name: _propTypes.default.any,
  value: _propTypes.default.any,
  renderCheckInput: _propTypes.default.func,
  renderRadioInput: _propTypes.default.func,
  selectionInputPosition: _propTypes.default.oneOf(['start', 'end']),
  checkIconSize: _propTypes.default.number,
  radioIconSize: _propTypes.default.number,
  browserNativeSelectInputs: _propTypes.default.bool,
  showWarnings: _propTypes.default.bool
};
var _default = MenuItem;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/MenuItem/renderCell.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/MenuItem/renderCell.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _MenuItemCell = _interopRequireDefault(__webpack_require__(/*! ./MenuItemCell */ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/MenuItem/MenuItemCell.js"));
var _default = function _default(props, column, index, columns) {
  var hasSubmenu = props.hasSubmenu,
    rootClassName = props.rootClassName;
  var globalCellStyle = props.globalCellStyle;
  var item = props.items && props.items[index];
  if (typeof globalCellStyle == 'function') {
    globalCellStyle = globalCellStyle({
      index: index,
      columns: columns,
      items: props.items,
      item: item,
      hasSubmenu: hasSubmenu
    });
  }
  var style = (0, _assign.default)({}, globalCellStyle);
  var isLast = index === columns.length - 1;
  var cellProps = (0, _assign.default)({}, props.cellProps);
  if (isLast && props.siblingItemHasSubMenu && !props.item.items) {}
  var children;
  if (column && typeof column.render == 'function') {
    children = column.render(props.item, {
      column: column,
      columns: columns,
      index: index,
      items: props.items,
      item: item,
      hasSubmenu: hasSubmenu
    });
  } else {
    var columnName = typeof column == 'string' ? column : column.name;
    children = props.item[columnName];
  }
  if ((0, _typeof2.default)(column) === 'object') {
    if (column.colSpan) {
      cellProps.colSpan = column.colSpan;
    }
  }
  if (column.style) {
    var columnStyle;
    if (typeof column.style === 'function') {
      columnStyle = column.style({
        index: index,
        columns: columns,
        items: props.items,
        item: item,
        hasSubmenu: hasSubmenu
      });
    } else {
      columnStyle = column.style;
    }
    (0, _assign.default)(style, columnStyle);
  }
  var className = column.className;
  if (item) {
    if (item.cellStyle) {
      (0, _assign.default)(style, item.cellStyle);
    }
    if (item.className) {
      className = (0, _join.default)(className, item.cellClassName);
    }
  }
  if (props.style) {
    (0, _assign.default)(style, props.style);
  }
  return _react.default.createElement(_MenuItemCell.default, {
    style: style,
    className: className,
    key: index,
    rootClassName: rootClassName,
    cellProps: cellProps,
    isDescription: column.isDescription,
    isIcon: column.isIcon,
    align: column.align
  }, children);
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/MenuSeparator.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/MenuSeparator.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var _reactClass = _interopRequireDefault(__webpack_require__(/*! ../../../packages/react-class */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/index.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var MenuSeparator = function (_Component) {
  (0, _inherits2.default)(MenuSeparator, _Component);
  var _super = _createSuper(MenuSeparator);
  function MenuSeparator() {
    (0, _classCallCheck2.default)(this, MenuSeparator);
    return _super.apply(this, arguments);
  }
  (0, _createClass2.default)(MenuSeparator, [{
    key: "render",
    value: function render() {
      var props = this.prepareProps(this.props);
      return _react.default.createElement("tr", {
        className: props.className
      }, _react.default.createElement("td", {
        colSpan: 100
      }, _react.default.createElement("div", {
        className: "".concat(props.rootClassName, "__menu-separator__tool"),
        style: props.style
      })));
    }
  }, {
    key: "prepareProps",
    value: function prepareProps(thisProps) {
      var props = {};
      (0, _assign.default)(props, thisProps);
      props.style = this.prepareStyle(props);
      props.className = this.prepareClassName(props);
      return props;
    }
  }, {
    key: "prepareClassName",
    value: function prepareClassName(props) {
      var className = (0, _join.default)("".concat(props.rootClassName, "__menu-separator"), props.className);
      return className;
    }
  }, {
    key: "prepareStyle",
    value: function prepareStyle(props) {
      return (0, _assign.default)({}, props.style, props.menuSeparatorStyle);
    }
  }]);
  return MenuSeparator;
}(_reactClass.default);
MenuSeparator.defaultProps = {
  isSeparator: true
};
var _default = MenuSeparator;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/align/index.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/align/index.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _getConstrainRegion = _interopRequireDefault(__webpack_require__(/*! ../../../../common/getConstrainRegion */ "./node_modules/@inovua/reactdatagrid-community/common/getConstrainRegion.js"));
var _prepareAlignOffset = _interopRequireDefault(__webpack_require__(/*! ../utils/prepareAlignOffset */ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/utils/prepareAlignOffset.js"));
var _this = void 0;
var _default = function _default(props, subMenuRegion, targetAlignRegion, constrainTo, domNode) {
  var constrainRegion = _getConstrainRegion.default.call(_this, constrainTo, domNode);
  if (typeof props.alignSubMenu === 'function') {
    props.alignSubMenu(subMenuRegion, targetAlignRegion, constrainRegion);
  } else {
    var alignPositions = props.alignPositions;
    var offset = props.rtl ? props.rtlSubmenuAlignOffset : props.submenuAlignOffset;
    offset = (0, _prepareAlignOffset.default)(offset, alignPositions.length);
    var pos = subMenuRegion.alignTo(targetAlignRegion, alignPositions, {
      offset: offset,
      constrain: constrainRegion
    });
    return pos == 'tl-tr' || pos == 'tr-tl' ? 1 : -1;
  }
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/getRegionRelativeToParent.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/getRegionRelativeToParent.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _regionAlign = _interopRequireDefault(__webpack_require__(/*! ../../../packages/region-align */ "./node_modules/@inovua/reactdatagrid-community/packages/region-align/index.js"));
var _selectParent = _interopRequireDefault(__webpack_require__(/*! ../../../common/selectParent */ "./node_modules/@inovua/reactdatagrid-community/common/selectParent.js"));
function getRegionRelativeToParent(child, prentClassName) {
  var parent = (0, _selectParent.default)(".".concat(prentClassName), child);
  var menuRegion = _regionAlign.default.from(parent);
  var thisRegion = _regionAlign.default.from(child);
  return {
    left: thisRegion.left - menuRegion.left,
    top: thisRegion.top - menuRegion.top,
    width: thisRegion.width,
    height: thisRegion.height
  };
}
var _default = getRegionRelativeToParent;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/getSubMenuStyle.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/getSubMenuStyle.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = _default;
var _regionAlign = _interopRequireDefault(__webpack_require__(/*! ../../../packages/region-align */ "./node_modules/@inovua/reactdatagrid-community/packages/region-align/index.js"));
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var _align = _interopRequireDefault(__webpack_require__(/*! ./align */ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/align/index.js"));
var _getGlobal = __webpack_require__(/*! ../../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
var globalObject = (0, _getGlobal.getGlobal)();
function transformPxStringToInt(pxValue) {
  var value = parseFloat(pxValue.split('px')[0]);
  return typeof value === 'number' && !isNaN(value) ? value : 0;
}
function _default(props, state, domNode) {
  var _this = this;
  if (state.activeSubMenuIndex == null || !this.componentIsMounted) {
    this.prevMenuIndex = -1;
    return;
  }
  var overItem = this.getItemByIndex(state.activeSubMenuIndex);
  var offset = overItem && overItem.getOffset();
  var left = offset.left + offset.width;
  var top = offset.top;
  var menuIndex = state.activeSubMenuIndex;
  var sameMenu = this.prevMenuIndex == menuIndex;
  if (this.aligning && !sameMenu) {
    this.aligning = false;
  }
  this.prevMenuIndex = menuIndex;
  var style = {
    left: left,
    top: top,
    pointerEvents: 'none',
    position: 'absolute'
  };
  if (!this.aligning && !sameMenu) {
    setTimeout(function () {
      if (!_this.componentIsMounted) {
        return;
      }
      var thisRegion = _regionAlign.default.from(domNode);
      var menuComputedStyle = globalObject.getComputedStyle(domNode);
      var paddingLeft = transformPxStringToInt(menuComputedStyle.paddingLeft);
      var menuItemRegion = _regionAlign.default.from({
        left: thisRegion.left + paddingLeft,
        top: thisRegion.top + offset.top,
        width: offset.width,
        height: offset.height
      });
      var subMenuMounted = _this.subMenu && _this.subMenu.componentIsMounted;
      if (!subMenuMounted) {
        return;
      }
      var submenuNode = _this.subMenu.node;
      var subMenuRegion = _regionAlign.default.from(submenuNode);
      var initialHeight = subMenuRegion.height;
      var alignPosition = (0, _align.default)(props, subMenuRegion, menuItemRegion, props.constrainTo, domNode);
      var newHeight = subMenuRegion.height;
      var maxHeight;
      if (newHeight < initialHeight && props.subMenuConstrainMargin != null) {
        maxHeight = newHeight - props.subMenuConstrainMargin;
      } else if (newHeight < initialHeight) {
        maxHeight = newHeight;
      }
      if (maxHeight && alignPosition == -1) {
        subMenuRegion.top = subMenuRegion.bottom - maxHeight;
      }
      var newLeft = subMenuRegion.left - thisRegion.left;
      var newTop = subMenuRegion.top - thisRegion.top;
      if (Math.abs(newLeft - left) < 5) {
        newLeft = left;
      }
      if (Math.abs(newTop - top) < 5) {
        newTop = top;
      }
      _this.subMenuPosition = newLeft < 0 ? 'left' : 'right';
      if (newHeight === 0) {
        return;
      }
      _this.alignOffset = {
        left: newLeft,
        top: newTop
      };
      _this.aligning = true;
      _this.setState({
        submenuAlignPosition: alignPosition,
        submenuMaxHeight: props.submenuMaxHeight || maxHeight
      });
    }, 0);
  }
  if (sameMenu || this.aligning && this.alignOffset) {
    (0, _assign.default)(style, this.alignOffset);
    style.visibility = 'visible';
    delete style.pointerEvents;
    delete style.overflow;
  }
  this.aligning = false;
  return style;
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "Cell", ({
  enumerable: true,
  get: function get() {
    return _MenuItemCell.default;
  }
}));
Object.defineProperty(exports, "Item", ({
  enumerable: true,
  get: function get() {
    return _MenuItem.default;
  }
}));
Object.defineProperty(exports, "ItemCell", ({
  enumerable: true,
  get: function get() {
    return _MenuItemCell.default;
  }
}));
Object.defineProperty(exports, "Separator", ({
  enumerable: true,
  get: function get() {
    return _MenuSeparator.default;
  }
}));
exports["default"] = void 0;
var _Menu = _interopRequireDefault(__webpack_require__(/*! ./Menu */ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/Menu.js"));
var _MenuItem = _interopRequireDefault(__webpack_require__(/*! ./MenuItem */ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/MenuItem/index.js"));
var _MenuItemCell = _interopRequireDefault(__webpack_require__(/*! ./MenuItem/MenuItemCell */ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/MenuItem/MenuItemCell.js"));
var _MenuSeparator = _interopRequireDefault(__webpack_require__(/*! ./MenuSeparator */ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/MenuSeparator.js"));
var _default = _Menu.default;
exports["default"] = _default;
_Menu.default.Item = _MenuItem.default;
_Menu.default.Item.Cell = _MenuItemCell.default;
_MenuItem.default.Cell = _MenuItemCell.default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/submenuAlignPositions.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/submenuAlignPositions.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.alignPositionRTL = exports.alignPositionLTR = exports.alignOffsetRTL = exports.alignOffsetLTR = void 0;
var alignPositionLTR = ['tl-tr', 'bl-br', 'tr-tl', 'br-bl'];
exports.alignPositionLTR = alignPositionLTR;
var alignPositionRTL = ['tr-tl', 'br-bl', 'tl-tr', 'bl-br'];
exports.alignPositionRTL = alignPositionRTL;
var alignOffsetLTR = [{
  x: -7,
  y: 5
}, {
  x: -7,
  y: -5
}, {
  x: 7,
  y: 5
}, {
  x: 7,
  y: -5
}];
exports.alignOffsetLTR = alignOffsetLTR;
var alignOffsetRTL = [{
  x: 7,
  y: 5
}, {
  x: 7,
  y: -5
}, {
  x: -7,
  y: 5
}, {
  x: -7,
  y: -5
}];
exports.alignOffsetRTL = alignOffsetRTL;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/utils/getFirstNonDisabledItem.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/utils/getFirstNonDisabledItem.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
function getFirstNonDisabledItem(items) {
  var fistNonDisabledItemIndex = null;
  if (!items || items && !items.length) {
    return null;
  }
  for (var i = 0, len = items.length; i < len; i++) {
    var item = items[i];
    if (item && !item.disabled && !item.isTitle) {
      fistNonDisabledItemIndex = i;
      break;
    }
  }
  return fistNonDisabledItemIndex;
}
var _default = getFirstNonDisabledItem;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/utils/getItemStyleProps.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/utils/getItemStyleProps.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = function _default(props) {
  var itemStyle = props.itemStyle,
    itemOverStyle = props.itemOverStyle,
    itemOverClassName = props.itemOverClassName,
    itemActiveStyle = props.itemActiveStyle,
    itemActiveClassName = props.itemActiveClassName,
    itemDisabledStyle = props.itemDisabledStyle,
    itemDisabledClassName = props.itemDisabledClassName,
    itemExpandedStyle = props.itemExpandedStyle,
    itemExpandedClassName = props.itemExpandedClassName,
    cellStyle = props.cellStyle,
    itemFocusedStyle = props.itemFocusedStyle,
    itemFocusedClassName = props.itemFocusedClassName,
    itemOverFocusedStyle = props.itemOverFocusedStyle;
  return {
    style: itemStyle,
    overStyle: itemOverStyle,
    overClassName: itemOverClassName,
    activeStyle: itemActiveStyle,
    activeClassName: itemActiveClassName,
    disabledStyle: itemDisabledStyle,
    disabledClassName: itemDisabledClassName,
    expandedStyle: itemExpandedStyle,
    expandedClassName: itemExpandedClassName,
    focusedStyle: itemFocusedStyle,
    focusedClassName: itemFocusedClassName,
    overFocusedStyle: itemOverFocusedStyle,
    cellStyle: cellStyle
  };
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/utils/getNextNavigableItem.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/utils/getNextNavigableItem.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
function getNextNavigableItem(items) {
  var startFrom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var direction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
  var nextNavigableItem = null;
  if (!items || items && !items.length) {
    return null;
  }
  if (startFrom === null) {
    return null;
  }
  if (direction === 1) {
    for (var i = startFrom + 1, len = items.length; i < len; i++) {
      var item = items[i];
      var isDisabled = item && item.disabled;
      var isSeparator = item === '-';
      var isTitle = item.isTitle;
      if (!isSeparator && !isDisabled && !isTitle) {
        nextNavigableItem = i;
        break;
      }
    }
  } else {
    for (var _i = startFrom - 1; _i >= 0; _i--) {
      var _item = items[_i];
      var _isDisabled = _item && _item.disabled;
      var _isSeparator = _item === '-';
      var _isTitle = _item.isTitle;
      if (!_isSeparator && !_isDisabled && !_isTitle) {
        nextNavigableItem = _i;
        break;
      }
    }
  }
  return nextNavigableItem;
}
var _default = getNextNavigableItem;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/utils/getSeparatorIndexes.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/utils/getSeparatorIndexes.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
function getSeparatorIndexes(children) {
  return children.reduce(function (acc, child, index) {
    if (child === '-' || child.props && child.props.isSeparator) {
      acc.push(index);
    }
    return acc;
  }, []);
}
var _default = getSeparatorIndexes;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/utils/getSingleSelectNames.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/utils/getSingleSelectNames.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
function getSingleSelectNames(_ref) {
  var items = _ref.items,
    nameProperty = _ref.nameProperty;
  if (!items || items.length <= 1) {
    return null;
  }
  var names = items.reduce(function (acc, item) {
    var name = item[nameProperty];
    if (acc[name] !== undefined) {
      acc[name] = true;
    } else {
      acc[name] = false;
    }
    return acc;
  }, {});
  return names;
}
var _default = getSingleSelectNames;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/utils/increaseColSpan.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/utils/increaseColSpan.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
exports.increaseFirstColumnColSpan = increaseFirstColumnColSpan;
exports.increaseLastColumnColSpan = increaseLastColumnColSpan;
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function increaseColSpan(column) {
  var newColumn = column;
  if (typeof newColumn === 'string') {
    newColumn = {
      name: newColumn,
      colSpan: 2
    };
  } else {
    newColumn = _objectSpread(_objectSpread({}, column), {}, {
      colSpan: newColumn.colSpan ? newColumn.colSpan + 1 : 2
    });
  }
  return newColumn;
}
function increaseLastColumnColSpan(columns) {
  return [].concat((0, _toConsumableArray2.default)(columns.slice(0, -1)), [increaseColSpan(columns[columns.length - 1])]);
}
function increaseFirstColumnColSpan(columns) {
  return [increaseColSpan(columns[0])].concat((0, _toConsumableArray2.default)(columns.slice(1)));
}
var _default = increaseColSpan;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/utils/prepareAlignOffset.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/utils/prepareAlignOffset.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js"));
var _range = _interopRequireDefault(__webpack_require__(/*! ../../../../common/range */ "./node_modules/@inovua/reactdatagrid-community/common/range.js"));
function prepareAlignOffset(alignOffset, positionsLength) {
  var offset;
  if (Array.isArray(alignOffset)) {
    offset = alignOffset.map(function (alignOffsetItem) {
      if (typeof alignOffsetItem === 'number') {
        return {
          x: alignOffsetItem,
          y: alignOffsetItem
        };
      } else {
        return alignOffsetItem;
      }
    });
  }
  if (typeof alignOffset === 'number') {
    offset = {
      x: alignOffset,
      y: alignOffset
    };
  }
  if ((0, _typeof2.default)(alignOffset) === 'object') {
    offset = alignOffset;
  }
  if (!Array.isArray(offset) && positionsLength) {
    offset = (0, _range.default)(0, positionsLength).map(function () {
      return offset;
    });
  }
  return offset;
}
var _default = prepareAlignOffset;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/utils/prepareStyle.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Menu/src/utils/prepareStyle.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var _getMinMaxSize = _interopRequireDefault(__webpack_require__(/*! ../../../../common/getMinMaxSize */ "./node_modules/@inovua/reactdatagrid-community/common/getMinMaxSize.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function prepareStyle(props, state) {
  var style = {};
  if (props.subMenu) {
    (0, _assign.default)(style, props.submenuStyle);
  } else {
    (0, _assign.default)(style, props.style);
  }
  if (props.at) {
    var isArray = Array.isArray(props.at);
    var coords = {
      left: isArray ? props.at[0] : props.at.left === undefined ? props.at.x || props.at.pageX : props.at.left,
      top: isArray ? props.at[1] : props.at.top === undefined ? props.at.y || props.at.pageY : props.at.top
    };
    (0, _assign.default)(style, coords);
  }
  if (state.positionStyle && props.visible !== false) {
    style = _objectSpread(_objectSpread({}, style), state.positionStyle);
  }
  var minMaxSize = (0, _getMinMaxSize.default)(props);
  (0, _assign.default)(style, minMaxSize);
  if (props.padding) {
    (0, _assign.default)(style, {
      padding: props.padding
    });
  }
  if (props.border) {
    (0, _assign.default)(style, {
      border: props.border
    });
  }
  if (typeof props.shadow === 'string') {
    (0, _assign.default)(style, {
      boxShadow: props.shadow
    });
  }
  if (props.borderRadius) {
    (0, _assign.default)(style, {
      borderRadius: props.borderRadius
    });
  }
  if (props.width) {
    (0, _assign.default)(style, {
      width: props.width
    });
  }
  if (props.enableAnimation && (state.transitionEnded || state.transitionStart)) {
    (0, _assign.default)(style, {
      transitionDuration: "".concat(props.fadeDuration, "ms"),
      transitionTimingFunction: props.transitionTimingFunction
    });
  }
  return style;
}
var _default = prepareStyle;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/NotifyResize/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/NotifyResize/index.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "NotifyResize", ({
  enumerable: true,
  get: function get() {
    return _reactNotifyResize.NotifyResize;
  }
}));
exports["default"] = void 0;
var _reactNotifyResize = _interopRequireWildcard(__webpack_require__(/*! ../../packages/react-notify-resize */ "./node_modules/@inovua/reactdatagrid-community/packages/react-notify-resize/index.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var _default = _reactNotifyResize.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/index.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _src = _interopRequireDefault(__webpack_require__(/*! ./src */ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/index.js"));
var _default = _src.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/NumberInput.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/NumberInput.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _autoBind = _interopRequireDefault(__webpack_require__(/*! ../../../packages/react-class/autoBind */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/autoBind.js"));
var _hasTouch = _interopRequireDefault(__webpack_require__(/*! ../../../packages/hasTouch */ "./node_modules/@inovua/reactdatagrid-community/packages/hasTouch/index.js"));
var _raf = _interopRequireDefault(__webpack_require__(/*! ../../../common/raf */ "./node_modules/@inovua/reactdatagrid-community/common/raf.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _clamp = _interopRequireDefault(__webpack_require__(/*! ../../../common/clamp */ "./node_modules/@inovua/reactdatagrid-community/common/clamp.js"));
var _debounce = _interopRequireDefault(__webpack_require__(/*! ../../../common/debounce */ "./node_modules/@inovua/reactdatagrid-community/common/debounce.js"));
var _cleanProps = _interopRequireDefault(__webpack_require__(/*! ../../../common/cleanProps */ "./node_modules/@inovua/reactdatagrid-community/common/cleanProps.js"));
var _eventNames = _interopRequireDefault(__webpack_require__(/*! ../../../common/eventNames */ "./node_modules/@inovua/reactdatagrid-community/common/eventNames.js"));
var _getSelectionRange = _interopRequireDefault(__webpack_require__(/*! ./utils/get-selection-range */ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/get-selection-range.js"));
var _getSelectionStart2 = _interopRequireDefault(__webpack_require__(/*! ./utils/get-selection-start */ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/get-selection-start.js"));
var _setCaretPosition = _interopRequireDefault(__webpack_require__(/*! ./utils/set-caret-position */ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/set-caret-position.js"));
var _getDecimalDelimiter = _interopRequireDefault(__webpack_require__(/*! ./utils/get-decimal-delimiter */ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/get-decimal-delimiter.js"));
var _getTransformedStringValues2 = _interopRequireWildcard(__webpack_require__(/*! ./utils/get-transformed-string-values */ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/get-transformed-string-values.js"));
var _getCurrencyForCountryCode = _interopRequireDefault(__webpack_require__(/*! ./utils/get-currency-for-country-code */ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/get-currency-for-country-code.js"));
var _getGlobal = __webpack_require__(/*! ../../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var globalObject = (0, _getGlobal.getGlobal)();
var preventDefault = function preventDefault(e) {
  return e.preventDefault();
};
var emptyObject = {};
var isNumeric = function isNumeric(n) {
  return !isNaN(parseFloat(n)) && isFinite(n);
};
var isInt = function isInt(n) {
  return Number(n) === n && n % 1 === 0;
};
var getArrowClasses = function getArrowClasses(spinDirection, props) {
  var upArrowClass = (0, _join.default)("".concat(props.rootClassName, "__spinner-arrow"), "".concat(props.rootClassName, "__spinner-arrow--up"), spinDirection === 1 && "".concat(props.rootClassName, "__spinner-arrow--active"));
  var downArrowClass = (0, _join.default)("".concat(props.rootClassName, "__spinner-arrow"), "".concat(props.rootClassName, "__spinner-arrow--down"), spinDirection === -1 && "".concat(props.rootClassName, "__spinner-arrow--active"));
  return {
    upArrowClass: upArrowClass,
    downArrowClass: downArrowClass
  };
};
var getClearButtonClassNames = function getClearButtonClassNames(props) {
  var clearButtonClassName = (0, _join.default)("".concat(props.rootClassName, "__clear-button"), "".concat(props.rootClassName, "__clear-button--").concat(props.rtl ? 'rtl' : 'ltr'), props.clearButtonClassName);
  return {
    clearButtonClassName: clearButtonClassName
  };
};
var toUpperFirst = function toUpperFirst(str) {
  return str ? str.charAt(0).toUpperCase() + str.substring(1) : '';
};
var noDot = function noDot(value) {
  value += '';
  return value.indexOf('.') === -1;
};
var isMinValueRespected = function isMinValueRespected(value, props) {
  var minValue = props.minValue;
  if (minValue == null || value === '') {
    return true;
  }
  return value >= minValue;
};
var isMaxValueRespected = function isMaxValueRespected(value, props) {
  var maxValue = props.maxValue;
  if (maxValue == null || value === '') {
    return true;
  }
  return value <= maxValue;
};
var checkNumeric = function checkNumeric(value, _ref) {
  var numbersOnly = _ref.numbersOnly,
    allowNegative = _ref.allowNegative,
    allowFloat = _ref.allowFloat;
  if (value === '') {
    return true;
  }
  if (numbersOnly) {
    var numeric = isNumeric(value);
    return numeric || allowNegative && value === '-' || allowFloat && value === '.' || allowNegative && allowFloat && value == '-.';
  }
  return true;
};
var isPossibleNumericStart = function isPossibleNumericStart(value, _ref2) {
  var allowFloat = _ref2.allowFloat,
    allowNegative = _ref2.allowNegative;
  if (allowFloat && value === '.') {
    return true;
  }
  if (allowNegative && value === '-') {
    return true;
  }
  if (allowNegative && allowFloat && value === '-.') {
    return true;
  }
  return !isNaN(value);
};
var checkFloat = function checkFloat(value, _ref3) {
  var allowFloat = _ref3.allowFloat;
  if (allowFloat === false) {
    return noDot(value) && isNumeric(value) && isInt(value * 1);
  }
};
var isFloat = function isFloat(n) {
  return Number(n) === n && n % 1 !== 0;
};
var isFloatString = function isFloatString(n) {
  var str = "".concat(n);
  return isFloat(str) || isNumeric(str) && str.indexOf('.') !== -1;
};
var checkPositive = function checkPositive(value, _ref4) {
  var allowNegative = _ref4.allowNegative;
  if (allowNegative === false) {
    return isNumeric(value) && value * 1 >= 0;
  }
};
var getInitialStateValue = function getInitialStateValue(props) {
  var value = props.value,
    defaultValue = props.defaultValue;
  if (value) {
    return null;
  }
  if (defaultValue || defaultValue === 0) {
    return getFormatedValue(defaultValue, props);
  }
  return '';
};
var getFormatedValue = function getFormatedValue(value, props) {
  if (value || value === 0) {
    var locale = props.locale,
      prefix = props.prefix,
      suffix = props.suffix,
      minValue = props.minValue,
      maxValue = props.maxValue,
      precision = props.precision;
    return (0, _getTransformedStringValues2.default)(value, {
      locale: locale,
      precision: precision,
      min: minValue,
      max: maxValue,
      prefix: prefix,
      suffix: suffix
    })[0];
  }
};
var getCurrentValue = function getCurrentValue(props, state) {
  var value = props.value,
    defaultValue = props.defaultValue;
  var formattedValue = state.formattedValue;
  if (value != null) {
    return value;
  }
  if (formattedValue == null) {
    return getFormatedValue(defaultValue, props);
  }
  return formattedValue;
};
var isControlled = function isControlled(props) {
  return props.value !== undefined;
};
var getInitialStatePrecision = function getInitialStatePrecision(props) {
  if (isControlledPrecision(props)) {
    return null;
  }
  return 0;
};
var isControlledPrecision = function isControlledPrecision(props) {
  return props.precision === 0 || !!props.precision;
};
var getSuffix = function getSuffix(props) {
  var suffix = props.suffix,
    format = props.format,
    currencySymbol = props.currencySymbol,
    currencyPosition = props.currencyPosition,
    locale = props.locale;
  if (suffix) {
    return suffix;
  }
  if (format === 'currency' && currencyPosition === 'end') {
    if (currencySymbol) {
      return currencySymbol;
    }
    return (0, _getCurrencyForCountryCode.default)(locale || (globalObject.navigator ? globalObject.navigator.language : ''));
  }
  if (format === 'percentage') {
    return '%';
  }
};
var getPrefix = function getPrefix(props) {
  var prefix = props.prefix,
    format = props.format,
    currencySymbol = props.currencySymbol,
    currencyPosition = props.currencyPosition,
    locale = props.locale;
  if (prefix) {
    return prefix;
  }
  if (format === 'currency' && currencyPosition === 'start') {
    if (currencySymbol) {
      return currencySymbol;
    }
    return (0, _getCurrencyForCountryCode.default)(locale || (globalObject.navigator ? globalObject.navigator.language : ''));
  }
};
var selectionContainsPosition = function selectionContainsPosition(selection, position) {
  if (selection.start === selection.end) {
    return false;
  }
  return selection.start <= position && selection.end > position;
};
var InovuaNumericInput = function (_Component) {
  (0, _inherits2.default)(InovuaNumericInput, _Component);
  var _super = _createSuper(InovuaNumericInput);
  function InovuaNumericInput(props) {
    var _this;
    (0, _classCallCheck2.default)(this, InovuaNumericInput);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderClearIcon", function (svgProps) {
      var result;
      if (_this.props.renderClearIcon && typeof _this.props.renderClearIcon === 'function') {
        result = _this.props.renderClearIcon({
          width: svgProps.width,
          height: svgProps.height
        });
      }
      if (result === undefined) {
        result = _react.default.createElement("svg", {
          style: _objectSpread({}, svgProps),
          viewBox: "0 0 10 10"
        }, _react.default.createElement("path", {
          fill: "none",
          fillRule: "evenodd",
          strokeLinecap: "round",
          strokeWidth: "1.33",
          d: "M1 1l8 8m0-8L1 9"
        }));
      }
      return result;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderArrowUpIcon", function (svgProps) {
      var height = svgProps.height;
      var result;
      if (_this.props.renderArrowUpIcon && typeof _this.props.renderArrowUpIcon === 'function') {
        result = _this.props.renderArrowUpIcon(_objectSpread({}, svgProps));
      }
      if (result === undefined) {
        result = _react.default.createElement("svg", {
          style: _objectSpread(_objectSpread({}, svgProps), {}, {
            height: height / 2
          }),
          viewBox: "0 0 10 5"
        }, _react.default.createElement("path", {
          fillRule: "evenodd",
          d: "M5.262.262l4.106 4.106c.144.144.144.379 0 .524-.07.069-.164.108-.262.108H.894c-.204 0-.37-.166-.37-.37 0-.099.039-.193.108-.262L4.738.262c.145-.145.38-.145.524 0z"
        }));
      }
      return result;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderArrowDownIcon", function (svgProps) {
      var height = svgProps.height;
      var result;
      if (_this.props.renderArrowDownIcon && typeof _this.props.renderArrowDownIcon === 'function') {
        result = _this.props.renderArrowDownIcon(_objectSpread({}, svgProps));
      }
      if (result === undefined) {
        result = _react.default.createElement("svg", {
          style: _objectSpread(_objectSpread({}, svgProps), {}, {
            height: height / 2
          }),
          viewBox: "0 0 10 5"
        }, _react.default.createElement("path", {
          fillRule: "evenodd",
          d: "M4.738 4.738L.632.632C.488.488.488.253.632.108.702.04.796 0 .894 0h8.212c.204 0 .37.166.37.37 0 .099-.039.193-.108.262L5.262 4.738c-.145.145-.38.145-.524 0z"
        }));
      }
      return result;
    });
    (0, _autoBind.default)((0, _assertThisInitialized2.default)(_this));
    var value = isControlled(props) ? props.value : props.defaultValue;
    if (props.triggerChangeOnSpinDelay > 0) {
      _this.setValueOnSpin = (0, _debounce.default)(_this.setValueOnSpin, props.triggerChangeOnSpinDelay);
    }
    _this.state = {
      value: value,
      focused: false,
      formattedValue: getFormatedValue(value, props),
      spinDirection: null,
      intermediateValue: null
    };
    return _this;
  }
  (0, _createClass2.default)(InovuaNumericInput, [{
    key: "setInputRef",
    value: function setInputRef(el) {
      this.input = el;
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.props,
        state = this.state;
      var toolPosition = props.toolPosition;
      var _this$p = this.p = this.getProps(props, state),
        formattedValue = _this$p.formattedValue,
        enableSpinnerTools = _this$p.enableSpinnerTools,
        className = _this$p.className,
        style = _this$p.style,
        enableClearButton = _this$p.enableClearButton,
        wrapperProps = _this$p.wrapperProps;
      var min = props.mim;
      if (min === undefined && !props.allowNegative) {
        min = 0;
      }
      var currentValue = state.focused ? this.p.value : this.p.formattedValue;
      if (currentValue == null) {
        currentValue = '';
      }
      var inputProps = props.inputProps || emptyObject;
      var inputClassName = (0, _join.default)("".concat(props.rootClassName, "__input"), inputProps.className);
      var input = _react.default.createElement("input", _objectSpread(_objectSpread({
        size: Math.max(1, props.size || 0),
        placeholder: this.props.placeholder
      }, inputProps), {}, {
        ref: this.setInputRef,
        type: "text",
        key: "input",
        className: inputClassName,
        disabled: props.disabled,
        value: currentValue,
        onWheel: this.handleWheel,
        onKeyDown: this.handleKeyDown,
        onKeyUp: this.handleKeyUp,
        onChange: this.handleChange,
        min: min
      }));
      var clearButtonWrapper = this.renderClearButtonWrapper();
      var spinnerToolWrapper = this.renderSpinnerToolsWrapper();
      var inputDisplay = [input, clearButtonWrapper, spinnerToolWrapper];
      if (toolPosition === 'start') {
        inputDisplay = [spinnerToolWrapper, clearButtonWrapper, input];
      }
      if (enableSpinnerTools === false) {
        inputDisplay = [input, spinnerToolWrapper, clearButtonWrapper];
      }
      if (toolPosition === 'start' && enableSpinnerTools === false) {
        inputDisplay = [clearButtonWrapper, input, spinnerToolWrapper];
      }
      var propsToWrapper = (0, _cleanProps.default)(wrapperProps, InovuaNumericInput.propTypes);
      return _react.default.createElement("div", _objectSpread(_objectSpread({}, propsToWrapper), {}, {
        className: (0, _join.default)(className, wrapperProps ? wrapperProps.className : null),
        style: wrapperProps && wrapperProps.style ? _objectSpread(_objectSpread({}, style), wrapperProps.style) : style,
        onBlur: this.handleBlur,
        onFocus: this.handleFocus
      }), inputDisplay);
    }
  }, {
    key: "renderClearButtonWrapper",
    value: function renderClearButtonWrapper() {
      var props = this.props,
        state = this.state;
      var enableClearButton = this.props.enableClearButton;
      var _this$p2 = this.p,
        clearButtonColor = _this$p2.clearButtonColor,
        clearButtonStyle = _this$p2.clearButtonStyle,
        clearButtonSize = _this$p2.clearButtonSize;
      var value = isControlled(props) ? props.value : state.value;
      var hasValue = state.intermediateValue != null ? true : value !== '' && value != null;
      var clearButtonWrapperClassName = (0, _join.default)("".concat(props.rootClassName, "__clear-button-wrapper"), (!hasValue || !enableClearButton) && "".concat(props.rootClassName, "__clear-button-wrapper--hidden"));
      return _react.default.createElement("div", {
        key: "clearButton",
        className: clearButtonWrapperClassName
      }, this.renderClearButton(_objectSpread({
        clearButtonColor: clearButtonColor,
        clearButtonStyle: clearButtonStyle,
        clearButtonSize: clearButtonSize
      }, getClearButtonClassNames(props))));
    }
  }, {
    key: "renderClearButton",
    value: function renderClearButton(config) {
      var clearButtonColor = config.clearButtonColor,
        clearButtonStyle = config.clearButtonStyle,
        clearButtonClassName = config.clearButtonClassName,
        clearButtonSize = config.clearButtonSize;
      var svgProps = {};
      var tabIndex = this.props.acceptClearToolFocus ? 0 : -1;
      if (clearButtonColor) {
        svgProps.fill = clearButtonColor;
      }
      if (clearButtonSize) {
        if (Array.isArray(clearButtonSize)) {
          svgProps.width = clearButtonSize[0];
          svgProps.height = clearButtonSize[1];
        } else {
          svgProps.width = clearButtonSize;
          svgProps.height = clearButtonSize;
        }
      }
      return _react.default.createElement("button", {
        key: "clearButton",
        type: "button",
        onClick: this.handleClearButtonClick,
        onMouseDown: preventDefault,
        className: clearButtonClassName,
        style: _objectSpread({}, clearButtonStyle),
        tabIndex: tabIndex
      }, this.renderClearIcon(svgProps));
    }
  }, {
    key: "renderSpinnerToolsWrapper",
    value: function renderSpinnerToolsWrapper() {
      var props = this.props;
      var enableSpinnerTools = props.enableSpinnerTools,
        rtl = props.rtl;
      var _this$p3 = this.p,
        arrowColor = _this$p3.arrowColor,
        arrowStyle = _this$p3.arrowStyle,
        arrowUpStyle = _this$p3.arrowUpStyle,
        arrowDownStyle = _this$p3.arrowDownStyle,
        spinDirection = _this$p3.spinDirection,
        arrowSize = _this$p3.arrowSize;
      var spinnerToolsWrapperClassName = enableSpinnerTools ? "".concat(props.rootClassName, "__spinner-wrapper ").concat(props.rootClassName, "__spinner-wrapper--").concat(rtl ? 'rtl' : 'ltr') : "".concat(props.rootClassName, "__spinner-wrapper-hidden ").concat(props.rootClassName, "__spinner-wrapper-hidden--").concat(rtl ? 'rtl' : 'ltr');
      return _react.default.createElement("div", {
        key: "spinnerTool",
        className: spinnerToolsWrapperClassName
      }, this.renderSpinnerTools(_objectSpread({
        arrowColor: arrowColor,
        arrowStyle: arrowStyle,
        arrowUpStyle: arrowUpStyle,
        arrowDownStyle: arrowDownStyle,
        spinDirection: spinDirection,
        arrowSize: arrowSize
      }, getArrowClasses(spinDirection, props))));
    }
  }, {
    key: "renderSpinnerTools",
    value: function renderSpinnerTools(config) {
      var arrowColor = config.arrowColor,
        arrowStyle = config.arrowStyle,
        arrowUpStyle = config.arrowUpStyle,
        arrowDownStyle = config.arrowDownStyle,
        upArrowClass = config.upArrowClass,
        downArrowClass = config.downArrowClass,
        arrowSize = config.arrowSize;
      var svgProps = {};
      if (arrowColor) {
        svgProps.fill = arrowColor;
      }
      if (arrowSize) {
        if (Array.isArray(arrowSize)) {
          svgProps.width = arrowSize[0];
          svgProps.height = arrowSize[1];
        } else {
          svgProps.width = arrowSize;
          svgProps.height = arrowSize;
        }
      }
      var arrowEvents = this.getArrowEvents();
      return [_react.default.createElement("span", _objectSpread(_objectSpread({
        key: "up"
      }, arrowEvents.upEvents), {}, {
        className: upArrowClass,
        style: _objectSpread(_objectSpread({}, arrowStyle), arrowUpStyle)
      }), this.renderArrowUpIcon(svgProps)), _react.default.createElement("span", _objectSpread(_objectSpread({
        key: "down"
      }, arrowEvents.downEvents), {}, {
        className: downArrowClass,
        style: _objectSpread(_objectSpread({}, arrowStyle), arrowDownStyle)
      }), this.renderArrowDownIcon(svgProps))];
    }
  }, {
    key: "getArrowEvents",
    value: function getArrowEvents() {
      return {
        upEvents: (0, _defineProperty2.default)({}, _eventNames.default.onMouseDown, this.handleArrowDown.bind(this, 1)),
        downEvents: (0, _defineProperty2.default)({}, _eventNames.default.onMouseDown, this.handleArrowDown.bind(this, -1))
      };
    }
  }, {
    key: "handleClearButtonClick",
    value: function handleClearButtonClick(event) {
      this.setState({
        focused: true
      });
      this.setValue(null);
      this.focus();
    }
  }, {
    key: "handleArrowDown",
    value: function handleArrowDown(shiftStep, event) {
      var _this2 = this;
      event.preventDefault();
      var step = this.props.step;
      var target = _hasTouch.default ? event.target : window;
      var eventName = _hasTouch.default ? 'touchend' : 'click';
      var onUpEvent = function onUpEvent() {
        _this2.handleMouseUp();
        target.removeEventListener(eventName, onUpEvent, true);
      };
      target.addEventListener(eventName, onUpEvent, true);
      var shiftKey = event.shiftKey;
      var direction = shiftStep > 0 ? 1 : -1;
      var spinConfig = {
        step: Math.abs(step)
      };
      this.stepTo(direction, spinConfig);
      this.handleArrowDownTimeoutId = setTimeout(function () {
        _this2.setState({
          shiftKey: shiftKey,
          spinDirection: direction
        });
        _this2.startSpin(direction, spinConfig);
      }, 300);
    }
  }, {
    key: "handleMouseUp",
    value: function handleMouseUp() {
      this.stopSpin();
      this.setState({
        spinDirection: null,
        shiftKey: null
      });
    }
  }, {
    key: "getTransformedStringValues",
    value: function getTransformedStringValues(value) {
      var _this$p4 = this.p,
        suffix = _this$p4.suffix,
        prefix = _this$p4.prefix,
        locale = _this$p4.locale,
        precision = _this$p4.precision,
        isControlledPrecision = _this$p4.isControlledPrecision,
        minValue = _this$p4.minValue,
        maxValue = _this$p4.maxValue;
      return (0, _getTransformedStringValues2.default)(value, {
        locale: locale,
        precision: isControlledPrecision && precision,
        min: minValue,
        max: maxValue,
        suffix: suffix,
        prefix: prefix
      });
    }
  }, {
    key: "handleFocus",
    value: function handleFocus(event) {
      var onFocus = this.props.onFocus;
      if (event.target != this.input) {
        return;
      }
      this.setState({
        focused: true
      });
      if (this.props.inputProps && this.props.inputProps.onFocus) {
        this.props.inputProps.onFocus(event);
      }
      if (onFocus) {
        onFocus(event);
      }
    }
  }, {
    key: "handleBlur",
    value: function handleBlur(event) {
      this.setState({
        focused: false
      });
      if (this.isSpinning()) {
        this.stopSpin();
      }
      if (this.state.intermediateValue != null) {
        var value = (0, _clamp.default)(parseFloat(this.state.intermediateValue), this.props.minValue, this.props.maxValue);
        if (!this.props.allowEmpty && (isNaN(value) || value == null)) {
          value = this.props.valueOnEmpty !== undefined ? this.props.valueOnEmpty : this.props.minValue || 0;
        }
        this.setValue(value);
      }
      if (this.props.inputProps && this.props.inputProps.onBlur) {
        this.props.inputProps.onBlur(event);
      }
      var onBlur = this.props.onBlur;
      if (onBlur) {
        onBlur(event);
      }
    }
  }, {
    key: "handleChange",
    value: function handleChange(event) {
      event.stopPropagation();
      if (this.props.inputProps && this.props.inputProps.onChange) {
        this.props.inputProps.onChange(event);
      }
      var value = event.target.value;
      this.setValue(value);
    }
  }, {
    key: "setValue",
    value: function setValue(value) {
      var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        silent = _ref5.silent;
      if (this.props.allowNegative && value === '-') {
        this.setIntermediateValue(value);
        return;
      }
      if (this.props.allowFloat && value === '.') {
        this.setIntermediateValue(value);
        return;
      }
      if (this.props.allowFloat && this.props.allowNegative && value === '-.') {
        this.setIntermediateValue(value);
        return;
      }
      var parseResult = parseFloat(value);
      var parsedValue = isNaN(parseResult) ? null : (0, _clamp.default)(parseResult, this.props.minValue, this.props.maxValue);
      var isSameRepresentation = parsedValue === null || "".concat(value) === parsedValue.toString();
      if (!this.props.allowEmpty && parsedValue === null) {
        this.setIntermediateValue(value || '');
        return;
      }
      if (isSameRepresentation) {
        this.setIntermediateValue(null);
        this.onChange(parsedValue);
      } else {
        this.setIntermediateValue(value);
      }
    }
  }, {
    key: "setIntermediateValue",
    value: function setIntermediateValue(intermediateValue, callback) {
      if (intermediateValue === this.state.intermediateValue) {
        return;
      }
      this.setState({
        intermediateValue: intermediateValue
      });
    }
  }, {
    key: "onChange",
    value: function onChange(value) {
      if (!isControlled(this.props)) {
        this.setState({
          value: value
        });
      }
      var allowNegative = this.props.allowNegative;
      var isPositive = checkPositive(value, {
        allowNegative: allowNegative
      });
      if (!allowNegative && !isPositive) {
        return;
      }
      if (this.props.onChange) {
        this.props.onChange(value);
      }
    }
  }, {
    key: "handleBackspaceKeyDown",
    value: function handleBackspaceKeyDown(event) {
      var _this3 = this;
      var _this$p5 = this.p,
        isControlledPrecision = _this$p5.isControlledPrecision,
        currentValue = _this$p5.currentValue,
        decimalDelimiter = _this$p5.decimalDelimiter;
      if (isControlledPrecision) {
        var currentSelection = (0, _getSelectionRange.default)(this.input);
        var decimalPosition = (0, _getTransformedStringValues2.getDecimalDelimiterPosition)(currentValue, decimalDelimiter);
        if (currentSelection.end - 1 > decimalPosition) {
          this.backspaceOnControlledPrecision = true;
        }
        if (currentSelection.end - 1 === decimalPosition) {
          (0, _raf.default)(function () {
            (0, _setCaretPosition.default)(_this3.input, currentSelection.end - 1);
          });
          event.preventDefault();
          event.stopPropagation();
        }
      }
    }
  }, {
    key: "handleDigitKeyDown",
    value: function handleDigitKeyDown() {
      var _this$p6 = this.p,
        isControlledPrecision = _this$p6.isControlledPrecision,
        currentValue = _this$p6.currentValue,
        decimalDelimiter = _this$p6.decimalDelimiter;
      if (isControlledPrecision) {
        var currentSelection = (0, _getSelectionRange.default)(this.input);
        var decimalPosition = (0, _getTransformedStringValues2.getDecimalDelimiterPosition)(currentValue, decimalDelimiter);
        if (currentSelection.end > decimalPosition) {
          this.digitInputOnControlledPrecision = currentSelection.end > decimalPosition;
        }
      }
    }
  }, {
    key: "handleDecimalDelimiterKeyDown",
    value: function handleDecimalDelimiterKeyDown(event) {
      var _this$p7 = this.p,
        allowFloat = _this$p7.allowFloat,
        value = _this$p7.value;
      if (!allowFloat) {
        event.preventDefault();
        return;
      }
      var selectedText = this.getSelectedText();
      if (selectedText == '.') {
        return;
      }
      if (isFloatString(selectedText)) {
        return;
      }
      if (isFloatString(value)) {
        event.preventDefault();
        return;
      }
    }
  }, {
    key: "getSelectedText",
    value: function getSelectedText() {
      var _getSelectedRange = (0, _getSelectionRange.default)(this.input),
        start = _getSelectedRange.start,
        end = _getSelectedRange.end;
      var value = "".concat(this.getValue());
      return value.substring(start, end);
    }
  }, {
    key: "handleSelectionOverDecimalDelimiter",
    value: function handleSelectionOverDecimalDelimiter(event, currentSelection) {
      var _this$p8 = this.p,
        decimalDelimiter = _this$p8.decimalDelimiter,
        currentValue = _this$p8.currentValue,
        isControlledPrecision = _this$p8.isControlledPrecision,
        prefix = _this$p8.prefix,
        suffix = _this$p8.suffix;
      currentSelection = currentSelection || (0, _getSelectionRange.default)(this.input);
      var selectionStartsAtBeginningOfNumber = currentSelection.start === 0;
      if (prefix) {
        selectionStartsAtBeginningOfNumber = currentSelection.start <= prefix.length + 1;
      }
      var selectionEndsAtEndOfNumber = currentSelection.end === currentValue.length;
      if (suffix) {
        selectionEndsAtEndOfNumber = currentSelection.end >= suffix.length + 1;
      }
      if (selectionStartsAtBeginningOfNumber && selectionEndsAtEndOfNumber) {
        return;
      }
    }
  }, {
    key: "handleKeyUp",
    value: function handleKeyUp(event) {
      var key = event.key;
      if (this.props.inputProps && this.props.inputProps.onKeyUp) {
        this.props.inputProps.onKeyUp(event);
      }
      var name = "handle".concat(toUpperFirst(key), "KeyUp");
      if (this[name]) {
        this[name](event);
      }
    }
  }, {
    key: "handleKeyDown",
    value: function handleKeyDown(event) {
      var key = event.key;
      var _this$p9 = this.p,
        decimalDelimiter = _this$p9.decimalDelimiter,
        decimalDelimiterPosition = _this$p9.decimalDelimiterPosition;
      if (this.props.inputProps && this.props.inputProps.onKeyDown) {
        this.props.inputProps.onKeyDown(event);
      }
      if (this.props.onKeyDown) {
        this.props.onKeyDown(event);
      }
      if (!key) {
        return;
      }
      var currentSelection = (0, _getSelectionRange.default)(this.input);
      if (selectionContainsPosition(currentSelection, decimalDelimiterPosition)) {
        this.handleSelectionOverDecimalDelimiter(event, currentSelection);
      }
      if (key.match(/[0-9]/)) {
        this.handleDigitKeyDown(event);
        return;
      }
      if (key === decimalDelimiter) {
        this.handleDecimalDelimiterKeyDown(event);
        return;
      }
      if (key === '-') {
        var caretPos = this.getSelectionStart();
        if (!this.props.allowNegative || caretPos) {
          event.preventDefault();
        }
        return;
      }
      var isPrintableCharacter = key.length == 1;
      if (isPrintableCharacter && !(event.metaKey || event.ctrlKey)) {
        event.preventDefault();
      }
      var name = "handle".concat(toUpperFirst(key), "KeyDown");
      if (this[name]) {
        this[name](event);
      }
    }
  }, {
    key: "handleArrowDownKeyDown",
    value: function handleArrowDownKeyDown(event) {
      this.handleArrowKeySpin(-1, event);
    }
  }, {
    key: "handleArrowUpKeyDown",
    value: function handleArrowUpKeyDown(event) {
      this.handleArrowKeySpin(1, event);
    }
  }, {
    key: "handleArrowKeySpin",
    value: function handleArrowKeySpin(direction, event) {
      var _this4 = this;
      if (this.isSpinning()) {
        event.preventDefault();
        event.stopPropagation();
        return;
      }
      if (this.props.spinOnArrowKeys) {
        event.preventDefault();
        event.stopPropagation();
        if (!this.isSpinning()) {
          var config = {
            shiftKey: event.shiftKey,
            event: event
          };
          this.stepTo(direction, config);
          this.spinTimeoutId = setTimeout(function () {
            _this4.startSpin(direction, config);
          }, 120);
        }
      }
    }
  }, {
    key: "handleArrowUpKeyUp",
    value: function handleArrowUpKeyUp() {
      this.onSpinKeyUp();
    }
  }, {
    key: "handleArrowDownKeyUp",
    value: function handleArrowDownKeyUp() {
      this.onSpinKeyUp();
    }
  }, {
    key: "onSpinKeyUp",
    value: function onSpinKeyUp() {
      this.props.spinOnArrowKeys && this.stopSpin();
    }
  }, {
    key: "getInput",
    value: function getInput() {
      return this.input;
    }
  }, {
    key: "getNumericValue",
    value: function getNumericValue() {
      return this.p.numericValue;
    }
  }, {
    key: "getValue",
    value: function getValue() {
      return this.p.value;
    }
  }, {
    key: "isFocused",
    value: function isFocused() {
      return !!this.state.focused;
    }
  }, {
    key: "getStepValue",
    value: function getStepValue(props, direction, config) {
      config = config || {};
      var value = this.p.value;
      var stepValue = config.step || props.step;
      if (this.state.shiftKey || config.shiftKey && props.shiftStep) {
        stepValue = props.shiftStep;
      }
      var theValue = isNumeric(this.p.value) ? value * 1 + direction * stepValue : this.props.initialStep || 0;
      return (0, _clamp.default)(Math.round(theValue * 1000) / 1000, this.props.minValue, this.props.maxValue);
    }
  }, {
    key: "stepTo",
    value: function stepTo(direction, config) {
      config = config || {};
      this.stepToTriggered = true;
      var props = this.props;
      var step = config.step || props.step;
      var allowNegative = props.allowNegative;
      if (step != null) {
        var stepFn = typeof props.stepFn === 'function' ? props.stepFn : this.getStepValue;
        var value = stepFn(props, direction, config);
        var isPositive = checkPositive(value, {
          allowNegative: allowNegative
        });
        if (!allowNegative && !isPositive) {
          return;
        }
        this.spinValue = value;
        if (config.triggerChangeOnSpin) {
          if (props.triggerChangeOnSpinDelay > 0) {
            this.setIntermediateValue(value);
          }
          this.setValueOnSpin(value);
        } else {
          this.setIntermediateValue(value);
        }
      }
    }
  }, {
    key: "setValueOnSpin",
    value: function setValueOnSpin(value) {
      this.setValue(value);
    }
  }, {
    key: "stopSpin",
    value: function stopSpin() {
      clearTimeout(this.spinTimeoutId);
      clearTimeout(this.handleArrowDownTimeoutId);
      clearInterval(this.spinIntervalId);
      this.setValue(this.spinValue);
      this.handleArrowDownTimeoutId = null;
      this.spinTimeoutId = null;
      this.spinIntervalId = null;
    }
  }, {
    key: "startSpin",
    value: function startSpin(direction, config) {
      if (this.spinIntervalId) {
        clearInterval(this.spinIntervalId);
      }
      this.stepToTriggered = false;
      this.spinValue = this.getValue();
      var stepTo = this.stepTo.bind(this, direction, _objectSpread({
        triggerChangeOnSpin: this.props.triggerChangeOnSpin
      }, config));
      this.spinIntervalId = setInterval(stepTo, this.props.stepDelay);
    }
  }, {
    key: "isSpinning",
    value: function isSpinning() {
      return this.spinIntervalId != null;
    }
  }, {
    key: "handleWheel",
    value: function handleWheel(event) {
      var props = this.props;
      if ((props.requireFocusOnStep && this.isFocused() || !props.requireFocusOnStep) && props.stepOnWheel && props.step) {
        event.preventDefault();
        var nativeEvent = event.nativeEvent;
        var y = nativeEvent.wheelDeltaY || nativeEvent.wheelDelta || -nativeEvent.deltaY;
        y = y < 0 ? -1 : 1;
        this.stepTo(y, {
          shiftKey: event.shiftKey,
          event: event
        });
      }
    }
  }, {
    key: "focus",
    value: function focus() {
      this.input.focus();
    }
  }, {
    key: "getSelectionStart",
    value: function getSelectionStart() {
      return (0, _getSelectionStart2.default)(this.input);
    }
  }, {
    key: "getProps",
    value: function getProps(props, state) {
      props = props || this.props;
      state = state || this.state;
      var suffix = getSuffix(props);
      var prefix = getPrefix(props);
      var currentValue = getCurrentValue(_objectSpread(_objectSpread({}, props), {}, {
        suffix: suffix,
        prefix: prefix
      }), state);
      var decimalDelimiter = (0, _getDecimalDelimiter.default)(props.locale);
      var decimalDelimiterPosition = (0, _getTransformedStringValues2.getDecimalDelimiterPosition)(currentValue, decimalDelimiter);
      var className = (0, _join.default)(props.rootClassName, props.theme && "".concat(props.rootClassName, "--theme-").concat(props.theme), "".concat(props.rootClassName, "--").concat(props.rtl ? 'rtl' : 'ltr'), props.disabled && "".concat(props.rootClassName, "--disabled"), state.focused && "".concat(props.rootClassName, "--focused"), props.enableSpinnerTools && "".concat(props.rootClassName, "--enable-spinner-tools"), props.enableClearButton && "".concat(props.rootClassName, "--enable-clear-button"), props.className);
      var controlled = isControlled(props);
      var value = controlled ? props.value : state.value;
      if (state.intermediateValue !== null) {
        value = state.intermediateValue;
      }
      var numericValue = Number(value);
      var p = _objectSpread(_objectSpread({}, props), {}, {
        className: className,
        isControlled: controlled,
        isControlledPrecision: isControlledPrecision(props),
        value: value,
        numericValue: numericValue,
        currentValue: currentValue,
        suffix: suffix,
        prefix: prefix,
        decimalDelimiter: decimalDelimiter,
        decimalDelimiterPosition: decimalDelimiterPosition
      });
      p.formattedValue = getFormatedValue(value, p);
      return p;
    }
  }]);
  return InovuaNumericInput;
}(_react.Component);
InovuaNumericInput.defaultProps = {
  rootClassName: 'inovua-react-toolkit-numeric-input',
  spinOnArrowKeys: true,
  numbersOnly: true,
  step: 1,
  shiftStep: 10,
  requireFocusOnStep: true,
  stepOnWheel: true,
  allowNegative: true,
  allowFloat: true,
  triggerChangeOnSpin: true,
  triggerChangeOnSpinDelay: 80,
  stepDelay: 60,
  prefix: '',
  suffix: '',
  theme: 'default-light',
  format: 'number',
  currencyPosition: 'end',
  enableSpinnerTools: true,
  enableClearButton: true,
  acceptClearToolFocus: false,
  allowEmpty: true,
  toolPosition: 'end',
  arrowSize: 10,
  clearButtonSize: 10,
  inputProps: {}
};
InovuaNumericInput.propTypes = {
  rootClassName: _propTypes.default.string,
  stepDelay: _propTypes.default.number,
  step: _propTypes.default.number,
  initialStep: _propTypes.default.number,
  valueOnEmpty: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  minValue: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  maxValue: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  onChange: _propTypes.default.func,
  triggerChangeOnSpin: _propTypes.default.bool,
  allowEmpty: _propTypes.default.bool,
  allowFloat: _propTypes.default.bool,
  requireFocusOnStep: _propTypes.default.bool,
  spinOnArrowKeys: _propTypes.default.bool,
  numbersOnly: _propTypes.default.bool,
  shiftStep: _propTypes.default.number,
  stepOnWheel: _propTypes.default.bool,
  allowNegative: _propTypes.default.bool,
  precision: _propTypes.default.number,
  format: _propTypes.default.oneOf(['currency', 'number', 'percentage']),
  locale: _propTypes.default.string,
  prefix: _propTypes.default.string,
  suffix: _propTypes.default.string,
  theme: _propTypes.default.string,
  arrowColor: _propTypes.default.string,
  arrowStyle: _propTypes.default.object,
  currencySymbol: _propTypes.default.string,
  currencyPosition: _propTypes.default.oneOf(['start', 'end']),
  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  defaultValue: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  wrapperProps: _propTypes.default.object,
  disabled: _propTypes.default.bool,
  acceptClearToolFocus: _propTypes.default.bool,
  renderClearIcon: _propTypes.default.func,
  clearButtonSize: _propTypes.default.number,
  clearButtonColor: _propTypes.default.string,
  clearButtonStyle: _propTypes.default.object,
  clearButtonClassName: _propTypes.default.string,
  enableSpinnerTools: _propTypes.default.bool,
  enableClearButton: _propTypes.default.bool,
  toolPosition: _propTypes.default.oneOf(['start', 'end']),
  arrowSize: _propTypes.default.number,
  arrowDownStyle: _propTypes.default.object,
  arrowUpStyle: _propTypes.default.object,
  inputProps: _propTypes.default.object,
  rtl: _propTypes.default.bool
};
globalObject.isNumeric = isNumeric;
var _default = InovuaNumericInput;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/data/countries.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/data/countries.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = [{
  name: 'Afghanistan',
  code: 'AF'
}, {
  name: 'Åland Islands',
  code: 'AX'
}, {
  name: 'Albania',
  code: 'AL'
}, {
  name: 'Algeria',
  code: 'DZ'
}, {
  name: 'American Samoa',
  code: 'AS'
}, {
  name: 'AndorrA',
  code: 'AD'
}, {
  name: 'Angola',
  code: 'AO'
}, {
  name: 'Anguilla',
  code: 'AI'
}, {
  name: 'Antarctica',
  code: 'AQ'
}, {
  name: 'Antigua and Barbuda',
  code: 'AG'
}, {
  name: 'Argentina',
  code: 'AR'
}, {
  name: 'Armenia',
  code: 'AM'
}, {
  name: 'Aruba',
  code: 'AW'
}, {
  name: 'Australia',
  code: 'AU'
}, {
  name: 'Austria',
  code: 'AT'
}, {
  name: 'Azerbaijan',
  code: 'AZ'
}, {
  name: 'Bahamas',
  code: 'BS'
}, {
  name: 'Bahrain',
  code: 'BH'
}, {
  name: 'Bangladesh',
  code: 'BD'
}, {
  name: 'Barbados',
  code: 'BB'
}, {
  name: 'Belarus',
  code: 'BY'
}, {
  name: 'Belgium',
  code: 'BE'
}, {
  name: 'Belize',
  code: 'BZ'
}, {
  name: 'Benin',
  code: 'BJ'
}, {
  name: 'Bermuda',
  code: 'BM'
}, {
  name: 'Bhutan',
  code: 'BT'
}, {
  name: 'Bolivia',
  code: 'BO'
}, {
  name: 'Bosnia and Herzegovina',
  code: 'BA'
}, {
  name: 'Botswana',
  code: 'BW'
}, {
  name: 'Bouvet Island',
  code: 'BV'
}, {
  name: 'Brazil',
  code: 'BR'
}, {
  name: 'British Indian Ocean Territory',
  code: 'IO'
}, {
  name: 'Brunei Darussalam',
  code: 'BN'
}, {
  name: 'Bulgaria',
  code: 'BG'
}, {
  name: 'Burkina Faso',
  code: 'BF'
}, {
  name: 'Burundi',
  code: 'BI'
}, {
  name: 'Cambodia',
  code: 'KH'
}, {
  name: 'Cameroon',
  code: 'CM'
}, {
  name: 'Canada',
  code: 'CA'
}, {
  name: 'Cape Verde',
  code: 'CV'
}, {
  name: 'Cayman Islands',
  code: 'KY'
}, {
  name: 'Central African Republic',
  code: 'CF'
}, {
  name: 'Chad',
  code: 'TD'
}, {
  name: 'Chile',
  code: 'CL'
}, {
  name: 'China',
  code: 'CN'
}, {
  name: 'Christmas Island',
  code: 'CX'
}, {
  name: 'Cocos (Keeling) Islands',
  code: 'CC'
}, {
  name: 'Colombia',
  code: 'CO'
}, {
  name: 'Comoros',
  code: 'KM'
}, {
  name: 'Congo',
  code: 'CG'
}, {
  name: 'Congo, The Democratic Republic of the',
  code: 'CD'
}, {
  name: 'Cook Islands',
  code: 'CK'
}, {
  name: 'Costa Rica',
  code: 'CR'
}, {
  name: 'Cote D"Ivoire',
  code: 'CI'
}, {
  name: 'Croatia',
  code: 'HR'
}, {
  name: 'Cuba',
  code: 'CU'
}, {
  name: 'Cyprus',
  code: 'CY'
}, {
  name: 'Czech Republic',
  code: 'CZ'
}, {
  name: 'Denmark',
  code: 'DK'
}, {
  name: 'Djibouti',
  code: 'DJ'
}, {
  name: 'Dominica',
  code: 'DM'
}, {
  name: 'Dominican Republic',
  code: 'DO'
}, {
  name: 'Ecuador',
  code: 'EC'
}, {
  name: 'Egypt',
  code: 'EG'
}, {
  name: 'El Salvador',
  code: 'SV'
}, {
  name: 'Equatorial Guinea',
  code: 'GQ'
}, {
  name: 'Eritrea',
  code: 'ER'
}, {
  name: 'Estonia',
  code: 'EE'
}, {
  name: 'Ethiopia',
  code: 'ET'
}, {
  name: 'Falkland Islands (Malvinas)',
  code: 'FK'
}, {
  name: 'Faroe Islands',
  code: 'FO'
}, {
  name: 'Fiji',
  code: 'FJ'
}, {
  name: 'Finland',
  code: 'FI'
}, {
  name: 'France',
  code: 'FR'
}, {
  name: 'French Guiana',
  code: 'GF'
}, {
  name: 'French Polynesia',
  code: 'PF'
}, {
  name: 'French Southern Territories',
  code: 'TF'
}, {
  name: 'Gabon',
  code: 'GA'
}, {
  name: 'Gambia',
  code: 'GM'
}, {
  name: 'Georgia',
  code: 'GE'
}, {
  name: 'Germany',
  code: 'DE'
}, {
  name: 'Ghana',
  code: 'GH'
}, {
  name: 'Gibraltar',
  code: 'GI'
}, {
  name: 'Greece',
  code: 'GR'
}, {
  name: 'Greenland',
  code: 'GL'
}, {
  name: 'Grenada',
  code: 'GD'
}, {
  name: 'Guadeloupe',
  code: 'GP'
}, {
  name: 'Guam',
  code: 'GU'
}, {
  name: 'Guatemala',
  code: 'GT'
}, {
  name: 'Guernsey',
  code: 'GG'
}, {
  name: 'Guinea',
  code: 'GN'
}, {
  name: 'Guinea-Bissau',
  code: 'GW'
}, {
  name: 'Guyana',
  code: 'GY'
}, {
  name: 'Haiti',
  code: 'HT'
}, {
  name: 'Heard Island and Mcdonald Islands',
  code: 'HM'
}, {
  name: 'Holy See (Vatican City State)',
  code: 'VA'
}, {
  name: 'Honduras',
  code: 'HN'
}, {
  name: 'Hong Kong',
  code: 'HK'
}, {
  name: 'Hungary',
  code: 'HU'
}, {
  name: 'Iceland',
  code: 'IS'
}, {
  name: 'India',
  code: 'IN'
}, {
  name: 'Indonesia',
  code: 'ID'
}, {
  name: 'Iran, Islamic Republic Of',
  code: 'IR'
}, {
  name: 'Iraq',
  code: 'IQ'
}, {
  name: 'Ireland',
  code: 'IE'
}, {
  name: 'Isle of Man',
  code: 'IM'
}, {
  name: 'Israel',
  code: 'IL'
}, {
  name: 'Italy',
  code: 'IT'
}, {
  name: 'Jamaica',
  code: 'JM'
}, {
  name: 'Japan',
  code: 'JP'
}, {
  name: 'Jersey',
  code: 'JE'
}, {
  name: 'Jordan',
  code: 'JO'
}, {
  name: 'Kazakhstan',
  code: 'KZ'
}, {
  name: 'Kenya',
  code: 'KE'
}, {
  name: 'Kiribati',
  code: 'KI'
}, {
  name: 'Korea, Democratic People"S Republic of',
  code: 'KP'
}, {
  name: 'Korea, Republic of',
  code: 'KR'
}, {
  name: 'Kuwait',
  code: 'KW'
}, {
  name: 'Kyrgyzstan',
  code: 'KG'
}, {
  name: 'Lao People"S Democratic Republic',
  code: 'LA'
}, {
  name: 'Latvia',
  code: 'LV'
}, {
  name: 'Lebanon',
  code: 'LB'
}, {
  name: 'Lesotho',
  code: 'LS'
}, {
  name: 'Liberia',
  code: 'LR'
}, {
  name: 'Libyan Arab Jamahiriya',
  code: 'LY'
}, {
  name: 'Liechtenstein',
  code: 'LI'
}, {
  name: 'Lithuania',
  code: 'LT'
}, {
  name: 'Luxembourg',
  code: 'LU'
}, {
  name: 'Macao',
  code: 'MO'
}, {
  name: 'Macedonia, The Former Yugoslav Republic of',
  code: 'MK'
}, {
  name: 'Madagascar',
  code: 'MG'
}, {
  name: 'Malawi',
  code: 'MW'
}, {
  name: 'Malaysia',
  code: 'MY'
}, {
  name: 'Maldives',
  code: 'MV'
}, {
  name: 'Mali',
  code: 'ML'
}, {
  name: 'Malta',
  code: 'MT'
}, {
  name: 'Marshall Islands',
  code: 'MH'
}, {
  name: 'Martinique',
  code: 'MQ'
}, {
  name: 'Mauritania',
  code: 'MR'
}, {
  name: 'Mauritius',
  code: 'MU'
}, {
  name: 'Mayotte',
  code: 'YT'
}, {
  name: 'Mexico',
  code: 'MX'
}, {
  name: 'Micronesia, Federated States of',
  code: 'FM'
}, {
  name: 'Moldova, Republic of',
  code: 'MD'
}, {
  name: 'Monaco',
  code: 'MC'
}, {
  name: 'Mongolia',
  code: 'MN'
}, {
  name: 'Montserrat',
  code: 'MS'
}, {
  name: 'Morocco',
  code: 'MA'
}, {
  name: 'Mozambique',
  code: 'MZ'
}, {
  name: 'Myanmar',
  code: 'MM'
}, {
  name: 'Namibia',
  code: 'NA'
}, {
  name: 'Nauru',
  code: 'NR'
}, {
  name: 'Nepal',
  code: 'NP'
}, {
  name: 'Netherlands',
  code: 'NL'
}, {
  name: 'Netherlands Antilles',
  code: 'AN'
}, {
  name: 'New Caledonia',
  code: 'NC'
}, {
  name: 'New Zealand',
  code: 'NZ'
}, {
  name: 'Nicaragua',
  code: 'NI'
}, {
  name: 'Niger',
  code: 'NE'
}, {
  name: 'Nigeria',
  code: 'NG'
}, {
  name: 'Niue',
  code: 'NU'
}, {
  name: 'Norfolk Island',
  code: 'NF'
}, {
  name: 'Northern Mariana Islands',
  code: 'MP'
}, {
  name: 'Norway',
  code: 'NO'
}, {
  name: 'Oman',
  code: 'OM'
}, {
  name: 'Pakistan',
  code: 'PK'
}, {
  name: 'Palau',
  code: 'PW'
}, {
  name: 'Palestinian Territory, Occupied',
  code: 'PS'
}, {
  name: 'Panama',
  code: 'PA'
}, {
  name: 'Papua New Guinea',
  code: 'PG'
}, {
  name: 'Paraguay',
  code: 'PY'
}, {
  name: 'Peru',
  code: 'PE'
}, {
  name: 'Philippines',
  code: 'PH'
}, {
  name: 'Pitcairn',
  code: 'PN'
}, {
  name: 'Poland',
  code: 'PL'
}, {
  name: 'Portugal',
  code: 'PT'
}, {
  name: 'Puerto Rico',
  code: 'PR'
}, {
  name: 'Qatar',
  code: 'QA'
}, {
  name: 'Reunion',
  code: 'RE'
}, {
  name: 'Romania',
  code: 'RO'
}, {
  name: 'Russian Federation',
  code: 'RU'
}, {
  name: 'RWANDA',
  code: 'RW'
}, {
  name: 'Saint Helena',
  code: 'SH'
}, {
  name: 'Saint Kitts and Nevis',
  code: 'KN'
}, {
  name: 'Saint Lucia',
  code: 'LC'
}, {
  name: 'Saint Pierre and Miquelon',
  code: 'PM'
}, {
  name: 'Saint Vincent and the Grenadines',
  code: 'VC'
}, {
  name: 'Samoa',
  code: 'WS'
}, {
  name: 'San Marino',
  code: 'SM'
}, {
  name: 'Sao Tome and Principe',
  code: 'ST'
}, {
  name: 'Saudi Arabia',
  code: 'SA'
}, {
  name: 'Senegal',
  code: 'SN'
}, {
  name: 'Serbia and Montenegro',
  code: 'CS'
}, {
  name: 'Seychelles',
  code: 'SC'
}, {
  name: 'Sierra Leone',
  code: 'SL'
}, {
  name: 'Singapore',
  code: 'SG'
}, {
  name: 'Slovakia',
  code: 'SK'
}, {
  name: 'Slovenia',
  code: 'SI'
}, {
  name: 'Solomon Islands',
  code: 'SB'
}, {
  name: 'Somalia',
  code: 'SO'
}, {
  name: 'South Africa',
  code: 'ZA'
}, {
  name: 'South Georgia and the South Sandwich Islands',
  code: 'GS'
}, {
  name: 'Spain',
  code: 'ES'
}, {
  name: 'Sri Lanka',
  code: 'LK'
}, {
  name: 'Sudan',
  code: 'SD'
}, {
  name: 'Suriname',
  code: 'SR'
}, {
  name: 'Svalbard and Jan Mayen',
  code: 'SJ'
}, {
  name: 'Swaziland',
  code: 'SZ'
}, {
  name: 'Sweden',
  code: 'SE'
}, {
  name: 'Switzerland',
  code: 'CH'
}, {
  name: 'Syrian Arab Republic',
  code: 'SY'
}, {
  name: 'Taiwan, Province of China',
  code: 'TW'
}, {
  name: 'Tajikistan',
  code: 'TJ'
}, {
  name: 'Tanzania, United Republic of',
  code: 'TZ'
}, {
  name: 'Thailand',
  code: 'TH'
}, {
  name: 'Timor-Leste',
  code: 'TL'
}, {
  name: 'Togo',
  code: 'TG'
}, {
  name: 'Tokelau',
  code: 'TK'
}, {
  name: 'Tonga',
  code: 'TO'
}, {
  name: 'Trinidad and Tobago',
  code: 'TT'
}, {
  name: 'Tunisia',
  code: 'TN'
}, {
  name: 'Turkey',
  code: 'TR'
}, {
  name: 'Turkmenistan',
  code: 'TM'
}, {
  name: 'Turks and Caicos Islands',
  code: 'TC'
}, {
  name: 'Tuvalu',
  code: 'TV'
}, {
  name: 'Uganda',
  code: 'UG'
}, {
  name: 'Ukraine',
  code: 'UA'
}, {
  name: 'United Arab Emirates',
  code: 'AE'
}, {
  name: 'United Kingdom',
  code: 'GB'
}, {
  name: 'United States',
  code: 'US'
}, {
  name: 'United States Minor Outlying Islands',
  code: 'UM'
}, {
  name: 'Uruguay',
  code: 'UY'
}, {
  name: 'Uzbekistan',
  code: 'UZ'
}, {
  name: 'Vanuatu',
  code: 'VU'
}, {
  name: 'Venezuela',
  code: 'VE'
}, {
  name: 'Viet Nam',
  code: 'VN'
}, {
  name: 'Virgin Islands, British',
  code: 'VG'
}, {
  name: 'Virgin Islands, U.S.',
  code: 'VI'
}, {
  name: 'Wallis and Futuna',
  code: 'WF'
}, {
  name: 'Western Sahara',
  code: 'EH'
}, {
  name: 'Yemen',
  code: 'YE'
}, {
  name: 'Zambia',
  code: 'ZM'
}, {
  name: 'Zimbabwe',
  code: 'ZW'
}];
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/data/countryCurrencyCodes.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/data/countryCurrencyCodes.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = [{
  code: 'AED',
  number: '784',
  digits: 2,
  currency: 'United Arab Emirates dirham',
  countries: ['united arab emirates']
}, {
  code: 'AFN',
  number: '971',
  digits: 2,
  currency: 'Afghan afghani',
  countries: ['afghanistan']
}, {
  code: 'ALL',
  number: '008',
  digits: 2,
  currency: 'Albanian lek',
  countries: ['albania']
}, {
  code: 'AMD',
  number: '051',
  digits: 2,
  currency: 'Armenian dram',
  countries: ['armenia']
}, {
  code: 'ANG',
  number: '532',
  digits: 2,
  currency: 'Netherlands Antillean guilder',
  countries: ['curaçao', 'sint maarten']
}, {
  code: 'AOA',
  number: '973',
  digits: 2,
  currency: 'Angolan kwanza',
  countries: ['angola']
}, {
  code: 'ARS',
  number: '032',
  digits: 2,
  currency: 'Argentine peso',
  countries: ['argentina']
}, {
  code: 'AUD',
  number: '036',
  digits: 2,
  currency: 'Australian dollar',
  countries: ['australia', 'australian antarctic territory', 'christmas island', 'cocos (keeling) islands', 'heard and mcdonald islands', 'kiribati', 'nauru', 'norfolk island', 'tuvalu']
}, {
  code: 'AWG',
  number: '533',
  digits: 2,
  currency: 'Aruban florin',
  countries: ['aruba']
}, {
  code: 'AZN',
  number: '944',
  digits: 2,
  currency: 'Azerbaijani manat',
  countries: ['azerbaijan']
}, {
  code: 'BAM',
  number: '977',
  digits: 2,
  currency: 'Bosnia and Herzegovina convertible mark',
  countries: ['bosnia and herzegovina']
}, {
  code: 'BBD',
  number: '052',
  digits: 2,
  currency: 'Barbados dollar',
  countries: ['barbados']
}, {
  code: 'BDT',
  number: '050',
  digits: 2,
  currency: 'Bangladeshi taka',
  countries: ['bangladesh']
}, {
  code: 'BGN',
  number: '975',
  digits: 2,
  currency: 'Bulgarian lev',
  countries: ['bulgaria']
}, {
  code: 'BHD',
  number: '048',
  digits: 3,
  currency: 'Bahraini dinar',
  countries: ['bahrain']
}, {
  code: 'BIF',
  number: '108',
  digits: 0,
  currency: 'Burundian franc',
  countries: ['burundi']
}, {
  code: 'BMD',
  number: '060',
  digits: 2,
  currency: 'Bermudian dollar',
  countries: ['bermuda']
}, {
  code: 'BND',
  number: '096',
  digits: 2,
  currency: 'Brunei dollar',
  countries: ['brunei', 'singapore']
}, {
  code: 'BOB',
  number: '068',
  digits: 2,
  currency: 'Boliviano',
  countries: ['bolivia']
}, {
  code: 'BOV',
  number: '984',
  digits: 2,
  currency: 'Bolivian Mvdol (funds code)',
  countries: ['bolivia']
}, {
  code: 'BRL',
  number: '986',
  digits: 2,
  currency: 'Brazilian real',
  countries: ['brazil']
}, {
  code: 'BSD',
  number: '044',
  digits: 2,
  currency: 'Bahamian dollar',
  countries: ['bahamas']
}, {
  code: 'BTN',
  number: '064',
  digits: 2,
  currency: 'Bhutanese ngultrum',
  countries: ['bhutan']
}, {
  code: 'BWP',
  number: '072',
  digits: 2,
  currency: 'Botswana pula',
  countries: ['botswana']
}, {
  code: 'BYR',
  number: '974',
  digits: 0,
  currency: 'Belarusian ruble',
  countries: ['belarus']
}, {
  code: 'BZD',
  number: '084',
  digits: 2,
  currency: 'Belize dollar',
  countries: ['belize']
}, {
  code: 'CAD',
  number: '124',
  digits: 2,
  currency: 'Canadian dollar',
  countries: ['canada', 'saint pierre and miquelon']
}, {
  code: 'CDF',
  number: '976',
  digits: 2,
  currency: 'Congolese franc',
  countries: ['democratic republic of congo']
}, {
  code: 'CHE',
  number: '947',
  digits: 2,
  currency: 'WIR Euro (complementary currency)',
  countries: ['switzerland']
}, {
  code: 'CHF',
  number: '756',
  digits: 2,
  currency: 'Swiss franc',
  countries: ['switzerland', 'liechtenstein']
}, {
  code: 'CHW',
  number: '948',
  digits: 2,
  currency: 'WIR Franc (complementary currency)',
  countries: ['switzerland']
}, {
  code: 'CLF',
  number: '990',
  digits: 0,
  currency: 'Unidad de Fomento (funds code)',
  countries: ['chile']
}, {
  code: 'CLP',
  number: '152',
  digits: 0,
  currency: 'Chilean peso',
  countries: ['chile']
}, {
  code: 'CNY',
  number: '156',
  digits: 2,
  currency: 'Chinese yuan',
  countries: ['china']
}, {
  code: 'COP',
  number: '170',
  digits: 2,
  currency: 'Colombian peso',
  countries: ['colombia']
}, {
  code: 'COU',
  number: '970',
  digits: 2,
  currency: 'Unidad de Valor Real',
  countries: ['colombia']
}, {
  code: 'CRC',
  number: '188',
  digits: 2,
  currency: 'Costa Rican colon',
  countries: ['costa rica']
}, {
  code: 'CUC',
  number: '931',
  digits: 2,
  currency: 'Cuban convertible peso',
  countries: ['cuba']
}, {
  code: 'CUP',
  number: '192',
  digits: 2,
  currency: 'Cuban peso',
  countries: ['cuba']
}, {
  code: 'CVE',
  number: '132',
  digits: 0,
  currency: 'Cape Verde escudo',
  countries: ['cape verde']
}, {
  code: 'CZK',
  number: '203',
  digits: 2,
  currency: 'Czech koruna',
  countries: ['czech republic']
}, {
  code: 'DJF',
  number: '262',
  digits: 0,
  currency: 'Djiboutian franc',
  countries: ['djibouti']
}, {
  code: 'DKK',
  number: '208',
  digits: 2,
  currency: 'Danish krone',
  countries: ['denmark', 'faroe islands', 'greenland']
}, {
  code: 'DOP',
  number: '214',
  digits: 2,
  currency: 'Dominican peso',
  countries: ['dominican republic']
}, {
  code: 'DZD',
  number: '012',
  digits: 2,
  currency: 'Algerian dinar',
  countries: ['algeria']
}, {
  code: 'EGP',
  number: '818',
  digits: 2,
  currency: 'Egyptian pound',
  countries: ['egypt', 'palestinian territories']
}, {
  code: 'ERN',
  number: '232',
  digits: 2,
  currency: 'Eritrean nakfa',
  countries: ['eritrea']
}, {
  code: 'ETB',
  number: '230',
  digits: 2,
  currency: 'Ethiopian birr',
  countries: ['ethiopia']
}, {
  code: 'EUR',
  number: '978',
  digits: 2,
  currency: 'Euro',
  countries: ['andorra', 'austria', 'belgium', 'cyprus', 'estonia', 'finland', 'france', 'germany', 'greece', 'ireland', 'italy', 'kosovo', 'luxembourg', 'malta', 'monaco', 'montenegro', 'netherlands', 'portugal', 'san marino', 'slovakia', 'slovenia', 'spain', 'vatican city']
}, {
  code: 'FJD',
  number: '242',
  digits: 2,
  currency: 'Fiji dollar',
  countries: ['fiji']
}, {
  code: 'FKP',
  number: '238',
  digits: 2,
  currency: 'Falkland Islands pound',
  countries: ['falkland islands']
}, {
  code: 'GBP',
  number: '826',
  digits: 2,
  currency: 'Pound sterling',
  countries: ['united kingdom', 'british crown dependencies (the  isle of man and the channel islands)', 'south georgia and the south sandwich islands', 'british antarctic territory', 'british indian ocean territory']
}, {
  code: 'GEL',
  number: '981',
  digits: 2,
  currency: 'Georgian lari',
  countries: ['georgia']
}, {
  code: 'GHS',
  number: '936',
  digits: 2,
  currency: 'Ghanaian cedi',
  countries: ['ghana']
}, {
  code: 'GIP',
  number: '292',
  digits: 2,
  currency: 'Gibraltar pound',
  countries: ['gibraltar']
}, {
  code: 'GMD',
  number: '270',
  digits: 2,
  currency: 'Gambian dalasi',
  countries: ['gambia']
}, {
  code: 'GNF',
  number: '324',
  digits: 0,
  currency: 'Guinean franc',
  countries: ['guinea']
}, {
  code: 'GTQ',
  number: '320',
  digits: 2,
  currency: 'Guatemalan quetzal',
  countries: ['guatemala']
}, {
  code: 'GYD',
  number: '328',
  digits: 2,
  currency: 'Guyanese dollar',
  countries: ['guyana']
}, {
  code: 'HKD',
  number: '344',
  digits: 2,
  currency: 'Hong Kong dollar',
  countries: ['hong kong', 'macao']
}, {
  code: 'HNL',
  number: '340',
  digits: 2,
  currency: 'Honduran lempira',
  countries: ['honduras']
}, {
  code: 'HRK',
  number: '191',
  digits: 2,
  currency: 'Croatian kuna',
  countries: ['croatia']
}, {
  code: 'HTG',
  number: '332',
  digits: 2,
  currency: 'Haitian gourde',
  countries: ['haiti']
}, {
  code: 'HUF',
  number: '348',
  digits: 2,
  currency: 'Hungarian forint',
  countries: ['hungary']
}, {
  code: 'IDR',
  number: '360',
  digits: 0,
  currency: 'Indonesian rupiah',
  countries: ['indonesia']
}, {
  code: 'ILS',
  number: '376',
  digits: 2,
  currency: 'Israeli new shekel',
  countries: ['israel', 'palestinian territories']
}, {
  code: 'INR',
  number: '356',
  digits: 2,
  currency: 'Indian rupee',
  countries: ['india']
}, {
  code: 'IQD',
  number: '368',
  digits: 3,
  currency: 'Iraqi dinar',
  countries: ['iraq']
}, {
  code: 'IRR',
  number: '364',
  digits: 0,
  currency: 'Iranian rial',
  countries: ['iran']
}, {
  code: 'ISK',
  number: '352',
  digits: 0,
  currency: 'Icelandic króna',
  countries: ['iceland']
}, {
  code: 'JMD',
  number: '388',
  digits: 2,
  currency: 'Jamaican dollar',
  countries: ['jamaica']
}, {
  code: 'JOD',
  number: '400',
  digits: 3,
  currency: 'Jordanian dinar',
  countries: ['jordan']
}, {
  code: 'JPY',
  number: '392',
  digits: 0,
  currency: 'Japanese yen',
  countries: ['japan']
}, {
  code: 'KES',
  number: '404',
  digits: 2,
  currency: 'Kenyan shilling',
  countries: ['kenya']
}, {
  code: 'KGS',
  number: '417',
  digits: 2,
  currency: 'Kyrgyzstani som',
  countries: ['kyrgyzstan']
}, {
  code: 'KHR',
  number: '116',
  digits: 2,
  currency: 'Cambodian riel',
  countries: ['cambodia']
}, {
  code: 'KMF',
  number: '174',
  digits: 0,
  currency: 'Comoro franc',
  countries: ['comoros']
}, {
  code: 'KPW',
  number: '408',
  digits: 0,
  currency: 'North Korean won',
  countries: ['north korea']
}, {
  code: 'KRW',
  number: '410',
  digits: 0,
  currency: 'South Korean won',
  countries: ['south korea']
}, {
  code: 'KWD',
  number: '414',
  digits: 3,
  currency: 'Kuwaiti dinar',
  countries: ['kuwait']
}, {
  code: 'KYD',
  number: '136',
  digits: 2,
  currency: 'Cayman Islands dollar',
  countries: ['cayman islands']
}, {
  code: 'KZT',
  number: '398',
  digits: 2,
  currency: 'Kazakhstani tenge',
  countries: ['kazakhstan']
}, {
  code: 'LAK',
  number: '418',
  digits: 0,
  currency: 'Lao kip',
  countries: ['laos']
}, {
  code: 'LBP',
  number: '422',
  digits: 0,
  currency: 'Lebanese pound',
  countries: ['lebanon']
}, {
  code: 'LKR',
  number: '144',
  digits: 2,
  currency: 'Sri Lankan rupee',
  countries: ['sri lanka']
}, {
  code: 'LRD',
  number: '430',
  digits: 2,
  currency: 'Liberian dollar',
  countries: ['liberia']
}, {
  code: 'LSL',
  number: '426',
  digits: 2,
  currency: 'Lesotho loti',
  countries: ['lesotho']
}, {
  code: 'LTL',
  number: '440',
  digits: 2,
  currency: 'Lithuanian litas',
  countries: ['lithuania']
}, {
  code: 'LVL',
  number: '428',
  digits: 2,
  currency: 'Latvian lats',
  countries: ['latvia']
}, {
  code: 'LYD',
  number: '434',
  digits: 3,
  currency: 'Libyan dinar',
  countries: ['libya']
}, {
  code: 'MAD',
  number: '504',
  digits: 2,
  currency: 'Moroccan dirham',
  countries: ['morocco']
}, {
  code: 'MDL',
  number: '498',
  digits: 2,
  currency: 'Moldovan leu',
  countries: ['moldova (except  transnistria)']
}, {
  code: 'MGA',
  number: '969',
  digits: 0,
  currency: '*[8]	Malagasy ariary',
  countries: ['madagascar']
}, {
  code: 'MKD',
  number: '807',
  digits: 0,
  currency: 'Macedonian denar',
  countries: ['macedonia']
}, {
  code: 'MMK',
  number: '104',
  digits: 0,
  currency: 'Myanma kyat',
  countries: ['myanmar']
}, {
  code: 'MNT',
  number: '496',
  digits: 2,
  currency: 'Mongolian tugrik',
  countries: ['mongolia']
}, {
  code: 'MOP',
  number: '446',
  digits: 2,
  currency: 'Macanese pataca',
  countries: ['macao']
}, {
  code: 'MRO',
  number: '478',
  digits: 0,
  currency: '*[8]	Mauritanian ouguiya',
  countries: ['mauritania']
}, {
  code: 'MUR',
  number: '480',
  digits: 2,
  currency: 'Mauritian rupee',
  countries: ['mauritius']
}, {
  code: 'MVR',
  number: '462',
  digits: 2,
  currency: 'Maldivian rufiyaa',
  countries: ['maldives']
}, {
  code: 'MWK',
  number: '454',
  digits: 2,
  currency: 'Malawian kwacha',
  countries: ['malawi']
}, {
  code: 'MXN',
  number: '484',
  digits: 2,
  currency: 'Mexican peso',
  countries: ['mexico']
}, {
  code: 'MXV',
  number: '979',
  digits: 2,
  currency: 'Mexican Unidad de Inversion (UDI) (funds code)',
  countries: ['mexico']
}, {
  code: 'MYR',
  number: '458',
  digits: 2,
  currency: 'Malaysian ringgit',
  countries: ['malaysia']
}, {
  code: 'MZN',
  number: '943',
  digits: 2,
  currency: 'Mozambican metical',
  countries: ['mozambique']
}, {
  code: 'NAD',
  number: '516',
  digits: 2,
  currency: 'Namibian dollar',
  countries: ['namibia']
}, {
  code: 'NGN',
  number: '566',
  digits: 2,
  currency: 'Nigerian naira',
  countries: ['nigeria']
}, {
  code: 'NIO',
  number: '558',
  digits: 2,
  currency: 'Nicaraguan córdoba',
  countries: ['nicaragua']
}, {
  code: 'NOK',
  number: '578',
  digits: 2,
  currency: 'Norwegian krone',
  countries: ['norway', 'svalbard', 'jan mayen', 'bouvet island', 'queen maud land', 'peter i island']
}, {
  code: 'NPR',
  number: '524',
  digits: 2,
  currency: 'Nepalese rupee',
  countries: ['nepal']
}, {
  code: 'NZD',
  number: '554',
  digits: 2,
  currency: 'New Zealand dollar',
  countries: ['cook islands', 'new zealand', 'niue', 'pitcairn', 'tokelau', 'ross dependency']
}, {
  code: 'OMR',
  number: '512',
  digits: 3,
  currency: 'Omani rial',
  countries: ['oman']
}, {
  code: 'PAB',
  number: '590',
  digits: 2,
  currency: 'Panamanian balboa',
  countries: ['panama']
}, {
  code: 'PEN',
  number: '604',
  digits: 2,
  currency: 'Peruvian nuevo sol',
  countries: ['peru']
}, {
  code: 'PGK',
  number: '598',
  digits: 2,
  currency: 'Papua New Guinean kina',
  countries: ['papua new guinea']
}, {
  code: 'PHP',
  number: '608',
  digits: 2,
  currency: 'Philippine peso',
  countries: ['philippines']
}, {
  code: 'PKR',
  number: '586',
  digits: 2,
  currency: 'Pakistani rupee',
  countries: ['pakistan']
}, {
  code: 'PLN',
  number: '985',
  digits: 2,
  currency: 'Polish złoty',
  countries: ['poland']
}, {
  code: 'PYG',
  number: '600',
  digits: 0,
  currency: 'Paraguayan guaraní',
  countries: ['paraguay']
}, {
  code: 'QAR',
  number: '634',
  digits: 2,
  currency: 'Qatari riyal',
  countries: ['qatar']
}, {
  code: 'RON',
  number: '946',
  digits: 2,
  currency: 'Romanian new leu',
  countries: ['romania']
}, {
  code: 'RSD',
  number: '941',
  digits: 2,
  currency: 'Serbian dinar',
  countries: ['serbia']
}, {
  code: 'RUB',
  number: '643',
  digits: 2,
  currency: 'Russian rouble',
  countries: ['russia', 'abkhazia', 'south ossetia']
}, {
  code: 'RWF',
  number: '646',
  digits: 0,
  currency: 'Rwandan franc',
  countries: ['rwanda']
}, {
  code: 'SAR',
  number: '682',
  digits: 2,
  currency: 'Saudi riyal',
  countries: ['saudi arabia']
}, {
  code: 'SBD',
  number: '090',
  digits: 2,
  currency: 'Solomon Islands dollar',
  countries: ['solomon islands']
}, {
  code: 'SCR',
  number: '690',
  digits: 2,
  currency: 'Seychelles rupee',
  countries: ['seychelles']
}, {
  code: 'SDG',
  number: '938',
  digits: 2,
  currency: 'Sudanese pound',
  countries: ['sudan']
}, {
  code: 'SEK',
  number: '752',
  digits: 2,
  currency: 'Swedish krona/kronor',
  countries: ['sweden']
}, {
  code: 'SGD',
  number: '702',
  digits: 2,
  currency: 'Singapore dollar',
  countries: ['singapore', 'brunei']
}, {
  code: 'SHP',
  number: '654',
  digits: 2,
  currency: 'Saint Helena pound',
  countries: ['saint helena']
}, {
  code: 'SLL',
  number: '694',
  digits: 0,
  currency: 'Sierra Leonean leone',
  countries: ['sierra leone']
}, {
  code: 'SOS',
  number: '706',
  digits: 2,
  currency: 'Somali shilling',
  countries: ['somalia']
}, {
  code: 'SRD',
  number: '968',
  digits: 2,
  currency: 'Surinamese dollar',
  countries: ['suriname']
}, {
  code: 'SSP',
  number: '728',
  digits: 2,
  currency: 'South Sudanese pound',
  countries: ['south sudan']
}, {
  code: 'STD',
  number: '678',
  digits: 0,
  currency: 'São Tomé and Príncipe dobra',
  countries: ['são tomé and príncipe']
}, {
  code: 'SYP',
  number: '760',
  digits: 2,
  currency: 'Syrian pound',
  countries: ['syria']
}, {
  code: 'SZL',
  number: '748',
  digits: 2,
  currency: 'Swazi lilangeni',
  countries: ['swaziland']
}, {
  code: 'THB',
  number: '764',
  digits: 2,
  currency: 'Thai baht',
  countries: ['thailand']
}, {
  code: 'TJS',
  number: '972',
  digits: 2,
  currency: 'Tajikistani somoni',
  countries: ['tajikistan']
}, {
  code: 'TMT',
  number: '934',
  digits: 2,
  currency: 'Turkmenistani manat',
  countries: ['turkmenistan']
}, {
  code: 'TND',
  number: '788',
  digits: 3,
  currency: 'Tunisian dinar',
  countries: ['tunisia']
}, {
  code: 'TOP',
  number: '776',
  digits: 2,
  currency: 'Tongan paʻanga',
  countries: ['tonga']
}, {
  code: 'TRY',
  number: '949',
  digits: 2,
  currency: 'Turkish lira',
  countries: ['turkey', 'northern cyprus']
}, {
  code: 'TTD',
  number: '780',
  digits: 2,
  currency: 'Trinidad and Tobago dollar',
  countries: ['trinidad and tobago']
}, {
  code: 'TWD',
  number: '901',
  digits: 2,
  currency: 'New Taiwan dollar',
  countries: ['republic of china (taiwan)']
}, {
  code: 'TZS',
  number: '834',
  digits: 2,
  currency: 'Tanzanian shilling',
  countries: ['tanzania']
}, {
  code: 'UAH',
  number: '980',
  digits: 2,
  currency: 'Ukrainian hryvnia',
  countries: ['ukraine']
}, {
  code: 'UGX',
  number: '800',
  digits: 2,
  currency: 'Ugandan shilling',
  countries: ['uganda']
}, {
  code: 'USD',
  number: '840',
  digits: 2,
  currency: 'United States dollar',
  countries: ['american samoa', 'barbados', 'bermuda', 'british indian ocean territory', 'british virgin islands, caribbean netherlands', 'ecuador', 'el salvador', 'guam', 'haiti', 'marshall islands', 'federated states of micronesia', 'northern mariana islands', 'palau', 'panama', 'puerto rico', 'timor-leste', 'turks and caicos islands', 'united states', 'u.s. virgin islands', 'zimbabwe']
}, {
  code: 'USN',
  number: '997',
  digits: 2,
  currency: 'United States dollar (next day) (funds code)',
  countries: ['united states']
}, {
  code: 'USS',
  number: '998',
  digits: 2,
  currency: 'United States dollar',
  countries: ['united states']
}, {
  code: 'UYI',
  number: '940',
  digits: 0,
  currency: 'Uruguay Peso en Unidades Indexadas',
  countries: ['uruguay']
}, {
  code: 'UYU',
  number: '858',
  digits: 2,
  currency: 'Uruguayan peso',
  countries: ['uruguay']
}, {
  code: 'UZS',
  number: '860',
  digits: 2,
  currency: 'Uzbekistan som',
  countries: ['uzbekistan']
}, {
  code: 'VEF',
  number: '937',
  digits: 2,
  currency: 'Venezuelan bolívar',
  countries: ['venezuela']
}, {
  code: 'VND',
  number: '704',
  digits: 0,
  currency: 'Vietnamese dong',
  countries: ['vietnam']
}, {
  code: 'VUV',
  number: '548',
  digits: 0,
  currency: 'Vanuatu vatu',
  countries: ['vanuatu']
}, {
  code: 'WST',
  number: '882',
  digits: 2,
  currency: 'Samoan tala',
  countries: ['samoa']
}, {
  code: 'XAF',
  number: '950',
  digits: 0,
  currency: 'CFA franc BEAC',
  countries: ['cameroon', 'central african republic', 'republic of the congo', 'chad', 'equatorial guinea', 'gabon']
}, {
  code: 'XAG',
  number: '961',
  currency: 'Silver (one troy ounce)'
}, {
  code: 'XAU',
  number: '959',
  currency: 'Gold (one troy ounce)'
}, {
  code: 'XBA',
  number: '955',
  currency: 'European Composite Unit (EURCO) (bond market unit)	'
}, {
  code: 'XBB',
  number: '956',
  currency: 'European Monetary Unit (E.M.U.-6) (bond market unit)	'
}, {
  code: 'XBC',
  number: '957',
  currency: 'European Unit of Account 9 (E.U.A.-9) (bond market unit)	'
}, {
  code: 'XBD',
  number: '958',
  currency: 'European Unit of Account 17 (E.U.A.-17) (bond market unit)	'
}, {
  code: 'XBT',
  currency: 'Bitcoin'
}, {
  code: 'XCD',
  number: '951',
  digits: 2,
  currency: 'East Caribbean dollar',
  countries: ['anguilla', 'antigua and barbuda', 'dominica', 'grenada', 'montserrat', 'saint kitts and nevis', 'saint lucia', 'saint vincent and the grenadines']
}, {
  code: 'XDR',
  number: '960',
  currency: 'Special drawing rights',
  countries: ['international monetary fund']
}, {
  code: 'XFU',
  currency: 'UIC franc (special settlement currency)',
  countries: ['international union of railways']
}, {
  code: 'XOF',
  number: '952',
  digits: 0,
  currency: 'CFA franc BCEAO',
  countries: ['benin', 'burkina faso', "côte d'ivoire", 'guinea-bissau', 'mali', 'niger', 'senegal', 'togo']
}, {
  code: 'XPD',
  number: '964',
  currency: 'Palladium (one troy ounce)'
}, {
  code: 'XPF',
  number: '953',
  digits: 0,
  currency: 'CFP franc (Franc du Pacifique)',
  countries: ['french polynesia', 'new caledonia', 'wallis and futuna']
}, {
  code: 'XPT',
  number: '962',
  currency: 'Platinum (one troy ounce)'
}, {
  code: 'XTS',
  number: '963',
  currency: 'Code reserved for testing purposes'
}, {
  code: 'XXX',
  number: '999',
  currency: 'No currency'
}, {
  code: 'YER',
  number: '886',
  digits: 2,
  currency: 'Yemeni rial',
  countries: ['yemen']
}, {
  code: 'ZAR',
  number: '710',
  digits: 2,
  currency: 'South African rand',
  countries: ['south africa']
}, {
  code: 'ZMW',
  number: '967',
  digits: 2,
  currency: 'Zambian kwacha',
  countries: ['zambia']
}];
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/index.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/index.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _NumberInput = _interopRequireDefault(__webpack_require__(/*! ./NumberInput */ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/NumberInput.js"));
var _default = _NumberInput.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/convert-string-to-number.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/convert-string-to-number.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = convertStringToNumber;
function convertStringToNumber(stringToConvert) {
  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var _props$decimalDelimit = props.decimalDelimiter,
    decimalDelimiter = _props$decimalDelimit === void 0 ? '.' : _props$decimalDelimit,
    _props$digitGroupDeli = props.digitGroupDelimiter,
    digitGroupDelimiter = _props$digitGroupDeli === void 0 ? ',' : _props$digitGroupDeli,
    _props$min = props.min,
    min = _props$min === void 0 ? Number.MIN_SAFE_INTEGER : _props$min,
    _props$max = props.max,
    max = _props$max === void 0 ? Number.MAX_SAFE_INTEGER : _props$max;
  if (digitGroupDelimiter == '') {
    return ',';
  }
  if (!stringToConvert) {
    return NaN;
  }
  var cleanedString = stringToConvert;
  var decmialPosition = cleanedString.lastIndexOf(decimalDelimiter);
  if (decmialPosition !== -1 && decimalDelimiter !== '.') {
    cleanedString = [cleanedString.substring(0, decmialPosition).replace(new RegExp("[\\".concat(digitGroupDelimiter, "]"), 'g'), ''), cleanedString.substring(decmialPosition).replace(new RegExp("[\\".concat(decimalDelimiter, "]"), 'g'), '.')].join('');
  } else {
    cleanedString = cleanedString.replace(new RegExp("[\\".concat(digitGroupDelimiter, "]"), 'g'), '');
  }
  var result = parseFloat(cleanedString, 10);
  if (result < min) {
    result = min;
  }
  if (result > max) {
    result = max;
  }
  return result;
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/find.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/find.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
function find(collection, test) {
  if (!Array.isArray(collection)) {
    return null;
  }
  if (collection.length === 0) {
    return null;
  }
  if (Array.prototype.find) {
    return collection.find(test);
  }
  if (typeof test !== 'function') {
    return null;
  }
  var needle;
  for (var i = 0, len = collection.length; i < len; i++) {
    var item = collection[i];
    if (test(item)) {
      needle = item;
      break;
    }
  }
  return needle;
}
var _default = find;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/get-currency-for-country-code.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/get-currency-for-country-code.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = getCurrencyForCountryCode;
var _countryCurrencyCodes = _interopRequireDefault(__webpack_require__(/*! ../data/countryCurrencyCodes */ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/data/countryCurrencyCodes.js"));
var _countries = _interopRequireDefault(__webpack_require__(/*! ../data/countries */ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/data/countries.js"));
var _find = _interopRequireDefault(__webpack_require__(/*! ./find */ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/find.js"));
var countriesByCountryCode = _countries.default.reduce(function (accumulator, country) {
  accumulator[country.code] = country.name;
  accumulator[country.code.toLowerCase()] = country.name;
  return accumulator;
}, {});
function getCurrencyForCountryCode(locale) {
  var currencyDisplay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'symbol';
  var code = locale.split('-')[1];
  var countryNameByCode = countriesByCountryCode[code];
  if (countryNameByCode) {
    var country = countriesByCountryCode[code] && countriesByCountryCode[code].toLowerCase();
    var currency = (0, _find.default)(_countryCurrencyCodes.default, function (countryCode) {
      return (countryCode.countries || []).indexOf(country) !== -1;
    });
    if (currency) {
      return new Number(1).toLocaleString(locale, {
        style: 'currency',
        currency: currency.code,
        currencyDisplay: currencyDisplay
      }).replace(/[0-9\.\,]/g, '');
    }
    return '';
  } else {
    console.error("Cannot get currency based on country code. Country ".concat(code, " not found."));
    return '';
  }
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/get-decimal-delimiter.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/get-decimal-delimiter.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = getDecimalDelimiter;
function getDecimalDelimiter(locale) {
  return 1.1.toLocaleString(locale).replace(/1/g, '') || '.';
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/get-digit-group-delimiter.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/get-digit-group-delimiter.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = getDigitGroupDelimiter;
function getDigitGroupDelimiter(locale) {
  var number = 1000;
  return number.toLocaleString(locale).replace(/[01]/g, '') || ',';
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/get-selection-end.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/get-selection-end.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = getSelectionEnd;
var _getGlobal = __webpack_require__(/*! ../../../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
var globalObject = (0, _getGlobal.getGlobal)();
var document = globalObject.document;
function getSelectionEnd(o) {
  if (o.createTextRange && !globalObject.getSelection) {
    var r = document.selection.createRange().duplicate();
    r.moveStart('character', -o.value.length);
    return r.text.length;
  }
  return o.selectionEnd;
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/get-selection-range.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/get-selection-range.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = getSelectedRange;
var _getSelectionStart = _interopRequireDefault(__webpack_require__(/*! ./get-selection-start */ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/get-selection-start.js"));
var _getSelectionEnd = _interopRequireDefault(__webpack_require__(/*! ./get-selection-end */ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/get-selection-end.js"));
function getSelectedRange(dom) {
  var api = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var _api$getSelectionEnd = api.getSelectionEnd,
    getSelectionEnd = _api$getSelectionEnd === void 0 ? _getSelectionEnd.default : _api$getSelectionEnd,
    _api$getSelectionStar = api.getSelectionStart,
    getSelectionStart = _api$getSelectionStar === void 0 ? _getSelectionStart.default : _api$getSelectionStar;
  return {
    start: getSelectionStart(dom),
    end: getSelectionEnd(dom)
  };
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/get-selection-start.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/get-selection-start.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = getSelectionStart;
var _getGlobal = __webpack_require__(/*! ../../../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
var globalObject = (0, _getGlobal.getGlobal)();
var document = globalObject.document;
function getSelectionStart(o) {
  if (o.createTextRange && !globalObject.getSelection) {
    var r = document.selection.createRange().duplicate();
    r.moveEnd('character', o.value.length);
    if (r.text == '') return o.value.length;
    return o.value.lastIndexOf(r.text);
  }
  return o.selectionStart;
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/get-transformed-string-values.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/get-transformed-string-values.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.countDecimalDigits = void 0;
exports["default"] = getTransformedStringValues;
exports.getDecimalDelimiterPosition = void 0;
var _getDecimalDelimiter = _interopRequireDefault(__webpack_require__(/*! ./get-decimal-delimiter */ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/get-decimal-delimiter.js"));
var _getDigitGroupDelimiter = _interopRequireDefault(__webpack_require__(/*! ./get-digit-group-delimiter */ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/get-digit-group-delimiter.js"));
var _convertStringToNumber = _interopRequireDefault(__webpack_require__(/*! ./convert-string-to-number */ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/convert-string-to-number.js"));
var getDecimalDelimiterPosition = function getDecimalDelimiterPosition(value, decimalDelimiter) {
  var string = value && value.toString();
  var position = string && string.indexOf(decimalDelimiter);
  return position !== -1 ? position : false;
};
exports.getDecimalDelimiterPosition = getDecimalDelimiterPosition;
var countDecimalDigits = function countDecimalDigits(string, decimalDelimiter, decimalPosition) {
  var position = decimalPosition || getDecimalDelimiterPosition(string, decimalDelimiter);
  if (isNaN(position)) {
    return 0;
  }
  if (typeof position === 'number' && position < string.length) {
    return string.length - position - 1;
  }
  return 0;
};
exports.countDecimalDigits = countDecimalDigits;
function getTransformedStringValues(stringInput) {
  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var internalApi = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  if (typeof stringInput !== 'string') {
    stringInput += '';
  }
  if (!stringInput) {
    return ['', null];
  }
  stringInput = stringInput.replace(/[^0-9\,\.\-\+]/g, '');
  if (stringInput === '-' || stringInput === '-.') {
    return [stringInput, null];
  }
  var locale = props.locale,
    _props$min = props.min,
    min = _props$min === void 0 ? Number.MIN_SAFE_INTEGER : _props$min,
    _props$max = props.max,
    max = _props$max === void 0 ? Number.MAX_SAFE_INTEGER : _props$max,
    suffix = props.suffix,
    prefix = props.prefix;
  var precision = props.precision || null;
  if (precision > 20) {
    precision = 20;
  }
  var _internalApi$getDecim = internalApi.getDecimalDelimiter,
    getDecimalDelimiter = _internalApi$getDecim === void 0 ? _getDecimalDelimiter.default : _internalApi$getDecim,
    _internalApi$getDigit = internalApi.getDigitGroupDelimiter,
    getDigitGroupDelimiter = _internalApi$getDigit === void 0 ? _getDigitGroupDelimiter.default : _internalApi$getDigit,
    _internalApi$convertS = internalApi.convertStringToNumber,
    convertStringToNumber = _internalApi$convertS === void 0 ? _convertStringToNumber.default : _internalApi$convertS;
  var decimalDelimiter = getDecimalDelimiter(locale);
  if (stringInput === decimalDelimiter) {
    return [stringInput, null];
  }
  var decimalDelimiterPosition = getDecimalDelimiterPosition(stringInput, decimalDelimiter);
  var decimalDigitsInInput = countDecimalDigits(stringInput, decimalDelimiter, decimalDelimiterPosition);
  if (precision || precision === 0 && decimalDigitsInInput > precision) {
    stringInput = stringInput.substring(0, stringInput.length - (decimalDigitsInInput - precision));
  }
  var digitGroupDelimiter = getDigitGroupDelimiter(locale);
  var parsedResult = convertStringToNumber(stringInput, {
    digitGroupDelimiter: digitGroupDelimiter,
    decimalDelimiter: decimalDelimiter,
    min: min,
    max: max
  });
  if (isNaN(parsedResult)) {
    return ['', null];
  }
  var numberWasClamped = parsedResult === min || parsedResult === max;
  if (numberWasClamped) {
    decimalDigitsInInput = 0;
  }
  var formatingOptions = {
    maximumFractionDigits: precision ? Math.min(precision, 20) : 20,
    minimumFractionDigits: Math.min(precision || decimalDigitsInInput, 20)
  };
  var stringRepresentation = parsedResult.toLocaleString(locale, formatingOptions);
  if (!precision && !numberWasClamped && !decimalDigitsInInput && decimalDelimiterPosition === stringInput.length - 1) {
    stringRepresentation += '.';
  }
  if (prefix) {
    stringRepresentation = "".concat(prefix, " ").concat(stringRepresentation);
  }
  if (suffix) {
    stringRepresentation = "".concat(stringRepresentation, " ").concat(suffix);
  }
  return [stringRepresentation, parsedResult];
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/set-caret-position.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/set-caret-position.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = setCaretPosition;
function setCaretPosition(elem, caretPos) {
  var start = caretPos;
  var end = caretPos;
  if (caretPos && (caretPos.start != undefined || caretPos.end != undefined)) {
    start = caretPos.start || 0;
    end = caretPos.end || start;
  }
  if (elem != null) {
    if (elem.createTextRange) {
      var range = elem.createTextRange();
      range.moveStart('character', start);
      range.moveEnd('character', end);
      range.select();
    } else {
      elem.setSelectionRange(start, end);
    }
  }
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Overlay/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _src = _interopRequireDefault(__webpack_require__(/*! ./src */ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/index.js"));
var _default = _src.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/Arrow.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/Arrow.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
function Arrow(props) {
  var style = (0, _assign.default)({}, props.style);
  var wrapperStyle = (0, _assign.default)({}, props.position);
  var arrowSize = {
    height: props.size,
    width: props.size
  };
  (0, _assign.default)(style, arrowSize);
  var wrapperSize = 2 * (0.5 * props.size * Math.pow(2, 0.5));
  if (wrapperSize) {
    wrapperStyle.width = wrapperSize;
    wrapperStyle.height = wrapperSize;
  }
  return _react.default.createElement("div", {
    className: props.wrapperClassName,
    style: wrapperStyle
  }, _react.default.createElement("div", {
    className: props.className,
    style: style
  }));
}
Arrow.propTypes = {
  className: _propTypes.default.string,
  style: _propTypes.default.object,
  size: _propTypes.default.number,
  position: _propTypes.default.shape({
    top: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
    left: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string])
  })
};
var _default = Arrow;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/Overlay.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/Overlay.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof3 = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _cleanProps = _interopRequireDefault(__webpack_require__(/*! ../../../common/cleanProps */ "./node_modules/@inovua/reactdatagrid-community/common/cleanProps.js"));
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var _eventManager = _interopRequireDefault(__webpack_require__(/*! ./eventManager */ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/eventManager/index.js"));
var _getMinMaxSize = _interopRequireDefault(__webpack_require__(/*! ./utils/getMinMaxSize */ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/utils/getMinMaxSize.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ./utils/join */ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/utils/join.js"));
var _shouldComponentUpdate2 = _interopRequireDefault(__webpack_require__(/*! ./utils/shouldComponentUpdate */ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/utils/shouldComponentUpdate.js"));
var _normalizeEvent = _interopRequireDefault(__webpack_require__(/*! ./utils/normalizeEvent */ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/utils/normalizeEvent.js"));
var _getFocusableElements = _interopRequireDefault(__webpack_require__(/*! ./utils/getFocusableElements */ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/utils/getFocusableElements.js"));
var _getPositionRelativeToElement = _interopRequireDefault(__webpack_require__(/*! ../../../common/getPositionRelativeToElement */ "./node_modules/@inovua/reactdatagrid-community/common/getPositionRelativeToElement/index.js"));
var _Arrow = _interopRequireDefault(__webpack_require__(/*! ./Arrow */ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/Arrow.js"));
var _positionsMap = __webpack_require__(/*! ../../../common/getPositionRelativeToElement/positionsMap */ "./node_modules/@inovua/reactdatagrid-community/common/getPositionRelativeToElement/positionsMap.js");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof3(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var InovuaOverlay = function (_Component) {
  (0, _inherits2.default)(InovuaOverlay, _Component);
  var _super = _createSuper(InovuaOverlay);
  function InovuaOverlay(props) {
    var _this;
    (0, _classCallCheck2.default)(this, InovuaOverlay);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "componentDidUpdate", function (prevProps) {
      if (prevProps.visible !== _this.props.visible) {
        _this.handleVisibleChange(_this.props.visible);
      }
    });
    _this.state = {
      visible: props.defaultVisible,
      position: null,
      arrowConfig: null,
      renderTrigger: null
    };
    _this.handleDocumentScroll = _this.handleDocumentScroll.bind((0, _assertThisInitialized2.default)(_this));
    _this.onHide = _this.onHide.bind((0, _assertThisInitialized2.default)(_this));
    _this.onShow = _this.onShow.bind((0, _assertThisInitialized2.default)(_this));
    _this.handleKeyDown = _this.handleKeyDown.bind((0, _assertThisInitialized2.default)(_this));
    _this.getOverlayNode = _this.getOverlayNode.bind((0, _assertThisInitialized2.default)(_this));
    _this.getVisible = _this.getVisible.bind((0, _assertThisInitialized2.default)(_this));
    _this.getActiveTargetNode = _this.getActiveTargetNode.bind((0, _assertThisInitialized2.default)(_this));
    _this.rootRef = function (node) {
      _this.rootNode = node;
    };
    _this.fixedRef = function (node) {
      _this.fixedNode = node;
    };
    return _this;
  }
  (0, _createClass2.default)(InovuaOverlay, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps, nextState) {
      return (0, _shouldComponentUpdate2.default)(this, nextProps, nextState);
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;
      this.register();
      this.componentIsMounted = true;
      if (this.props.updatePositionOnScroll) {
        window.addEventListener('scroll', this.handleDocumentScroll, true);
      }
      var doPosition = function doPosition() {
        var target = _this2.getTarget();
        if ((0, _typeof2.default)(target) === 'object') {
          _this2.activeTargetNode = target;
          _this2.setPosition(_this2.props.onInitialPosition);
          if (_this2.getVisible()) {
            _this2.onShow({
              target: target
            });
          }
        }
      };
      if (this.props.rafOnMount) {
        requestAnimationFrame(doPosition);
      } else {
        doPosition();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.unregister();
      this.componentIsMounted = null;
      this.activeTargetNode = null;
      if (this.props.updatePositionOnScroll) {
        window.removeEventListener('scroll', this.handleDocumentScroll, true);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.props;
      var className = this.prepareClassName();
      var contentClassName = this.prepareContentClassName();
      var style = this.prepareStyle();
      var contentStyle = this.prepareContentStyle();
      return _react.default.createElement("div", _objectSpread(_objectSpread({}, (0, _cleanProps.default)(props, InovuaOverlay.propTypes)), {}, {
        className: className,
        ref: this.rootRef,
        style: style,
        onKeyDown: this.handleKeyDown
      }), _react.default.createElement("div", _objectSpread(_objectSpread({
        className: contentClassName
      }, this.getChildrenProps()), {}, {
        style: contentStyle
      })), props.arrow && this.renderArrow(), props.relativeToViewport && this.renderFixed());
    }
  }, {
    key: "renderFixed",
    value: function renderFixed() {
      return _react.default.createElement("div", {
        style: {
          position: 'fixed',
          top: 0,
          left: 0,
          width: 0,
          height: 0
        },
        ref: this.fixedRef
      });
    }
  }, {
    key: "renderArrow",
    value: function renderArrow() {
      if (!this.state.arrowConfig) {
        return null;
      }
      var rootClassName = this.props.rootClassName;
      var position = this.state.arrowConfig.position;
      var location = this.state.arrowConfig.location;
      var className = (0, _join.default)("".concat(rootClassName, "__arrow"), "".concat(rootClassName, "__arrow--").concat(location), this.props.arrowClassName);
      var style = (0, _assign.default)({}, this.props.arrowStyle);
      if (this.props.border) {
        (0, _assign.default)(style, {
          border: this.props.border
        });
      }
      if (this.props.background != undefined) {
        (0, _assign.default)(style, {
          background: this.props.background
        });
      }
      var wrapperClassName = (0, _join.default)("".concat(rootClassName, "__arrow-wrapper"), "".concat(rootClassName, "__arrow-wrapper--").concat(location));
      return _react.default.createElement(_Arrow.default, {
        className: className,
        wrapperClassName: wrapperClassName,
        position: position,
        style: style,
        size: this.props.arrowSize
      });
    }
  }, {
    key: "getChildrenProps",
    value: function getChildrenProps() {
      var children = this.props.children;
      var targetNode = this.getPositionTarget();
      var childrenProps = {
        children: children
      };
      var childrenParams = {
        targetNode: targetNode,
        visible: this.getVisible()
      };
      if (typeof children === 'function') {
        return {
          children: children(childrenParams)
        };
      }
      if (children === undefined && targetNode) {
        var tooltip = targetNode.getAttribute('data-tooltip');
        if (tooltip != null) {
          return {
            dangerouslySetInnerHTML: {
              __html: tooltip
            }
          };
        }
      }
      return childrenProps;
    }
  }, {
    key: "prepareClassName",
    value: function prepareClassName() {
      var props = this.props,
        state = this.state;
      var rootClassName = props.rootClassName,
        theme = props.theme,
        visibleClassName = props.visibleClassName,
        relativeToViewport = props.relativeToViewport;
      var visible = this.getVisible();
      var className = (0, _join.default)(rootClassName, props.className, visible && "".concat(rootClassName, "--visible"), visible && visibleClassName, !visible && "".concat(rootClassName, "--invisible"), relativeToViewport && "".concat(rootClassName, "--position-fixed"), theme && "".concat(rootClassName, "--theme-").concat(theme));
      if (this.props.fade) {
        className = (0, _join.default)(className, props.fade && "".concat(rootClassName, "--has-transition"), state.transitionEnter && "".concat(rootClassName, "--transition-enter"), state.transitionEnterActive && "".concat(rootClassName, "--transition-enter-active"), state.transitionLeave && "".concat(rootClassName, "--transition-leave"), state.transitionLeaveActive && "".concat(rootClassName, "--transition-leave-active"));
      }
      return className;
    }
  }, {
    key: "prepareContentClassName",
    value: function prepareContentClassName() {
      return (0, _join.default)(this.props.contentClassName, "".concat(this.props.rootClassName, "__content"));
    }
  }, {
    key: "prepareStyle",
    value: function prepareStyle() {
      var style = (0, _assign.default)({
        zIndex: this.props.zIndex
      }, this.props.style);
      if (this.props.fade) {
        (0, _assign.default)(style, this.getTransitionStyle());
      }
      if (this.props.border) {
        (0, _assign.default)(style, {
          border: this.props.border
        });
      }
      if (this.state.position) {
        if (this.props.useTransform) {
          style.transform = "translate3d(".concat(Math.round(this.state.position.left || 0), "px, ").concat(Math.round(this.state.position.top || 0), "px, 0px)");
          style.left = 0;
          style.top = 0;
        } else {
          (0, _assign.default)(style, {
            left: Math.round(this.state.position.left)
          });
          if (this.state.position.top != null) {
            style.top = Math.round(this.state.position.top);
          }
        }
        if (this.state.position.bottom != null) {
          style.bottom = Math.round(this.state.position.bottom);
        }
        if (this.state.position.width) {
          style.width = this.state.position.width;
        }
      }
      return style;
    }
  }, {
    key: "prepareContentStyle",
    value: function prepareContentStyle() {
      var style = (0, _assign.default)({}, this.props.contentStyle);
      if (this.props.background != undefined) {
        (0, _assign.default)(style, {
          background: this.props.background
        });
      }
      if (this.props.padding != undefined) {
        (0, _assign.default)(style, {
          padding: this.props.padding
        });
      }
      if (this.props.height != undefined) {
        (0, _assign.default)(style, {
          height: this.props.height
        });
      }
      if (this.props.width != undefined) {
        (0, _assign.default)(style, {
          width: this.props.width
        });
      }
      var maxMinSize = (0, _getMinMaxSize.default)(this.props);
      (0, _assign.default)(style, maxMinSize);
      return style;
    }
  }, {
    key: "getTransitionStyle",
    value: function getTransitionStyle() {
      var state = this.state;
      var style = {};
      if (state.transitionEnterActive || state.transitionLeaveActive) {
        style.transitionDuration = state.transitionEnterActive ? "".concat(this.getFadeInDuration(), "ms") : "".concat(this.getFadeOutDuration(), "ms");
        style.transitionTimingFunction = state.transitionEnterActive ? this.getFadeInTransitionFunction() : this.getFadeOutTransitionFunction();
      }
      return style;
    }
  }, {
    key: "onShow",
    value: function onShow(event) {
      var _this3 = this;
      this.activeTargetNode = event.target;
      this.setState({
        renderTrigger: !this.state.renderTrigger
      }, function () {
        _this3.setPosition();
        _this3.setVisible(true);
      });
    }
  }, {
    key: "onHide",
    value: function onHide(event) {
      this.setVisible(false);
    }
  }, {
    key: "register",
    value: function register() {
      var _this4 = this;
      this.eventManager = this.getEventManager()({
        showEvent: (0, _normalizeEvent.default)(this.props.showEvent),
        hideEvent: (0, _normalizeEvent.default)(this.props.hideEvent),
        target: this.getTarget(),
        hideOnScroll: this.props.hideOnScroll,
        hideOnClickOutside: this.props.hideOnClickOutside,
        hideOnEscape: this.props.hideOnEscape,
        onShow: this.onShow,
        onHide: this.onHide,
        getShowDelay: function getShowDelay() {
          return _this4.props.showDelay;
        },
        getHideDelay: function getHideDelay() {
          return _this4.props.hideDelay;
        },
        getVisible: this.getVisible,
        getOverlayNode: this.getOverlayNode,
        getActiveTargetNode: this.getActiveTargetNode
      });
    }
  }, {
    key: "unregister",
    value: function unregister() {
      if (this.eventManager) {
        this.eventManager.unregister();
      }
    }
  }, {
    key: "getEventManager",
    value: function getEventManager() {
      return this.props.eventManager;
    }
  }, {
    key: "getTarget",
    value: function getTarget() {
      var target;
      var rootNode = this.getOverlayNode();
      if (this.props.target) {
        target = this.props.target;
        if (typeof target === 'function') {
          target = target(this.props, rootNode, this);
        }
      } else {
        if (rootNode) {
          target = rootNode.parentElement;
        }
      }
      return target;
    }
  }, {
    key: "setVisible",
    value: function setVisible(visible) {
      if (!this.isVisibleControlled()) {
        if (visible !== this.getVisible()) {
          this.handleVisibleChange(visible);
        }
        this.setState({
          visible: visible
        });
      }
      if (visible) {
        this.props.onShow();
      } else {
        this.props.onHide();
      }
      this.props.onVisibleChange(visible);
    }
  }, {
    key: "isVisibleControlled",
    value: function isVisibleControlled() {
      return this.props.visible != null;
    }
  }, {
    key: "getVisible",
    value: function getVisible() {
      return this.isVisibleControlled() ? this.props.visible : this.state.visible;
    }
  }, {
    key: "setPosition",
    value: function setPosition(callback) {
      this.setState(this.getPositionConfig(), callback);
    }
  }, {
    key: "getPositionConfig",
    value: function getPositionConfig() {
      var _this$props = this.props,
        constrainTo = _this$props.constrainTo,
        offset = _this$props.offset,
        syncWidth = _this$props.syncWidth;
      var positions = this.props.positions;
      var targetNode = this.getPositionTarget();
      var tooltipPositions = targetNode ? targetNode.getAttribute('data-tooltip-positions') : null;
      if (tooltipPositions) {
        positions = tooltipPositions.split(',').map(function (position) {
          return position && position.trim ? position.trim() : position;
        });
      }
      var normalizedPositions = Array.isArray(positions) ? positions : [positions];
      var newState = (0, _getPositionRelativeToElement.default)({
        showArrow: true,
        constrainTo: constrainTo,
        offset: offset,
        targetNode: targetNode,
        overlayNode: this.getOverlayNode(),
        positions: normalizedPositions,
        adjustOnPositionBottom: this.props.adjustOnPositionBottom,
        relativeToViewport: this.props.relativeToViewport,
        arrowSize: this.props.arrowSize
      });
      if (this.props.relativeToViewport && this.fixedNode) {
        var fixedRect = this.fixedNode.getBoundingClientRect();
        if (newState && newState.position) {
          var useTransform = this.props.useTransform;
          newState.position = {
            top: newState.position.top - (useTransform ? 0 : fixedRect.top),
            left: newState.position.left - (useTransform ? 0 : fixedRect.left)
          };
          if (syncWidth) {
            newState.position.width = newState.alignRegion.width;
          }
        }
      }
      return newState;
    }
  }, {
    key: "handleDocumentScroll",
    value: function handleDocumentScroll() {
      if (this.props.updatePositionOnScroll) {
        this.updateDomPosition();
      }
    }
  }, {
    key: "updateDomPosition",
    value: function updateDomPosition() {
      var positionConfig = this.getPositionConfig();
      if (this.rootNode && positionConfig) {
        var newPosition = positionConfig.position;
        if (newPosition.bottom !== undefined) {
          this.rootNode.style.bottom = "".concat(newPosition.bottom, "px");
        }
        if (this.props.useTransform) {
          var oldPosition = this.state.position || {
            top: 0,
            left: 0
          };
          this.rootNode.style.transform = "translate3d(".concat(Math.round(newPosition.left || oldPosition.left), "px, ").concat(Math.round(newPosition.top || oldPosition.top), "px, 0px)");
        } else {
          if (newPosition.top !== undefined) {
            this.rootNode.style.top = "".concat(Math.round(newPosition.top), "px");
          }
          this.rootNode.style.left = "".concat(Math.round(newPosition.left), "px");
        }
      }
    }
  }, {
    key: "getOverlayNode",
    value: function getOverlayNode() {
      return this.rootNode;
    }
  }, {
    key: "getActiveTargetNode",
    value: function getActiveTargetNode() {
      return this.activeTargetNode;
    }
  }, {
    key: "getPositionTarget",
    value: function getPositionTarget() {
      var target = this.getTarget();
      if (target instanceof Element) {
        return target;
      }
      return this.getActiveTargetNode();
    }
  }, {
    key: "handleVisibleChange",
    value: function handleVisibleChange(visible) {
      if (!this.props.fade) {
        return null;
      }
      if (visible) {
        this.setupEnterTransition();
      } else {
        this.setupLeaveTransition();
      }
    }
  }, {
    key: "setupEnterTransition",
    value: function setupEnterTransition() {
      var _this5 = this;
      this.props.onFadeInStart();
      this.setState({
        transitionEnter: true,
        transitionEnterActive: false,
        transitionLeave: false,
        transitionLeaveActive: false
      }, function () {
        setTimeout(function () {
          if (_this5.componentIsMounted) {
            _this5.setState({
              transitionEnterActive: true
            }, function () {
              _this5.props.onFadeInEnd();
            });
          }
        }, 16);
      });
    }
  }, {
    key: "setupLeaveTransition",
    value: function setupLeaveTransition() {
      var _this6 = this;
      this.props.onFadeOutStart();
      this.setState({
        transitionLeave: true,
        transitionLeaveActive: false,
        transitionEnter: false,
        transitionEnterActive: false
      }, function () {
        setTimeout(function () {
          if (_this6.componentIsMounted) {
            _this6.setState({
              transitionLeaveActive: true
            }, function () {
              setTimeout(function () {
                if (_this6.componentIsMounted) {
                  _this6.setState({
                    transitionLeave: false,
                    transitionLeaveActive: false
                  }, function () {
                    _this6.props.onFadeOutEnd();
                  });
                }
              }, _this6.getFadeOutDuration());
            });
          }
        }, 16);
      });
    }
  }, {
    key: "getFadeInDuration",
    value: function getFadeInDuration() {
      if (this.props.fadeInDuration) {
        return this.props.fadeInDuration;
      }
      return this.props.fadeDuration;
    }
  }, {
    key: "getFadeOutDuration",
    value: function getFadeOutDuration() {
      if (this.props.fadeOutDuration) {
        return this.props.fadeOutDuration;
      }
      return this.props.fadeDuration;
    }
  }, {
    key: "getFadeInTransitionFunction",
    value: function getFadeInTransitionFunction() {
      if (this.props.fadeInTransitionFunction) {
        return this.props.fadeInTransitionFunction;
      }
      return this.props.fadeTransitionFunction;
    }
  }, {
    key: "getFadeOutTransitionFunction",
    value: function getFadeOutTransitionFunction() {
      if (this.props.fadeOutTransitionFunction) {
        return this.props.fadeOutTransitionFunction;
      }
      return this.props.fadeTransitionFunction;
    }
  }, {
    key: "handleKeyDown",
    value: function handleKeyDown(event) {
      if (this.props.captureTabNavigation && event.key === 'Tab') {
        this.captureTabNavigation(event);
      }
      if (this.props.onKeyDown) {
        this.props.onKeyDown(event);
      }
    }
  }, {
    key: "captureTabNavigation",
    value: function captureTabNavigation(event) {
      var shiftKey = event.shiftKey;
      var nodes = (0, _getFocusableElements.default)(this.rootNode);
      if (!nodes.length) {
        return null;
      }
      var firstNode = nodes[0];
      var lastNode = nodes[nodes.length - 1];
      if (lastNode === event.target && !shiftKey) {
        firstNode.focus();
        event.preventDefault();
        event.stopPropagation();
      }
      if (firstNode === event.target && shiftKey) {
        lastNode.focus();
        event.preventDefault();
        event.stopPropagation();
      }
    }
  }, {
    key: "show",
    value: function show() {
      this.setVisible(true);
    }
  }, {
    key: "hide",
    value: function hide() {
      this.setVisible(false);
    }
  }]);
  return InovuaOverlay;
}(_react.Component);
var emptyFn = function emptyFn() {};
InovuaOverlay.defaultProps = {
  captureTabNavigation: false,
  updatePositionOnScroll: false,
  zIndex: 100,
  theme: 'default',
  rootClassName: 'inovua-react-toolkit-overlay',
  background: null,
  padding: null,
  eventManager: _eventManager.default,
  target: null,
  showEvent: ['mouseenter'],
  hideEvent: ['mouseleave'],
  defaultVisible: false,
  arrow: true,
  arrowStyle: {},
  arrowSize: 11,
  showDelay: null,
  hideDelay: null,
  hideOnClickOutside: true,
  hideOnScroll: false,
  fade: false,
  fadeDuration: 300,
  fadeInDuration: 300,
  fadeOutDuration: 50,
  fadeTransitionFunction: 'ease',
  positions: _positionsMap.posiblePositions,
  constrainTo: true,
  offset: 10,
  rafOnMount: true,
  relativeToViewport: true,
  adjustOnPositionBottom: false,
  onVisibleChange: emptyFn,
  onShow: emptyFn,
  onHide: emptyFn,
  onFadeInStart: emptyFn,
  onFadeOutStart: emptyFn,
  onFadeInEnd: emptyFn,
  onFadeOutEnd: emptyFn
};
InovuaOverlay.propTypes = {
  shouldComponentUpdate: _propTypes.default.func,
  captureTabNavigation: _propTypes.default.bool,
  updatePositionOnScroll: _propTypes.default.bool,
  children: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]),
  rootClassName: _propTypes.default.string,
  border: _propTypes.default.string,
  background: _propTypes.default.string,
  theme: _propTypes.default.string,
  zIndex: _propTypes.default.number,
  contentStyle: _propTypes.default.object,
  contentClassName: _propTypes.default.string,
  padding: _propTypes.default.number,
  height: _propTypes.default.number,
  width: _propTypes.default.number,
  minSize: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string, _propTypes.default.shape({
    height: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
    width: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string])
  })]),
  maxSize: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string, _propTypes.default.shape({
    height: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
    width: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string])
  })]),
  arrow: _propTypes.default.bool,
  arrowClassName: _propTypes.default.string,
  arrowStyle: _propTypes.default.object,
  arrowSize: _propTypes.default.number,
  visible: _propTypes.default.bool,
  visibleClassName: _propTypes.default.string,
  defaultVisible: _propTypes.default.bool,
  target: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object, _propTypes.default.func]),
  eventManager: _propTypes.default.func,
  showEvent: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.string]),
  hideEvent: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.string]),
  showDelay: _propTypes.default.number,
  hideDelay: _propTypes.default.number,
  hideOnClickOutside: _propTypes.default.bool,
  hideOnScroll: _propTypes.default.bool,
  hideOnEscape: _propTypes.default.bool,
  useTransform: _propTypes.default.bool,
  fade: _propTypes.default.bool,
  fadeDuration: _propTypes.default.number,
  fadeInDuration: _propTypes.default.number,
  fadeOutDuration: _propTypes.default.number,
  fadeTransitionFunction: _propTypes.default.string,
  fadeInTransitionFunction: _propTypes.default.string,
  fadeOutTransitionFunction: _propTypes.default.string,
  constrainTo: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object, _propTypes.default.func, _propTypes.default.bool]),
  positions: function positions(props, propName, componentName) {
    var positions = props[propName];
    if (typeof positions === 'string') {
      if (_positionsMap.posiblePositions.indexOf(positions) === -1) {
        return new Error("\nInvalid prop ".concat(propName, " suplied to ").concat(componentName, ".\nFollowing values are allowed: ").concat(_positionsMap.posiblePositions.join(', '), "\n"));
      }
    }
  },
  offset: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
    x: _propTypes.default.number,
    y: _propTypes.default.number
  }), _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
    x: _propTypes.default.number,
    y: _propTypes.default.number
  })]))]),
  rafOnMount: _propTypes.default.bool,
  relativeToViewport: _propTypes.default.bool,
  adjustOnPositionBottom: _propTypes.default.bool,
  syncWidth: _propTypes.default.bool,
  onInitialPosition: _propTypes.default.func,
  onVisibleChange: _propTypes.default.func,
  onShow: _propTypes.default.func,
  onHide: _propTypes.default.func,
  onFadeInStart: emptyFn,
  onFadeOutStart: emptyFn,
  onFadeInEnd: emptyFn,
  onFadeOutEnd: emptyFn
};
var _default = InovuaOverlay;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/eventManager/createHideOnClickOutsideAction.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/eventManager/createHideOnClickOutsideAction.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
function createHideOnClickOutsideAction(_ref) {
  var getOverlayNode = _ref.getOverlayNode,
    getActiveTargetNode = _ref.getActiveTargetNode,
    onHide = _ref.onHide;
  return function (event) {
    var node = event.target;
    var activeTargetNode = getActiveTargetNode();
    var overlayNode = getOverlayNode();
    if (!activeTargetNode || !overlayNode) {
      return null;
    }
    if (overlayNode !== node && !overlayNode.contains(node) && activeTargetNode !== node && !activeTargetNode.contains(node)) {
      onHide(event, {
        target: null
      });
    }
  };
}
var _default = createHideOnClickOutsideAction;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/eventManager/eventManager.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/eventManager/eventManager.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _separateEvents2 = _interopRequireDefault(__webpack_require__(/*! ./separateEvents */ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/eventManager/separateEvents.js"));
var _registerEvents = __webpack_require__(/*! ./registerEvents */ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/eventManager/registerEvents.js");
var _generateHandlers = __webpack_require__(/*! ./generateHandlers */ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/eventManager/generateHandlers.js");
var _createHideOnClickOutsideAction = _interopRequireDefault(__webpack_require__(/*! ./createHideOnClickOutsideAction */ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/eventManager/createHideOnClickOutsideAction.js"));
function eventManager(config) {
  var _config$showEvent = config.showEvent,
    showEvent = _config$showEvent === void 0 ? [] : _config$showEvent,
    _config$hideEvent = config.hideEvent,
    hideEvent = _config$hideEvent === void 0 ? [] : _config$hideEvent,
    target = config.target,
    hideOnScroll = config.hideOnScroll,
    hideOnClickOutside = config.hideOnClickOutside,
    hideOnEscape = config.hideOnEscape,
    onShow = config.onShow,
    onHide = config.onHide,
    getShowDelay = config.getShowDelay,
    getHideDelay = config.getHideDelay,
    getVisible = config.getVisible,
    _config$getOverlayNod = config.getOverlayNode,
    getOverlayNode = _config$getOverlayNod === void 0 ? function () {} : _config$getOverlayNod,
    getActiveTargetNode = config.getActiveTargetNode;
  var timeoutState = {
    showId: null,
    hideId: null,
    targetThatTriggeredEvent: null
  };
  var _separateEvents = (0, _separateEvents2.default)({
      showEvent: showEvent,
      hideEvent: hideEvent
    }),
    normalizedShowEvents = _separateEvents.normalizedShowEvents,
    normalizedHideEvents = _separateEvents.normalizedHideEvents,
    toggleEvents = _separateEvents.toggleEvents;
  var showAction = (0, _generateHandlers.createShowHandler)({
    timeoutState: timeoutState,
    target: target,
    getActiveTargetNode: getActiveTargetNode,
    action: onShow,
    getDelay: getShowDelay
  });
  if (normalizedShowEvents && onShow) {
    (0, _registerEvents.registerListeners)({
      events: normalizedShowEvents,
      action: showAction
    });
  }
  var hideAction = (0, _generateHandlers.createHideHandler)({
    timeoutState: timeoutState,
    target: target,
    getActiveTargetNode: getActiveTargetNode,
    action: onHide,
    getDelay: getHideDelay
  });
  if (normalizedHideEvents && onHide) {
    (0, _registerEvents.registerListeners)({
      events: normalizedHideEvents,
      action: hideAction
    });
  }
  var toggleAction;
  if (toggleEvents.length) {
    toggleAction = (0, _generateHandlers.createToggleHandler)({
      target: target,
      getActiveTargetNode: getActiveTargetNode,
      getVisible: getVisible,
      onHide: hideAction,
      onShow: showAction
    });
    (0, _registerEvents.registerListeners)({
      events: toggleEvents,
      action: toggleAction
    });
  }
  var hideOnClickOutsideAction;
  if (hideOnClickOutside) {
    hideOnClickOutsideAction = (0, _createHideOnClickOutsideAction.default)({
      getOverlayNode: getOverlayNode,
      getActiveTargetNode: getActiveTargetNode,
      onHide: hideAction
    });
    (0, _registerEvents.registerListeners)({
      events: ['click'],
      action: hideOnClickOutsideAction
    });
  }
  var hideOnScrollAction;
  if (hideOnScroll) {
    hideOnScrollAction = function hideOnScrollAction(event) {
      if (getVisible()) {
        hideAction(event, {
          target: null
        });
      }
    };
    (0, _registerEvents.registerListeners)({
      events: ['scroll'],
      action: hideOnScrollAction
    });
  }
  var hideOnEscapeAction;
  if (hideOnEscape) {
    hideOnEscapeAction = function hideOnEscapeAction(event) {
      if (getVisible() && event.key === 'Escape') {
        hideAction(event, {
          target: null
        });
      }
    };
    (0, _registerEvents.registerListeners)({
      events: ['keydown'],
      action: hideOnEscapeAction
    });
  }
  var handleOverlayShowAction;
  var handleOverlayHideAction;
  if (normalizedHideEvents.indexOf('mouseleave') !== -1) {
    handleOverlayShowAction = function handleOverlayShowAction(event) {
      if (event.target === getOverlayNode()) {
        var activeTargetNode = getActiveTargetNode();
        showAction(event, {
          target: activeTargetNode
        });
      }
    };
    (0, _registerEvents.registerListeners)({
      events: ['mouseenter'],
      action: handleOverlayShowAction
    });
    handleOverlayHideAction = function handleOverlayHideAction(event) {
      if (event.target === getOverlayNode()) {
        var activeTargetNode = getActiveTargetNode();
        hideAction(event, {
          target: activeTargetNode
        });
      }
    };
    (0, _registerEvents.registerListeners)({
      events: ['mouseleave'],
      action: handleOverlayHideAction
    });
  }
  return {
    unregister: function unregister() {
      if (normalizedShowEvents && showAction) {
        (0, _registerEvents.unregisterListeners)({
          events: normalizedShowEvents,
          action: showAction
        });
      }
      if (normalizedHideEvents && hideAction) {
        (0, _registerEvents.unregisterListeners)({
          events: normalizedHideEvents,
          action: hideAction
        });
      }
      if (toggleEvents && toggleAction) {
        (0, _registerEvents.unregisterListeners)({
          events: toggleEvents,
          action: toggleAction
        });
      }
      if (hideOnClickOutsideAction) {
        (0, _registerEvents.unregisterListeners)({
          events: ['click'],
          action: hideOnClickOutsideAction
        });
      }
      if (hideOnScrollAction) {
        (0, _registerEvents.unregisterListeners)({
          events: ['scroll'],
          action: hideOnScrollAction
        });
      }
      if (handleOverlayShowAction) {
        (0, _registerEvents.unregisterListeners)({
          events: ['mouseenter'],
          action: handleOverlayShowAction
        });
      }
      if (handleOverlayHideAction) {
        (0, _registerEvents.unregisterListeners)({
          events: ['mouseleave'],
          action: handleOverlayHideAction
        });
      }
      if (hideOnEscapeAction) {
        (0, _registerEvents.unregisterListeners)({
          events: ['keydown'],
          action: hideOnEscapeAction
        });
      }
    }
  };
}
var _default = eventManager;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/eventManager/generateHandlers.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/eventManager/generateHandlers.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.createHideHandler = createHideHandler;
exports.createShowHandler = createShowHandler;
exports.createToggleHandler = createToggleHandler;
var _matchesTarget = _interopRequireDefault(__webpack_require__(/*! ./matchesTarget */ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/eventManager/matchesTarget.js"));
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
function createShowHandler(_ref) {
  var action = _ref.action,
    target = _ref.target,
    getDelay = _ref.getDelay,
    timeoutState = _ref.timeoutState;
  return function (event) {
    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var delay = getDelay && getDelay();
    if (config.target) {
      event = (0, _assign.default)({}, event, {
        target: config.target
      });
    }
    var node = event.target;
    if (!(0, _matchesTarget.default)(target, node)) {
      return null;
    }
    var activeTargetNode = timeoutState.targetThatTriggeredEvent;
    timeoutState.targetThatTriggeredEvent = node;
    if (timeoutState.hideId) {
      clearTimeout(timeoutState.hideId);
      timeoutState.hideId = null;
    }
    if (delay) {
      if (timeoutState.showId && activeTargetNode === node) {
        return null;
      }
      if (timeoutState.showId) {
        clearTimeout(timeoutState.showId);
      }
      timeoutState.showId = setTimeout(function () {
        timeoutState.showId = null;
        action(event);
      }, delay);
    } else {
      action(event);
    }
  };
}
function createHideHandler(_ref2) {
  var action = _ref2.action,
    target = _ref2.target,
    getDelay = _ref2.getDelay,
    timeoutState = _ref2.timeoutState;
  return function (event) {
    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var delay = getDelay && getDelay();
    if (config.target) {
      event = (0, _assign.default)({}, event, {
        target: config.target
      });
    }
    var node = event.target;
    if (config.target !== null) {
      if (!(0, _matchesTarget.default)(target, node)) {
        return null;
      }
    }
    var activeTargetNode = timeoutState.targetThatTriggeredEvent;
    timeoutState.targetThatTriggeredEvent = node;
    if (activeTargetNode === node && timeoutState.showId) {
      clearTimeout(timeoutState.showId);
      timeoutState.showId = null;
    }
    if (delay) {
      if (timeoutState.hideId && activeTargetNode === node) {
        return null;
      }
      timeoutState.hideId = setTimeout(function () {
        timeoutState.hideId = null;
        action(event);
      }, delay);
    } else {
      action(event);
    }
  };
}
function createToggleHandler(_ref3) {
  var onHide = _ref3.onHide,
    onShow = _ref3.onShow,
    target = _ref3.target,
    getActiveTargetNode = _ref3.getActiveTargetNode,
    getVisible = _ref3.getVisible;
  return function (event) {
    var activeTargetNode = getActiveTargetNode();
    var node = event.target;
    if (!(0, _matchesTarget.default)(target, node)) {
      return null;
    }
    if (getVisible() && node === activeTargetNode) {
      onHide(event);
    } else {
      onShow(event);
    }
  };
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/eventManager/index.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/eventManager/index.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _eventManager = _interopRequireDefault(__webpack_require__(/*! ./eventManager */ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/eventManager/eventManager.js"));
var _default = _eventManager.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/eventManager/matchesTarget.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/eventManager/matchesTarget.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _matchesSelector = _interopRequireDefault(__webpack_require__(/*! ../../../../common/matchesSelector */ "./node_modules/@inovua/reactdatagrid-community/common/matchesSelector.js"));
var _containsNode = _interopRequireDefault(__webpack_require__(/*! ../../../../common/containsNode */ "./node_modules/@inovua/reactdatagrid-community/common/containsNode.js"));
function matchesTarget(target, node) {
  if (node === document) {
    return null;
  }
  if (target === node) {
    return true;
  }
  if (typeof target === 'string' && (0, _matchesSelector.default)(node, target)) {
    return true;
  }
  if ((0, _containsNode.default)(target, node)) {
    return true;
  }
  return false;
}
var _default = matchesTarget;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/eventManager/registerEvents.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/eventManager/registerEvents.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.registerListeners = registerListeners;
exports.unregisterListeners = unregisterListeners;
function registerListeners(_ref) {
  var events = _ref.events,
    action = _ref.action;
  events.forEach(function (eventName) {
    if (eventName === 'mouseenter' || eventName === 'mouseleave' || eventName === 'scroll') {
      document.addEventListener(eventName, action, {
        capture: true
      });
    } else {
      document.addEventListener(eventName, action);
    }
  });
}
function unregisterListeners(_ref2) {
  var events = _ref2.events,
    action = _ref2.action;
  events.forEach(function (eventName) {
    if (eventName === 'mouseenter' || eventName === 'mouseleave' || eventName === 'scroll') {
      document.removeEventListener(eventName, action, {
        capture: true
      });
    } else {
      document.removeEventListener(eventName, action);
    }
  });
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/eventManager/separateEvents.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/eventManager/separateEvents.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
function separateEvents(_ref) {
  var showEvent = _ref.showEvent,
    hideEvent = _ref.hideEvent;
  if (!Array.isArray(showEvent) || !Array.isArray(hideEvent)) {
    return {};
  }
  var normalizedShowEvents = (0, _toConsumableArray2.default)(showEvent);
  var normalizedHideEvents = (0, _toConsumableArray2.default)(hideEvent);
  var toggleEvents = [];
  normalizedShowEvents.forEach(function (eventName, index) {
    var searchIndex = normalizedHideEvents.indexOf(eventName);
    if (searchIndex !== -1) {
      toggleEvents.push(eventName);
      delete normalizedShowEvents[index];
      delete normalizedHideEvents[searchIndex];
    }
  });
  normalizedShowEvents = normalizedShowEvents.filter(function (eventName) {
    return eventName;
  });
  normalizedHideEvents = normalizedHideEvents.filter(function (eventName) {
    return eventName;
  });
  return {
    normalizedShowEvents: normalizedShowEvents,
    normalizedHideEvents: normalizedHideEvents,
    toggleEvents: toggleEvents
  };
}
var _default = separateEvents;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/index.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _Overlay = _interopRequireDefault(__webpack_require__(/*! ./Overlay */ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/Overlay.js"));
var _default = _Overlay.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/utils/getFocusableElements.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/utils/getFocusableElements.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _getFocusableElements = _interopRequireDefault(__webpack_require__(/*! ../../../../common/getFocusableElements */ "./node_modules/@inovua/reactdatagrid-community/common/getFocusableElements.js"));
var _default = _getFocusableElements.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/utils/getMinMaxSize.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/utils/getMinMaxSize.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js"));
function getMinMaxSize(props) {
  var sizeType;
  var single;
  var style = props.style || {};
  var result = {};
  if (props.minSize) {
    sizeType = (0, _typeof2.default)(props.minSize);
    single = sizeType == 'number' || sizeType == 'string';
    if (single) {
      result.minWidth = props.minSize;
      result.minHeight = props.minSize;
    } else {
      if (props.minSize.width) {
        result.minWidth = props.minSize.width;
      }
      if (props.minSize.height) {
        result.minHeight = props.minSize.height;
      }
    }
  }
  if (props.maxSize) {
    sizeType = (0, _typeof2.default)(props.maxSize);
    single = sizeType == 'number' || sizeType == 'string';
    if (single) {
      result.maxWidth = props.maxSize;
      result.maxHeight = props.maxSize;
    } else {
      if (props.maxSize.width) {
        result.maxWidth = props.maxSize.width;
      }
      if (props.maxSize.height) {
        result.maxHeight = props.maxSize.height;
      }
    }
  }
  if (result.minWidth == undefined && style.minWidth != undefined) {
    result.minWidth = style.minWidth;
  }
  if (result.maxWidth == undefined && style.maxWidth != undefined) {
    result.maxWidth = style.maxWidth;
  }
  if (result.minHeight == undefined && style.minHeight != undefined) {
    result.minHeight = style.minHeight;
  }
  if (result.maxHeight == undefined && style.maxHeight != undefined) {
    result.maxHeight = style.maxHeight;
  }
  return result;
}
var _default = getMinMaxSize;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/utils/join.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/utils/join.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _default = _join.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/utils/normalizeEvent.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/utils/normalizeEvent.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
function normalizeEvent(events) {
  return Array.isArray(events) ? events : [events];
}
var _default = normalizeEvent;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/utils/shouldComponentUpdate.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/utils/shouldComponentUpdate.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _shouldComponentUpdate = _interopRequireDefault(__webpack_require__(/*! ../../../../common/shouldComponentUpdate */ "./node_modules/@inovua/reactdatagrid-community/common/shouldComponentUpdate.js"));
var _default = _shouldComponentUpdate.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/PaginationToolbar/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/PaginationToolbar/index.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
var _exportNames = {};
exports["default"] = void 0;
var _src = _interopRequireWildcard(__webpack_require__(/*! ./src */ "./node_modules/@inovua/reactdatagrid-community/packages/PaginationToolbar/src/index.js"));
Object.keys(_src).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _src[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _src[key];
    }
  });
});
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var _default = _src.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/PaginationToolbar/src/PaginationIcon.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/PaginationToolbar/src/PaginationIcon.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _Button = _interopRequireDefault(__webpack_require__(/*! ../../Button */ "./node_modules/@inovua/reactdatagrid-community/packages/Button/index.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var ICON_CLASS_NAME = 'inovua-react-pagination-toolbar__icon';
var PaginationIcon = function PaginationIcon(props) {
  var icon = props.icon,
    size = props.size,
    disabled = props.disabled,
    action = props.action,
    name = props.name,
    theme = props.theme;
  var className = (0, _join.default)(ICON_CLASS_NAME, "".concat(ICON_CLASS_NAME, "--named--").concat(name));
  return _react.default.createElement(_Button.default, {
    disabled: disabled,
    className: className,
    icon: (0, _react.cloneElement)(icon, {
      width: size,
      height: size
    }),
    onClick: action,
    theme: theme
  });
};
PaginationIcon.propTypes = {
  name: _propTypes.default.string,
  action: _propTypes.default.func,
  disabled: _propTypes.default.bool,
  icon: _propTypes.default.node,
  size: _propTypes.default.number
};
var _default = PaginationIcon;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/PaginationToolbar/src/PaginationToolbar.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/PaginationToolbar/src/PaginationToolbar.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.hasPrevPage = exports.hasNextPage = exports.getSkipForPage = exports.getPageCount = exports.getCurrentPage = exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _autoBind = _interopRequireDefault(__webpack_require__(/*! ../../../packages/react-class/autoBind */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/autoBind.js"));
var _NumericInput = _interopRequireDefault(__webpack_require__(/*! ../../NumericInput */ "./node_modules/@inovua/reactdatagrid-community/packages/NumericInput/index.js"));
var _ComboBox = _interopRequireDefault(__webpack_require__(/*! ../../ComboBox */ "./node_modules/@inovua/reactdatagrid-community/packages/ComboBox/index.js"));
var _ToolBar = _interopRequireDefault(__webpack_require__(/*! ../../ToolBar */ "./node_modules/@inovua/reactdatagrid-community/packages/ToolBar/index.js"));
var _Separator = _interopRequireDefault(__webpack_require__(/*! ../../ToolBar/Separator */ "./node_modules/@inovua/reactdatagrid-community/packages/ToolBar/Separator.js"));
var _reactCleanProps = _interopRequireDefault(__webpack_require__(/*! ../../../packages/react-clean-props */ "./node_modules/@inovua/reactdatagrid-community/packages/react-clean-props/index.js"));
var _shouldComponentUpdate2 = _interopRequireDefault(__webpack_require__(/*! ../../../packages/shouldComponentUpdate */ "./node_modules/@inovua/reactdatagrid-community/packages/shouldComponentUpdate/index.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../packages/join */ "./node_modules/@inovua/reactdatagrid-community/packages/join/index.js"));
var _PaginationIcon = _interopRequireDefault(__webpack_require__(/*! ./PaginationIcon */ "./node_modules/@inovua/reactdatagrid-community/packages/PaginationToolbar/src/PaginationIcon.js"));
var _getIcons = __webpack_require__(/*! ./getIcons */ "./node_modules/@inovua/reactdatagrid-community/packages/PaginationToolbar/src/getIcons.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var stopPropagation = function stopPropagation(e) {
  return e.stopPropagation();
};
var emptyObject = {};
var PAGE_SIZES = [{
  value: 5
}, {
  value: 10
}, {
  value: 20
}, {
  value: 25
}, {
  value: 40
}, {
  value: 50
}, {
  value: 100
}];
var ICONS = {
  FIRST_PAGE: _getIcons.FIRST_PAGE,
  LAST_PAGE: _getIcons.LAST_PAGE,
  PREV_PAGE: _getIcons.PREV_PAGE,
  NEXT_PAGE: _getIcons.NEXT_PAGE,
  REFRESH: _getIcons.REFRESH
};
var CLASS_NAME = 'inovua-react-pagination-toolbar';
var SPACER = _react.default.createElement("div", {
  className: "".concat(CLASS_NAME, "__spacer")
});
var getPageCount = function getPageCount(_ref) {
  var count = _ref.count,
    limit = _ref.limit;
  return Math.ceil(count / limit);
};
exports.getPageCount = getPageCount;
var getSkipForPage = function getSkipForPage(_ref2) {
  var page = _ref2.page,
    limit = _ref2.limit;
  return Math.max(0, limit * (page - 1));
};
exports.getSkipForPage = getSkipForPage;
var getCurrentPage = function getCurrentPage(_ref3) {
  var skip = _ref3.skip,
    limit = _ref3.limit;
  return Math.floor(skip / limit) + 1;
};
exports.getCurrentPage = getCurrentPage;
var hasNextPage = function hasNextPage(_ref4) {
  var skip = _ref4.skip,
    limit = _ref4.limit,
    count = _ref4.count;
  return getCurrentPage({
    skip: skip,
    limit: limit
  }) < getPageCount({
    count: count,
    limit: limit
  });
};
exports.hasNextPage = hasNextPage;
var hasPrevPage = function hasPrevPage(_ref5) {
  var skip = _ref5.skip,
    limit = _ref5.limit;
  return getCurrentPage({
    skip: skip,
    limit: limit
  }) > 1;
};
exports.hasPrevPage = hasPrevPage;
var InovuaPaginationToolbar = function (_React$Component) {
  (0, _inherits2.default)(InovuaPaginationToolbar, _React$Component);
  var _super = _createSuper(InovuaPaginationToolbar);
  function InovuaPaginationToolbar(props) {
    var _this;
    (0, _classCallCheck2.default)(this, InovuaPaginationToolbar);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "componentDidUpdate", function (prevProps) {
      var skip = _this.getSkip(prevProps);
      var limit = _this.getLimit(prevProps);
      var pageCount = getPageCount({
        count: prevProps.totalCount,
        limit: limit
      });
      var currentPage = Math.min(pageCount, getCurrentPage({
        skip: skip,
        limit: limit
      }));
      var nextSkip = _this.getSkip(_this.props);
      var nextLimit = _this.getLimit(_this.props);
      var nextPageCount = getPageCount({
        count: _this.props.totalCount,
        limit: nextLimit
      });
      var nextCurrentPage = Math.min(nextPageCount, getCurrentPage({
        skip: nextSkip,
        limit: nextLimit
      }));
      if (prevProps.totalCount !== _this.props.totalCount || currentPage !== nextCurrentPage) {
        _this.forceUpdate(function () {
          _this.setCurrentPageInputValue(nextCurrentPage, _this.props);
        });
      }
    });
    (0, _autoBind.default)((0, _assertThisInitialized2.default)(_this));
    _this.state = {
      skip: props.defaultSkip,
      limit: props.defaultLimit
    };
    _this.ACTIONS = {
      REFRESH: _this.refresh,
      FIRST_PAGE: _this.gotoFirstPage,
      LAST_PAGE: _this.gotoLastPage,
      PREV_PAGE: _this.gotoPrevPage,
      NEXT_PAGE: _this.gotoNextPage
    };
    _this.refNumberInput = function (cmp) {
      _this.numberInput = cmp;
    };
    return _this;
  }
  (0, _createClass2.default)(InovuaPaginationToolbar, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps, nextState) {
      return (0, _shouldComponentUpdate2.default)(this, nextProps, nextState);
    }
  }, {
    key: "getSkip",
    value: function getSkip() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;
      return props.skip === undefined ? this.state.skip : props.skip;
    }
  }, {
    key: "getLimit",
    value: function getLimit() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;
      return props.limit === undefined ? this.state.limit : props.limit;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
        totalCount = _this$props.totalCount,
        theme = _this$props.theme,
        rtl = _this$props.rtl,
        remotePagination = _this$props.remotePagination,
        rootClassName = _this$props.rootClassName,
        changeButtonStyles = _this$props.changeButtonStyles;
      var skip = this.getSkip();
      var limit = this.getLimit();
      var skipLimitCount = {
        skip: skip,
        limit: limit,
        count: totalCount
      };
      var currentPage = getCurrentPage(skipLimitCount);
      var pageCount = getPageCount(skipLimitCount);
      var firstPage = this.renderIcon('FIRST_PAGE', currentPage <= 1);
      var lastPage = this.renderIcon('LAST_PAGE', currentPage >= pageCount);
      var prevPage = this.renderIcon('PREV_PAGE', !hasPrevPage(skipLimitCount));
      var nextPage = this.renderIcon('NEXT_PAGE', !hasNextPage(skipLimitCount));
      var refresh = remotePagination ? this.renderIcon('REFRESH', false) : null;
      var start = totalCount ? skip + 1 : 0;
      var end = Math.min(skip + limit, totalCount);
      var className = (0, _join.default)(this.props.className, CLASS_NAME, theme && "".concat(CLASS_NAME, "--theme-").concat(theme), "".concat(CLASS_NAME, "--").concat(rtl ? 'rtl' : 'ltr'), this.props.bordered && "".concat(CLASS_NAME, "--bordered"));
      var combo = this.renderPageSizeCombo();
      var currentPageInput = this.renderCurrentPageInput({
        pageCount: pageCount,
        currentPage: currentPage
      });
      var domProps = _objectSpread(_objectSpread({}, (0, _reactCleanProps.default)(this.props, InovuaPaginationToolbar.propTypes)), {}, {
        className: className,
        theme: theme
      });
      var result;
      if (this.props.renderToolbar) {
        result = this.props.renderToolbar(domProps, {
          gotoFirstPageIcon: firstPage,
          gotoLastPageIcon: lastPage,
          gotoPrevPageIcon: prevPage,
          gotoNextPageIcon: nextPage,
          refreshIcon: refresh,
          pageSizeCombo: combo,
          start: start,
          end: end,
          totalCount: totalCount,
          currentPageInput: currentPageInput
        });
        if (result !== undefined) {
          return result;
        }
      }
      return _react.default.createElement(_ToolBar.default, _objectSpread(_objectSpread({}, domProps), {}, {
        useTransformOnScroll: false,
        onKeyDown: stopPropagation,
        rtl: rtl
      }), _react.default.createElement("div", {
        className: "".concat(CLASS_NAME, "__region")
      }, firstPage, prevPage, _react.default.createElement("span", {
        className: "".concat(CLASS_NAME, "__page-text")
      }, this.props.pageText), ' ', currentPageInput, " ", this.props.ofText, ' ', _react.default.createElement("span", {
        className: "".concat(CLASS_NAME, "__page-count-text"),
        style: {
          minWidth: Math.max("".concat(pageCount).length * 10, 25)
        }
      }, ' ' + (pageCount.toLocaleString ? pageCount.toLocaleString() : pageCount)), nextPage, lastPage, _react.default.createElement(_Separator.default, null), _react.default.createElement("span", {
        className: "".concat(CLASS_NAME, "__per-page-text")
      }, this.props.pageSizes === false ? null : this.props.perPageText), ' ', combo, this.props.pageSizes !== false && refresh ? _react.default.createElement(_Separator.default, null) : null, refresh), SPACER, _react.default.createElement("div", {
        className: "".concat(CLASS_NAME, "__region")
      }, this.props.showingText, ' ', start.toLocaleString ? start.toLocaleString() : start, " -", ' ', end.toLocaleString ? end.toLocaleString() : end, " ", this.props.ofText, ' ', totalCount.toLocaleString ? totalCount.toLocaleString() : totalCount));
    }
  }, {
    key: "renderCurrentPageInput",
    value: function renderCurrentPageInput(_ref6) {
      var pageCount = _ref6.pageCount,
        currentPage = _ref6.currentPage;
      var inputProps = {
        updateOnArrowKeys: false,
        className: "".concat(CLASS_NAME, "__current-page"),
        onBlur: this.onBlur,
        ref: this.refNumberInput,
        defaultValue: currentPage,
        currentPage: currentPage,
        onChange: this.onNumberInputChange,
        enableClearButton: false,
        allowFloat: false,
        allowNegative: false,
        rtl: this.props.rtl,
        minValue: 1,
        maxValue: pageCount,
        style: {
          minWidth: 70
        },
        size: "".concat(pageCount).length,
        theme: this.props.theme
      };
      var result;
      if (this.props.renderCurrentPageInput) {
        result = this.props.renderCurrentPageInput(inputProps);
      }
      if (result === undefined) {
        delete inputProps.currentPage;
        result = _react.default.createElement(_NumericInput.default, _objectSpread({}, inputProps));
      }
      return result;
    }
  }, {
    key: "renderPageSizeCombo",
    value: function renderPageSizeCombo() {
      var _comboProps;
      if (this.props.pageSizes === false) {
        return null;
      }
      var limit = this.getLimit();
      var comboProps = (_comboProps = {
        shadow: false,
        style: {
          minWidth: 70,
          width: 70
        },
        className: "".concat(CLASS_NAME, "__page-size-combo"),
        borderRadius: 0,
        idProperty: 'value',
        displayProperty: 'value',
        value: limit,
        renderListComponent: this.props.renderPageList,
        constrainTo: this.props.constrainTo,
        onChange: this.setPageSize,
        dataSource: this.props.pageSizes ? this.props.pageSizes.map(function (s) {
          return {
            value: s
          };
        }) : PAGE_SIZES,
        collapseOnSelect: true,
        changeValueOnNavigation: false,
        multiple: false,
        searchable: false,
        clearIcon: false
      }, (0, _defineProperty2.default)(_comboProps, "shadow", true), (0, _defineProperty2.default)(_comboProps, "rtl", this.props.rtl), (0, _defineProperty2.default)(_comboProps, "showShadowOnMouseOver", true), (0, _defineProperty2.default)(_comboProps, "allowSelectionToggle", false), (0, _defineProperty2.default)(_comboProps, "highlightFirst", false), (0, _defineProperty2.default)(_comboProps, "theme", this.props.theme), _comboProps);
      var result;
      if (this.props.renderPageSizeCombo) {
        result = this.props.renderPageSizeCombo(comboProps);
      }
      if (result === undefined) {
        result = _react.default.createElement(_ComboBox.default, _objectSpread(_objectSpread({}, comboProps), {}, {
          relativeToViewport: true
        }));
      }
      return result;
    }
  }, {
    key: "renderIcon",
    value: function renderIcon(name, disabled) {
      var icons = this.props.icons || ICONS;
      var icon = icons[name];
      if (this.props.rtl) {
        if (name === 'LAST_PAGE') {
          icon = icons['FIRST_PAGE'];
        } else if (name === 'FIRST_PAGE') {
          icon = icons['LAST_PAGE'];
        }
        if (name === 'NEXT_PAGE') {
          icon = icons['PREV_PAGE'];
        } else if (name === 'PREV_PAGE') {
          icon = icons['NEXT_PAGE'];
        }
      }
      var iconProps = {
        name: name,
        size: this.props.iconSize,
        icon: icon,
        disabled: disabled,
        action: this.ACTIONS[name],
        theme: this.props.theme
      };
      var result;
      if (this.props.renderIcon) {
        result = this.props.renderIcon(iconProps);
      }
      if (result === undefined) {
        result = _react.default.createElement(_PaginationIcon.default, _objectSpread({}, iconProps));
      }
      return result;
    }
  }, {
    key: "setCurrentPageInputValue",
    value: function setCurrentPageInputValue(value) {
      var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.props;
      this.lastNotifiedSkip = getSkipForPage({
        page: value,
        limit: this.getLimit(props)
      });
      if (this.numberInput && typeof this.numberInput.setValue === 'function') {
        this.numberInput.setValue("".concat(value));
      }
    }
  }, {
    key: "onBlur",
    value: function onBlur() {
      var currentPage = getCurrentPage({
        skip: this.getSkip(),
        limit: this.getLimit()
      });
      this.setCurrentPageInputValue(currentPage);
    }
  }, {
    key: "onNumberInputChange",
    value: function onNumberInputChange(numericValue) {
      this.gotoPage(numericValue || 1);
    }
  }, {
    key: "setPageSize",
    value: function setPageSize(limit) {
      var currentSkip = this.getSkip();
      var currentPage = getCurrentPage({
        skip: currentSkip,
        limit: this.getLimit()
      });
      var maxPage = getPageCount({
        count: this.props.totalCount,
        limit: limit
      });
      var newPage = Math.min(currentPage, maxPage);
      var newSkip = getSkipForPage({
        page: newPage,
        limit: limit
      });
      if (this.props.onPageSizeChange) {
        this.props.onPageSizeChange(limit);
      }
      if (this.props.onLimitChange) {
        this.props.onLimitChange(limit);
      }
      if (this.props.limit === undefined) {
        this.setState({
          limit: limit
        });
      }
      if (newSkip != currentSkip && this.props.adjustSkipOnLimitChange) {
        this.gotoPage(newPage, {
          limit: limit
        });
      }
    }
  }, {
    key: "gotoPage",
    value: function gotoPage(page) {
      var _this2 = this;
      var _ref7 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : emptyObject,
        _ref7$limit = _ref7.limit,
        limit = _ref7$limit === void 0 ? this.getLimit() : _ref7$limit;
      var skip = getSkipForPage({
        page: page,
        limit: limit
      });
      if (this.lastNotifiedSkip === skip) {
        return;
      }
      setTimeout(function () {
        delete _this2.lastNotifiedSkip;
      }, 50);
      this.lastNotifiedSkip = skip;
      if (this.props.onPageChange) {
        this.props.onPageChange(page);
      }
      if (this.props.onSkipChange) {
        this.props.onSkipChange(skip);
      }
      if (this.props.skip === undefined) {
        this.setCurrentPageInputValue("".concat(page));
        this.setState({
          skip: skip
        });
      }
    }
  }, {
    key: "refresh",
    value: function refresh() {
      if (this.props.onRefresh) {
        this.props.onRefresh();
      }
    }
  }, {
    key: "gotoFirstPage",
    value: function gotoFirstPage() {
      this.gotoPage(1);
    }
  }, {
    key: "gotoLastPage",
    value: function gotoLastPage() {
      var lastPage = getPageCount({
        count: this.props.totalCount,
        limit: this.getLimit()
      });
      this.gotoPage(lastPage);
    }
  }, {
    key: "gotoNextPage",
    value: function gotoNextPage() {
      var nextPage = getCurrentPage({
        skip: this.getSkip(),
        limit: this.getLimit()
      }) + 1;
      this.gotoPage(nextPage);
    }
  }, {
    key: "gotoPrevPage",
    value: function gotoPrevPage() {
      var prevPage = getCurrentPage({
        skip: this.getSkip(),
        limit: this.getLimit()
      }) - 1;
      this.gotoPage(prevPage);
    }
  }]);
  return InovuaPaginationToolbar;
}(_react.default.Component);
exports["default"] = InovuaPaginationToolbar;
InovuaPaginationToolbar.defaultProps = {
  adjustSkipOnLimitChange: true,
  theme: 'default-light',
  bordered: true,
  iconSize: 24,
  rtl: false,
  remotePagination: false,
  pageText: 'Page ',
  ofText: ' of ',
  perPageText: 'Results per page',
  showingText: 'Showing ',
  rootClassName: 'inovua-react-pagination-toolbar'
};
InovuaPaginationToolbar.propTypes = {
  adjustSkipOnLimitChange: _propTypes.default.bool,
  pagination: _propTypes.default.any,
  bordered: _propTypes.default.bool,
  iconSize: _propTypes.default.number,
  pageText: _propTypes.default.node,
  ofText: _propTypes.default.node,
  perPageText: _propTypes.default.node,
  showingText: _propTypes.default.node,
  limit: _propTypes.default.number,
  defaultLimit: _propTypes.default.number,
  skip: _propTypes.default.number,
  defaultSkip: _propTypes.default.number,
  totalCount: _propTypes.default.number,
  gotoNextPage: _propTypes.default.func,
  gotoPrevPage: _propTypes.default.func,
  pageSize: _propTypes.default.number,
  currentPage: _propTypes.default.number,
  pageCount: _propTypes.default.number,
  gotoPage: _propTypes.default.func,
  onRefresh: _propTypes.default.func,
  hasNextPage: _propTypes.default.func,
  hasPrevPage: _propTypes.default.func,
  gotoLastPage: _propTypes.default.func,
  gotoFirstPage: _propTypes.default.func,
  remotePagination: _propTypes.default.bool,
  localPagination: _propTypes.default.any,
  renderPageList: _propTypes.default.any,
  reload: _propTypes.default.any,
  constrainTo: _propTypes.default.any,
  onPageChange: _propTypes.default.func,
  onSkipChange: _propTypes.default.func,
  onLimitChange: _propTypes.default.func,
  onPageSizeChange: _propTypes.default.func,
  pageSizes: _propTypes.default.arrayOf(_propTypes.default.number),
  renderCurrentPageInput: _propTypes.default.func,
  rootClassName: _propTypes.default.string,
  renderIcon: _propTypes.default.func,
  renderPageSizeCombo: _propTypes.default.func,
  renderToolbar: _propTypes.default.func,
  rtl: _propTypes.default.bool,
  theme: _propTypes.default.string
};

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/PaginationToolbar/src/getIcons.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/PaginationToolbar/src/getIcons.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = exports.REFRESH = exports.PREV_PAGE = exports.NEXT_PAGE = exports.LAST_PAGE = exports.FIRST_PAGE = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _objectWithoutProperties2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/objectWithoutProperties */ "./node_modules/@babel/runtime/helpers/objectWithoutProperties.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _excluded = ["size"];
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var emptyObject = {};
var SIZE = 20;
var getIcons = function getIcons() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : emptyObject,
    size = _ref.size,
    props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  size = size || SIZE;
  var FIRST_PAGE = _react.default.createElement("svg", _objectSpread(_objectSpread({}, props), {}, {
    height: size,
    viewBox: "0 0 24 24",
    width: size
  }), _react.default.createElement("path", {
    d: "M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z"
  }));
  var LAST_PAGE = _react.default.createElement("svg", _objectSpread(_objectSpread({}, props), {}, {
    height: size,
    viewBox: "0 0 24 24",
    width: size
  }), _react.default.createElement("path", {
    d: "M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z"
  }));
  var PREV_PAGE = _react.default.createElement("svg", _objectSpread(_objectSpread({}, props), {}, {
    height: size,
    viewBox: "0 0 24 24",
    width: size
  }), _react.default.createElement("path", {
    d: "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"
  }));
  var NEXT_PAGE = _react.default.createElement("svg", _objectSpread(_objectSpread({}, props), {}, {
    height: size,
    viewBox: "0 0 24 24",
    width: size
  }), _react.default.createElement("path", {
    d: "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
  }));
  var REFRESH = _react.default.createElement("svg", _objectSpread(_objectSpread({}, props), {}, {
    height: size,
    viewBox: "0 0 24 24",
    width: size
  }), _react.default.createElement("path", {
    d: "M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z"
  }));
  return {
    FIRST_PAGE: FIRST_PAGE,
    LAST_PAGE: LAST_PAGE,
    PREV_PAGE: PREV_PAGE,
    NEXT_PAGE: NEXT_PAGE,
    REFRESH: REFRESH
  };
};
var _getIcons = getIcons(),
  FIRST_PAGE = _getIcons.FIRST_PAGE,
  LAST_PAGE = _getIcons.LAST_PAGE,
  PREV_PAGE = _getIcons.PREV_PAGE,
  NEXT_PAGE = _getIcons.NEXT_PAGE,
  REFRESH = _getIcons.REFRESH;
exports.REFRESH = REFRESH;
exports.NEXT_PAGE = NEXT_PAGE;
exports.PREV_PAGE = PREV_PAGE;
exports.LAST_PAGE = LAST_PAGE;
exports.FIRST_PAGE = FIRST_PAGE;
var _default = getIcons;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/PaginationToolbar/src/index.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/PaginationToolbar/src/index.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
var _exportNames = {};
exports["default"] = void 0;
var _PaginationToolbar = _interopRequireWildcard(__webpack_require__(/*! ./PaginationToolbar */ "./node_modules/@inovua/reactdatagrid-community/packages/PaginationToolbar/src/PaginationToolbar.js"));
Object.keys(_PaginationToolbar).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _PaginationToolbar[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _PaginationToolbar[key];
    }
  });
});
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var _default = _PaginationToolbar.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/RadioButton/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/RadioButton/index.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _src = _interopRequireDefault(__webpack_require__(/*! ./src */ "./node_modules/@inovua/reactdatagrid-community/packages/RadioButton/src/index.js"));
var _default = _src.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/RadioButton/src/RadioButton.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/RadioButton/src/RadioButton.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _CheckBox = _interopRequireDefault(__webpack_require__(/*! ../../CheckBox */ "./node_modules/@inovua/reactdatagrid-community/packages/CheckBox/index.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var defaultCheckedIcon = function defaultCheckedIcon(_ref) {
  var style = _ref.style,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? 16 : _ref$size;
  return _react.default.createElement("svg", {
    style: style,
    width: size,
    height: size,
    viewBox: "0 0 16 16"
  }, _react.default.createElement("circle", {
    cx: "8",
    cy: "8",
    r: "7",
    fill: "none",
    fillRule: "evenodd",
    strokeWidth: "2"
  }), _react.default.createElement("circle", {
    cx: "8",
    cy: "8",
    r: "3",
    fillRule: "evenodd",
    stroke: "none"
  }));
};
var defaultUncheckedIcon = function defaultUncheckedIcon(_ref2) {
  var style = _ref2.style,
    _ref2$size = _ref2.size,
    size = _ref2$size === void 0 ? 16 : _ref2$size;
  return _react.default.createElement("svg", {
    style: style,
    width: size,
    height: size,
    viewBox: "0 0 16 16"
  }, _react.default.createElement("circle", {
    cx: "8",
    cy: "8",
    r: "7",
    fill: "none",
    fillRule: "evenodd",
    strokeWidth: "2"
  }));
};
var InovuaRadioButton = function (_Component) {
  (0, _inherits2.default)(InovuaRadioButton, _Component);
  var _super = _createSuper(InovuaRadioButton);
  function InovuaRadioButton() {
    var _this;
    (0, _classCallCheck2.default)(this, InovuaRadioButton);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderNativeBrowserInput", function (config) {
      if (props.renderNativeBrowserInput) {
        return renderNativeBrowserInput(config);
      }
      config.inputProps.type = 'radio';
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "render", function () {
      var props = _this.props;
      var checkedIcon = defaultCheckedIcon || props.checkedIcon;
      var uncheckedIcon = defaultUncheckedIcon || props.uncheckedIcon;
      var className = (0, _join.default)("".concat(props.rootClassName), props.theme && "".concat(props.rootClassName, "--theme-").concat(props.theme));
      var checkboxProps = _objectSpread(_objectSpread({}, props), {}, {
        className: className,
        checkedIcon: checkedIcon,
        uncheckedIcon: uncheckedIcon,
        renderNativeBrowserInput: _this.renderNativeBrowserInput
      });
      return _react.default.createElement(_CheckBox.default, _objectSpread({}, checkboxProps));
    });
    return _this;
  }
  return (0, _createClass2.default)(InovuaRadioButton);
}(_react.Component);
InovuaRadioButton.defaultProps = {
  theme: 'default-light',
  rootClassName: 'inovua-react-toolkit-radio-button'
};
InovuaRadioButton.propTypes = {
  theme: _propTypes.default.string,
  rootClassName: _propTypes.default.string
};
var _default = InovuaRadioButton;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/RadioButton/src/index.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/RadioButton/src/index.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _RadioButton = _interopRequireDefault(__webpack_require__(/*! ./RadioButton */ "./node_modules/@inovua/reactdatagrid-community/packages/RadioButton/src/RadioButton.js"));
var _default = _RadioButton.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/TextInput/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/TextInput/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _src = _interopRequireDefault(__webpack_require__(/*! ./src */ "./node_modules/@inovua/reactdatagrid-community/packages/TextInput/src/index.js"));
var _default = _src.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/TextInput/src/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/TextInput/src/index.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _autoBind = _interopRequireDefault(__webpack_require__(/*! ../../../packages/react-class/autoBind */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/autoBind.js"));
var _Field = _interopRequireDefault(__webpack_require__(/*! ../../Field */ "./node_modules/@inovua/reactdatagrid-community/packages/Field/index.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _cleanProps = _interopRequireDefault(__webpack_require__(/*! ../../../common/cleanProps */ "./node_modules/@inovua/reactdatagrid-community/common/cleanProps.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var preventDefault = function preventDefault(e) {
  return e.preventDefault();
};
var getClearButtonClassNames = function getClearButtonClassNames(props) {
  var clearButtonClassName = (0, _join.default)("".concat(props.rootClassName, "__clear-button"), props.clearButtonClassName);
  return {
    clearButtonClassName: clearButtonClassName
  };
};
var isControlled = function isControlled(props) {
  return props.value !== undefined;
};
var emptyObject = {};
var TextInput = function (_Component) {
  (0, _inherits2.default)(TextInput, _Component);
  var _super = _createSuper(TextInput);
  function TextInput(props) {
    var _this;
    (0, _classCallCheck2.default)(this, TextInput);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderClearIcon", function (svgProps) {
      var result;
      if (_this.props.renderClearIcon && typeof _this.props.renderClearIcon === 'function') {
        result = _this.props.renderClearIcon(_objectSpread({}, svgProps));
      }
      if (result === undefined) {
        result = _react.default.createElement("svg", {
          style: _objectSpread({}, svgProps),
          viewBox: "0 0 10 10"
        }, _react.default.createElement("path", {
          fill: "none",
          fillRule: "evenodd",
          strokeLinecap: "round",
          strokeWidth: "1.33",
          d: "M1 1l8 8m0-8L1 9"
        }));
      }
      return result;
    });
    _this.fieldRef = function (field) {
      _this.field = field;
    };
    _this.state = {
      focused: false,
      value: props.defaultValue == null ? '' : props.defaultValue
    };
    (0, _autoBind.default)((0, _assertThisInitialized2.default)(_this));
    return _this;
  }
  (0, _createClass2.default)(TextInput, [{
    key: "handleChange",
    value: function handleChange(value, event) {
      this.setValue(value, event);
    }
  }, {
    key: "focus",
    value: function focus() {
      this.field.focus();
    }
  }, {
    key: "setValue",
    value: function setValue(value, event) {
      if (!isControlled(this.props)) {
        this.setState({
          value: value
        });
      }
      if (this.props.inputProps && this.props.inputProps.onChange) {
        this.props.inputProps.onChange(value, event);
      }
      if (this.props.onChange) {
        this.props.onChange(value, event);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.props,
        state = this.state;
      var wrapperProps = props.wrapperProps,
        style = props.style,
        enableClearButton = props.enableClearButton;
      var inputProps = props.inputProps || emptyObject;
      var inputClassName = (0, _join.default)("".concat(props.rootClassName, "__input"), inputProps.className);
      var value = isControlled(props) ? props.value : state.value;
      var fieldProps = _objectSpread(_objectSpread({
        size: 1
      }, inputProps), {}, {
        ref: this.fieldRef,
        className: inputClassName,
        onChange: this.handleChange,
        value: value,
        type: props.type,
        stopChangePropagation: props.stopChangePropagation
      });
      if (props.hidden) {
        fieldProps.hidden = props.hidden;
      }
      if (props.name) {
        fieldProps.name = props.name;
      }
      if (props.placeholder) {
        fieldProps.placeholder = props.placeholder;
      }
      if (props.required) {
        fieldProps.required = props.required;
      }
      if (props.readOnly) {
        fieldProps.readOnly = props.readOnly;
      }
      if (props.autoFocus) {
        fieldProps.autoFocus = props.autoFocus;
      }
      if (props.maxLength != undefined) {
        fieldProps.maxLength = props.maxLength;
      }
      if (props.minLength != undefined) {
        fieldProps.minLength = props.minLength;
      }
      if (props.size != undefined) {
        fieldProps.size = props.size;
      }
      if (props.disabled) {
        fieldProps.disabled = props.disabled;
      }
      var className = (0, _join.default)(props.rootClassName, props.className, props.rtl ? "".concat(props.rootClassName, "--rtl") : "".concat(props.rootClassName, "--ltr"), props.theme && "".concat(props.rootClassName, "--theme-").concat(props.theme), enableClearButton && "".concat(props.rootClassName, "--enable-clear-button"), state.focused && "".concat(props.rootClassName, "--focused"), fieldProps.disabled && "".concat(props.rootClassName, "--disabled"));
      var input = _react.default.createElement(_Field.default, _objectSpread({}, fieldProps));
      var wrapperDomProps = (0, _cleanProps.default)(wrapperProps, TextInput.propTypes);
      var domProps = (0, _cleanProps.default)(props, TextInput.propTypes);
      delete domProps.onChange;
      return _react.default.createElement("div", _objectSpread(_objectSpread(_objectSpread({}, domProps), wrapperDomProps), {}, {
        className: className,
        style: style,
        onBlur: this.onBlur,
        onClick: this.onClick,
        onFocus: this.onFocus
      }), input, this.renderClearButtonWrapper(fieldProps));
    }
  }, {
    key: "handleClearButtonClick",
    value: function handleClearButtonClick(event) {
      this.setState({
        focused: true
      });
      this.setValue('');
      this.focus();
    }
  }, {
    key: "renderClearButtonWrapper",
    value: function renderClearButtonWrapper(fieldProps) {
      var props = this.props,
        state = this.state;
      var clearButtonColor = props.clearButtonColor,
        clearButtonStyle = props.clearButtonStyle,
        clearButtonSize = props.clearButtonSize,
        enableClearButton = props.enableClearButton,
        rootClassName = props.rootClassName;
      var value = isControlled(props) ? props.value : state.value;
      var emptyValue = value == '' || value == null;
      var showButton = enableClearButton && !emptyValue && !fieldProps.disabled && !fieldProps.readOnly;
      return _react.default.createElement("div", {
        key: "clearButton",
        className: (0, _join.default)("".concat(rootClassName, "__clear-button-wrapper"), !showButton && "".concat(rootClassName, "__clear-button-wrapper--hidden"))
      }, this.renderClearButton(_objectSpread({
        clearButtonColor: clearButtonColor,
        clearButtonStyle: clearButtonStyle,
        clearButtonSize: clearButtonSize
      }, getClearButtonClassNames(props))));
    }
  }, {
    key: "renderClearButton",
    value: function renderClearButton(config) {
      var clearButtonColor = config.clearButtonColor,
        clearButtonStyle = config.clearButtonStyle,
        clearButtonClassName = config.clearButtonClassName,
        clearButtonSize = config.clearButtonSize;
      var svgProps = {};
      var tabIndex = this.props.acceptClearToolFocus ? 0 : -1;
      if (clearButtonColor) {
        svgProps.fill = clearButtonColor;
      }
      if (clearButtonSize) {
        if (Array.isArray(clearButtonSize)) {
          svgProps.width = clearButtonSize[0];
          svgProps.height = clearButtonSize[1];
        } else {
          svgProps.width = clearButtonSize;
          svgProps.height = clearButtonSize;
        }
      }
      return _react.default.createElement("button", {
        key: "clearButton",
        type: "button",
        onClick: this.handleClearButtonClick,
        onMouseDown: preventDefault,
        className: clearButtonClassName,
        style: _objectSpread({}, clearButtonStyle),
        tabIndex: tabIndex
      }, this.renderClearIcon(svgProps));
    }
  }, {
    key: "onClick",
    value: function onClick(event) {
      if (!this.state.focused) {
        this.focus();
      }
      if (this.props.wrapperProps && this.props.wrapperProps.onClick) {
        this.props.wrapperProps.onClick(event);
      }
    }
  }, {
    key: "onBlur",
    value: function onBlur(event) {
      this.setState({
        focused: false
      });
      if (this.props.onBlur) {
        this.props.onBlur(event);
      }
    }
  }, {
    key: "onFocus",
    value: function onFocus(event) {
      this.setState({
        focused: true
      });
      if (this.props.onFocus) {
        this.props.onFocus(event);
      }
    }
  }]);
  return TextInput;
}(_react.Component);
TextInput.defaultProps = {
  hidden: false,
  type: 'text',
  theme: 'default-light',
  rootClassName: 'inovua-react-toolkit-text-input',
  enableClearButton: true,
  clearButtonSize: 10,
  stopChangePropagation: true,
  acceptClearToolFocus: false
};
TextInput.propTypes = {
  type: _propTypes.default.string,
  theme: _propTypes.default.string,
  name: _propTypes.default.string,
  placeholder: _propTypes.default.string,
  autoFocus: _propTypes.default.bool,
  maxLength: _propTypes.default.number,
  size: _propTypes.default.number,
  minLength: _propTypes.default.number,
  required: _propTypes.default.bool,
  readOnly: _propTypes.default.bool,
  disabled: _propTypes.default.bool,
  hidden: _propTypes.default.bool,
  stopChangePropagation: _propTypes.default.bool,
  enableClearButton: _propTypes.default.bool,
  acceptClearToolFocus: _propTypes.default.bool,
  rtl: _propTypes.default.bool,
  rootClassName: _propTypes.default.string,
  clearButtonSize: _propTypes.default.number,
  clearButtonColor: _propTypes.default.string,
  clearButtonStyle: _propTypes.default.object,
  clearButtonClassName: _propTypes.default.string,
  renderClearIcon: _propTypes.default.func
};
var _default = TextInput;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ToolBar/Separator.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ToolBar/Separator.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _src = __webpack_require__(/*! ./src */ "./node_modules/@inovua/reactdatagrid-community/packages/ToolBar/src/index.js");
var _default = _src.Separator;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ToolBar/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ToolBar/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "Separator", ({
  enumerable: true,
  get: function get() {
    return _src.Separator;
  }
}));
exports["default"] = void 0;
var _src = _interopRequireWildcard(__webpack_require__(/*! ./src */ "./node_modules/@inovua/reactdatagrid-community/packages/ToolBar/src/index.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var _default = _src.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ToolBar/src/DropdownOverflow.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ToolBar/src/DropdownOverflow.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _NotifyResize = __webpack_require__(/*! ../../NotifyResize */ "./node_modules/@inovua/reactdatagrid-community/packages/NotifyResize/index.js");
var _cleanProps = _interopRequireDefault(__webpack_require__(/*! ../../../common/cleanProps */ "./node_modules/@inovua/reactdatagrid-community/common/cleanProps.js"));
var _assign = _interopRequireDefault(__webpack_require__(/*! ../../../common/assign */ "./node_modules/@inovua/reactdatagrid-community/common/assign.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _DropdownButton = _interopRequireDefault(__webpack_require__(/*! ../../DropdownButton */ "./node_modules/@inovua/reactdatagrid-community/packages/DropdownButton/index.js"));
var _getGroupedItems = _interopRequireDefault(__webpack_require__(/*! ./utils/getGroupedItems */ "./node_modules/@inovua/reactdatagrid-community/packages/ToolBar/src/utils/getGroupedItems.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var firstRenderStyle = {
  visibility: 'hidden',
  overflow: 'hidden'
};
var ghostStyle = {
  visibility: 'hidden',
  overflow: 'hidden',
  position: 'absolute'
};
var DropDownOverflow = function (_Component) {
  (0, _inherits2.default)(DropDownOverflow, _Component);
  var _super = _createSuper(DropDownOverflow);
  function DropDownOverflow(props) {
    var _this;
    (0, _classCallCheck2.default)(this, DropDownOverflow);
    _this = _super.call(this, props);
    _this.setRootRef = function (ref) {
      _this.rootNode = ref;
    };
    _this.setGhostRef = function (ref) {
      _this.ghostNode = ref;
    };
    _this.state = {};
    _this.handleResize = _this.handleResize.bind((0, _assertThisInitialized2.default)(_this));
    _this.isFirstRender = true;
    return _this;
  }
  (0, _createClass2.default)(DropDownOverflow, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.updateOverflowItems();
      this.isFirstRender = false;
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.props;
      var style = _objectSpread(_objectSpread({}, props.style), this.isFirstRender && firstRenderStyle);
      var className = (0, _join.default)(props.rootClassName, props.className, props.rtl && "".concat(props.rootClassName, "--rtl"));
      var dropdownProps = (0, _assign.default)({}, props);
      delete dropdownProps.scrollOnClick;
      delete dropdownProps.mouseoverScrollSpeed;
      delete dropdownProps.scrollSpeed;
      delete dropdownProps.scrollStep;
      delete dropdownProps.useTransformOnScroll;
      var domProps = (0, _cleanProps.default)(dropdownProps, DropDownOverflow.propTypes);
      return _react.default.createElement("div", _objectSpread(_objectSpread({}, domProps), {}, {
        ref: this.setRootRef,
        style: style,
        className: className
      }), _react.default.createElement(_NotifyResize.NotifyResize, {
        key: "notify",
        rafOnResize: true,
        notifyOnMount: false,
        onResize: this.handleResize
      }), this.renderVisibleItems(), (this.isFirstRender || this.state.overflowIndexes) && this.renderDropdownButton(), this.renderGhost());
    }
  }, {
    key: "renderVisibleItems",
    value: function renderVisibleItems() {
      var visibleItems = this.props.children;
      if (this.state.visibleIndexes) {
        var children = this.getChildrenArray();
        visibleItems = this.state.visibleIndexes.map(function (index) {
          return children[index];
        });
      }
      return visibleItems;
    }
  }, {
    key: "renderDropdownButton",
    value: function renderDropdownButton() {
      var items = [];
      if (this.state.overflowIndexes) {
        var children = this.getChildrenArray();
        items = this.state.overflowIndexes.map(function (index) {
          return {
            id: index,
            label: children[index]
          };
        });
      }
      var domProps = _objectSpread({
        items: items,
        constrainTo: this.props.constrainTo,
        menuProps: _objectSpread(_objectSpread({
          constrainTo: this.props.constrainTo
        }, this.props.dropdownButtonProps && this.props.dropdownButtonProps.menuProps), {}, {
          theme: null,
          disableScroller: true
        })
      }, this.props.dropdownButtonProps);
      var result;
      if (typeof this.props.renderDropdownButton === 'function') {
        result = this.props.renderDropdownButton({
          items: items,
          domProps: domProps,
          overflowIndexes: this.state.overflowIndexes
        });
      }
      if (result === undefined) {
        result = _react.default.createElement(_DropdownButton.default, _objectSpread({}, domProps));
      }
      return result;
    }
  }, {
    key: "renderGhost",
    value: function renderGhost() {
      if (!this.state.ghostVisible) {
        return null;
      }
      return _react.default.createElement("div", {
        ref: this.setGhostRef,
        style: _objectSpread(_objectSpread({}, ghostStyle), {}, {
          width: this.state.width,
          height: this.state.height
        })
      }, this.props.children, this.renderDropdownButton());
    }
  }, {
    key: "getRootSize",
    value: function getRootSize() {
      var maxSize = this.rootNode[this.getSizeName()];
      return maxSize;
    }
  }, {
    key: "updateOverflowItems",
    value: function updateOverflowItems() {
      var _this2 = this;
      if (!this.rootNode) {
        return;
      }
      var parentNode = this.state.ghostVisible ? this.ghostNode : this.rootNode;
      var children = parentNode.children;
      var maxSize = this.getRootSize();
      var boxes = [].slice.call(children).map(function (child) {
        return child[_this2.getSizeName()];
      });
      var overflowControlSize = boxes[boxes.length - 1];
      if (this.isFirstRender) {
        boxes = boxes.slice(1);
      }
      boxes = boxes.slice(0, -1);
      var groupedItems = (0, _getGroupedItems.default)({
        boxes: boxes,
        maxSize: maxSize,
        overflowControlSize: overflowControlSize
      });
      if (groupedItems) {
        this.setState({
          visibleIndexes: groupedItems.visibleIndexes,
          overflowIndexes: groupedItems.overflowIndexes
        });
      } else {
        this.setState({
          visibleIndexes: null,
          overflowIndexes: null
        });
      }
    }
  }, {
    key: "handleResize",
    value: function handleResize(_ref) {
      var _this3 = this;
      var width = _ref.width,
        height = _ref.height;
      this.setState({
        width: width,
        height: height,
        ghostVisible: true
      }, function () {
        _this3.updateOverflowItems();
        _this3.setState({
          ghostVisible: false
        });
      });
    }
  }, {
    key: "getSizeName",
    value: function getSizeName() {
      return 'offsetWidth';
    }
  }, {
    key: "getChildrenArray",
    value: function getChildrenArray() {
      return _react.default.Children.toArray(this.props.children);
    }
  }]);
  return DropDownOverflow;
}(_react.Component);
DropDownOverflow.defaultProps = {
  rootClassName: 'react-toolkit-dropdown-overflow',
  rtl: false
};
DropDownOverflow.propTypes = {
  rootClassName: _propTypes.default.string,
  dropdownButtonProps: _propTypes.default.object,
  constrainTo: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string, _propTypes.default.bool, _propTypes.default.func]),
  renderDropdownButton: _propTypes.default.func,
  rtl: _propTypes.default.bool
};
var _default = DropDownOverflow;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ToolBar/src/ToolBar.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ToolBar/src/ToolBar.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = exports.Separator = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _cleanProps = _interopRequireDefault(__webpack_require__(/*! ../../../common/cleanProps */ "./node_modules/@inovua/reactdatagrid-community/common/cleanProps.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../common/join */ "./node_modules/@inovua/reactdatagrid-community/common/join.js"));
var _ArrowScroller = _interopRequireDefault(__webpack_require__(/*! ../../ArrowScroller */ "./node_modules/@inovua/reactdatagrid-community/packages/ArrowScroller/index.js"));
var _DropdownOverflow = _interopRequireDefault(__webpack_require__(/*! ./DropdownOverflow */ "./node_modules/@inovua/reactdatagrid-community/packages/ToolBar/src/DropdownOverflow.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var InovuaToolbar = function (_Component) {
  (0, _inherits2.default)(InovuaToolbar, _Component);
  var _super = _createSuper(InovuaToolbar);
  function InovuaToolbar(props) {
    var _this;
    (0, _classCallCheck2.default)(this, InovuaToolbar);
    _this = _super.call(this, props);
    _this.setRootRef = function (ref) {
      _this.node = ref;
    };
    return _this;
  }
  (0, _createClass2.default)(InovuaToolbar, [{
    key: "render",
    value: function render() {
      var props = this.props;
      var className = props.className;
      var rootProps = _objectSpread(_objectSpread({
        useTransformOnScroll: props.useTransformOnScroll,
        ref: this.setRootRef
      }, (0, _cleanProps.default)(props, InovuaToolbar.propTypes)), {}, {
        className: className,
        rtl: props.rtl,
        rootClassName: props.rootClassName,
        theme: props.theme
      });
      return props.overflowStrategy === 'scroll' ? _react.default.createElement(_ArrowScroller.default, _objectSpread(_objectSpread({}, rootProps), this.getScrollerProps())) : _react.default.createElement(_DropdownOverflow.default, _objectSpread(_objectSpread({}, rootProps), this.getDropdownOverflowProps()));
    }
  }, {
    key: "scrollIntoView",
    value: function scrollIntoView(node) {
      return this.node && this.node.scrollIntoView(node);
    }
  }, {
    key: "getInstance",
    value: function getInstance() {
      return this.node;
    }
  }, {
    key: "getClassName",
    value: function getClassName() {
      var props = this.props;
      return (0, _join.default)(this.props.className, props.rootClassName, props.theme && "".concat(props.rootClassName, "--theme-").concat(props.theme), props.changeButtonStyles && "".concat(props.rootClassName, "--change-button-styles"));
    }
  }, {
    key: "getScrollerProps",
    value: function getScrollerProps() {
      var props = this.props;
      var result = {
        vertical: props.vertical,
        scrollOnMouseEnter: props.scrollOnMouseEnter,
        arrowSize: props.arrowSize,
        className: (0, _join.default)(this.getClassName(), "".concat(props.rootClassName, "--arrowScroller"))
      };
      if (this.props.rtl) {
        result.nativeScroll = false;
      }
      return result;
    }
  }, {
    key: "getDropdownOverflowProps",
    value: function getDropdownOverflowProps() {
      var props = this.props;
      return {
        className: (0, _join.default)(this.getClassName(), "".concat(props.rootClassName, "--dropdown")),
        constrainTo: props.constrainTo,
        dropdownButtonProps: props.dropdownButtonProps,
        renderDropdownButton: props.renderDropdownButton
      };
    }
  }]);
  return InovuaToolbar;
}(_react.Component);
InovuaToolbar.defaultProps = {
  rootClassName: 'inovua-react-toolkit-toolbar',
  vertical: false,
  useTransformOnScroll: false,
  changeButtonStyles: true,
  rtl: false,
  theme: 'default-light',
  overflowStrategy: 'scroll'
};
InovuaToolbar.propTypes = {
  rtl: _propTypes.default.bool,
  rootClassName: _propTypes.default.string,
  changeButtonStyles: _propTypes.default.bool,
  scrollOnMouseEnter: _propTypes.default.bool,
  theme: _propTypes.default.string,
  constrainTo: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.string, _propTypes.default.bool, _propTypes.default.func]),
  arrowSize: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
    width: _propTypes.default.number,
    height: _propTypes.default.number
  })]),
  overflowStrategy: _propTypes.default.oneOf(['scroll', 'dropdown']),
  vertical: _propTypes.default.bool,
  dropdownButtonProps: _propTypes.default.object,
  renderDropdownButton: _propTypes.default.func,
  useTransformOnScroll: _propTypes.default.bool
};
var Separator = function Separator(props) {
  return _react.default.createElement("div", _objectSpread(_objectSpread({}, props), {}, {
    className: (0, _join.default)(props.className, 'inovua-react-toolkit-toolbar__separator')
  }));
};
exports.Separator = Separator;
InovuaToolbar.Separator = Separator;
var _default = InovuaToolbar;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ToolBar/src/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ToolBar/src/index.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "DropdownOverflow", ({
  enumerable: true,
  get: function get() {
    return _DropdownOverflow.default;
  }
}));
Object.defineProperty(exports, "Separator", ({
  enumerable: true,
  get: function get() {
    return _ToolBar.Separator;
  }
}));
exports["default"] = void 0;
var _ToolBar = _interopRequireWildcard(__webpack_require__(/*! ./ToolBar */ "./node_modules/@inovua/reactdatagrid-community/packages/ToolBar/src/ToolBar.js"));
var _DropdownOverflow = _interopRequireDefault(__webpack_require__(/*! ./DropdownOverflow */ "./node_modules/@inovua/reactdatagrid-community/packages/ToolBar/src/DropdownOverflow.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var _default = _ToolBar.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/ToolBar/src/utils/getGroupedItems.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/ToolBar/src/utils/getGroupedItems.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
function sum(a, b) {
  return a + b;
}
function getGroupedItems(_ref) {
  var boxes = _ref.boxes,
    maxSize = _ref.maxSize,
    _ref$overflowControlS = _ref.overflowControlSize,
    overflowControlSize = _ref$overflowControlS === void 0 ? 0 : _ref$overflowControlS;
  var boxesSize = boxes.reduce(sum);
  if (boxesSize <= maxSize) {
    return false;
  }
  var availableSize = maxSize - overflowControlSize;
  var groups = boxes.reduce(function (acc, box, index) {
    if (availableSize - box >= 0) {
      acc.visibleIndexes.push(index);
      availableSize -= box;
    } else {
      availableSize = 0;
      acc.overflowIndexes.push(index);
    }
    return acc;
  }, {
    visibleIndexes: [],
    overflowIndexes: []
  });
  return groups;
}
var _default = getGroupedItems;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/assign-defined/index.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/assign-defined/index.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _assignFilter = _interopRequireDefault(__webpack_require__(/*! ../../packages/assign-filter */ "./node_modules/@inovua/reactdatagrid-community/packages/assign-filter/index.js"));
function isDefined(value) {
  return value !== undefined;
}
var _default = function _default(target) {
  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    sources[_key - 1] = arguments[_key];
  }
  return _assignFilter.default.apply(void 0, [isDefined, target].concat(sources));
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/assign-filter/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/assign-filter/index.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
function assignFilter(filter, target) {
  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }
  var filteredArgs = args.map(function (obj) {
    if (obj == null) {
      return obj;
    }
    return Object.keys(obj).reduce(function (acc, propName) {
      var value = obj[propName];
      if (filter(value, propName, obj)) {
        acc[propName] = value;
      }
      return acc;
    }, {});
  });
  return Object.assign.apply(Object, [target].concat((0, _toConsumableArray2.default)(filteredArgs)));
}
var _default = assignFilter;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/binary-search/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/binary-search/index.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = function _default(haystack, needle, comparator, low, high) {
  var mid, cmp;
  if (low === undefined) low = 0;else {
    low = low | 0;
    if (low < 0 || low >= haystack.length) throw new RangeError('invalid lower bound');
  }
  if (high === undefined) high = haystack.length - 1;else {
    high = high | 0;
    if (high < low || high >= haystack.length) throw new RangeError('invalid upper bound');
  }
  while (low <= high) {
    mid = low + (high - low >> 1);
    cmp = +comparator(haystack[mid], needle, mid, haystack);
    if (cmp < 0.0) low = mid + 1;else if (cmp > 0.0) high = mid - 1;else return mid;
  }
  return ~low;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/contains/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/contains/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var DOCUMENT_POSITION_CONTAINED_BY = 16;
var _default = contains;
exports["default"] = _default;
function contains(container, elem) {
  if (container.contains) {
    return container.contains(elem);
  }
  var comparison = container.compareDocumentPosition(elem);
  return comparison === 0 || comparison & DOCUMENT_POSITION_CONTAINED_BY;
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/debounce/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/debounce/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _lodash = _interopRequireDefault(__webpack_require__(/*! lodash.debounce */ "./node_modules/lodash.debounce/index.js"));
var _default = _lodash.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/deep-get/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/deep-get/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = _default;
function _default(obj, key, defaultValue, undef) {
  var keys = key.split ? key.split('.') : Array.isArray(key) ? key : [key];
  for (var propIndex = 0; propIndex < keys.length; propIndex++) {
    obj = obj ? obj[keys[propIndex]] : undef;
  }
  return obj === undef ? defaultValue : obj;
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/drag-helper/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/drag-helper/index.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = _default;
var _regionAlign = _interopRequireDefault(__webpack_require__(/*! ../region-align */ "./node_modules/@inovua/reactdatagrid-community/packages/region-align/index.js"));
var _once = _interopRequireDefault(__webpack_require__(/*! ./utils/once */ "./node_modules/@inovua/reactdatagrid-community/packages/drag-helper/utils/once.js"));
var _isMobile = _interopRequireDefault(__webpack_require__(/*! ../isMobile */ "./node_modules/@inovua/reactdatagrid-community/packages/isMobile/index.js"));
var _getGlobal = __webpack_require__(/*! ../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
var globalObject = (0, _getGlobal.getGlobal)();
var Helper = function Helper(config) {
  this.config = config;
};
var getEvents = function getEvents(mobile) {
  return {
    move: mobile ? 'touchmove' : 'mousemove',
    up: mobile ? 'touchend' : 'mouseup'
  };
};
function getPageCoords(event, mobile) {
  var firstTouch;
  var pageX = event.pageX;
  var pageY = event.pageY;
  if (mobile && event.touches && (firstTouch = event.touches[0])) {
    pageX = firstTouch.pageX;
    pageY = firstTouch.pageY;
  }
  return {
    pageX: pageX,
    pageY: pageY
  };
}
Object.assign(Helper.prototype, {
  initDrag: function initDrag(event) {
    this.onDragInit(event);
    var mobile = this.config.mobile;
    if (mobile === undefined) {
      mobile = _isMobile.default;
    }
    var events = this.config.events || getEvents(mobile);
    var onDragStart = (0, _once.default)(this.onDragStart, this);
    var target = mobile ? event.target : globalObject;
    var mouseUpListener = function (event) {
      this.onDrop(event);
      target && target.removeEventListener(events.move, mouseMoveListener);
      target && target.removeEventListener(events.up, mouseUpListener);
    }.bind(this);
    var mouseMoveListener = function (event) {
      if (!mobile && event.which !== 1) {
        mouseUpListener(event);
        return;
      }
      onDragStart(event, mobile);
      this.onDrag(event, mobile);
    }.bind(this);
    target && target.addEventListener(events.move, mouseMoveListener, false);
    target && target.addEventListener(events.up, mouseUpListener);
  },
  onDragInit: function onDragInit(event) {
    var config = {
      diff: {
        left: 0,
        top: 0
      }
    };
    this.state = {
      config: config
    };
    if (this.config.region) {
      this.state.initialRegion = _regionAlign.default.from(this.config.region);
      this.state.dragRegion = config.dragRegion = this.state.initialRegion.clone();
    }
    if (this.config.constrainTo) {
      this.state.constrainTo = _regionAlign.default.from(this.config.constrainTo);
    }
    this.callConfig('onDragInit', event);
  },
  onDragStart: function onDragStart(event, mobile) {
    this.state.initPageCoords = getPageCoords(event, mobile);
    this.state.didDrag = this.state.config.didDrag = true;
    this.callConfig('onDragStart', event);
  },
  onDrag: function onDrag(event, mobile) {
    var config = this.state.config;
    var initPageCoords = this.state.initPageCoords;
    var eventCoords = getPageCoords(event, mobile);
    var diff = config.diff = {
      left: eventCoords.pageX - initPageCoords.pageX,
      top: eventCoords.pageY - initPageCoords.pageY
    };
    if (this.state.initialRegion) {
      var dragRegion = config.dragRegion;
      dragRegion.set(this.state.initialRegion);
      dragRegion.shift(diff);
      if (this.state.constrainTo) {
        diff.left = dragRegion.left - this.state.initialRegion.left;
        diff.top = dragRegion.top - this.state.initialRegion.top;
      }
      config.dragRegion = dragRegion;
    }
    this.callConfig('onDrag', event);
  },
  onDrop: function onDrop(event) {
    this.callConfig('onDrop', event);
    this.state = null;
  },
  callConfig: function callConfig(fnName, event) {
    var config = this.state.config;
    var args = [event, config];
    var fn = this.config[fnName];
    if (fn) {
      fn.apply(this, args);
    }
  }
});
function _default(event, config) {
  if (config.scope) {
    var skippedKeys = {
      scope: 1,
      region: 1,
      constrainTo: 1
    };
    Object.keys(config).forEach(function (key) {
      var value = config[key];
      if (key in skippedKeys) {
        return;
      }
      if (typeof value == 'function') {
        config[key] = value.bind(config.scope);
      }
    });
  }
  var helper = new Helper(config);
  helper.initDrag(event);
  return helper;
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/drag-helper/utils/once.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/drag-helper/utils/once.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = once;
function once(fn, scope) {
  var called;
  var result;
  return function () {
    if (called) {
      return result;
    }
    called = true;
    return result = fn && fn.apply(scope || this, arguments);
  };
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/getFocusableElements/index.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/getFocusableElements/index.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var focusableSelector = 'input, select, textarea, button, object, a[href], [tabindex]';
var _default = function _default(node) {
  if (!node) {
    return null;
  }
  var nodes = (0, _toConsumableArray2.default)(node.querySelectorAll(focusableSelector));
  nodes = nodes.filter(function (el) {
    return !!el.offsetParent;
  });
  return nodes;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/getScrollbarWidth/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/getScrollbarWidth/index.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _getGlobal = __webpack_require__(/*! ../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
var globalObject = (0, _getGlobal.getGlobal)();
var document = globalObject ? globalObject.document : null;
var scrollbarWidth;
var hideNativeScrollbarWidth;
var _default = function _default(hideNativeScrollbarIfPossible) {
  if (hideNativeScrollbarIfPossible) {
    if (hideNativeScrollbarWidth !== undefined) {
      return hideNativeScrollbarWidth;
    }
  } else {
    if (scrollbarWidth !== undefined) {
      return scrollbarWidth;
    }
  }
  var result;
  if (document) {
    var div = document.createElement('div');
    var divStyle = div.style;
    if (hideNativeScrollbarIfPossible) {
      div.className = 'inovua--hide-native-scroll-if-possible';
    }
    divStyle.width = '100px';
    divStyle.height = '100px';
    divStyle.position = 'absolute';
    divStyle.visibility = 'hidden';
    divStyle.boxSizing = 'content-box';
    divStyle.top = '-99999px';
    divStyle.overflow = 'scroll';
    divStyle.MsOverflowStyle = 'scrollbar';
    document.body.appendChild(div);
    var inner = document.createElement('div');
    div.appendChild(inner);
    result = div.offsetWidth - inner.offsetWidth;
    document.body.removeChild(div);
  } else {
    result = 0;
  }
  if (hideNativeScrollbarIfPossible) {
    hideNativeScrollbarWidth = result;
  }
  return result;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/hasOwn/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/hasOwn/index.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var hasOwn = Object.prototype.hasOwnProperty;
function curry(fn, n) {
  if (typeof n !== 'number') {
    n = fn.length;
  }
  function getCurryClosure(prevArgs) {
    function curryClosure() {
      var len = arguments.length;
      var args = [].concat(prevArgs);
      if (len) {
        args.push.apply(args, arguments);
      }
      if (args.length < n) {
        return getCurryClosure(args);
      }
      return fn.apply(this, args);
    }
    return curryClosure;
  }
  return getCurryClosure([]);
}
var _default = curry(function (object, property) {
  return hasOwn.call(object, property);
});
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/hasSticky/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/hasSticky/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.sticky = exports["default"] = void 0;
var _getGlobal = __webpack_require__(/*! ../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
var globalObject = (0, _getGlobal.getGlobal)();
var div = globalObject.document && globalObject.document.createElement ? globalObject.document.createElement('div') : null;
var HAS_STICKY = false;
var sticky;
exports.sticky = sticky;
if (div) {
  div.style.position = 'sticky';
  if (div.style.position === 'sticky') {
    exports.sticky = sticky = 'sticky';
    HAS_STICKY = true;
  }
  if (!HAS_STICKY) {
    div.style.position = '-webkit-sticky';
    if (div.style.position === '-webkit-sticky') {
      HAS_STICKY = true;
      exports.sticky = sticky = '-webkit-sticky';
    }
  }
}
var _default = function _default() {
  return HAS_STICKY;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/hasTouch/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/hasTouch/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _getGlobal = __webpack_require__(/*! ../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
var globalObject = (0, _getGlobal.getGlobal)();
var _default = !!('ontouchstart' in globalObject || globalObject.DocumentTouch && document instanceof DocumentTouch);
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/isMobile/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/isMobile/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _hasTouch = _interopRequireDefault(__webpack_require__(/*! ../../packages/hasTouch */ "./node_modules/@inovua/reactdatagrid-community/packages/hasTouch/index.js"));
var _getGlobal = __webpack_require__(/*! ../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
var globalObject = (0, _getGlobal.getGlobal)();
var mobileTest = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(globalObject.navigator ? globalObject.navigator.userAgent : '');
var _default = _hasTouch.default && mobileTest;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/isSafari.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/isSafari.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _getGlobal = __webpack_require__(/*! ../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
var globalObject = (0, _getGlobal.getGlobal)();
var IS_SAFARI;
var _default = function _default() {
  if (IS_SAFARI !== undefined) {
    return IS_SAFARI;
  }
  var ua = globalObject.navigator ? globalObject.navigator.userAgent : '';
  return IS_SAFARI = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/join/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/join/index.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var notEmpty = function notEmpty(x) {
  return !!x;
};
var _default = function _default() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  if (args.length == 1 && Array.isArray(args[0])) {
    args = args[0];
  }
  return args.filter(notEmpty).join(' ');
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/autoBind.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/react-class/autoBind.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js"));
var skipMethods = {
  constructor: 1,
  render: 1,
  shouldComponentUpdate: 1,
  componentWillMount: 1,
  componentDidMount: 1,
  componentWillReceiveProps: 1,
  componentWillUpdate: 1,
  componentDidUpdate: 1,
  componentWillUnmount: 1
};
function autoBind(object, filter) {
  var proto = object.constructor.prototype;
  var filterFn = typeof filter == 'function' ? filter : filter && (0, _typeof2.default)(filter) == 'object' ? function (key) {
    return !filter[key] && skipMethods[key] !== 1 && typeof proto[key] === 'function';
  } : function (key) {
    return skipMethods[key] !== 1 && typeof proto[key] === 'function';
  };
  var names = Object.getOwnPropertyNames(proto).filter(filterFn);
  names.push('setState');
  names.forEach(function (key) {
    object[key] = object[key].bind(object);
  });
  return object;
}
var _default = autoBind;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/react-class/index.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Component = void 0;
Object.defineProperty(exports, "autoBind", ({
  enumerable: true,
  get: function get() {
    return _autoBind.default;
  }
}));
exports["default"] = void 0;
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _autoBind = _interopRequireDefault(__webpack_require__(/*! ./autoBind */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/autoBind.js"));
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var ReactClass = function (_React$Component) {
  (0, _inherits2.default)(ReactClass, _React$Component);
  var _super = _createSuper(ReactClass);
  function ReactClass(props) {
    var _this;
    (0, _classCallCheck2.default)(this, ReactClass);
    _this = _super.call(this, props);
    (0, _autoBind.default)((0, _assertThisInitialized2.default)(_this));
    return _this;
  }
  return (0, _createClass2.default)(ReactClass);
}(_react.default.Component);
exports.Component = ReactClass;
var _default = ReactClass;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/react-clean-props/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/react-clean-props/index.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
function cleanProps(props, propTypes) {
  if (!props || !propTypes) {
    return Object.assign({}, props);
  }
  var newProps = Object.keys(props).reduce(function (acc, propName) {
    if (!propTypes[propName]) {
      acc[propName] = props[propName];
    }
    return acc;
  }, {});
  return newProps;
}
var _default = cleanProps;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/react-notify-resize/index.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/react-notify-resize/index.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
var _exportNames = {};
exports["default"] = void 0;
var _src = _interopRequireWildcard(__webpack_require__(/*! ./src */ "./node_modules/@inovua/reactdatagrid-community/packages/react-notify-resize/src/index.js"));
Object.keys(_src).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _src[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _src[key];
    }
  });
});
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var _default = _src.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/react-notify-resize/src/index.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/react-notify-resize/src/index.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = exports.NotifyResize = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
var _shallowequal = _interopRequireDefault(__webpack_require__(/*! ./shallowequal */ "./node_modules/@inovua/reactdatagrid-community/packages/react-notify-resize/src/shallowequal.js"));
var _debounce = _interopRequireDefault(__webpack_require__(/*! ../../../packages/debounce */ "./node_modules/@inovua/reactdatagrid-community/packages/debounce/index.js"));
var _getGlobal = __webpack_require__(/*! ../../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var globalObject = (0, _getGlobal.getGlobal)();
var STYLE_DISPLAY_NONE = {
  display: 'none'
};
var emptyFn = function emptyFn() {};
var immediateFn = function immediateFn(fn) {
  return fn();
};
var notifyResizeStyle = {
  contain: 'strict',
  position: 'absolute',
  top: 0,
  left: 0,
  width: '100%',
  height: '100%',
  zIndex: -1,
  overflow: 'hidden',
  display: 'block',
  pointerEvents: 'none',
  opacity: 0,
  direction: 'ltr',
  textAlign: 'start'
};
var expandToolStyle = {
  contain: 'strict',
  position: 'absolute',
  top: 0,
  left: 0,
  width: '100%',
  height: '100%',
  overflow: 'auto'
};
var contractToolStyle = {
  contain: 'strict',
  position: 'absolute',
  top: 0,
  left: 0,
  width: '100%',
  height: '100%',
  overflow: 'auto'
};
var contractToolInnerStyle = {
  contain: 'strict',
  position: 'absolute',
  top: 0,
  left: 0,
  width: '200%',
  height: '200%'
};
var InovuaNotifyResize = function (_React$Component) {
  (0, _inherits2.default)(InovuaNotifyResize, _React$Component);
  var _super = _createSuper(InovuaNotifyResize);
  function InovuaNotifyResize(props) {
    var _this;
    (0, _classCallCheck2.default)(this, InovuaNotifyResize);
    _this = _super.call(this, props);
    _this.checkResize = _this.checkResize.bind((0, _assertThisInitialized2.default)(_this));
    _this.onResize = _this.onResize.bind((0, _assertThisInitialized2.default)(_this));
    if (props.notifyResizeDelay > 0) {
      _this.onResize = (0, _debounce.default)(_this.onResize, props.notifyResizeDelay);
    }
    if (props.checkResizeDelay > 0) {
      _this.checkResize = (0, _debounce.default)(_this.checkResize, props.checkResizeDelay);
    }
    _this.refNotifyResize = function (node) {
      _this.notifyResizeNode = node;
    };
    _this.refContractTool = function (node) {
      _this.contractToolNode = node;
    };
    _this.refExpandTool = function (node) {
      _this.expandToolNode = node;
    };
    _this.refExpandToolInner = function (node) {
      _this.expandToolInnerNode = node;
    };
    _this.refContractToolInner = function (node) {
      _this.contractToolInnerNode = node;
    };
    _this.state = {
      notifyResizeWidth: 0,
      notifyResizeHeight: 0,
      expandToolWidth: 0,
      expandToolHeight: 0,
      contractToolWidth: 0,
      contractToolHeight: 0
    };
    return _this;
  }
  (0, _createClass2.default)(InovuaNotifyResize, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps, nextState) {
      if (typeof nextProps.shouldComponentUpdate === 'function') {
        return nextProps.shouldComponentUpdate(nextProps, this.props, nextState, this.state);
      }
      return !(0, _shallowequal.default)(nextState, this.state) || !(0, _shallowequal.default)(nextProps, this.props);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.__willUnmount = true;
      if (this.observer) {
        if (this.observer.unobserve) {
          this.observer.unobserve(this.target);
        }
        if (this.observer.disconnect) {
          this.observer.disconnect();
        }
        delete this.observer;
      }
      delete this.target;
    }
  }, {
    key: "getDOMNode",
    value: function getDOMNode() {
      return this.notifyResizeNode;
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;
      this.__willUnmount = false;
      var ResizeObserver = globalObject.ResizeObserver || this.props.ResizeObserver;
      if (this.props.useNativeIfAvailable && ResizeObserver) {
        var node = this.getDOMNode();
        var target = node.parentNode;
        this.target = target;
        var observer = new ResizeObserver(function (entries) {
          if (_this2.props.onObserverResize) {
            _this2.props.onObserverResize(entries);
          }
          var first = entries[0];
          if (first) {
            _this2.onResize(first.contentRect);
          }
        });
        observer.observe(target);
        this.observer = observer;
      }
      if (typeof this.props.onMount === 'function') {
        this.props.onMount(this);
      }
      if (this.observer) {
        return;
      }
      this.resetResizeTool(function () {
        if (_this2.props.notifyOnMount) {
          var _this2$state = _this2.state,
            width = _this2$state.notifyResizeWidth,
            height = _this2$state.notifyResizeHeight;
          _this2.onResize({
            width: width,
            height: height
          });
        }
      });
    }
  }, {
    key: "render",
    value: function render() {
      var ResizeObserver = globalObject.ResizeObserver || this.props.ResizeObserver;
      if (this.props.useNativeIfAvailable && ResizeObserver) {
        return _react.default.createElement("div", {
          ref: this.refNotifyResize,
          style: STYLE_DISPLAY_NONE,
          "data-name": "@inovua/react-observer-placeholder"
        });
      }
      return _react.default.createElement("div", {
        ref: this.refNotifyResize,
        style: notifyResizeStyle,
        onScroll: this.checkResize
      }, this.renderExpandTool(), this.renderContractTool());
    }
  }, {
    key: "renderExpandTool",
    value: function renderExpandTool() {
      return _react.default.createElement("div", {
        ref: this.refExpandTool,
        style: expandToolStyle
      }, _react.default.createElement("div", {
        ref: this.refExpandToolInner,
        style: {
          position: 'absolute',
          top: 0,
          left: 0,
          width: this.state.expandToolWidth,
          height: this.state.expandToolHeight
        }
      }));
    }
  }, {
    key: "renderContractTool",
    value: function renderContractTool() {
      return _react.default.createElement("div", {
        ref: this.refContractTool,
        style: contractToolStyle
      }, _react.default.createElement("div", {
        ref: this.refContractToolInner,
        style: contractToolInnerStyle
      }));
    }
  }, {
    key: "resetResizeTool",
    value: function resetResizeTool(callback) {
      var _this3 = this;
      this.setDimensions(function () {
        _this3.scrollToBottomExpandTool();
        if (typeof callback == 'function') {
          callback();
        }
      });
    }
  }, {
    key: "setDimensions",
    value: function setDimensions(callback) {
      var _this4 = this;
      this.getDimensions(function (size) {
        var notifyResizeWidth = size.notifyResizeWidth,
          notifyResizeHeight = size.notifyResizeHeight;
        if (_this4.__willUnmount) {
          return;
        }
        _this4.setState({
          notifyResizeWidth: notifyResizeWidth,
          notifyResizeHeight: notifyResizeHeight,
          expandToolWidth: notifyResizeWidth + 1,
          expandToolHeight: notifyResizeHeight + 1
        }, callback);
      });
    }
  }, {
    key: "getDimensions",
    value: function getDimensions(callback) {
      var _this5 = this;
      if (!callback || typeof callback != 'function') {
        callback = emptyFn;
      }
      var notifyResize = this.notifyResizeNode;
      if (!notifyResize) {
        return;
      }
      var node = notifyResize.parentElement || notifyResize;
      var size;
      var fn = this.props.useRaf ? requestAnimationFrame : immediateFn;
      fn(function () {
        if (typeof _this5.props.measureSize == 'function') {
          size = _this5.props.measureSize(node, notifyResize);
        } else {
          size = {
            width: node.offsetWidth,
            height: node.offsetHeight
          };
        }
        callback({
          notifyResizeWidth: size.width,
          notifyResizeHeight: size.height
        });
      });
    }
  }, {
    key: "scrollToBottomExpandTool",
    value: function scrollToBottomExpandTool(callback) {
      var _this6 = this;
      if (this.notifyResizeNode) {
        requestAnimationFrame(function () {
          var expandTool = _this6.expandToolNode;
          var contractTool = _this6.contractToolNode;
          var expandToolScrollHeight;
          var expandToolScrollWidth;
          var contractToolScrollHeight;
          var contractToolScrollWidth;
          if (expandTool) {
            expandToolScrollHeight = expandTool.scrollHeight;
            expandToolScrollWidth = expandTool.scrollWidth;
          }
          if (contractTool) {
            contractToolScrollHeight = contractTool.scrollHeight;
            contractToolScrollWidth = contractTool.scrollWidth;
          }
          if (expandTool) {
            expandTool.scrollTop = expandToolScrollHeight;
            expandTool.scrollLeft = expandToolScrollWidth;
          }
          if (contractTool) {
            contractTool.scrollTop = contractToolScrollHeight;
            contractTool.scrollLeft = contractToolScrollWidth;
          }
          if (typeof callback == 'function') {
            callback();
          }
        });
      }
    }
  }, {
    key: "checkResize",
    value: function checkResize() {
      var _this7 = this;
      this.getDimensions(function (_ref) {
        var notifyResizeWidth = _ref.notifyResizeWidth,
          notifyResizeHeight = _ref.notifyResizeHeight;
        if (notifyResizeWidth !== _this7.state.notifyResizeWidth || notifyResizeHeight !== _this7.state.notifyResizeHeight) {
          _this7.onResize({
            width: notifyResizeWidth,
            height: notifyResizeHeight
          });
          _this7.resetResizeTool();
        }
      });
    }
  }, {
    key: "onResize",
    value: function onResize(_ref2) {
      var width = _ref2.width,
        height = _ref2.height;
      if (this.__willUnmount) {
        return;
      }
      if (typeof this.props.onResize === 'function') {
        this.props.onResize({
          width: width,
          height: height
        });
      }
    }
  }]);
  return InovuaNotifyResize;
}(_react.default.Component);
exports.NotifyResize = InovuaNotifyResize;
InovuaNotifyResize.defaultProps = {
  useNativeIfAvailable: true,
  useWillChange: false,
  useRaf: true
};
InovuaNotifyResize.propTypes = {
  ResizeObserver: _propTypes.func,
  onResize: _propTypes.func,
  onObserverResize: _propTypes.func,
  useNativeIfAvailable: _propTypes.bool,
  onMount: _propTypes.func,
  useWillChange: _propTypes.bool,
  useRaf: _propTypes.bool,
  notifyOnMount: _propTypes.bool,
  notifyResizeDelay: _propTypes.number,
  checkResizeDelay: _propTypes.number
};
var _default = InovuaNotifyResize;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/react-notify-resize/src/shallowequal.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/react-notify-resize/src/shallowequal.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js"));
function shallowequal(object1, object2) {
  if (object1 === object2) {
    return true;
  }
  if ((0, _typeof2.default)(object1) !== 'object' || object1 === null || (0, _typeof2.default)(object2) !== 'object' || object2 === null) {
    return false;
  }
  var keys1 = Object.keys(object1);
  var keys2 = Object.keys(object2);
  if (keys1.length !== keys2.length) {
    return false;
  }
  var equal = true;
  for (var i = 0, len = keys1.length; i < len; i++) {
    var key = keys1[i];
    if (object1[key] !== object2[key]) {
      equal = false;
      break;
    }
  }
  return equal;
}
var _default = shallowequal;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/react-scroll-container-pro/index.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/react-scroll-container-pro/index.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
var _exportNames = {};
exports["default"] = void 0;
var _src = _interopRequireWildcard(__webpack_require__(/*! ./src */ "./node_modules/@inovua/reactdatagrid-community/packages/react-scroll-container-pro/src/index.js"));
Object.keys(_src).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _src[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _src[key];
    }
  });
});
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var _default = _src.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/react-scroll-container-pro/src/Scrollbar.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/react-scroll-container-pro/src/Scrollbar.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _autoBind = _interopRequireDefault(__webpack_require__(/*! ../../react-class/autoBind */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/autoBind.js"));
var _reactCleanProps = _interopRequireDefault(__webpack_require__(/*! ../../react-clean-props */ "./node_modules/@inovua/reactdatagrid-community/packages/react-clean-props/index.js"));
var _shouldComponentUpdate2 = _interopRequireDefault(__webpack_require__(/*! ./shouldComponentUpdate */ "./node_modules/@inovua/reactdatagrid-community/packages/react-scroll-container-pro/src/shouldComponentUpdate.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../join */ "./node_modules/@inovua/reactdatagrid-community/packages/join/index.js"));
var _getGlobal = __webpack_require__(/*! ../../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
var _SIZES, _OTHER_SIZES, _MARGINS, _TRACK_SIDES;
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var globalObject = (0, _getGlobal.getGlobal)();
var HORIZONTAL = 'horizontal';
var VERTICAL = 'vertical';
var SIZES = (_SIZES = {}, (0, _defineProperty2.default)(_SIZES, VERTICAL, 'height'), (0, _defineProperty2.default)(_SIZES, HORIZONTAL, 'width'), _SIZES);
var OTHER_SIZES = (_OTHER_SIZES = {}, (0, _defineProperty2.default)(_OTHER_SIZES, VERTICAL, 'width'), (0, _defineProperty2.default)(_OTHER_SIZES, HORIZONTAL, 'height'), _OTHER_SIZES);
var MARGINS = (_MARGINS = {}, (0, _defineProperty2.default)(_MARGINS, VERTICAL, 'right'), (0, _defineProperty2.default)(_MARGINS, HORIZONTAL, 'bottom'), _MARGINS);
var TRACK_SIDES = (_TRACK_SIDES = {}, (0, _defineProperty2.default)(_TRACK_SIDES, VERTICAL, ['top', 'bottom']), (0, _defineProperty2.default)(_TRACK_SIDES, HORIZONTAL, ['left', 'right']), _TRACK_SIDES);
var STYLES = {
  vertical: {
    position: 'absolute',
    top: 0,
    bottom: 0,
    right: 0,
    contain: 'layout paint style'
  },
  horizontal: {
    position: 'absolute',
    left: 0,
    right: 0,
    bottom: 0,
    contain: 'layout paint style'
  }
};
var InovuaScrollbar = function (_Component) {
  (0, _inherits2.default)(InovuaScrollbar, _Component);
  var _super = _createSuper(InovuaScrollbar);
  function InovuaScrollbar(props) {
    var _this;
    (0, _classCallCheck2.default)(this, InovuaScrollbar);
    _this = _super.call(this, props);
    (0, _autoBind.default)((0, _assertThisInitialized2.default)(_this));
    _this.scrollPos = 0;
    _this.state = {
      scrollPos: 0
    };
    _this.refTrack = function (c) {
      _this.trackNode = c;
    };
    _this.refThumb = function (c) {
      _this.thumbNode = c;
    };
    return _this;
  }
  (0, _createClass2.default)(InovuaScrollbar, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps, nextState) {
      return (0, _shouldComponentUpdate2.default)(this, nextProps, nextState);
    }
  }, {
    key: "setVisible",
    value: function setVisible(visible) {
      this.visible = visible;
      if (!visible && this.state.over) {
        return;
      }
      if (this.state.visible === visible) {
        return;
      }
      this.setState({
        visible: visible
      });
    }
  }, {
    key: "setScrollPos",
    value: function setScrollPos(scrollPos) {
      this.scrollPos = scrollPos;
      var transform = this.getThumbTransform();
      if (this.currentTransform == transform) {
        return;
      }
      this.thumbNode.style.transform = this.currentTransform = transform;
    }
  }, {
    key: "getScrollPos",
    value: function getScrollPos() {
      return this.scrollPos;
    }
  }, {
    key: "render",
    value: function render() {
      var _Object$assign;
      var props = this.props;
      var autoHide = props.autoHide;
      var className = props.className,
        style = props.style,
        orientation = props.orientation,
        vertical = props.vertical,
        horizontal = props.horizontal,
        thumbVisible = props.visible;
      if (orientation) {
        vertical = orientation == VERTICAL;
        horizontal = !vertical;
      }
      this.orientation = orientation = horizontal ? HORIZONTAL : VERTICAL;
      var sizeName = SIZES[orientation];
      var otherSizeName = OTHER_SIZES[orientation];
      if (autoHide === false) {
        thumbVisible = true;
      } else {
        if (this.state.visible !== undefined) {
          thumbVisible = this.state.visible;
        }
        if (this.state.active) {
          thumbVisible = true;
        }
      }
      var hiding = !thumbVisible && this.prevVisible;
      var showing = thumbVisible && !this.prevVisible;
      className = (0, _join.default)(className, 'inovua-react-scroll-container__scrollbar', "inovua-react-scroll-container__scrollbar--orientation-".concat(orientation), "inovua-react-scroll-container__scrollbar--direction-".concat(this.props.rtl ? 'rtl' : 'ltr'), !thumbVisible && 'inovua-react-scroll-container__scrollbar--hidden', hiding && 'inovua-react-scroll-container__scrollbar--hiding', this.state.active && 'inovua-react-scroll-container__scrollbar--active', showing && 'inovua-react-scroll-container__scrollbar--showing');
      style = Object.assign({}, style, STYLES[orientation]);
      if (showing && this.props.showTransitionDuration) {
        style.transitionDuration = this.props.showTransitionDuration;
      }
      if (hiding && this.props.hideTransitionDuration) {
        style.transitionDuration = this.props.hideTransitionDuration;
      }
      this.prevVisible = thumbVisible;
      var divProps = (0, _reactCleanProps.default)(props, InovuaScrollbar.propTypes);
      var thumbSize = this.getThumbSize();
      var transform = this.getThumbTransform(orientation, thumbSize);
      var scrollThumbOverWidth = Math.max(this.props.scrollThumbOverWidth, this.props.scrollThumbWidth);
      var thumbRadius = this.props.scrollThumbRadius !== undefined ? this.props.scrollThumbRadius : this.props.scrollThumbWidth;
      var thumbStyle = Object.assign({}, this.props.scrollThumbStyle, (_Object$assign = {}, (0, _defineProperty2.default)(_Object$assign, sizeName, thumbSize), (0, _defineProperty2.default)(_Object$assign, otherSizeName, this.state.over || this.state.active || this.props.alwaysShowTrack ? scrollThumbOverWidth : this.props.scrollThumbWidth), (0, _defineProperty2.default)(_Object$assign, "transform", transform), (0, _defineProperty2.default)(_Object$assign, "borderRadius", thumbRadius), (0, _defineProperty2.default)(_Object$assign, "transitionDuration", this.props.scrollTrackOverTransitionDuration), _Object$assign));
      var trackSides = TRACK_SIDES[orientation];
      var scrollThumbMargin = this.props.scrollThumbMargin || 0;
      if (this.props.scrollThumbMargin) {
        style[MARGINS[orientation]] = scrollThumbMargin;
        if (this.props.scrollThumbStartEndRespectMargin) {
          style[trackSides[0]] = this.props.scrollThumbMargin;
        }
      }
      style[trackSides[1]] = scrollThumbMargin + (this.props.oppositeVisible ? this.props.scrollThumbWidth : 0);
      var thumbClassName = "inovua-react-scroll-container__thumb inovua-react-scroll-container__thumb--orientation-".concat(orientation, " inovua-react-scroll-container__thumb--direction-").concat(this.props.rtl ? 'rtl' : 'ltr');
      var trackClassName = "inovua-react-scroll-container__track inovua-react-scroll-container__track--orientation-".concat(orientation, " inovua-react-scroll-container__track--direction-").concat(this.props.rtl ? 'rtl' : 'ltr');
      var trackVisible = this.props.alwaysShowTrack || thumbVisible && this.state.over || this.props.showTrackOnDrag && this.state.active;
      if (trackVisible) {
        trackClassName += ' inovua-react-scroll-container__track--visible';
      }
      var trackStyle = (0, _defineProperty2.default)({
        pointerEvents: 'none'
      }, otherSizeName, scrollThumbOverWidth);
      if (this.props.dragToScroll) {
        if (thumbVisible) {
          trackStyle.pointerEvents = 'all';
        }
        trackStyle.borderRadius = thumbRadius;
        trackClassName += ' inovua-react-scroll-container__track--drag-to-scroll';
        if (this.state.active) {
          trackStyle.cursor = 'auto';
        }
      }
      if (this.props.rtl) {
        var leftVal = style.left;
        style.left = style.right;
        style.right = leftVal;
      }
      var onThumbMouseDown = thumbVisible && this.props.dragToScroll ? this.onThumbMouseDown : null;
      var onTrackClick = thumbVisible && this.props.dragToScroll ? this.onTrackClick : null;
      var onTrackWheel = this.props.dragToScroll && this.state.over ? this.onTrackWheel : null;
      return _react.default.createElement("div", _objectSpread(_objectSpread({}, divProps), {}, {
        style: style,
        className: className,
        "data-orientation": orientation
      }), _react.default.createElement("div", {
        ref: this.refTrack,
        style: trackStyle,
        className: trackClassName,
        onClick: onTrackClick,
        onWheel: onTrackWheel,
        onMouseEnter: this.props.dragToScroll ? this.onMouseEnter : null,
        onMouseLeave: this.props.dragToScroll ? this.onMouseLeave : null
      }, _react.default.createElement("div", {
        ref: this.refThumb,
        style: thumbStyle,
        className: thumbClassName,
        onMouseDown: onThumbMouseDown
      })));
    }
  }, {
    key: "setOver",
    value: function setOver(over) {
      var _this2 = this;
      var doSetOver = function doSetOver(overValue) {
        _this2.setState({
          over: overValue
        }, function () {
          if (!overValue) {
            if (_this2.visible !== _this2.state.visible) {
              _this2.setVisible(_this2.visible);
            }
          }
        });
      };
      if (this.setOverFalseTimeoutId) {
        clearTimeout(this.setOverFalseTimeoutId);
      }
      if (!over) {
        this.setOverFalseTimeoutId = setTimeout(function () {
          doSetOver(false);
        }, 500);
      } else {
        this.setOverFalseTimeoutId = setTimeout(function () {
          doSetOver(true);
        }, 35);
      }
    }
  }, {
    key: "onMouseEnter",
    value: function onMouseEnter() {
      this.setOver(true);
    }
  }, {
    key: "onMouseLeave",
    value: function onMouseLeave() {
      this.setOver(false);
    }
  }, {
    key: "onTrackWheel",
    value: function onTrackWheel(event) {
      var delta = this.orientation == VERTICAL ? event.deltaY : event.deltaX;
      event.preventDefault();
      this.props.onWheelScroll(this.orientation, delta, event);
    }
  }, {
    key: "onTrackClick",
    value: function onTrackClick(event) {
      var target = event.target;
      if (target != this.trackNode) {
        return;
      }
      var rect = target.getBoundingClientRect();
      var offsetX = event.clientX - rect.left;
      var offsetY = event.clientY - rect.top;
      var pos = this.orientation == VERTICAL ? offsetY : offsetX;
      var thumbPos = this.getThumbPosition();
      var direction = pos > thumbPos ? 1 : -1;
      if (this.props.onPageScroll) {
        this.props.onPageScroll(this.orientation, direction);
      }
    }
  }, {
    key: "getCoord",
    value: function getCoord(event) {
      return this.orientation == VERTICAL ? event.pageY : event.pageX;
    }
  }, {
    key: "getThumbPosition",
    value: function getThumbPosition() {
      return this.scrollPosToThumbPos(this.getScrollPos(), this.orientation, this.getThumbSize());
    }
  }, {
    key: "onThumbMouseDown",
    value: function onThumbMouseDown(event) {
      event.preventDefault();
      event.stopPropagation();
      this.initialPos = this.getCoord(event);
      this.thumbSize = this.getThumbSize();
      this.initialThumbPos = this.getThumbPosition();
      this.setState({
        active: true
      });
      globalObject.addEventListener('mousemove', this.onMouseMove);
      globalObject.addEventListener('mouseup', this.onMouseUp);
      this.props.onStartDrag(this.orientation);
    }
  }, {
    key: "onMouseMove",
    value: function onMouseMove(event) {
      var pos = this.getCoord(event);
      var diff = pos - this.initialPos;
      var scrollPos = this.thumbPosToScrollPos(this.initialThumbPos + diff, this.orientation, this.thumbSize);
      if (this.orientation == VERTICAL) {
        this.onScrollThumbScrollTop(scrollPos);
      } else {
        this.onScrollThumbScrollLeft(scrollPos);
      }
    }
  }, {
    key: "onScrollThumbScrollTop",
    value: function onScrollThumbScrollTop(scrollPos) {
      this.props.onScrollThumbScrollTop(scrollPos);
    }
  }, {
    key: "onScrollThumbScrollLeft",
    value: function onScrollThumbScrollLeft(scrollPos) {
      this.props.onScrollThumbScrollLeft(scrollPos);
    }
  }, {
    key: "onMouseUp",
    value: function onMouseUp() {
      globalObject.removeEventListener('mousemove', this.onMouseMove);
      globalObject.removeEventListener('mouseup', this.onMouseUp);
      this.setState({
        active: false
      });
      this.props.onStopDrag(this.orientation);
    }
  }, {
    key: "getThumbTransform",
    value: function getThumbTransform() {
      var orientation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.orientation;
      var thumbSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.getThumbSize();
      var scrollPos = this.scrollPosToThumbPos(this.getScrollPos(), orientation, thumbSize) || 0;
      if (orientation == VERTICAL) {
        return "translate3d(0px, ".concat(scrollPos, "px, 0px)");
      }
      if (this.props.rtl) {
        scrollPos = -scrollPos;
      }
      return "translate3d(".concat(scrollPos, "px, 0px, 0px)");
    }
  }, {
    key: "thumbPosToScrollPos",
    value: function thumbPosToScrollPos(thumbPos, orientation, thumbSize) {
      var _this$props = this.props,
        clientSize = _this$props.clientSize,
        scrollSize = _this$props.scrollSize,
        trackSize = _this$props.trackSize;
      var scrollPos = thumbPos * (scrollSize - clientSize) / (trackSize - thumbSize);
      return scrollPos;
    }
  }, {
    key: "scrollPosToThumbPos",
    value: function scrollPosToThumbPos(scrollPos, orientation, thumbSize) {
      var _this$props2 = this.props,
        clientSize = _this$props2.clientSize,
        scrollSize = _this$props2.scrollSize,
        trackSize = _this$props2.trackSize;
      var thumbPos = scrollPos / (scrollSize - clientSize) * (trackSize - thumbSize);
      return Math.floor(thumbPos);
    }
  }, {
    key: "getRatio",
    value: function getRatio() {
      return this.props.trackSize / this.props.clientSize;
    }
  }, {
    key: "getThumbSize",
    value: function getThumbSize() {
      var _this$props3 = this.props,
        scrollSize = _this$props3.scrollSize,
        clientSize = _this$props3.clientSize;
      var thumbSize = scrollSize ? clientSize * clientSize / scrollSize : 0;
      thumbSize *= this.getRatio();
      thumbSize = Math.max(thumbSize, this.props.scrollThumbMinSize);
      return thumbSize || 0;
    }
  }]);
  return InovuaScrollbar;
}(_react.Component);
exports["default"] = InovuaScrollbar;
InovuaScrollbar.defaultProps = {
  onScrollThumbScrollTop: function onScrollThumbScrollTop() {},
  onScrollThumbScrollLeft: function onScrollThumbScrollLeft() {},
  onStartDrag: function onStartDrag() {},
  onStopDrag: function onStopDrag() {},
  scrollThumbMargin: 2,
  scrollThumbMinSize: 10,
  showTrackOnDrag: false
};
InovuaScrollbar.propTypes = {
  alwaysShowTrack: _propTypes.default.bool,
  autoHide: _propTypes.default.bool,
  clientSize: _propTypes.default.number,
  dragToScroll: _propTypes.default.bool,
  emptyScrollOffset: _propTypes.default.number,
  hideTransitionDuration: _propTypes.default.string,
  horizontal: _propTypes.default.bool,
  showTrackOnDrag: _propTypes.default.bool,
  onStartDrag: _propTypes.default.func,
  onStopDrag: _propTypes.default.func,
  onPageScroll: _propTypes.default.func,
  onScrollThumbScrollLeft: _propTypes.default.func,
  onScrollThumbScrollTop: _propTypes.default.func,
  onWheelScroll: _propTypes.default.func,
  oppositeVisible: _propTypes.default.bool,
  orientation: _propTypes.default.oneOf([VERTICAL, HORIZONTAL]),
  nativeScrollbarWidth: _propTypes.default.number.isRequired,
  scrollSize: _propTypes.default.number,
  scrollThumbMargin: _propTypes.default.number.isRequired,
  scrollThumbMinSize: _propTypes.default.number,
  scrollThumbOverWidth: _propTypes.default.number,
  scrollThumbRadius: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  scrollThumbStartEndRespectMargin: _propTypes.default.bool,
  scrollThumbStyle: _propTypes.default.shape({}),
  scrollThumbWidth: _propTypes.default.number,
  scrollTrackOverTransitionDuration: _propTypes.default.string,
  showTransitionDuration: _propTypes.default.string,
  size: _propTypes.default.number,
  trackSize: _propTypes.default.number,
  vertical: _propTypes.default.bool,
  visible: _propTypes.default.bool,
  rtl: _propTypes.default.bool
};

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/react-scroll-container-pro/src/index.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/react-scroll-container-pro/src/index.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof3 = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "cleanProps", ({
  enumerable: true,
  get: function get() {
    return _reactCleanProps.default;
  }
}));
exports["default"] = void 0;
Object.defineProperty(exports, "getScrollbarWidth", ({
  enumerable: true,
  get: function get() {
    return _getScrollbarWidth.default;
  }
}));
Object.defineProperty(exports, "isMobile", ({
  enumerable: true,
  get: function get() {
    return _isMobile.default;
  }
}));
exports.propTypes = void 0;
Object.defineProperty(exports, "scrollPage", ({
  enumerable: true,
  get: function get() {
    return _scrollPage2.default;
  }
}));
Object.defineProperty(exports, "smoothScrollTo", ({
  enumerable: true,
  get: function get() {
    return _smoothScrollTo2.default;
  }
}));
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js"));
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _debounce = _interopRequireDefault(__webpack_require__(/*! ../../../packages/debounce */ "./node_modules/@inovua/reactdatagrid-community/packages/debounce/index.js"));
var _autoBind = _interopRequireDefault(__webpack_require__(/*! ../../../packages/react-class/autoBind */ "./node_modules/@inovua/reactdatagrid-community/packages/react-class/autoBind.js"));
var _reactCleanProps = _interopRequireDefault(__webpack_require__(/*! ../../../packages/react-clean-props */ "./node_modules/@inovua/reactdatagrid-community/packages/react-clean-props/index.js"));
var _src = _interopRequireDefault(__webpack_require__(/*! ../../../packages/react-notify-resize/src */ "./node_modules/@inovua/reactdatagrid-community/packages/react-notify-resize/src/index.js"));
var _isMobile = _interopRequireDefault(__webpack_require__(/*! ../../../packages/isMobile */ "./node_modules/@inovua/reactdatagrid-community/packages/isMobile/index.js"));
var _smoothScrollTo2 = _interopRequireDefault(__webpack_require__(/*! ../../../packages/smoothScrollTo */ "./node_modules/@inovua/reactdatagrid-community/packages/smoothScrollTo/index.js"));
var _scrollPage2 = _interopRequireDefault(__webpack_require__(/*! ../../../packages/scrollPage */ "./node_modules/@inovua/reactdatagrid-community/packages/scrollPage/index.js"));
var _getScrollbarWidth = _interopRequireDefault(__webpack_require__(/*! ../../../packages/getScrollbarWidth */ "./node_modules/@inovua/reactdatagrid-community/packages/getScrollbarWidth/index.js"));
var _shouldComponentUpdate2 = _interopRequireDefault(__webpack_require__(/*! ../../../packages/shouldComponentUpdate */ "./node_modules/@inovua/reactdatagrid-community/packages/shouldComponentUpdate/index.js"));
var _Scrollbar = _interopRequireDefault(__webpack_require__(/*! ./Scrollbar */ "./node_modules/@inovua/reactdatagrid-community/packages/react-scroll-container-pro/src/Scrollbar.js"));
var _getGlobal = __webpack_require__(/*! ../../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof3(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var globalObject = (0, _getGlobal.getGlobal)();
var callFn = function callFn(fn) {
  return fn();
};
var raf = globalObject.requestAnimationFrame;
var ua = globalObject.navigator ? globalObject.navigator.userAgent || '' : '';
var IS_EDGE = ua.indexOf('Edge/') !== -1;
var IS_MS_BROWSER = IS_EDGE || ua.indexOf('Trident') !== -1;
var IS_IE = IS_MS_BROWSER && !IS_EDGE;
var HAS_NEGATIVE_SCROLL = false;
var WRAPPER_STYLE = {
  overflow: 'hidden',
  flex: '1 1 auto',
  position: 'relative',
  display: 'flex'
};
var VERTICAL = 'vertical';
var HORIZONTAL = 'horizontal';
var SIZES = {
  vertical: 'height',
  horizontal: 'width'
};
var OTHER_ORIENTATION = {
  vertical: 'horizontal',
  horizontal: 'vertical'
};
var InovuaScrollContainer = function (_Component) {
  (0, _inherits2.default)(InovuaScrollContainer, _Component);
  var _super = _createSuper(InovuaScrollContainer);
  function InovuaScrollContainer(props) {
    var _this;
    (0, _classCallCheck2.default)(this, InovuaScrollContainer);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "scrollerScrollSize", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "scrollerClientSize", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "refScroller", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "scrollerNode", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "computeScrollWithThreshold", function (scrollTop, scrollThreshold, scrollMaxDelta) {
      var scrollPercent = function scrollPercent(threshold) {
        threshold = threshold < 0.4 ? 0.4 : threshold;
        threshold = threshold > 1 ? 1 : threshold;
        var scrollMax = scrollMaxDelta ? _this.scrollTopMax - scrollMaxDelta : _this.scrollTopMax;
        var percent = scrollTop / scrollMax;
        if (percent >= threshold) {
          return true;
        }
        return false;
      };
      if (typeof scrollThreshold === 'number') {
        return scrollPercent(scrollThreshold);
      }
      if (typeof scrollThreshold === 'string') {
        if (scrollThreshold.match(/^(\d*(\.\d+)?)%$/)) {
          var threshold = parseFloat(scrollThreshold) / 100;
          return scrollPercent(threshold);
        }
        if (scrollThreshold.match(/^(\d*(\.\d+)?)px$/)) {
          var scrollMax = scrollMaxDelta ? _this.scrollTopMax - scrollMaxDelta : _this.scrollTopMax;
          var _threshold = parseFloat(scrollThreshold);
          if (scrollTop >= scrollMax - _threshold) {
            return true;
          }
        }
      }
      return false;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "applyCSSContainOnScrollUpdate", function (bool) {
      var scrollerNode = _this.getScrollerNode();
      if (scrollerNode) {
        scrollerNode.style.contain = bool ? 'strict' : '';
      }
    });
    (0, _autoBind.default)((0, _assertThisInitialized2.default)(_this), {
      scrollTop: 1,
      scrollLeft: 1,
      scrollTopMax: 1,
      scrollLeftMax: 1
    });
    _this.state = {
      scrollbars: {
        horizontal: false,
        vertical: false
      }
    };
    _this.scrollerResizerRef = function (s) {
      _this._scrollerResizer = s;
    };
    if (props.scrollDebounceDelay > 0) {
      _this.onScrollDebounce = (0, _debounce.default)(_this.onScrollDebounce, props.scrollDebounceDelay, {
        leading: false
      });
    }
    _this.onStop = (0, _debounce.default)(_this.onStop, props.scrollStopDelay, {
      leading: false
    });
    _this.nativeScrollbarWidth = (0, _getScrollbarWidth.default)(_this.props.hideNativeScrollbarIfPossible);
    _this.scroll = {
      scrollTop: 0,
      scrollLeft: 0
    };
    _this.trackSize = {};
    _this.clientSize = {};
    _this.scrollSize = {};
    _this.scrollbars = {};
    _this.scrollerClientSize = {};
    _this.scrollerScrollSize = {};
    _this.scrollbarRef = {
      vertical: function vertical(c) {
        _this.scrollbars.vertical = c;
      },
      horizontal: function horizontal(c) {
        var wasDefined = !!_this.scrollbars.horizontal;
        _this.scrollbars.horizontal = c;
        if (!wasDefined && c && _this.props.rtl) {
          c.setScrollPos(_this.scrollLeftMax);
        }
      }
    };
    _this.refThis = function (c) {
      _this.domNode = c;
    };
    _this.refWrapper = function (c) {
      if (c) {
        _this.setupWrapperPassiveScrollListener(c);
      } else {
        _this.removeWrapperPassiveScrollListener(_this.wrapperNode);
      }
      _this.wrapperNode = c;
    };
    _this.refView = function (v) {
      _this.viewNode = v;
    };
    _this.refScroller = (0, _react.createRef)();
    return _this;
  }
  (0, _createClass2.default)(InovuaScrollContainer, [{
    key: "onWrapperScroll",
    value: function onWrapperScroll(event) {
      var _this2 = this;
      var eventTarget = event.target;
      if (eventTarget != this.wrapperNode) {
        return;
      }
      var scrollLeft = eventTarget.scrollLeft,
        scrollTop = eventTarget.scrollTop;
      if (scrollLeft) {
        eventTarget.scrollLeft = 0;
        raf(function () {
          _this2.scrollLeft += scrollLeft;
        });
      }
      if (scrollTop) {
        eventTarget.scrollTop = 0;
        raf(function () {
          _this2.scrollTop += scrollTop;
        });
      }
    }
  }, {
    key: "setupWrapperPassiveScrollListener",
    value: function setupWrapperPassiveScrollListener(node) {
      node.addEventListener('scroll', this.onWrapperScroll, {
        passive: true
      });
    }
  }, {
    key: "removeWrapperPassiveScrollListener",
    value: function removeWrapperPassiveScrollListener() {
      var node = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.wrapperNode;
      if (node) {
        node.removeEventListener('scroll', this.onWrapperScroll, {
          passive: true
        });
      }
    }
  }, {
    key: "setupPassiveScrollListener",
    value: function setupPassiveScrollListener(node) {
      node.addEventListener('scroll', this.onScroll, {
        passive: true
      });
    }
  }, {
    key: "removePassiveScrollListener",
    value: function removePassiveScrollListener() {
      var node = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getScrollerNode();
      if (node) {
        node.removeEventListener('scroll', this.onScroll, {
          passive: true
        });
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.unmounted = true;
      if (this.props.usePassiveScroll) {
        this.removePassiveScrollListener();
      }
      if (typeof this.props.onWillUnmount === 'function') {
        this.props.onWillUnmount(this);
      }
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      this.unmounted = false;
      this.scrollerNode = this.refScroller.current;
      var scrollerNode = this.getScrollerNode();
      if (this.props.usePassiveScroll) {
        if (scrollerNode) {
          this.setupPassiveScrollListener(scrollerNode);
        } else {
          this.removePassiveScrollListener(scrollerNode);
        }
      }
      if (typeof this.props.onDidMount === 'function') {
        this.props.onDidMount(this, this.getDOMNode(), this._scrollerResizer);
      }
    }
  }, {
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps, nextState) {
      return (0, _shouldComponentUpdate2.default)(this, nextProps, nextState);
    }
  }, {
    key: "ensureNonStaticStyle",
    value: function ensureNonStaticStyle(style, domNode) {
      if (!this.props.forceNonStaticPosition) {
        return style;
      }
      style = style || {};
      var _style = style,
        position = _style.position;
      var nonStatic = position == 'relative' || position == 'absolute';
      if (nonStatic) {
        return style;
      }
      if (domNode) {
        position = globalObject.getComputedStyle(domNode).position;
        nonStatic = position == 'relative' || position == 'absolute';
        if (!nonStatic) {
          return _objectSpread(_objectSpread({}, style), {}, {
            position: 'relative'
          });
        }
      }
      return _objectSpread(_objectSpread({}, style), {}, {
        position: 'relative'
      });
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.props;
      var renderScroller = props.renderScroller,
        renderView = props.renderView,
        Factory = props.factory,
        inlineBlock = props.inlineBlock,
        usePassiveScroll = props.usePassiveScroll,
        theme = props.theme,
        contain = props.contain,
        nativeScroll = props.nativeScroll;
      var style = props.style,
        children = props.children;
      var className = props.className || '';
      style = _objectSpread({
        overflow: 'hidden',
        display: props.display ? props.display : inlineBlock ? 'inline-flex' : 'flex',
        flexFlow: 'column'
      }, this.ensureNonStaticStyle(style, this.domNode));
      if (contain) {
        if (contain === true) {
          style.contain = 'style layout paint';
        } else {
          style.contain = contain;
        }
      }
      var factoryProps = (0, _reactCleanProps.default)(props, InovuaScrollContainer.propTypes);
      className += inlineBlock ? ' inovua-react-scroll-container--inline-block' : ' inovua-react-scroll-container--block';
      className += ' inovua-react-scroll-container';
      if (theme) {
        className += " inovua-react-scroll-container--theme-".concat(theme);
      }
      var nativeScrollbarWidth = this.nativeScrollbarWidth;
      var emptyScrollOffset = this.getEmptyScrollOffset();
      var scrollerStyle = {};
      if (this.props.inertialScroll) {
        scrollerStyle.WebkitOverflowScrolling = 'touch';
      }
      if (this.props.scrollerStyle) {
        scrollerStyle = _objectSpread(_objectSpread({}, scrollerStyle), this.props.scrollerStyle);
      }
      scrollerStyle.overflow = nativeScroll ? 'auto' : 'scroll';
      scrollerStyle.direction = this.props.rtl ? 'rtl' : 'ltr';
      if (!nativeScroll) {
        scrollerStyle[this.props.rtl ? 'marginLeft' : 'marginRight'] = -emptyScrollOffset - nativeScrollbarWidth;
        scrollerStyle.marginBottom = -emptyScrollOffset - nativeScrollbarWidth;
      }
      var viewClassName = "".concat(this.props.viewClassName || '', " inovua-react-scroll-container__view ").concat(!nativeScrollbarWidth ? 'inovua-react-scroll-container__view--zero-width-scrollbar' : '');
      var viewChildren = children;
      var viewStyle = {};
      if (this.props.viewStyle) {
        viewStyle = _objectSpread(_objectSpread({}, viewStyle), this.props.viewStyle);
      }
      if (!emptyScrollOffset || nativeScroll) {
        viewChildren = children;
      } else {
        viewStyle[this.props.rtl ? 'paddingLeft' : 'paddingRight'] = emptyScrollOffset;
        var viewChildrenStyle = {
          paddingBottom: emptyScrollOffset
        };
        if (IS_IE) {
          viewChildrenStyle.display = 'inline-block';
        }
        viewChildren = _react.default.createElement("div", {
          key: "viewChildren",
          style: viewChildrenStyle
        }, children);
      }
      var resizer = !!this.props.resizer;
      var viewProps = {
        ref: this.refView,
        className: viewClassName,
        style: viewStyle,
        children: [viewChildren, resizer && _react.default.createElement(_src.default, {
          ResizeObserver: this.props.ResizeObserver,
          checkResizeDelay: this.props.checkResizeDelay,
          key: "viewResizer",
          useRaf: this.props.rafOnResize,
          onResize: this.onViewResize,
          notifyOnMount: true
        })]
      };
      var view = renderView ? renderView(viewProps) : _react.default.createElement("div", _objectSpread({
        key: "view"
      }, viewProps));
      var scrollerProps = {
        className: "inovua-react-scroll-container__scroller inovua-react-scroll-container__scroller--direction-".concat(this.props.rtl ? 'rtl' : 'ltr'),
        style: scrollerStyle,
        ref: this.refScroller,
        children: [view, resizer ? _react.default.createElement(_src.default, _objectSpread(_objectSpread({
          ref: this.scrollerResizerRef
        }, props.scrollerResizerProps), {}, {
          ResizeObserver: this.props.ResizeObserver,
          checkResizeDelay: this.props.checkResizeDelay,
          useRaf: this.props.rafOnResize,
          key: "scrollerResizer",
          onResize: this.onResize,
          notifyOnMount: true
        })) : null].filter(Boolean)
      };
      if (!usePassiveScroll) {
        scrollerProps.onScroll = this.onScroll;
      }
      if (this.props.avoidRepaintOnScroll) {
        scrollerProps.className += ' inovua-react-scroll-container__scroller--avoid-repaint';
      }
      if (this.props.hideNativeScrollbarIfPossible) {
        scrollerProps.className += ' inovua-react-scroll-container__scroller--hide-native-scrollbar-if-possible';
      }
      if (this.props.dragToScroll) {
        scrollerProps.tabIndex = -1;
      }
      var scroller = renderScroller ? renderScroller(scrollerProps) : _react.default.createElement("div", _objectSpread({}, scrollerProps));
      children = [_react.default.createElement("div", {
        key: "wrapper",
        className: "inovua-react-scroll-container__wrapper",
        ref: this.refWrapper,
        style: this.props.wrapperStyle ? _objectSpread(_objectSpread({}, WRAPPER_STYLE), this.props.wrapperStyle) : WRAPPER_STYLE,
        children: scroller
      })].concat((0, _toConsumableArray2.default)(this.renderScrollbars()), [this.props.before ? _react.default.cloneElement(this.props.before, {
        key: 'before'
      }) : null, this.props.after ? _react.default.cloneElement(this.props.after, {
        key: 'after',
        style: _objectSpread(_objectSpread({}, this.props.after.props.style), {}, {
          bottom: this.state.scrollbars.horizontal && this.props.nativeScroll ? this.nativeScrollbarWidth : 0
        })
      }) : null]);
      if (this.props.showScrollbarsOnOver) {
        factoryProps.onMouseEnter = this.onMouseEnter;
        factoryProps.onMouseLeave = this.onMouseLeave;
      }
      return Factory ? _react.default.createElement(Factory, _objectSpread(_objectSpread({}, factoryProps), {}, {
        ref: this.refThis,
        style: style,
        className: className,
        children: children
      })) : (0, _react.createElement)(props.tagName, _objectSpread(_objectSpread({}, factoryProps), {}, {
        ref: this.refThis,
        style: style,
        className: className,
        children: children
      }));
    }
  }, {
    key: "onMouseEnter",
    value: function onMouseEnter(event) {
      this.mouseEntered = true;
      this.setScrollbarsVisible({
        horizontal: true,
        vertical: true
      });
      if (this.props.onMouseEnter) {
        this.props.onMouseEnter(event);
      }
    }
  }, {
    key: "onMouseLeave",
    value: function onMouseLeave() {
      this.mouseEntered = false;
      this.setScrollbarsVisible({
        horizontal: false,
        vertical: false
      });
      if (this.props.onMouseLeave) {
        this.props.onMouseLeave(event);
      }
    }
  }, {
    key: "onViewResize",
    value: function onViewResize(size) {
      var _this3 = this;
      this.rafSync(function () {
        if (_this3.props.onViewResize) {
          _this3.props.onViewResize(size, _this3);
        }
      });
    }
  }, {
    key: "onResize",
    value: function onResize(size) {
      var _this4 = this;
      if (this.props.rafOnResize) {
        this.rafSync(function () {
          if (_this4.props.onResize) {
            _this4.props.onResize(size, _this4);
          }
        });
      } else {
        this.sync();
        if (this.props.onResize) {
          this.props.onResize(size, this);
        }
      }
    }
  }, {
    key: "getDOMNode",
    value: function getDOMNode() {
      return this.domNode;
    }
  }, {
    key: "scrollTop",
    get: function get() {
      return this.scroll.scrollTop;
    },
    set: function set(value) {
      this.getScrollerNode().scrollTop = value;
    }
  }, {
    key: "scrollLeft",
    get: function get() {
      return this.scroll.scrollLeft;
    },
    set: function set(value) {
      this.getScrollerNode().scrollLeft = value;
    }
  }, {
    key: "getScrollPosition",
    value: function getScrollPosition() {
      return this.scroll;
    }
  }, {
    key: "scrollTopMax",
    get: function get() {
      if (!this.scrollerScrollSize.height || !this.scrollerClientSize.height) {
        this.getScrollbars();
      }
      return this.scrollerScrollSize.height - this.scrollerClientSize.height;
    }
  }, {
    key: "scrollLeftMax",
    get: function get() {
      if (!this.scrollerScrollSize.width || !this.scrollerClientSize.width) {
        this.getScrollbars();
      }
      return this.scrollerScrollSize.width - this.scrollerClientSize.width;
    }
  }, {
    key: "renderScrollbars",
    value: function renderScrollbars() {
      var scrollbars = this.state.scrollbars;
      return [scrollbars.vertical && this.renderScrollbar('vertical', scrollbars), scrollbars.horizontal && this.renderScrollbar('horizontal', scrollbars)];
    }
  }, {
    key: "getEmptyScrollOffset",
    value: function getEmptyScrollOffset() {
      return this.props.emptyScrollOffset == null ? _isMobile.default ? 17 : IS_IE ? 0 : (0, _getScrollbarWidth.default)() : this.props.emptyScrollOffset;
    }
  }, {
    key: "renderScrollbar",
    value: function renderScrollbar(orientation, scrollbars) {
      if (this.checkAllowedScrollbars()[orientation] === false) {
        return null;
      }
      var sizeName = SIZES[orientation];
      var nativeScrollbarWidth = this.nativeScrollbarWidth;
      var oppositeVisible = scrollbars[OTHER_ORIENTATION[orientation]];
      var _this$props = this.props,
        scrollThumbWidth = _this$props.scrollThumbWidth,
        scrollThumbStartEndRespectMargin = _this$props.scrollThumbStartEndRespectMargin,
        scrollThumbMargin = _this$props.scrollThumbMargin;
      var trackSize = this.trackSize[sizeName];
      trackSize -= scrollThumbMargin * (scrollThumbStartEndRespectMargin ? 2 : 1);
      if (oppositeVisible) {
        trackSize -= scrollThumbWidth;
      }
      var emptyScrollOffset = this.getEmptyScrollOffset();
      var scrollbarProps = {
        key: orientation,
        ref: this.scrollbarRef[orientation],
        emptyScrollOffset: emptyScrollOffset,
        nativeScrollbarWidth: nativeScrollbarWidth,
        orientation: orientation,
        visible: !this.props.autoHide,
        autoHide: this.props.autoHide,
        rtl: this.props.rtl,
        oppositeVisible: oppositeVisible,
        scrollThumbStyle: this.props.scrollThumbStyle,
        trackSize: trackSize,
        scrollSize: this.scrollerScrollSize[sizeName],
        clientSize: this.clientSize[sizeName] + emptyScrollOffset,
        dragToScroll: this.props.dragToScroll,
        scrollThumbMinSize: this.props.scrollThumbMinSize,
        scrollThumbRadius: this.props.scrollThumbRadius,
        scrollThumbStartEndRespectMargin: scrollThumbStartEndRespectMargin,
        scrollThumbOverWidth: this.props.scrollThumbOverWidth,
        scrollThumbWidth: scrollThumbWidth,
        scrollThumbMargin: scrollThumbMargin,
        scrollTrackOverTransitionDuration: this.props.scrollTrackOverTransitionDuration,
        showTrackOnDrag: this.props.showTrackOnDrag,
        alwaysShowTrack: this.props.alwaysShowTrack,
        hideTransitionDuration: this.props.hideTransitionDuration,
        showTransitionDuration: this.props.showTransitionDuration,
        onScrollThumbScrollTop: this.onScrollThumbScrollTop,
        onScrollThumbScrollLeft: this.onScrollThumbScrollLeft,
        onStartDrag: this.props.dragToScroll && this.onScrollbarStartDrag,
        onStopDrag: this.props.dragToScroll && this.onScrollbarStopDrag,
        onWheelScroll: this.onScrollbarWheelScroll,
        onPageScroll: this.onScrollbarPageScroll
      };
      return _react.default.createElement(_Scrollbar.default, _objectSpread({}, scrollbarProps));
    }
  }, {
    key: "onScrollbarStartDrag",
    value: function onScrollbarStartDrag(orientation) {
      if (this.props.onScrollbarStartDrag) {
        this.props.onScrollbarStartDrag(orientation);
      }
      if (orientation == VERTICAL && this.props.onVerticalScrollbarStartDrag) {
        this.props.onVerticalScrollbarStartDrag();
      } else if (this.props.onHorizontalScrollbarStartDrag) {
        this.props.onHorizontalScrollbarStartDrag();
      }
    }
  }, {
    key: "onScrollbarStopDrag",
    value: function onScrollbarStopDrag(orientation) {
      this.focus();
      if (this.props.onScrollbarStopDrag) {
        this.props.onScrollbarStopDrag(orientation);
      }
      if (orientation == VERTICAL && this.props.onVerticalScrollbarStopDrag) {
        this.props.onVerticalScrollbarStopDrag();
      } else if (this.props.onHorizontalScrollbarStopDrag) {
        this.props.onHorizontalScrollbarStopDrag();
      }
    }
  }, {
    key: "focus",
    value: function focus() {
      this.getScrollerNode().focus();
    }
  }, {
    key: "onScrollbarWheelScroll",
    value: function onScrollbarWheelScroll(orientation, delta) {
      var node = this.getScrollerNode();
      var horiz = orientation == 'horizontal';
      var scrollPosName = horiz ? 'scrollLeft' : 'scrollTop';
      var currentValue = node[scrollPosName];
      var newValue = currentValue + delta;
      this.smoothScrollTo(newValue, {
        orientation: orientation,
        duration: 10
      });
    }
  }, {
    key: "onScrollbarPageScroll",
    value: function onScrollbarPageScroll(orientation, direction) {
      this.focus();
      this.scrollPage(orientation, direction);
    }
  }, {
    key: "scrollPage",
    value: function scrollPage(orientation, direction) {
      if (!direction) {
        throw new Error('Please provide a scroll direction: 1 or -1!');
      }
      var node = this.getScrollerNode();
      var horiz = orientation == 'horizontal';
      (0, _scrollPage2.default)(node, {
        orientation: orientation,
        direction: direction,
        pageSize: this.clientSize[horiz ? 'width' : 'height'] - 20
      });
    }
  }, {
    key: "scrollHorizontalPage",
    value: function scrollHorizontalPage(direction) {
      this.scrollPage('horizontal', direction);
    }
  }, {
    key: "scrollVerticalPage",
    value: function scrollVerticalPage(direction) {
      this.scrollPage('vertical', direction);
    }
  }, {
    key: "smoothScrollTo",
    value: function smoothScrollTo(newValue, cfg, callback) {
      return (0, _smoothScrollTo2.default)(this.getScrollerNode(), newValue, cfg, callback);
    }
  }, {
    key: "onScrollThumbScrollTop",
    value: function onScrollThumbScrollTop(pos) {
      this.getScrollerNode().scrollTop = pos;
    }
  }, {
    key: "onScrollThumbScrollLeft",
    value: function onScrollThumbScrollLeft(pos) {
      this.getScrollerNode().scrollLeft = pos;
    }
  }, {
    key: "getScrollerNode",
    value: function getScrollerNode() {
      this.scrollerNode = this.scrollerNode || this.refScroller.current || this.getDOMNode().firstChild.firstChild;
      return this.scrollerNode;
    }
  }, {
    key: "getScrollerChild",
    value: function getScrollerChild() {
      this.scrollerChild = this.scrollerChild || this.getScrollerNode().firstChild;
      return this.scrollerChild;
    }
  }, {
    key: "getTrackSize",
    value: function getTrackSize() {
      var node = this.getDOMNode();
      if (this.props.getTrackSize) {
        return this.props.getTrackSize(node);
      }
      return {
        width: node.clientWidth,
        height: node.clientHeight
      };
    }
  }, {
    key: "getScrollSize",
    value: function getScrollSize() {
      if (this.props.getScrollSize) {
        return this.props.getScrollSize(this.getScrollerNode());
      }
      var node = this.getScrollerChild();
      return {
        width: node.scrollWidth,
        height: node.scrollHeight
      };
    }
  }, {
    key: "getClientSize",
    value: function getClientSize() {
      var n = this.getDOMNode();
      if (this.props.getClientSize) {
        return this.props.getClientSize(n);
      }
      var node = n.firstChild;
      return {
        width: node.clientWidth,
        height: node.clientHeight
      };
    }
  }, {
    key: "getScrollbars",
    value: function getScrollbars() {
      this.trackSize = this.getTrackSize();
      var scrollSize = this.scrollSize = this.getScrollSize();
      this.clientSize = this.getClientSize();
      var scrollerNode = this.getScrollerNode();
      this.scrollerClientSize = this.props.getScrollerNodeClientSize ? this.props.getScrollerNodeClientSize(scrollerNode) : {
        height: scrollerNode.clientHeight,
        width: scrollerNode.clientWidth
      };
      var scrollerNodeClientSize = this.scrollerClientSize;
      this.scrollerScrollSize = {
        height: scrollerNode.scrollHeight,
        width: scrollerNode.scrollWidth
      };
      if (this.props.rtl) {}
      var scrollbars = {
        vertical: scrollSize.height > scrollerNodeClientSize.height,
        horizontal: scrollSize.width > scrollerNodeClientSize.width
      };
      return scrollbars;
    }
  }, {
    key: "rafSync",
    value: function rafSync(callback) {
      var _this5 = this;
      raf(function () {
        _this5.sync();
        if (callback) {
          callback();
        }
      });
    }
  }, {
    key: "sync",
    value: function sync() {
      var _this6 = this;
      if (this.unmounted) {
        return;
      }
      var oldScrollbars = this.state.scrollbars;
      var scrollbars = this.getScrollbars();
      this.setState({
        scrollbars: scrollbars
      }, function () {
        if (_this6.props.onScrollbarsChange && (scrollbars.vertical != oldScrollbars.vertical || scrollbars.horizontal != oldScrollbars.horizontal)) {
          _this6.props.onScrollbarsChange(scrollbars);
        }
      });
      if (this.props.rtl) {
        var scrollNode = this.getScrollerNode();
        if (!scrollNode) {
          return;
        }
        this.onScrollDebounce(scrollNode);
      }
    }
  }, {
    key: "hasScrollbar",
    value: function hasScrollbar(orientation) {
      return this.state.scrollbars[orientation];
    }
  }, {
    key: "hasVerticalScrollbar",
    value: function hasVerticalScrollbar() {
      return this.hasScrollbar(VERTICAL);
    }
  }, {
    key: "hasHorizontalScrollbar",
    value: function hasHorizontalScrollbar() {
      return this.hasScrollbar(HORIZONTAL);
    }
  }, {
    key: "onScroll",
    value: function onScroll(event) {
      var eventTarget = event.target;
      if (this.props.onScroll) {
        this.props.onScroll(event);
      }
      var scrollerNode = this.getScrollerNode();
      if (eventTarget != scrollerNode) {
        return;
      }
      this.onScrollDebounce(eventTarget);
    }
  }, {
    key: "onScrollDebounce",
    value: function onScrollDebounce(eventTarget) {
      var _this7 = this;
      var props = this.props;
      var rafOnScroll = props.rafOnScroll,
        cancelPrevScrollRaf = props.cancelPrevScrollRaf,
        avoidScrollTopBrowserLayout = props.avoidScrollTopBrowserLayout,
        scrollMaxDelta = props.scrollMaxDelta,
        scrollThreshold = props.scrollThreshold;
      var rafFn = rafOnScroll ? raf : callFn;
      if (this.scrollRafId && rafOnScroll && cancelPrevScrollRaf) {
        globalObject.cancelAnimationFrame(this.scrollRafId);
      }
      this.scrollRafId = rafFn(function () {
        if (_this7.unmounted) {
          return;
        }
        delete _this7.scrollRafId;
        var onScrollStart = props.onScrollStart,
          onScrollStop = props.onScrollStop,
          autoHide = props.autoHide,
          applyCSSContainOnScroll = props.applyCSSContainOnScroll;
        var startStop = !!(onScrollStart || onScrollStop || autoHide || avoidScrollTopBrowserLayout || applyCSSContainOnScroll);
        var scrollTop;
        var scrollLeft;
        if (!avoidScrollTopBrowserLayout) {
          scrollTop = eventTarget.scrollTop;
          scrollLeft = eventTarget.scrollLeft;
        } else {
          var targetRect = _this7.targetRect || eventTarget.getBoundingClientRect();
          _this7.targetRect = targetRect;
          var viewRect = eventTarget.firstChild.getBoundingClientRect();
          scrollTop = targetRect.top - viewRect.top;
          scrollLeft = targetRect.left - viewRect.left;
        }
        var scrollLeftMax = _this7.scrollerScrollSize.width - _this7.scrollerClientSize.width;
        var scrollPos = {
          scrollTop: scrollTop,
          scrollLeft: scrollLeft,
          scrollLeftMax: scrollLeftMax
        };
        var prevScrollPos = _this7.scroll;
        var prevScrollTop = prevScrollPos.scrollTop,
          prevScrollLeft = prevScrollPos.scrollLeft,
          prevScrollLeftMax = prevScrollPos.scrollLeftMax;
        if (startStop) {
          if (!_this7.scrollStarted) {
            if (applyCSSContainOnScroll) {
              _this7.applyCSSContainOnScrollUpdate(true);
            }
            if (onScrollStart) {
              onScrollStart(scrollPos, prevScrollPos, eventTarget);
            }
          }
        }
        var scrollVertical = false;
        var scrollHorizontal = false;
        if (props.onContainerScroll) {
          props.onContainerScroll(scrollPos, prevScrollPos, eventTarget, {
            scrollerScrollSize: _this7.scrollerScrollSize,
            scrollerClientSize: _this7.scrollerClientSize,
            scrollLeftMax: scrollLeftMax
          });
        }
        var scrollTopChange = scrollTop != prevScrollTop;
        if (scrollTopChange) {
          scrollVertical = true;
          if (_this7.scrollbars.vertical) {
            _this7.scrollbars.vertical.setScrollPos(scrollTop);
          }
          if (props.onContainerScrollVertical) {
            props.onContainerScrollVertical(scrollTop, prevScrollTop, eventTarget);
          }
          if (props.onContainerScrollVerticalMin && scrollTop == 0) {
            props.onContainerScrollVerticalMin(0, eventTarget);
          }
          if (props.onContainerScrollVerticalMax) {
            if (scrollThreshold) {
              var reachScrollMax = _this7.computeScrollWithThreshold(scrollTop, scrollThreshold, scrollMaxDelta);
              if (reachScrollMax) {
                props.onContainerScrollVerticalMax(scrollTop);
              }
            } else if (scrollMaxDelta ? scrollTop >= _this7.scrollTopMax - scrollMaxDelta : scrollTop == _this7.scrollTopMax) {
              props.onContainerScrollVerticalMax(scrollTop);
            }
          }
        }
        var scrollLeftChange = scrollLeft != prevScrollLeft;
        if (_this7.props.rtl && !scrollLeftChange) {
          scrollLeftChange = scrollLeftMax != prevScrollLeftMax;
        }
        if (scrollLeftChange) {
          scrollHorizontal = true;
          if (_this7.scrollbars.horizontal) {
            _this7.scrollbars.horizontal.setScrollPos(scrollLeft);
          }
          if (props.onContainerScrollHorizontal) {
            props.onContainerScrollHorizontal(scrollLeft, prevScrollLeft, eventTarget, scrollLeftMax);
          }
          if (props.onContainerScrollHorizontalMin && scrollLeft == 0) {
            props.onContainerScrollHorizontalMin(0, eventTarget);
          }
          if (props.onContainerScrollHorizontalMax && (scrollMaxDelta ? Math.abs(scrollLeft) >= scrollLeftMax - scrollMaxDelta : Math.abs(scrollLeft) == scrollLeftMax)) {
            props.onContainerScrollHorizontalMax(scrollLeft, eventTarget);
          }
        }
        if (startStop && (scrollTopChange || scrollLeftChange)) {
          if (!_this7.scrollStarted || _this7.scrollStarted.vertical != scrollVertical || _this7.scrollStarted.horizontal != scrollHorizontal) {
            _this7.lazyShowScrollbars();
            _this7.scrollStarted = {
              horizontal: scrollHorizontal,
              vertical: scrollVertical
            };
          }
          _this7.onStop(scrollPos, prevScrollPos, eventTarget);
        }
        _this7.scroll = scrollPos;
      });
    }
  }, {
    key: "getContainerTargetNode",
    value: function getContainerTargetNode() {
      var view = this.viewNode;
      return !this.props.emptyScrollOffset ? view : view.firstChild;
    }
  }, {
    key: "lazyShowScrollbars",
    value: function lazyShowScrollbars() {
      if (this.props.autoHide) {
        setTimeout(this.showScrollbars, this.props.showDelay);
      }
    }
  }, {
    key: "onStop",
    value: function onStop(scrollPos, prevScrollPos, eventTarget) {
      this.scrollStarted = false;
      if (this.props.applyCSSContainOnScroll) {
        this.applyCSSContainOnScrollUpdate(false);
      }
      delete this.targetRect;
      if (this.props.onScrollStop) {
        this.props.onScrollStop(scrollPos, prevScrollPos, eventTarget);
      }
      setTimeout(this.hideScrollbars, this.props.hideDelay);
    }
  }, {
    key: "showScrollbars",
    value: function showScrollbars() {
      if (this.props.autoHide && this.scrollStarted) {
        var _this$scrollbars = this.scrollbars,
          horizontal = _this$scrollbars.horizontal,
          vertical = _this$scrollbars.vertical;
        var _this$scrollStarted = this.scrollStarted,
          scrollHorizontal = _this$scrollStarted.horizontal,
          scrollVertical = _this$scrollStarted.vertical;
        var visibleScrollbars = {};
        if (scrollHorizontal) {
          visibleScrollbars.horizontal = true;
        }
        if (scrollVertical) {
          visibleScrollbars.vertical = true;
        }
        this.setScrollbarsVisible(visibleScrollbars);
      }
    }
  }, {
    key: "checkAllowedScrollbars",
    value: function checkAllowedScrollbars() {
      var result = {
        vertical: true,
        horizontal: true
      };
      var scrollbars = this.props.scrollbars;
      if (scrollbars === false) {
        result.vertical = false;
        result.horizontal = false;
      }
      if ((0, _typeof2.default)(scrollbars) == 'object') {
        if (scrollbars.horizontal === false) {
          result.horizontal = false;
        }
        if (scrollbars.false === false) {
          result.false = false;
        }
      }
      var _this$props2 = this.props,
        shouldAllowScrollbars = _this$props2.shouldAllowScrollbars,
        showScrollbars = _this$props2.showScrollbars;
      if (typeof shouldAllowScrollbars == 'function') {
        var shouldAllow = showScrollbars || shouldAllowScrollbars(this.props, (0, _getScrollbarWidth.default)());
        if (shouldAllow === false || shouldAllow && shouldAllow.horizontal === false) {
          result.horizontal = false;
        }
        if (shouldAllow === false || shouldAllow && shouldAllow.vertical === false) {
          result.vertical = false;
        }
      }
      return result;
    }
  }, {
    key: "setScrollbarsVisible",
    value: function setScrollbarsVisible(scrollbars) {
      var horizontalVisible = scrollbars.horizontal,
        verticalVisible = scrollbars.vertical;
      var _this$scrollbars2 = this.scrollbars,
        horizontal = _this$scrollbars2.horizontal,
        vertical = _this$scrollbars2.vertical;
      if (horizontalVisible !== undefined && horizontal) {
        horizontal.setVisible(horizontalVisible);
      }
      if (verticalVisible !== undefined && vertical) {
        vertical.setVisible(verticalVisible);
      }
    }
  }, {
    key: "hideScrollbars",
    value: function hideScrollbars() {
      if (this.props.showScrollbarsOnOver && this.mouseEntered) {
        return;
      }
      if (this.props.autoHide && !this.scrollStarted) {
        this.setScrollbarsVisible({
          horizontal: false,
          vertical: false
        });
      }
    }
  }]);
  return InovuaScrollContainer;
}(_react.Component);
exports["default"] = InovuaScrollContainer;
InovuaScrollContainer.defaultProps = {
  shouldAllowScrollbars: function shouldAllowScrollbars(props, scrollbarWidth) {
    if (props.nativeScroll) {
      return false;
    }
    if (!scrollbarWidth) {
      return false;
    }
  },
  avoidRepaintOnScroll: true,
  avoidScrollTopBrowserLayout: false,
  applyCSSContainOnScroll: true,
  alwaysShowTrack: false,
  autoHide: true,
  cancelPrevScrollRaf: true,
  contain: false,
  dragToScroll: true,
  forceNonStaticPosition: false,
  hideDelay: 400,
  hideTransitionDuration: '300ms',
  inertialScroll: true,
  inlineBlock: false,
  rafOnScroll: false,
  rafOnResize: false,
  scrollDebounceDelay: 0,
  resizer: true,
  rtl: false,
  scrollStopDelay: 180,
  scrollThumbMargin: 2,
  scrollThumbStartEndRespectMargin: true,
  scrollThumbWidth: 7,
  scrollThumbOverWidth: 10,
  scrollThumbRadius: 3,
  showDelay: 100,
  showScrollbarsOnOver: true,
  showTransitionDuration: '100ms',
  showTrackOnDrag: false,
  scrollTrackOverTransitionDuration: '100ms',
  usePassiveScroll: true,
  tagName: 'div',
  theme: 'default-light'
};
var propTypes = {
  alwaysShowTrack: _propTypes.default.bool,
  avoidScrollTopBrowserLayout: _propTypes.default.bool,
  applyCSSContainOnScroll: _propTypes.default.bool,
  avoidRepaintOnScroll: _propTypes.default.bool,
  autoHide: _propTypes.default.bool,
  cancelPrevScrollRaf: _propTypes.default.bool,
  dragToScroll: _propTypes.default.bool,
  display: _propTypes.default.string,
  checkResizeDelay: _propTypes.default.number,
  emptyScrollOffset: _propTypes.default.number,
  factory: _propTypes.default.func,
  nativeScroll: _propTypes.default.bool,
  forceNonStaticPosition: _propTypes.default.bool,
  hideDelay: _propTypes.default.number,
  getClientSize: _propTypes.default.func,
  getScrollSize: _propTypes.default.func,
  getTrackSize: _propTypes.default.func,
  getScrollerNodeClientSize: _propTypes.default.func,
  hideTransitionDuration: _propTypes.default.string,
  hideNativeScrollbarIfPossible: _propTypes.default.bool,
  inertialScroll: _propTypes.default.bool,
  rtl: _propTypes.default.bool,
  inlineBlock: _propTypes.default.bool,
  rafOnResize: _propTypes.default.bool,
  contain: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),
  onContainerScroll: _propTypes.default.func,
  onContainerScrollHorizontal: _propTypes.default.func,
  onContainerScrollHorizontalMax: _propTypes.default.func,
  onContainerScrollHorizontalMin: _propTypes.default.func,
  onContainerScrollVertical: _propTypes.default.func,
  onContainerScrollVerticalMax: _propTypes.default.func,
  onContainerScrollVerticalMin: _propTypes.default.func,
  onResize: _propTypes.default.func,
  onScroll: _propTypes.default.func,
  onScrollbarsChange: _propTypes.default.func,
  onScrollStart: _propTypes.default.func,
  onScrollStop: _propTypes.default.func,
  onViewResize: _propTypes.default.func,
  rafOnScroll: _propTypes.default.bool,
  scrollDebounceDelay: _propTypes.default.number,
  renderScroller: _propTypes.default.func,
  renderView: _propTypes.default.func,
  resizer: _propTypes.default.bool,
  scrollbars: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.shape({
    vertical: _propTypes.default.bool,
    horizontal: _propTypes.default.bool
  })]),
  usePassiveScroll: _propTypes.default.bool,
  showScrollbarsOnOver: _propTypes.default.bool,
  onScrollbarStartDrag: _propTypes.default.func,
  onScrollbarStopDrag: _propTypes.default.func,
  onHorizontalScrollbarStartDrag: _propTypes.default.func,
  onHorizontalScrollbarStopDrag: _propTypes.default.func,
  onVerticalScrollbarStartDrag: _propTypes.default.func,
  onVerticalScrollbarStopDrag: _propTypes.default.func,
  scrollerStyle: _propTypes.default.shape({}),
  scrollStopDelay: _propTypes.default.number,
  scrollThumbMargin: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  scrollMaxDelta: _propTypes.default.number,
  scrollThumbMinSize: _propTypes.default.number,
  scrollThumbOverWidth: _propTypes.default.number,
  scrollThumbRadius: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  scrollThumbStartEndRespectMargin: _propTypes.default.bool,
  scrollThumbWidth: _propTypes.default.number,
  scrollThumbStyle: _propTypes.default.shape(),
  scrollTrackOverTransitionDuration: _propTypes.default.string,
  showDelay: _propTypes.default.number,
  showTrackOnDrag: _propTypes.default.bool,
  shouldComponentUpdate: _propTypes.default.func,
  shouldAllowScrollbars: _propTypes.default.func,
  showTransitionDuration: _propTypes.default.string,
  tagName: _propTypes.default.string,
  theme: _propTypes.default.string,
  scrollerResizerProps: _propTypes.default.object,
  onDidMount: _propTypes.default.func,
  onWillUnmount: _propTypes.default.func,
  viewClassName: _propTypes.default.string,
  viewStyle: _propTypes.default.shape({}),
  wrapperStyle: _propTypes.default.shape({}),
  ResizeObserver: _propTypes.default.func,
  scrollThreshold: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  showScrollbars: _propTypes.default.bool
};
exports.propTypes = propTypes;
InovuaScrollContainer.propTypes = propTypes;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/react-scroll-container-pro/src/shouldComponentUpdate.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/react-scroll-container-pro/src/shouldComponentUpdate.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "default", ({
  enumerable: true,
  get: function get() {
    return _shouldComponentUpdate.default;
  }
}));
var _shouldComponentUpdate = _interopRequireDefault(__webpack_require__(/*! ../../shouldComponentUpdate */ "./node_modules/@inovua/reactdatagrid-community/packages/shouldComponentUpdate/index.js"));

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-list-pro/src/Row.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-list-pro/src/Row.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.propTypes = exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _shouldComponentUpdate2 = _interopRequireDefault(__webpack_require__(/*! ../../../packages/shouldComponentUpdate */ "./node_modules/@inovua/reactdatagrid-community/packages/shouldComponentUpdate/index.js"));
var _sealedObjectFactory = _interopRequireDefault(__webpack_require__(/*! ./sealedObjectFactory */ "./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-list-pro/src/sealedObjectFactory.js"));
var _getGlobal = __webpack_require__(/*! ../../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var globalObject = (0, _getGlobal.getGlobal)();
var sharedRowProps = (0, _sealedObjectFactory.default)({
  index: null,
  count: null,
  rowHeight: null,
  renderIndex: null,
  empty: null,
  sticky: null,
  rowSpan: null
});
var STR_HIDDEN = 'hidden';
var STR_ABSOLUTE = 'absolute';
var STR_ZERO_PX = '0px';
var STR_VISIBLE = 'visible';
var raf = globalObject.requestAnimationFrame;
var caf = globalObject.cancelAnimationFrame;
var InovuaVirtualListRow = function (_React$Component) {
  (0, _inherits2.default)(InovuaVirtualListRow, _React$Component);
  var _super = _createSuper(InovuaVirtualListRow);
  function InovuaVirtualListRow(props) {
    var _this;
    (0, _classCallCheck2.default)(this, InovuaVirtualListRow);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "mounted", true);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "_appliedIndex", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "refetchNode", true);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "visible", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "index", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "offset", 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "rowSpan", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "oldRowSpan", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "ref", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "row", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "node", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "prepareSetIndex", function () {
      var rowHeightManager = _this.props.rowHeightManager;
      if (rowHeightManager != null) {
        var index = _this.getIndex();
        delete _this.index;
        _this.setIndex(index, undefined, false);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getRowSpan", function () {
      return _this.rowSpan;
    });
    _this.ref = function (r) {
      _this.row = r;
    };
    _this.mounted = true;
    return _this;
  }
  (0, _createClass2.default)(InovuaVirtualListRow, [{
    key: "getInstance",
    value: function getInstance() {
      return this.row;
    }
  }, {
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps, nextState) {
      if (!nextProps.pure) {
        return true;
      }
      return (0, _shouldComponentUpdate2.default)(this, nextProps, nextState);
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      this.mounted = true;
      if (this.props.onMount) {
        this.props.onMount(this);
      }
      var naturalRowHeight = this.props.naturalRowHeight;
      this.fetchNode();
      if (naturalRowHeight && this.node) {
        this.node.style.visibility = STR_HIDDEN;
        return;
      }
      this.updateRowHeight();
      this.updateRowSpan();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.mounted = false;
      if (this.props.onUnmount) {
        this.props.onUnmount(this);
      }
      this.node = null;
      this.info = null;
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (this.refetchNode) {
        this.fetchNode();
        this.refetchNode = false;
      }
      this.updateRowSpan();
    }
  }, {
    key: "updateRowSpan",
    value: function updateRowSpan() {
      if (this.rowSpan !== this.oldRowSpan) {
        this.props.notifyRowSpan(this.getIndex(), this.rowSpan);
        var node = this.getDOMNode();
        node.style.zIndex = this.rowSpan > 1 ? 1 : null;
      }
    }
  }, {
    key: "getDOMNode",
    value: function getDOMNode() {
      if (this.node) {
        return this.node;
      }
      if (!this.row) {
        return null;
      }
      this.node = this.row.domRef ? this.row.domRef.current : this.row;
      return this.node;
    }
  }, {
    key: "fetchNode",
    value: function fetchNode() {
      var node = this.getDOMNode();
      if (!this.props.virtualized) {
        this.prepareSetIndex();
        return;
      }
      if (node && !this.isVisible()) {
        node.style.visibility = STR_HIDDEN;
      }
      var contain = this.props.contain;
      if (node) {
        node.style.position = STR_ABSOLUTE;
        node.style.top = STR_ZERO_PX;
        if (contain) {
          if (contain === true) {
            node.style.contain = 'style layout paint';
          } else {
            node.style.contain = contain;
          }
        }
        this.prepareSetIndex();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
        renderRow = _this$props.renderRow,
        count = _this$props.count,
        renderIndex = _this$props.index,
        showEmptyRows = _this$props.showEmptyRows,
        onKeyDown = _this$props.onKeyDown,
        onFocus = _this$props.onFocus,
        rowHeightManager = _this$props.rowHeightManager,
        sticky = _this$props.sticky,
        contain = _this$props.contain,
        virtualized = _this$props.virtualized,
        useTransformPosition = _this$props.useTransformPosition;
      var index = this.getIndex();
      sharedRowProps.empty = false;
      if (index >= count) {
        if (!showEmptyRows) {
          this.renderResult = false;
          return null;
        }
        sharedRowProps.empty = true;
      }
      var rowHeight = rowHeightManager ? rowHeightManager.getRowHeight(index) : this.props.rowHeight;
      sharedRowProps.rowHeight = rowHeight;
      sharedRowProps.count = count;
      sharedRowProps.index = index;
      sharedRowProps.renderIndex = renderIndex;
      sharedRowProps.rowSpan = 1;
      sharedRowProps.sticky = sticky;
      var row = renderRow(sharedRowProps);
      this.oldRowSpan = this.rowSpan || 1;
      this.rowSpan = sharedRowProps.rowSpan;
      if (this.renderResult === false && row) {
        this.refetchNode = true;
      }
      this.renderResult = !!row;
      if (!row) {
        return null;
      }
      var extraStyle = null;
      if (virtualized) {
        extraStyle = {
          top: 0,
          position: STR_ABSOLUTE,
          backfaceVisibility: STR_HIDDEN,
          visibility: this.isVisible() ? STR_VISIBLE : STR_HIDDEN
        };
        extraStyle[useTransformPosition ? 'transform' : 'top'] = useTransformPosition ? "translate3d(0px, ".concat(this.offset, "px, 0px)") : this.offset;
        if (contain) {
          if (contain === true) {
            extraStyle.contain = 'style layout paint';
          } else {
            extraStyle.contain = contain;
          }
        }
        if (row.props && row.props.style) {
          extraStyle = _objectSpread(_objectSpread({}, row.props.style), extraStyle);
        }
      }
      return (0, _react.cloneElement)(row, {
        key: this.props.index,
        ref: this.ref,
        onFocus: onFocus ? onFocus.bind(null, index) : null,
        onKeyDown: onKeyDown ? onKeyDown.bind(null, index) : null,
        style: extraStyle
      });
    }
  }, {
    key: "updateRowHeight",
    value: function updateRowHeight(config) {
      var _this2 = this;
      var _this$props2 = this.props,
        naturalRowHeight = _this$props2.naturalRowHeight,
        rowHeightManager = _this$props2.rowHeightManager;
      if (naturalRowHeight) {
        var index = this.index;
        var getDOMHeight = function getDOMHeight() {
          var _this2$node;
          return ((_this2$node = _this2.node) === null || _this2$node === void 0 ? void 0 : _this2$node.scrollHeight) || 0;
        };
        var rowHeight = rowHeightManager.getRowHeight(index);
        var offsetHeight = getDOMHeight();
        var height = offsetHeight;
        if (rowHeight != offsetHeight) {
          var info = {
            index: index,
            height: height
          };
          if (!offsetHeight) {
            return;
          }
          var useRaf = config && config.useRaf !== undefined ? !!config.useRaf : true;
          if (useRaf) {
            rowHeightManager.setRowHeightLazy(info);
          } else {
            rowHeightManager.setRowHeight(info);
          }
        }
      }
    }
  }, {
    key: "update",
    value: function update(callback) {
      var _this3 = this;
      if (this.mounted === false) {
        return;
      }
      if (this.props.rowHeightManager != null) {
        this.forceUpdate(function () {
          _this3.updateRowHeight();
          if (typeof callback === 'function') {
            callback();
          }
        });
        return;
      }
      this.forceUpdate(function () {
        if (typeof callback == 'function') {
          callback(_this3.getInfo(true));
        }
      });
    }
  }, {
    key: "setVisible",
    value: function setVisible(value, callback) {
      if (this.mounted === false) {
        return;
      }
      this.visible = value;
      if (this.node) {
        this.node.style.visibility = value ? STR_VISIBLE : STR_HIDDEN;
      }
      if (typeof callback == 'function') {
        callback(this.getInfo());
      }
    }
  }, {
    key: "setRowOffset",
    value: function setRowOffset() {
      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.index;
      var _this$props3 = this.props,
        rowHeightManager = _this$props3.rowHeightManager,
        useTransformPosition = _this$props3.useTransformPosition;
      if (!this.node) {
        return;
      }
      if (rowHeightManager) {
        var rowOffset = rowHeightManager.getRowOffset(index);
        this.offset = rowOffset;
        if (useTransformPosition) {
          this.node.style.transform = "translate3d(0px, ".concat(rowOffset, "px, 0px)");
        } else {
          this.node.style.top = "".concat(rowOffset, "px");
        }
      }
    }
  }, {
    key: "setIndex",
    value: function setIndex(index, callback) {
      var useRaf = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      var force = arguments.length > 3 ? arguments[3] : undefined;
      if (this.mounted === false) {
        return;
      }
      if (this.index === index && this.isVisible() && !force) {
        if (callback) {
          callback();
        }
        return;
      }
      this.index = index;
      this._appliedIndex = undefined;
      this.doSetIndex(index, callback, useRaf);
    }
  }, {
    key: "doSetIndex",
    value: function doSetIndex(index, callback, useRaf) {
      var _this4 = this;
      var sameIndex = this._appliedIndex === index;
      this._appliedIndex = index;
      if (useRaf !== true) {
        this.setVisible(true);
        this.setRowOffset(index);
        if (sameIndex) {
          if (callback) {
            callback();
          }
          return;
        }
        this.update(callback);
      } else {
        if (this.setIndexRafId) {
          caf(this.setIndexRafId);
        }
        this.setIndexRafId = raf(function () {
          delete _this4.setIndexRafId;
          _this4.setVisible(true);
          _this4.setRowOffset(index);
          if (sameIndex) {
            if (callback) {
              callback();
            }
            return;
          }
          _this4.update(callback);
        });
      }
    }
  }, {
    key: "isVisible",
    value: function isVisible() {
      return this.visible !== false;
    }
  }, {
    key: "setOffset",
    value: function setOffset(offset) {
      this.offset = offset;
      if (this.node) {
        var nodeStyle = this.node.style;
        nodeStyle.position = STR_ABSOLUTE;
        nodeStyle.top = STR_ZERO_PX;
        nodeStyle.backfaceVisibility = STR_HIDDEN;
        if (this.props.useTransformPosition) {
          nodeStyle.transform = "translate3d(0px, ".concat(offset, "px, 0px)");
        } else {
          nodeStyle.top = "".concat(offset, "px");
        }
      }
    }
  }, {
    key: "getIndex",
    value: function getIndex() {
      return this.index === undefined ? this.props.index : this.index;
    }
  }, {
    key: "getInfo",
    value: function getInfo(updateHeight) {
      if (this.mounted === false) {
        return this.info;
      }
      if (!this.info) {
        this.info = (0, _sealedObjectFactory.default)({
          row: null,
          node: null,
          height: null,
          index: null,
          key: null,
          offset: null
        });
      }
      this.info.row = this;
      this.info.node = this.node;
      this.info.height = updateHeight || this.height === undefined ? this.node ? this.node.offsetHeight : 0 : this.height;
      this.info.index = this.getIndex();
      this.info.key = this.props.index;
      this.info.offset = this.props.virtualized ? this.offset : this.node ? this.node.offsetTop : 0;
      return this.info;
    }
  }]);
  return InovuaVirtualListRow;
}(_react.default.Component);
exports["default"] = InovuaVirtualListRow;
InovuaVirtualListRow.defaultProps = {
  pure: false,
  useTransformPosition: false
};
var propTypes = {
  pure: _propTypes.default.bool,
  naturalRowHeight: _propTypes.default.bool,
  rowHeightManager: _propTypes.default.object,
  count: _propTypes.default.number,
  contain: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),
  index: _propTypes.default.number.isRequired,
  onRowHeightChange: _propTypes.default.func,
  renderRow: _propTypes.default.func.isRequired,
  useTransformPosition: _propTypes.default.bool,
  virtualized: _propTypes.default.bool
};
exports.propTypes = propTypes;
InovuaVirtualListRow.propTypes = propTypes;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-list-pro/src/RowHeightManager.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-list-pro/src/RowHeightManager.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js"));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _binarySearch = _interopRequireDefault(__webpack_require__(/*! ../../../packages/binary-search */ "./node_modules/@inovua/reactdatagrid-community/packages/binary-search/index.js"));
var _eventemitter = _interopRequireDefault(__webpack_require__(/*! eventemitter3 */ "./node_modules/eventemitter3/index.js"));
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var sortAsc = function sortAsc(a, b) {
  return a - b;
};
var RowHeightManager = function (_EventEmitter) {
  (0, _inherits2.default)(RowHeightManager, _EventEmitter);
  var _super = _createSuper(RowHeightManager);
  function RowHeightManager(rowHeight) {
    var _this;
    var rowHeightsMap = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var config = arguments.length > 2 ? arguments[2] : undefined;
    (0, _classCallCheck2.default)(this, RowHeightManager);
    _this = _super.call(this);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "rowHeight", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "rowHeightFn", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "map", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "heights", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "indexes", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "offsets", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "minHeight", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "maxHeight", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "indexesToOffsets", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "offsetsToIndexes", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "lazyRowHeightRafId", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "rowToOffsetCache", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "cache", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "__id", '');
    _this.rowHeight = (0, _typeof2.default)(rowHeight) === 'object' ? typeof rowHeight.rowHeight === 'number' ? rowHeight.rowHeight : rowHeight.minRowHeight || 40 : 40;
    _this.map = rowHeightsMap;
    if ((0, _typeof2.default)(rowHeight) === 'object' && typeof rowHeight.rowHeight === 'function') {
      _this.rowHeightFn = rowHeight.rowHeight;
    }
    if (!config || config.cache !== false) {
      _this.setCache({});
    }
    _this.index(_this.rowHeight, rowHeightsMap);
    return _this;
  }
  (0, _createClass2.default)(RowHeightManager, [{
    key: "setRowHeight",
    value: function setRowHeight(_ref) {
      var index = _ref.index,
        height = _ref.height,
        defaultRowHeight = _ref.defaultRowHeight,
        skipIndex = _ref.skipIndex;
      if (this.map[index] === height && !defaultRowHeight) {
        console.warn('NOOP');
        return;
      }
      this.map[index] = height;
      if (defaultRowHeight) {
        this.rowHeight = defaultRowHeight;
      }
      if (this.cache) {
        this.setCache({});
      }
      if (!skipIndex) {
        this.index();
      }
    }
  }, {
    key: "indexRaf",
    value: function indexRaf() {
      var _this2 = this;
      if (this.lazyRowHeightRafId) {
        cancelAnimationFrame(this.lazyRowHeightRafId);
        this.lazyRowHeightRafId = 0;
      }
      this.lazyRowHeightRafId = requestAnimationFrame(function () {
        _this2.lazyRowHeightRafId = 0;
        _this2.index();
      });
    }
  }, {
    key: "setRowHeightLazy",
    value: function setRowHeightLazy(_ref2) {
      var index = _ref2.index,
        height = _ref2.height,
        defaultRowHeight = _ref2.defaultRowHeight;
      this.setRowHeight({
        index: index,
        height: height,
        defaultRowHeight: defaultRowHeight || this.rowHeight,
        skipIndex: true
      });
      this.indexRaf();
    }
  }, {
    key: "setHeights",
    value: function setHeights(map) {
      this.map = map;
      if (this.cache) {
        this.setCache({});
      }
      this.index(this.rowHeight, this.map);
    }
  }, {
    key: "setValues",
    value: function setValues(_ref3) {
      var defaultRowHeight = _ref3.defaultRowHeight,
        map = _ref3.map;
      if (defaultRowHeight) {
        this.rowHeight = defaultRowHeight;
      }
      if (this.map) {
        this.map = map;
      }
      if (this.cache) {
        this.setCache({});
      }
      this.index(this.rowHeight, this.map);
    }
  }, {
    key: "setDefaultRowHeight",
    value: function setDefaultRowHeight(defaultRowHeight) {
      this.rowHeight = defaultRowHeight;
      if (this.cache) {
        this.setCache({});
      }
      this.index(this.rowHeight, this.map);
    }
  }, {
    key: "index",
    value: function index() {
      var _this3 = this;
      var defaultRowHeight = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.rowHeight;
      var map = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.map;
      this.rowToOffsetCache = {};
      var indexes = map ? Object.keys(map).map(function (x) {
        return +x;
      }).sort(sortAsc) : [];
      this.minHeight = defaultRowHeight;
      this.maxHeight = defaultRowHeight;
      this.__id = JSON.stringify(this.heights);
      this.heights = indexes.map(function (index) {
        var height = map[index];
        if (height > _this3.maxHeight) {
          _this3.maxHeight = height;
        }
        if (height < _this3.minHeight) {
          _this3.minHeight = height;
        }
        return [index, height];
      });
      var prev = 0;
      this.indexes = indexes;
      this.offsets = indexes.map(function (index, i) {
        var prevIndex = i === 0 ? -1 : indexes[i - 1];
        var prevIndexRowHeight = map[prevIndex] || 0;
        return prev = prev + (index - (prevIndex + 1)) * defaultRowHeight + prevIndexRowHeight;
      });
      this.offsetsToIndexes = {};
      this.indexesToOffsets = this.offsets.reduce(function (acc, offset, i) {
        var index = indexes[i];
        acc[index] = offset;
        _this3.offsetsToIndexes[offset] = index;
        return acc;
      }, {});
      var __id = JSON.stringify(this.heights);
      if (__id === this.__id) {
        return;
      }
      this.afterIndex();
    }
  }, {
    key: "afterIndex",
    value: function afterIndex() {
      this.emit('index');
    }
  }, {
    key: "setCache",
    value: function setCache(cache) {
      this.cache = cache;
    }
  }, {
    key: "getTotalSize",
    value: function getTotalSize(count) {
      if (count == null) {
        throw new Error('Specify a count when calling getTotalSize!');
      }
      if (count <= 0 || isNaN(count)) {
        return 0;
      }
      var sum = 0;
      for (var i = 0; i < count; i++) {
        var value = this.map[i];
        sum += value === undefined ? this.rowHeight : value;
      }
      return sum;
    }
  }, {
    key: "getDefaultRowHeight",
    value: function getDefaultRowHeight() {
      return this.rowHeight;
    }
  }, {
    key: "getMinHeight",
    value: function getMinHeight() {
      return this.minHeight || this.rowHeight;
    }
  }, {
    key: "getMaxHeight",
    value: function getMaxHeight() {
      return this.maxHeight || this.rowHeight;
    }
  }, {
    key: "getRowOffset",
    value: function getRowOffset(index) {
      var offset = this.indexesToOffsets[index];
      if (offset !== undefined) {
        return offset;
      }
      offset = this.rowToOffsetCache[index];
      if (offset !== undefined) {
        return offset;
      }
      var insertPos = ~(0, _binarySearch.default)(this.indexes, index, sortAsc);
      var closestIndex = this.indexes[insertPos - 1];
      if (insertPos === 0) {
        offset = index * this.rowHeight;
      } else {
        var closestOffset = this.indexesToOffsets[closestIndex];
        offset = closestOffset + this.map[closestIndex] + (index - closestIndex - 1) * this.rowHeight;
      }
      this.rowToOffsetCache[index] = offset;
      return offset;
    }
  }, {
    key: "getRowHeight",
    value: function getRowHeight(index, fn) {
      var value = this.map[index];
      if (value !== undefined) {
        return value;
      }
      if (fn) {
        return fn();
      }
      return this.rowHeight;
    }
  }, {
    key: "getRowAt",
    value: function getRowAt(offset) {
      if (offset < 0) {
        return 0;
      }
      var roundedOffset = Math.floor(offset / this.rowHeight) * this.rowHeight;
      var result = this.cache ? this.cache[roundedOffset] : undefined;
      if (result !== undefined) {
        return result;
      }
      if (!this.map) {
        result = roundedOffset / this.rowHeight;
        if (this.cache) {
          this.cache[roundedOffset] = result;
        }
        return result;
      }
      var index = (0, _binarySearch.default)(this.offsets, offset, sortAsc);
      if (index < 0) {
        var insertPos = ~index;
        var beforeKnownIndex = this.indexes[insertPos - 1];
        if (beforeKnownIndex !== undefined) {
          var beforeKnownOffset = this.indexesToOffsets[beforeKnownIndex];
          var nextOffset = beforeKnownOffset + this.map[beforeKnownIndex];
          if (offset < nextOffset) {
            result = beforeKnownIndex;
          } else {
            result = beforeKnownIndex + Math.floor((offset - nextOffset) / this.rowHeight) + 1;
          }
        } else {
          result = Math.floor(offset / this.rowHeight);
        }
      } else {
        result = this.indexes[index];
      }
      if (this.cache) {
        this.cache[roundedOffset] = result;
      }
      return result;
    }
  }]);
  return RowHeightManager;
}(_eventemitter.default);
var _default = RowHeightManager;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-list-pro/src/StickyRowsContainer.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-list-pro/src/StickyRowsContainer.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = exports.StickyRowsContainerClassName = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _hasSticky = __webpack_require__(/*! ../../../packages/hasSticky */ "./node_modules/@inovua/reactdatagrid-community/packages/hasSticky/index.js");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var StickyRowsContainerClassName = 'InovuaReactDataGrid__virtual-list-sticky-rows-container';
exports.StickyRowsContainerClassName = StickyRowsContainerClassName;
var StickyRowsContainer = function StickyRowsContainer(props) {
  var latestProps = (0, _react.useRef)(props);
  var _useState = (0, _react.useState)(null),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    content = _useState2[0],
    setContent = _useState2[1];
  var currentHeightRef = (0, _react.useRef)(0);
  var domNodeRef = (0, _react.useRef)(null);
  var nonEmptyRowElementsRefRef = (0, _react.useRef)(null);
  var rowElementsRef = (0, _react.useRef)(null);
  var renderedRowsRef = (0, _react.useRef)([]);
  var scrollTopRef = (0, _react.useRef)(0);
  latestProps.current = props;
  var setEnteringRow = function setEnteringRow(_ref) {
    var scrollTop = _ref.scrollTop,
      enteringRow = _ref.enteringRow;
    if (enteringRow == null) {
      scrollTopRef.current = scrollTop;
      var domNode = domNodeRef.current;
      (0, _toConsumableArray2.default)(domNode.children).forEach(function (rowNode) {
        rowNode.style.transform = "translate3d(0px, 0px, 0px)";
      });
      return;
    }
    scrollTopRef.current = scrollTop;
    var rowsToTranslateIndexes = [];
    var rowsToTranslate = renderedRowsRef.current.filter(function (r, i) {
      var result = r.scale >= enteringRow.scale;
      if (result) {
        rowsToTranslateIndexes.push(i);
      }
      return result;
    });
    rowsToTranslate.forEach(function (_rowToTranslate, i) {
      var rowToTranslateIndex = rowsToTranslateIndexes[i];
      var domNode = domNodeRef.current;
      var rowNode = domNode.children[rowToTranslateIndex];
      if (rowNode) {
        var y = props.rowHeightManager.getRowOffset(enteringRow.index) - scrollTop - currentHeightRef.current;
        rowNode.style.transform = "translate3d(0px, ".concat(y, "px, 0px)");
      }
    });
  };
  var setStickyRows = function setStickyRows(content, rows, config) {
    var domNode = domNodeRef.current;
    var renderedContent = content;
    if (content == null) {
      renderedContent = nonEmptyRowElementsRefRef.current;
      if (domNode && rowElementsRef.current) {
        domNode.style.opacity = '0';
        domNode.style.pointerEvents = 'none';
      }
    } else {
      if (domNode && !rowElementsRef.current) {
        domNode.style.opacity = '1';
        domNode.style.pointerEvents = 'all';
      }
    }
    setContent(renderedContent);
    if (content) {
      nonEmptyRowElementsRefRef.current = content;
    }
    renderedRowsRef.current = rows;
    rowElementsRef.current = content;
    requestAnimationFrame(function () {
      setEnteringRow(config);
    });
  };
  var getCurrentVisibleStickyRowsCount = function getCurrentVisibleStickyRowsCount() {
    return rowElementsRef.current ? rowElementsRef.current.length : 0;
  };
  (0, _react.useLayoutEffect)(function () {
    var domNode = domNodeRef.current;
    var totalHeight = 0;
    if (domNode && domNode.children) {
      (0, _toConsumableArray2.default)(domNode.children).forEach(function (c, i) {
        c.style.zIndex = 1000 - i;
        totalHeight += c.offsetHeight;
      });
      currentHeightRef.current = totalHeight;
    }
  }, [content]);
  (0, _react.useLayoutEffect)(function () {
    if (props.handle) {
      props.handle({
        setStickyRows: setStickyRows,
        getCurrentVisibleStickyRowsCount: getCurrentVisibleStickyRowsCount,
        setEnteringRow: setEnteringRow
      });
    }
    return function () {
      var props = latestProps.current;
      if (props && typeof props.handle === 'function') {
        props.handle(null);
      }
    };
  }, []);
  return _react.default.createElement("div", {
    className: StickyRowsContainerClassName,
    ref: domNodeRef,
    style: (0, _defineProperty2.default)({
      position: _hasSticky.sticky,
      top: 0,
      left: 0,
      right: 0,
      height: 0,
      zIndex: 1,
      contain: 'layout'
    }, props.rtl ? 'transform' : '', props.rtl ? "translate3d(".concat(props.stickyOffset, "px, 0px, 0px)") : '')
  }, content);
};
var _default = _react.default.memo(StickyRowsContainer);
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-list-pro/src/VirtualList.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-list-pro/src/VirtualList.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "RowHeightManager", ({
  enumerable: true,
  get: function get() {
    return _RowHeightManager.default;
  }
}));
exports["default"] = void 0;
Object.defineProperty(exports, "getScrollbarWidth", ({
  enumerable: true,
  get: function get() {
    return _src.getScrollbarWidth;
  }
}));
exports.propTypes = void 0;
Object.defineProperty(exports, "shouldComponentUpdate", ({
  enumerable: true,
  get: function get() {
    return _shouldComponentUpdate2.default;
  }
}));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _contains = _interopRequireDefault(__webpack_require__(/*! ../../../packages/contains */ "./node_modules/@inovua/reactdatagrid-community/packages/contains/index.js"));
var _reactCleanProps = _interopRequireDefault(__webpack_require__(/*! ../../../packages/react-clean-props */ "./node_modules/@inovua/reactdatagrid-community/packages/react-clean-props/index.js"));
var _resizeObserverPolyfill = _interopRequireDefault(__webpack_require__(/*! resize-observer-polyfill */ "./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js"));
var _src = _interopRequireWildcard(__webpack_require__(/*! ../../../packages/react-virtual-scroll-container-pro/src */ "./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-scroll-container-pro/src/index.js"));
var _uglified = _interopRequireDefault(__webpack_require__(/*! ../../../packages/uglified */ "./node_modules/@inovua/reactdatagrid-community/packages/uglified/index.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../packages/join */ "./node_modules/@inovua/reactdatagrid-community/packages/join/index.js"));
var _binarySearch = _interopRequireDefault(__webpack_require__(/*! ../../../packages/binary-search */ "./node_modules/@inovua/reactdatagrid-community/packages/binary-search/index.js"));
var _RowHeightManager = _interopRequireDefault(__webpack_require__(/*! ./RowHeightManager */ "./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-list-pro/src/RowHeightManager.js"));
var _getFocusableElements = _interopRequireDefault(__webpack_require__(/*! ../../getFocusableElements */ "./node_modules/@inovua/reactdatagrid-community/packages/getFocusableElements/index.js"));
var _renderRows2 = _interopRequireDefault(__webpack_require__(/*! ./renderRows */ "./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-list-pro/src/renderRows.js"));
var _shouldComponentUpdate2 = _interopRequireDefault(__webpack_require__(/*! ../../../packages/shouldComponentUpdate */ "./node_modules/@inovua/reactdatagrid-community/packages/shouldComponentUpdate/index.js"));
var _getVisibleRange = _interopRequireDefault(__webpack_require__(/*! ./getVisibleRange */ "./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-list-pro/src/getVisibleRange.js"));
var _StickyRowsContainer = _interopRequireDefault(__webpack_require__(/*! ./StickyRowsContainer */ "./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-list-pro/src/StickyRowsContainer.js"));
var _lodash = _interopRequireDefault(__webpack_require__(/*! lodash.throttle */ "./node_modules/lodash.throttle/index.js"));
var _getGlobal = __webpack_require__(/*! ../../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var globalObject = (0, _getGlobal.getGlobal)();
var sortAsc = function sortAsc(a, b) {
  return a - b;
};
var emptyFn = function emptyFn() {};
var emptyObject = Object.freeze ? Object.freeze({}) : {};
var ua = globalObject.navigator ? globalObject.navigator.userAgent : '';
var IS_EDGE = ua.indexOf('Edge/') !== -1;
var IS_FF = ua.toLowerCase().indexOf('firefox') > -1;
var BASE_CLASS_NAME = 'inovua-react-virtual-list';
var ResizeObserver = globalObject.ResizeObserver || _resizeObserverPolyfill.default;
var sum = function sum(a, b) {
  return a + b;
};
var unique = function unique(arr) {
  if (Set) {
    return (0, _toConsumableArray2.default)(new Set(arr));
  }
  return Object.keys(arr.reduce(function (acc, item) {
    acc[item] = true;
    return acc;
  }, {}));
};
var InovuaVirtualList = function (_Component) {
  (0, _inherits2.default)(InovuaVirtualList, _Component);
  var _super = _createSuper(InovuaVirtualList);
  function InovuaVirtualList(_props) {
    var _this;
    (0, _classCallCheck2.default)(this, InovuaVirtualList);
    _this = _super.call(this, _props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "size", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "rows", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "rowSpans", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "rowCoveredBy", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "scrollTopPos", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getContainerNode", function () {
      return _this.containerNode;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderScroller", function (props) {
      var offset = _this.getEmptyScrollOffset() || 0;
      if (_this.props.nativeScroll) {
        offset = 0;
      }
      var style = _objectSpread(_objectSpread({}, props.style), {}, {
        overscrollBehavior: _this.props.overscrollBehavior || 'none',
        backfaceVisibility: 'hidden',
        WebkitOverscrollBehavior: _this.props.overscrollBehavior || 'none',
        right: -offset,
        bottom: -offset
      });
      props.style = style;
      if (_this.props.showEmptyRows && _this.props.count < _this.strictVisibleCount && (0, _src.getScrollbarWidth)() && _this.props.nativeScroll) {
        style.overflowY = 'hidden';
      }
      var result;
      if (_this.props.renderScroller) {
        result = _this.props.renderScroller(props);
      }
      if (result === undefined) {
        result = _react.default.createElement("div", _objectSpread({}, props));
      }
      return result;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderScrollerSpacerOnNaturalRowHeight", function (spacerProps) {
      spacerProps.style.height = _this.getScrollHeight();
      if (_this.props.renderScrollerSpacer) {
        _this.props.renderScrollerSpacer(spacerProps);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderView", function (props) {
      var offset = _this.getEmptyScrollOffset() || 0;
      if (_this.props.nativeScroll) {
        offset = 0;
      }
      var minHeight = offset ? "calc(100% - ".concat(offset, "px)") : '100%';
      var maxWidth = offset ? "calc(100% - ".concat(offset, "px)") : '100%';
      if (_this.props.rtl && !_this.props.nativeScroll) {
        maxWidth = '100%';
      }
      var style = _objectSpread(_objectSpread({}, props.style), {}, {
        minHeight: minHeight,
        maxWidth: maxWidth
      });
      if (_this.props.rtl && !(0, _src.getScrollbarWidth)()) {
        style.transform = "translateX(".concat(-offset, "px)");
      }
      var viewProps = _objectSpread(_objectSpread({}, props), {}, {
        style: style,
        'data-name': 'view'
      });
      var result;
      if (_this.props.renderView) {
        result = _this.props.renderView(viewProps);
      }
      if (result === undefined) {
        result = _react.default.createElement("div", _objectSpread({}, viewProps));
      }
      return result;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getTotalRowHeight", function () {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props;
      return props.rowHeightManager ? props.rowHeightManager.getTotalSize(props.count) : props.count * props.rowHeight;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getScrollHeight", function () {
      var SCROLLBAR_WIDTH = (0, _src.getScrollbarWidth)();
      var offset = SCROLLBAR_WIDTH ? 0 : _this.getEmptyScrollOffset() || 0;
      if (_this.props.nativeScroll) {
        offset = 0;
      }
      var height = _this.getTotalRowHeight();
      return height + offset;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getScrollSize", function (node) {
      var res = {
        width: node.scrollWidth,
        height: _this.getScrollHeight()
      };
      return res;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getClientSize", function (n) {
      var node = n.firstChild;
      var SCROLLBAR_WIDTH = (0, _src.getScrollbarWidth)();
      var offset = SCROLLBAR_WIDTH ? 0 : _this.getEmptyScrollOffset() || 0;
      if (_this.props.nativeScroll) {
        offset = 0;
      }
      return {
        width: node.clientWidth + offset,
        height: node.clientHeight + offset
      };
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "initSizes", function () {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props;
      var minRowHeight = props.minRowHeight,
        rowHeightManager = props.rowHeightManager;
      if (rowHeightManager) {
        return;
      }
      var count = _this.getMaxRenderCount(props);
      var rowOffsets = [];
      var totalHeight = 0;
      var rowHeights = (0, _toConsumableArray2.default)(Array(count)).map(function () {
        rowOffsets.push(totalHeight);
        totalHeight += minRowHeight;
        return minRowHeight;
      });
      rowOffsets[count] = totalHeight;
      _this.rowOffsets = rowOffsets;
      _this.rowHeights = rowHeights;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setHeightForRows", function (indexes, heights) {
      if (!indexes.length || !heights.length) {
        return 0;
      }
      if (_this.props.showWarnings) {
        if (indexes.length != heights.length) {
          console.warn('setHeightForRows signature mismatch!!!');
          return 0;
        }
        indexes.forEach(function (_, i) {
          if (i > 0) {
            var _diff = indexes[i] - indexes[i - 1];
            if (_diff !== 1) {
              console.warn('setHeightForRows should be called with successive indexes!', indexes);
            }
          }
        });
      }
      var _assertThisInitialize = (0, _assertThisInitialized2.default)(_this),
        rowHeights = _assertThisInitialize.rowHeights,
        rowOffsets = _assertThisInitialize.rowOffsets;
      var count = _this.props.count;
      var diff = 0;
      indexes.forEach(function (index, i) {
        var height = heights[i] || 0;
        var oldHeight = rowHeights[index] || 0;
        rowHeights[index] = height;
        rowOffsets[index] = diff + (rowOffsets[index] || 0);
        diff += height - oldHeight;
      });
      for (var i = indexes[indexes.length - 1] + 1; i <= count; i++) {
        rowOffsets[i] = diff + (rowOffsets[i] || 0);
      }
      return diff;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderSizer", function (scrollHeight) {
      var _this$props = _this.props,
        renderSizer = _this$props.renderSizer,
        minRowWidth = _this$props.minRowWidth,
        emptyScrollOffset = _this$props.emptyScrollOffset,
        rowHeightManager = _this$props.rowHeightManager,
        showEmptyRows = _this$props.showEmptyRows,
        virtualized = _this$props.virtualized;
      var SCROLLBAR_WIDTH = (0, _src.getScrollbarWidth)();
      var offset = SCROLLBAR_WIDTH ? 0 : emptyScrollOffset || 0;
      if (!virtualized) {
        scrollHeight = 0;
      }
      var minHeight = scrollHeight + offset;
      if (showEmptyRows) {
        minHeight = Math.max(minHeight, _this.strictVisibleCount * rowHeightManager.getDefaultRowHeight());
      }
      var style = {
        minHeight: isNaN(minHeight) ? '' : minHeight,
        minWidth: minRowWidth ? minRowWidth + offset : 0
      };
      var result;
      if (renderSizer) {
        result = renderSizer({
          style: style
        }, scrollHeight);
      }
      if (result === undefined) {
        result = _react.default.createElement("div", {
          key: "sizer",
          "data-name": "sizer",
          style: style
        });
      }
      return result;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderRowContainer", function () {
      var props = {
        key: 'rowContainer',
        className: "".concat(BASE_CLASS_NAME, "__row-container"),
        ref: _this.refContainerNode,
        children: _this.renderRows()
      };
      var result;
      if (_this.props.renderRowContainer) {
        result = _this.props.renderRowContainer(props);
      }
      if (result === undefined) {
        result = _react.default.createElement("div", _objectSpread({}, props));
      }
      return result;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onViewResize", function () {
      requestAnimationFrame(function () {
        _this.rafSync();
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onScrollbarsChange", function (_ref) {
      var vertical = _ref.vertical,
        horizontal = _ref.horizontal;
      if (!vertical && _this.scrollTopPos || !horizontal && _this.scrollLeftPos) {
        _this.applyScrollStyle({
          scrollTop: !vertical ? 0 : _this.scrollTopPos,
          scrollLeft: !horizontal ? 0 : _this.scrollLeftPos
        });
      }
      if (_this.props.onScrollbarsChange) {
        _this.props.onScrollbarsChange({
          vertical: vertical,
          horizontal: horizontal
        });
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onRowUnmount", function (row) {
      if (!_this.rows) {
        return;
      }
      var currentRowIndex = row.getIndex();
      var isFound = _this.mapping[currentRowIndex];
      if (!isFound) {
        return;
      }
      delete _this.mapping[currentRowIndex];
      var index = _this.rows.indexOf(row);
      if (index != -1) {
        _this.rows.splice(index, 1);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onRowMount", function (r) {
      if (!r) {
        return;
      }
      _this.mapping[r.props.index] = r;
      _this.rows[r.props.index] = r;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onScrollStart", function () {
      _this.scrolling = true;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      if (_this.props.scrollOneDirectionOnly) {
        var scrollPos = args[0],
          prevScrollPos = args[1];
        var absTop = Math.abs(scrollPos.scrollTop - prevScrollPos.scrollTop);
        var absLeft = Math.abs(scrollPos.scrollLeft - prevScrollPos.scrollLeft);
        var scrollerNode = _this.getScrollerNode();
        if (absTop != absLeft) {
          _this.disableScrollPropName = absTop > absLeft ? 'overflowX' : 'overflowY';
          _this.disableScrollOtherPropName = absTop > absLeft ? 'overflowY' : 'overflowX';
          _this.disableScrollPropValue = scrollerNode.style[_this.disableScrollPropName];
          scrollerNode.style[_this.disableScrollOtherPropName] = 'scroll';
          scrollerNode.style[_this.disableScrollPropName] = 'hidden';
        }
      }
      if (_this.props.onScrollStart) {
        var _this$props2;
        (_this$props2 = _this.props).onScrollStart.apply(_this$props2, args);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getScrollerNode", function () {
      return _this.scrollContainer.scrollerNode;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onScrollStop", function () {
      _this.scrolling = false;
      if (_this.props.scrollOneDirectionOnly) {
        var scrollerNode = _this.getScrollerNode();
        scrollerNode.style[_this.disableScrollPropName] = _this.disableScrollPropValue;
        scrollerNode.style.overflow = 'scroll';
      }
      if (_this.props.onScrollStop) {
        var _this$props3;
        (_this$props3 = _this.props).onScrollStop.apply(_this$props3, arguments);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getRows", function () {
      var rows = [];
      _this.forEachRow(function (row) {
        if (row) {
          rows.push(row);
        }
      });
      return rows;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "forEachRow", function (fn) {
      var onlyVisible = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var rows = _this.rows;
      var visibleCount = _this.getVisibleCount();
      var i = -1;
      for (var initialIndex in rows) {
        if (rows.hasOwnProperty(initialIndex) && (!onlyVisible || onlyVisible && initialIndex < visibleCount)) {
          i++;
          fn(rows[initialIndex], i);
        }
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "sortRows", function (rows) {
      return rows.slice().sort(function (row1, row2) {
        return row1.getIndex() - row2.getIndex();
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getRowAt", function (index) {
      var row = _this.mapping[index];
      if (row && row.getIndex() != index) {
        row = null;
      }
      return row;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getVisibleCount", function () {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props;
      var virtualized = props.virtualized,
        enableRowSpan = props.enableRowSpan,
        extraRowsProps = props.extraRows;
      var extraRows = enableRowSpan ? 2 : extraRowsProps || 0;
      if (_this.visibleCount === undefined) {
        return 0;
      }
      if (!virtualized) {
        return (props.showEmptyRows ? Math.max(_this.visibleCount || 0, props.count || 0) : props.count) + extraRows;
      }
      return (props.showEmptyRows ? _this.visibleCount || props.count : Math.min(_this.visibleCount || props.count, props.count)) + extraRows;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setRowIndex", function (row, index, callback) {
      var existingRow = _this.mapping[index];
      if (existingRow) {
        existingRow.setIndex(index, callback);
        if (existingRow !== row) {
          row.setVisible(false);
        }
        return;
      }
      var oldIndex = row.getIndex();
      row.setIndex(index, callback);
      delete _this.mapping[oldIndex];
      _this.mapping[index] = row;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getSortedRows", function () {
      var rows = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.getRows();
      return _this.sortRows(rows);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onRowsUpdated", function (newIndexes, range, updateScroll) {
      newIndexes.sort(function (i1, i2) {
        return i1 - i2;
      });
      var start = newIndexes[0];
      var end = _this.props.showEmptyRows ? newIndexes[newIndexes.length - 1] : Math.min(newIndexes[newIndexes.length - 1], _this.props.count - 1);
      var minRowHeight = _this.props.minRowHeight;
      var rowIndexes = [];
      var rowHeights = [];
      var rows = [];
      for (var row, rowHeight, i = start; i <= end; i++) {
        row = _this.mapping[i];
        rowHeight = row ? row.getInfo().height : minRowHeight;
        if (row) {
          rows.push(row);
        }
        rowIndexes.push(i);
        rowHeights.push(rowHeight);
      }
      var newToTopHeight = 0;
      var oldTop;
      if (_this.oldRowIndexes) {
        oldTop = _this.oldRowIndexes[0];
        rowIndexes.forEach(function (rowIndex, i) {
          var diff;
          if (rowIndex < oldTop) {
            diff = rowHeights[i] - _this.rowHeights[rowIndex];
            newToTopHeight += diff;
          }
        });
      }
      if (rowIndexes.length) {
        _this.setHeightForRows(rowIndexes, rowHeights);
      }
      rows.forEach(function (row) {
        var index = row.getIndex();
        var offset = _this.rowOffsets[index];
        row.setOffset(offset);
      });
      _this.oldRowIndexes = rowIndexes;
      var newScrollTop;
      if (newToTopHeight) {
        newScrollTop = _this.scrollTopPos + newToTopHeight;
        updateScroll(newScrollTop);
        _this.forceScrollTop = newScrollTop;
        _this.scrollTop = newScrollTop;
      } else {
        updateScroll();
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getVisibleRange", function (args) {
      return (0, _getVisibleRange.default)(args);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "applyScrollStyle", function (_ref2, domNode) {
      var scrollTop = _ref2.scrollTop,
        scrollLeft = _ref2.scrollLeft,
        force = _ref2.force,
        reorder = _ref2.reorder;
      if (scrollTop < 0) {
        scrollTop = 0;
      }
      if (!_this.props.rtl) {
        if (scrollLeft < 0) {
          scrollLeft = 0;
        }
      } else {
        if (scrollLeft > 0) {
          scrollLeft = 0;
        }
      }
      if (_this.forceScrollTop !== undefined) {
        scrollTop = _this.forceScrollTop;
        _this.forceScrollTop = undefined;
        return;
      }
      if (_this.props.applyScrollLeft && scrollLeft !== undefined) {
        scrollLeft = 0;
        _this.props.applyScrollLeft(scrollLeft, domNode);
      }
      if (scrollTop === undefined) {
        scrollTop = _this.prevScrollTopPos;
      }
      if (scrollLeft === undefined) {
        scrollLeft = _this.prevScrollLeftPos;
      }
      _this.scrollTopPos = scrollTop;
      _this.scrollLeftPos = scrollLeft;
      var _this$props4 = _this.props,
        count = _this$props4.count,
        useTransformPosition = _this$props4.useTransformPosition,
        rowHeightManager = _this$props4.rowHeightManager,
        naturalRowHeight = _this$props4.naturalRowHeight,
        virtualized = _this$props4.virtualized,
        showEmptyRows = _this$props4.showEmptyRows;
      var range = _this.getVisibleRange({
        scrollTop: scrollTop,
        size: _this.size,
        count: count,
        naturalRowHeight: naturalRowHeight,
        rowHeightManager: rowHeightManager,
        showEmptyRows: showEmptyRows
      });
      var startRowIndex = range.start;
      var prevStartRowIndex = _this.prevStartRowIndex;
      _this.prevScrollTopPos = scrollTop;
      _this.prevScrollLeftPos = scrollLeft;
      _this.prevStartRowIndex = startRowIndex;
      _this.updateStickyRows(scrollTop, undefined, {
        force: false
      });
      var updateScroll = function updateScroll() {
        var top = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : scrollTop;
        var parentNodeStyle = _this.containerNode.parentNode.style;
        _this.containerNode.parentNode.classList.add("".concat(BASE_CLASS_NAME, "__view-container"));
        var scrollLeftTranslateValue = -scrollLeft;
        if (useTransformPosition) {
          parentNodeStyle.transform = "translate3d(".concat(scrollLeftTranslateValue, "px, ").concat(-top, "px, 0px)");
        } else {
          parentNodeStyle.left = "".concat(scrollLeftTranslateValue, "px");
          parentNodeStyle.top = "".concat(-top, "px");
        }
      };
      if (rowHeightManager == null) {
        force = true;
      }
      if (startRowIndex == prevStartRowIndex && !force || !virtualized) {
        updateScroll();
        return;
      }
      updateScroll();
      _this.updateRows(range, reorder, emptyFn);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getScrollingElement", function () {
      return _this.scrollContainer;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "smoothScrollTo", function () {
      var _this$scrollContainer;
      (_this$scrollContainer = _this.scrollContainer).smoothScrollTo.apply(_this$scrollContainer, arguments);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "componentDidMount", function () {
      _this.mounted = true;
      _this.unmounted = false;
      _this.setupRowHeightManager(_this.props.rowHeightManager);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "fixEdgeScrollPosition", function () {
      if (!(IS_EDGE || IS_FF)) {
        return;
      }
      var maxTop = _this.getTotalRowHeight() - (_this.scrollContainer.viewNode ? _this.scrollContainer.viewNode.offsetHeight : 0);
      if (_this.scrollTop > maxTop) {
        globalObject.requestAnimationFrame(function () {
          if (_this.unmounted) {
            return;
          }
          _this.scrollTop = maxTop;
        });
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setupRowHeightManager", function (rowHeightManager) {
      if (rowHeightManager) {
        rowHeightManager.on('index', _this.onIndex);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onIndex", function () {
      _this.updateVisibleCount(_this.size.height);
      _this.forceUpdate(function () {
        if (_this.unmounted) {
          return;
        }
        _this.refreshLayout({
          reorder: false,
          force: true
        });
        _this.cleanupRows();
        _this.fixEdgeScrollPosition();
        _this.rows.forEach(function (row) {
          row.setIndex(row.getIndex(), undefined, undefined, true);
        });
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "refreshLayout", function (config) {
      var defaults = {
        force: true,
        reorder: true
      };
      _this.adjustHeights();
      var options = config ? _objectSpread(_objectSpread({}, defaults), config) : defaults;
      _this.applyScrollStyle(options);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getOverlappingHeight", function () {
      if (_this.scrollContainer && _this.scrollContainer.getBeforeAndAfterHeight) {
        return _this.scrollContainer.getBeforeAndAfterHeight();
      }
      return 0;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "updateVisibleCount", function (height, props) {
      props = props || _this.props;
      var _props2 = props,
        rowHeightManager = _props2.rowHeightManager,
        minRowHeight = _props2.minRowHeight,
        showEmptyRows = _props2.showEmptyRows;
      var strictVisibleCount = rowHeightManager ? Math.ceil(height / rowHeightManager.getMinHeight()) : Math.ceil(height / (minRowHeight || 1));
      _this.strictVisibleCount = strictVisibleCount;
      _this.visibleCount = rowHeightManager ? strictVisibleCount + 1 : strictVisibleCount + 2;
      var maxCount = props.count;
      if (_this.visibleCount > maxCount && !showEmptyRows) {
        _this.visibleCount = maxCount;
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getGapsFor", function (startRowIndex, endRowIndex, sortedRows) {
      var visibleRowPositions = {};
      var enableRowSpan = _this.props.enableRowSpan;
      var rows = sortedRows || _this.getSortedRows();
      rows.forEach(function (row) {
        if (row.isVisible()) {
          visibleRowPositions[row.getIndex()] = true;
        }
      });
      var gaps = [];
      if (enableRowSpan && _this.rowCoveredBy[startRowIndex] != null) {
        startRowIndex = _this.rowCoveredBy[startRowIndex];
      }
      var alreadyVisible;
      var coveredBy;
      for (; startRowIndex <= endRowIndex; startRowIndex++) {
        alreadyVisible = visibleRowPositions[startRowIndex];
        if (enableRowSpan && !alreadyVisible) {
          coveredBy = _this.rowCoveredBy[startRowIndex];
          if (coveredBy != null) {
            alreadyVisible = _this.props.recycleCoveredRows;
          }
        }
        if (!alreadyVisible) {
          gaps.push(startRowIndex);
        }
      }
      return gaps;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getCleanupRows", function () {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props;
      var indexes = [];
      var length = _this.rows && _this.rows.length;
      var visibleCount = _this.getVisibleCount(props);
      for (var i = visibleCount; i < length; i++) {
        indexes.push(i);
      }
      return indexes;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "cleanupRows", function () {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props;
      _this.getCleanupRows(props).forEach(function (i) {
        var row = _this.rows[i];
        if (row) {
          delete _this.mapping[row.getIndex()];
          delete _this.rows[i];
        }
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onResize", function () {
      var node = _this.getDOMNode();
      if (!node) {
        return;
      }
      var size = _this.props.measureSize ? _this.props.measureSize(node) : {
        width: node.clientWidth,
        height: node.clientHeight
      };
      size.height -= _this.getOverlappingHeight();
      _this.size = size;
      if (_this.props.scrollProps && typeof _this.props.scrollProps.onResize == 'function') {
        _this.props.scrollProps.onResize(size);
      }
      _this.updateVisibleCount(size.height);
      if (_this.props.virtualized) {
        if (_this.props.showEmptyRows) {
          _this.initSizes();
        }
        _this.forceUpdate(function () {
          if (_this.unmounted) {
            return;
          }
          _this.refreshLayout({
            reorder: false,
            force: true
          });
          _this.cleanupRows();
        });
      }
      if (_this.props.onResize) {
        _this.props.onResize(size);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setRowRowSpan", function (rowIndex, rowSpan) {
      if (rowSpan === 1) {
        return;
      }
      _this.rowSpans[rowIndex] = rowSpan;
      var current = rowIndex + 1;
      var last = rowIndex + rowSpan - 1;
      for (; current <= last; current++) {
        _this.rowCoveredBy[current] = rowIndex;
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onRowKeyDown", function (index, event) {
      if (event.key !== 'Tab') {
        return;
      }
      if (_this.props.handleRowKeyDown) {
        _this.props.handleRowKeyDown(index, event);
        return;
      }
      var activeElement = globalObject.document.activeElement;
      var theRow = _this.getRowAt(index);
      var rowNode = theRow.getDOMNode ? theRow.getDOMNode() : theRow.node;
      if (!activeElement || !(0, _contains.default)(rowNode, activeElement)) {
        return;
      }
      var dir = event.shiftKey ? -1 : 1;
      var nextIndex = index + dir;
      var maxCount = _this.getMaxRenderCount();
      if (nextIndex < 0 || nextIndex >= maxCount) {
        return;
      }
      var thisElements = _this.props.getRowFocusableElements ? _this.props.getRowFocusableElements(index, rowNode) : (0, _getFocusableElements.default)(rowNode);
      if (thisElements && thisElements.length) {
        var limit = dir === -1 ? 0 : thisElements.length - 1;
        if (thisElements[limit] !== activeElement) {
          return;
        }
      }
      if (typeof _this.props.shouldPreventDefaultTabKeyOnRow !== 'function' || _this.props.shouldPreventDefaultTabKeyOnRow(index, event) !== false) {
        event.preventDefault();
      }
      _this.focusRow(nextIndex, dir);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getMaxRenderCount", function () {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props;
      var visibleCount = _this.getVisibleCount(props);
      var maxCount = props.showEmptyRows ? Math.max(visibleCount || 0, props.count) : Math.max(props.count || 0, 0);
      return maxCount;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "focusRow", function (index, dir, callback) {
      if (index >= _this.getMaxRenderCount() || index < 0) {
        return;
      }
      _this.scrollToIndex(index, {
        direction: dir == 1 ? 'bottom' : 'top',
        duration: 50
      }, function () {
        var nextRow = _this.getRowAt(index);
        var nextRowNode = nextRow.getDOMNode ? nextRow.getDOMNode() : nextRow.node;
        var elements = _this.props.getRowFocusableElements ? _this.props.getRowFocusableElements(index, nextRowNode) : (0, _getFocusableElements.default)(nextRowNode);
        if (elements.length) {
          var focusIndex = dir === -1 ? elements.length - 1 : 0;
          elements[focusIndex].focus();
        }
        if (typeof callback == 'function') {
          callback();
        }
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "isRowRendered", function (index) {
      return !!_this.getRowAt(index);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getStickyRowsArray", function () {
      var stickyRows = _this.props.stickyRows;
      var scaleMap = {};
      var rows = Object.keys(stickyRows).map(function (key, i) {
        var scale = +(stickyRows[key] || 1);
        var row = {
          index: +key,
          scale: scale,
          indexInAllRows: i
        };
        scaleMap[scale] = scaleMap[scale] || [];
        scaleMap[scale].push(row);
        return row;
      }).sort(function (a, b) {
        return sortAsc(a.index, b.index);
      });
      var scales = unique(rows.map(function (r) {
        return r.scale;
      })).sort(sortAsc);
      var result = {
        rows: rows,
        scales: scales,
        rowsPerScales: scales.map(function (scale) {
          return scaleMap[scale];
        })
      };
      return result;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "currentStickyRows", []);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "updateStickyRows", function () {
      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.scrollTop;
      var firstVisibleRowIndex = arguments.length > 1 ? arguments[1] : undefined;
      var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
          force: true
        },
        force = _ref3.force;
      if (!_this.props.stickyRows) {
        return;
      }
      var _this$getStickyRowsAr = _this.getStickyRowsArray(),
        rowsPerScales = _this$getStickyRowsAr.rowsPerScales,
        allRows = _this$getStickyRowsAr.rows;
      if (firstVisibleRowIndex === undefined) {
        firstVisibleRowIndex = _this.getFirstVisibleRowIndexForSticky(scrollTop);
      }
      firstVisibleRowIndex = firstVisibleRowIndex || 0;
      var enteringRows = [];
      var comparator = function comparator(_ref4, b) {
        var index = _ref4.index;
        return sortAsc(index, b);
      };
      var initialIndex = -1;
      var currentStickyRows = [];
      var currentStickyRowsMap = [];
      var maxStickyRowIndex = -1;
      var firstFreeVisibleRowIndex = firstVisibleRowIndex;
      rowsPerScales.forEach(function (rows) {
        if (!rows.length) {
          return;
        }
        var foundIndex = (0, _binarySearch.default)(rows, firstFreeVisibleRowIndex, comparator);
        var computedFoundIndex = foundIndex;
        var stickyRow;
        var stickyRowIndex;
        if (foundIndex < 0) {
          computedFoundIndex = ~foundIndex - 1;
        }
        stickyRow = rows[computedFoundIndex];
        if (stickyRow) {
          stickyRowIndex = stickyRow.index;
          if (stickyRowIndex > initialIndex) {
            firstFreeVisibleRowIndex++;
            currentStickyRows.push(stickyRow);
            currentStickyRowsMap[stickyRowIndex] = true;
            initialIndex = stickyRowIndex;
            maxStickyRowIndex = Math.max(maxStickyRowIndex, stickyRowIndex);
          }
          var nextRow = allRows[stickyRow.indexInAllRows + 1];
          if (nextRow && nextRow.index <= firstFreeVisibleRowIndex) {
            enteringRows.push(nextRow);
          }
        }
      });
      enteringRows = enteringRows.filter(function (row) {
        return !currentStickyRowsMap[row.index] && row.index > maxStickyRowIndex;
      });
      var enteringRow = enteringRows[0];
      if (JSON.stringify(_this.currentStickyRows) === JSON.stringify(currentStickyRows) && !force) {
        _this.stickyRowsContainer.setEnteringRow({
          enteringRow: enteringRow,
          scrollTop: scrollTop
        });
        return;
      }
      _this.setStickyRows(currentStickyRows, scrollTop, enteringRow);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setStickyRows", function () {
      var currentStickyRows = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.currentStickyRows;
      var scrollTop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.scrollTop;
      var enteringRow = arguments.length > 2 ? arguments[2] : undefined;
      _this.currentStickyRows = currentStickyRows;
      var rowElements = currentStickyRows.map(function (row) {
        return _this.renderStickyRow(row.index);
      });
      _this.stickyRowsContainer.setStickyRows(rowElements.length ? rowElements : null, currentStickyRows, {
        enteringRow: enteringRow,
        scrollTop: scrollTop
      });
      _this.currentStickyRows = currentStickyRows;
      if (_this.props.onStickyRowUpdate) {
        _this.props.onStickyRowUpdate();
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderStickyRow", function (index) {
      var _this$props5 = _this.props,
        rowHeight = _this$props5.rowHeight,
        renderRow = _this$props5.renderRow,
        count = _this$props5.count,
        pureRows = _this$props5.pureRows,
        rowHeightManager = _this$props5.rowHeightManager,
        showEmptyRows = _this$props5.showEmptyRows,
        virtualized = _this$props5.virtualized,
        rowContain = _this$props5.rowContain,
        naturalRowHeight = _this$props5.naturalRowHeight,
        useTransformRowPosition = _this$props5.useTransformRowPosition;
      return (0, _renderRows2.default)({
        pure: pureRows,
        renderRow: renderRow,
        rowHeightManager: rowHeightManager,
        rowHeight: rowHeight,
        rowContain: rowContain,
        count: count,
        from: index,
        to: index + 1,
        naturalRowHeight: naturalRowHeight,
        sticky: true,
        useTransformPosition: useTransformRowPosition,
        virtualized: false
      })[0];
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "isRowVisible", function (index) {
      if (!_this.isRowRendered(index)) {
        return false;
      }
      var rowHeightManager = _this.props.rowHeightManager;
      var top = _this.scrollTop;
      var bottom = top + _this.size.height;
      var rowTop;
      var rowBottom;
      if (rowHeightManager) {
        rowTop = rowHeightManager.getRowOffset(index);
        rowBottom = rowTop + rowHeightManager.getRowHeight(index);
      } else {
        var row = _this.getRowAt(index);
        var info = row.getInfo();
        rowTop = info.offset;
        rowBottom = rowTop + info.height;
      }
      return top <= rowTop && rowBottom <= bottom;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getRowVisibilityInfo", function (index, offset) {
      var rendered = _this.isRowRendered(index);
      var _this$props6 = _this.props,
        rowHeightManager = _this$props6.rowHeightManager,
        rowHeight = _this$props6.rowHeight,
        minRowHeight = _this$props6.minRowHeight;
      var scrollTop = _this.scrollTop;
      var top = scrollTop + offset;
      var bottom = scrollTop + _this.size.height - offset;
      var rowTop;
      var rowBottom;
      if (rowHeightManager) {
        rowTop = rowHeightManager.getRowOffset(index);
        rowBottom = rowTop + rowHeightManager.getRowHeight(index);
      } else {
        var row = _this.getRowAt(index);
        if (row) {
          var info = row.getInfo();
          rowTop = info.offset;
          rowBottom = rowTop + info.height;
        } else {
          var indexes = _this.getRenderedIndexes();
          var firstRenderedIndex = indexes[0];
          var lastRenderedIndex = indexes[indexes.length - 1];
          if (index < firstRenderedIndex) {
            rowTop = _this.rowOffsets[firstRenderedIndex] - (firstRenderedIndex - index) * minRowHeight;
          } else if (index > lastRenderedIndex) {
            rowTop = _this.rowOffsets[lastRenderedIndex] + _this.rowHeights[lastRenderedIndex] + (index - lastRenderedIndex) * minRowHeight;
          } else {
            rowTop = _this.rowOffsets[index];
          }
          rowBottom = rowTop + _this.rowHeights[index];
        }
      }
      var visible = top <= rowTop && rowBottom <= bottom;
      return {
        rendered: rendered,
        visible: visible,
        top: rowTop,
        bottom: rowBottom,
        topDiff: rowTop - top,
        bottomDiff: bottom - rowBottom
      };
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getRenderedIndexes", function () {
      return Object.keys(_this.mapping).map(function (k) {
        return k * 1;
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onRowFocus", function (index, event) {});
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "rafSync", function () {
      if (_this.scrollContainer) {
        _this.scrollContainer.rafSync();
      }
      _this.adjustHeights();
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "adjustHeights", function () {
      if (Array.isArray(_this.rows)) {
        _this.rows.forEach(function (r) {
          return r.updateRowHeight();
        });
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "checkHeights", function () {
      var rows = _this.getSortedRows();
      var result = true;
      rows.forEach(function (row) {
        if (result !== true) {
          return;
        }
        var index = row.getIndex();
        if (row.node.offsetHeight != _this.rowHeights[index]) {
          console.warn("row height mismatch at ".concat(index, "!"));
          result = index;
        }
      });
      if (result === true) {
        _this.rowHeights.reduce(function (acc, height, index) {
          if (_this.rowOffsets[index] !== acc && result === true && index < _this.props.count) {
            console.warn("row offset mismatch at ".concat(index, "!"));
            result = index;
          }
          return acc + height;
        }, 0);
      }
      return result;
    });
    _this.initSizes(_props);
    _this.visibleCount = undefined;
    _this.size = {
      height: 0,
      width: 0
    };
    _this.scrollTopPos = 0;
    _this.scrollLeftPos = 0;
    _this.prevScrollLeftPos = 0;
    _this.prevScrollTopPos = 0;
    _this.mapping = {};
    _this.rowSpans = {};
    _this.rowCoveredBy = {};
    _this.rows = [];
    _this.rowRef = function (r) {
      _this.row = r;
    };
    _this.refScrollContainer = function (c) {
      _this.scrollContainer = c;
    };
    _this.refStickyContainer = function (c) {
      _this.stickyRowsContainer = c;
    };
    _this.refContainerNode = function (domNode) {
      _this.containerNode = domNode;
    };
    _this.updateRows = (0, _lodash.default)(_this.updateRows, 16);
    return _this;
  }
  (0, _createClass2.default)(InovuaVirtualList, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps, nextState) {
      return (0, _shouldComponentUpdate2.default)(this, nextProps, nextState);
    }
  }, {
    key: "renderStickyRowsContainer",
    value: function renderStickyRowsContainer() {
      return this.props.stickyRows ? _react.default.createElement(_StickyRowsContainer.default, {
        rtl: this.props.rtl,
        key: "stickyrowscontainer",
        stickyOffset: this.props.stickyOffset,
        handle: this.refStickyContainer,
        rowHeightManager: this.props.rowHeightManager
      }) : null;
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.props;
      var naturalRowHeight = props.naturalRowHeight,
        scrollProps = props.scrollProps,
        theme = props.theme,
        minRowHeight = props.minRowHeight,
        rowHeightManager = props.rowHeightManager,
        count = props.count;
      if (this.oldProps) {
        this.transitionProps(props, this.oldProps);
      }
      this.oldProps = props;
      var style = _objectSpread({
        position: 'relative'
      }, this.props.style);
      var className = (0, _join.default)(props.className, BASE_CLASS_NAME, theme && "".concat(BASE_CLASS_NAME, "--theme-").concat(theme), "".concat(BASE_CLASS_NAME, "--virtual-scroll"));
      var scrollHeight = rowHeightManager ? rowHeightManager.getTotalSize(count) : this.scrollHeight || minRowHeight * count;
      var rowContainer = this.renderRowContainer();
      var sizer = this.renderSizer(scrollHeight);
      var stickyRowsContainer = this.renderStickyRowsContainer();
      var children;
      if ((0, _src.hasSticky)()) {
        children = _react.default.Fragment ? _react.default.createElement(_react.default.Fragment, null, rowContainer, sizer) : [rowContainer, sizer];
      } else {
        children = _react.default.createElement("div", null, rowContainer, sizer);
      }
      var Factory = this.props.nativeScroll ? _src.NativeScrollContainer : _src.default;
      var renderScrollerSpacer = this.props.renderScrollerSpacer;
      if (naturalRowHeight) {
        renderScrollerSpacer = this.renderScrollerSpacerOnNaturalRowHeight;
      }
      return _react.default.createElement(Factory, _objectSpread(_objectSpread(_objectSpread({
        contain: this.props.contain,
        ResizeObserver: this.props.ResizeObserver !== undefined ? this.props.ResizeObserver : ResizeObserver,
        extraChildren: stickyRowsContainer,
        useTransformToScroll: this.props.useTransformPosition
      }, (0, _reactCleanProps.default)(props, InovuaVirtualList.propTypes)), scrollProps), {}, {
        rtl: this.props.rtl,
        nativeScroll: this.props.nativeScroll,
        ref: this.refScrollContainer,
        onScrollbarsChange: this.onScrollbarsChange,
        style: style,
        theme: theme,
        className: className,
        onScrollStart: this.onScrollStart,
        onScrollStop: this.onScrollStop,
        applyScrollStyle: this.applyScrollStyle,
        onResize: this.onResize,
        onViewResize: this.onViewResize,
        renderScroller: this.renderScroller,
        renderScrollerSpacer: renderScrollerSpacer,
        renderView: this.renderView,
        getClientSize: this.getClientSize,
        getScrollSize: this.getScrollSize,
        children: children
      }));
    }
  }, {
    key: "updateRows",
    value: function updateRows(range, reorder, updateScroll) {
      var _this2 = this;
      var rowHeightManager = this.props.rowHeightManager;
      var startRowIndex = range.start;
      var endRowIndex = range.end;
      if (this.props.onRenderRangeChange) {
        this.props.onRenderRangeChange(startRowIndex, endRowIndex);
      }
      var rows = this.getSortedRows();
      var gaps = this.getGapsFor(startRowIndex, endRowIndex, rows);
      var newIndexes = [];
      var _this$props7 = this.props,
        recycleCoveredRows = _this$props7.recycleCoveredRows,
        enableRowSpan = _this$props7.enableRowSpan;
      var visited = {};
      rows.forEach(function (row, i) {
        var rowIndex = row.getIndex();
        if (reorder) {
          var newRowIndex = startRowIndex + i;
          _this2.setRowIndex(row, newRowIndex);
          if (rowHeightManager == null) {
            newIndexes.push(newRowIndex);
          }
          return;
        }
        var extraRows = enableRowSpan ? row.getRowSpan() - 1 : 0;
        var outOfView = rowIndex + extraRows < startRowIndex || rowIndex > endRowIndex || visited[rowIndex] || enableRowSpan && recycleCoveredRows && _this2.rowCoveredBy[rowIndex] !== undefined;
        visited[rowIndex] = true;
        if (rowHeightManager == null) {
          if (outOfView) {
            if (gaps.length) {
              var newIndex = gaps.pop();
              newIndexes.push(newIndex);
              _this2.setRowIndex(row, newIndex);
            } else {
              row.setVisible(false);
            }
          } else {
            row.setVisible(true);
            newIndexes.push(row.getIndex());
          }
          return;
        }
        if (outOfView && gaps.length) {
          var _newIndex = gaps.pop();
          _this2.setRowIndex(row, _newIndex);
        }
      });
      if (newIndexes.length && rowHeightManager == null) {
        if (this.updateRafHandle) {
          globalObject.cancelAnimationFrame(this.updateRafHandle);
        }
        this.updateRafHandle = globalObject.requestAnimationFrame(function () {
          _this2.updateRafHandle = null;
          _this2.onRowsUpdated(newIndexes, {
            start: startRowIndex,
            end: endRowIndex
          }, function () {});
        });
      }
    }
  }, {
    key: "scrollTopMax",
    get: function get() {
      return this.mounted ? this.scrollContainer.scrollTopMax : 0;
    }
  }, {
    key: "scrollLeftMax",
    get: function get() {
      return this.mounted ? this.scrollContainer.scrollLeftMax : 0;
    }
  }, {
    key: "scrollTop",
    get: function get() {
      return this.mounted ? this.getScrollingElement().scrollTop : 0;
    },
    set: function set(value) {
      var element = this.getScrollingElement();
      if (element) {
        element.scrollTop = value;
      }
    }
  }, {
    key: "scrollLeft",
    get: function get() {
      return this.mounted ? this.getScrollingElement().scrollLeft : 0;
    },
    set: function set(value) {
      var element = this.getScrollingElement();
      if (element) {
        element.scrollLeft = value;
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.props.rowHeightManager) {
        this.props.rowHeightManager.removeListener('index', this.onIndex);
      }
      this.mounted = false;
      this.unmounted = true;
      this.rows.length = 0;
      this.rowHeights = null;
      this.rowOffsets = null;
    }
  }, {
    key: "transitionProps",
    value: function transitionProps(nextProps, thisProps) {
      var nextCount = Math.max(nextProps.count, 0);
      var rowHeightChange = thisProps.rowHeight && nextProps.rowHeight != thisProps.rowHeight;
      if (thisProps.renderRow !== nextProps.renderRow) {
        this.rowCoveredBy = {};
        this.rowSpans = {};
      }
      if (nextCount != thisProps.count || nextProps.showEmptyRows != thisProps.showEmptyRows || rowHeightChange) {
        var oldVisibleCount = this.getVisibleCount();
        this.updateVisibleCount(this.size.height, nextProps);
        this.cleanupRows(nextProps);
        this.reorder = rowHeightChange || this.getVisibleCount(nextProps) < oldVisibleCount;
        this.initSizes(nextProps);
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      var _this3 = this;
      var prevScrollTopPos;
      var prevScrollLeftPos;
      if (this.props.nativeScroll !== prevProps.nativeScroll) {
        prevScrollTopPos = this.scrollTopPos;
        prevScrollLeftPos = this.scrollLeftPos;
        globalObject.requestAnimationFrame(function () {
          if (_this3.unmounted) {
            return;
          }
          _this3.scrollTop = prevScrollTopPos;
          _this3.scrollLeft = prevScrollLeftPos;
        });
      }
      if (this.props.rowHeightManager !== prevProps.rowHeightManager) {
        if (prevProps.rowHeightManager) {
          prevProps.rowHeightManager.removeListener('index', this.onIndex);
        }
        this.setupRowHeightManager(this.props.rowHeightManager);
      }
      if (this.props.count != prevProps.count || this.props.renderRow != prevProps.renderRow || this.props.rowHeightManager != prevProps.rowHeightManager || this.props.rowHeightManager == null || this.props.showEmptyRows != prevProps.showEmptyRows) {
        var refreshConfig = {
          reorder: this.reorder
        };
        if (prevScrollTopPos !== undefined) {
          refreshConfig.scrollTop = prevScrollTopPos;
          refreshConfig.scrollLeft = prevScrollLeftPos;
        }
        if (this.props.count <= this.visibleCount) {
          refreshConfig.scrollTop = 0;
        }
        if ((IS_EDGE || IS_FF) && this.props.count < prevProps.count) {
          this.fixEdgeScrollPosition();
        }
        this.reorder = false;
        this.refreshLayout(refreshConfig);
      }
      if (prevProps.stickyRows !== this.props.stickyRows) {
        this.updateStickyRows(undefined, undefined, {
          force: true
        });
      }
    }
  }, {
    key: "getDOMNode",
    value: function getDOMNode() {
      return this.scrollContainer ? this.scrollContainer.domNode || this.scrollContainer.getDOMNode() : null;
    }
  }, {
    key: "renderRows",
    value: function renderRows() {
      var props = this.props;
      var rowHeight = props.rowHeight,
        renderRow = props.renderRow,
        count = props.count,
        pureRows = props.pureRows,
        rowHeightManager = props.rowHeightManager,
        showEmptyRows = props.showEmptyRows,
        virtualized = props.virtualized,
        rowContain = props.rowContain,
        naturalRowHeight = props.naturalRowHeight,
        useTransformRowPosition = props.useTransformRowPosition;
      var to = this.getVisibleCount();
      return (0, _renderRows2.default)({
        ref: this.rowRef,
        onMount: this.onRowMount,
        onUnmount: this.onRowUnmount,
        notifyRowSpan: this.setRowRowSpan,
        pure: pureRows,
        renderRow: renderRow,
        rowHeightManager: rowHeightManager,
        rowHeight: rowHeight,
        rowContain: rowContain,
        count: count,
        from: 0,
        to: to,
        naturalRowHeight: naturalRowHeight,
        onKeyDown: this.onRowKeyDown,
        onFocus: this.onRowFocus,
        useTransformPosition: useTransformRowPosition,
        showEmptyRows: showEmptyRows,
        virtualized: virtualized
      });
    }
  }, {
    key: "getFirstVisibleRowIndexForSticky",
    value: function getFirstVisibleRowIndexForSticky() {
      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.scrollTopPos;
      var rowHeightManager = this.props.rowHeightManager;
      var stickyHeight = this.currentStickyRows ? this.currentStickyRows.reduce(function (_, row) {
        return rowHeightManager.getRowHeight(row.index);
      }, 0) : 0;
      var rowIndex = Math.max(0, rowHeightManager.getRowAt(scrollTop + stickyHeight) - 1);
      return rowIndex;
    }
  }, {
    key: "scrollToIndex",
    value: function scrollToIndex(index) {
      var _this4 = this;
      var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : emptyObject,
        direction = _ref5.direction,
        force = _ref5.force,
        _ref5$duration = _ref5.duration,
        duration = _ref5$duration === void 0 ? 0 : _ref5$duration,
        _ref5$offset = _ref5.offset,
        offset = _ref5$offset === void 0 ? 0 : _ref5$offset;
      var callback = arguments.length > 2 ? arguments[2] : undefined;
      if (direction) {
        if (direction != 'top' && direction != 'bottom') {
          direction = null;
        }
      }
      if (force && !direction) {
        force = false;
      }
      if (index < 0 || index >= this.getMaxRenderCount()) {
        return;
      }
      if (typeof callback != 'function') {
        callback = emptyFn;
      }
      var info = this.getRowVisibilityInfo(index, offset);
      if (!info.rendered) {
        var rowHeight = this.props.rowHeight;
        if (!direction) {
          var existingIndex = this.rows[0].getIndex();
          direction = index > existingIndex ? 'bottom' : 'top';
        }
        var newScrollTop = direction === 'top' ? info.top - offset : this.scrollTop - info.bottomDiff + offset;
        var afterScroll = function afterScroll() {
          if (!rowHeight) {
            setTimeout(function () {
              globalObject.requestAnimationFrame(function () {
                _this4.scrollToIndex(index, {
                  direction: direction,
                  force: force,
                  duration: duration ? 100 : 0
                }, callback);
              });
            });
          } else {
            callback();
          }
        };
        if (duration) {
          this.smoothScrollTo(newScrollTop, {
            duration: duration
          }, afterScroll);
        } else {
          this.scrollTop = newScrollTop;
          afterScroll();
        }
        return;
      }
      var visible = info.visible;
      if (!visible) {
        if (!direction) {
          direction = info.topDiff < 0 ? 'top' : 'bottom';
          force = true;
        }
      }
      if (!visible || direction && force) {
        var _newScrollTop;
        if (direction == 'top' || info.topDiff < 0) {
          _newScrollTop = this.scrollTop + info.topDiff - offset;
        } else if (direction == 'bottom' || info.bottomDiff < 0) {
          _newScrollTop = this.scrollTop - info.bottomDiff + offset;
        }
        if (_newScrollTop != null) {
          if (duration) {
            this.smoothScrollTo(_newScrollTop, {
              duration: duration
            }, callback);
            return;
          }
          this.scrollTop = _newScrollTop;
        }
      }
      callback();
    }
  }, {
    key: "getEmptyScrollOffset",
    value: function getEmptyScrollOffset() {
      if (this.props.emptyScrollOffset != null) {
        return this.props.emptyScrollOffset;
      }
      var SCROLLBAR_WIDTH = (0, _src.getScrollbarWidth)();
      return this.props.emptyScrollOffset || SCROLLBAR_WIDTH || 17;
    }
  }]);
  return InovuaVirtualList;
}(_react.Component);
exports["default"] = InovuaVirtualList;
InovuaVirtualList.defaultProps = {
  minRowHeight: 20,
  nativeScroll: false,
  shouldAllowScrollbars: function shouldAllowScrollbars() {
    return true;
  },
  rafOnResize: false,
  theme: 'default-light',
  showEmptyRows: false,
  showWarnings: !_uglified.default,
  virtualized: true,
  scrollOneDirectionOnly: false,
  useTransformPosition: !IS_EDGE && (0, _src.hasSticky)(),
  useTransformRowPosition: false,
  recycleCoveredRows: true,
  scrollProps: {}
};
var propTypes = {
  applyScrollLeft: _propTypes.default.func,
  naturalRowHeight: _propTypes.default.bool,
  count: function count(props) {
    var count = props.count;
    if (count == null) {
      throw new Error("\"count\" is required!");
    }
    if (typeof count != 'number') {
      throw new Error("\"count\" should be a number!");
    }
    if (count < 0) {
      throw new Error("\"count\" should be >= 0!");
    }
  },
  getRowFocusableElements: _propTypes.default.func,
  contain: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),
  rowContain: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),
  handleRowKeyDown: _propTypes.default.func,
  rafOnResize: _propTypes.default.bool,
  checkResizeDelay: _propTypes.default.number,
  extraRows: _propTypes.default.number,
  measureSize: _propTypes.default.func,
  minRowHeight: _propTypes.default.number,
  minRowWidth: _propTypes.default.number,
  nativeScroll: _propTypes.default.bool,
  onRenderRangeChange: _propTypes.default.func,
  shouldFocusNextRow: _propTypes.default.func,
  onResize: _propTypes.default.func,
  onScrollStart: _propTypes.default.func,
  onScrollbarsChange: _propTypes.default.func,
  onScrollStop: _propTypes.default.func,
  pureRows: _propTypes.default.bool,
  rowHeight: _propTypes.default.number,
  renderRow: _propTypes.default.func.isRequired,
  renderRowContainer: _propTypes.default.func,
  renderSizer: _propTypes.default.func,
  showEmptyRows: _propTypes.default.bool,
  useTransformPosition: _propTypes.default.bool,
  useTransformRowPosition: _propTypes.default.bool,
  scrollProps: _propTypes.default.object,
  showWarnings: _propTypes.default.bool,
  renderView: _propTypes.default.func,
  renderScroller: _propTypes.default.func,
  renderScrollerSpacer: _propTypes.default.func,
  shouldComponentUpdate: _propTypes.default.func,
  shouldPreventDefaultTabKeyOnRow: _propTypes.default.func,
  theme: _propTypes.default.string,
  overscrollBehavior: _propTypes.default.string,
  virtualized: _propTypes.default.bool,
  scrollOneDirectionOnly: _propTypes.default.bool,
  onStickyRowUpdate: _propTypes.default.func,
  stickyRows: _propTypes.default.object,
  recycleCoveredRows: _propTypes.default.bool,
  stickyOffset: _propTypes.default.number,
  enableRowSpan: _propTypes.default.bool,
  rowHeightManager: function rowHeightManager(props, propName) {
    var value = props[propName];
    if (!value) {
      return new Error("\n You have to provide a \"rowHeightManager\" property, which should be an instance of RowHeightManager.\n ");
    }
    if (!(value instanceof _RowHeightManager.default)) {
      return new Error('The "rowHeightManager" property should be an instance of RowHeightManager!');
    }
  }
};
exports.propTypes = propTypes;
InovuaVirtualList.propTypes = propTypes;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-list-pro/src/getVisibleRange.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-list-pro/src/getVisibleRange.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = function _default(_ref) {
  var size = _ref.size,
    scrollTop = _ref.scrollTop,
    count = _ref.count,
    rowHeightManager = _ref.rowHeightManager,
    naturalRowHeight = _ref.naturalRowHeight,
    showEmptyRows = _ref.showEmptyRows;
  var start = rowHeightManager.getRowAt(scrollTop);
  var end = naturalRowHeight ? rowHeightManager.getRowAt(scrollTop + size.height) + 1 : start + Math.ceil(size.height / rowHeightManager.getDefaultRowHeight());
  if (!showEmptyRows) {
    end = Math.min(count - 1, end);
  }
  return {
    start: start,
    end: end
  };
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-list-pro/src/index.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-list-pro/src/index.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "RowHeightManager", ({
  enumerable: true,
  get: function get() {
    return _VirtualList.RowHeightManager;
  }
}));
exports["default"] = void 0;
Object.defineProperty(exports, "getScrollbarWidth", ({
  enumerable: true,
  get: function get() {
    return _VirtualList.getScrollbarWidth;
  }
}));
Object.defineProperty(exports, "propTypes", ({
  enumerable: true,
  get: function get() {
    return _VirtualList.propTypes;
  }
}));
Object.defineProperty(exports, "shouldComponentUpdate", ({
  enumerable: true,
  get: function get() {
    return _VirtualList.shouldComponentUpdate;
  }
}));
var _VirtualList = _interopRequireWildcard(__webpack_require__(/*! ./VirtualList */ "./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-list-pro/src/VirtualList.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var _default = _VirtualList.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-list-pro/src/renderRows.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-list-pro/src/renderRows.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _Row = _interopRequireDefault(__webpack_require__(/*! ./Row */ "./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-list-pro/src/Row.js"));
var _default = function _default(_ref) {
  var count = _ref.count,
    renderRow = _ref.renderRow,
    rowHeight = _ref.rowHeight,
    showEmptyRows = _ref.showEmptyRows,
    ref = _ref.ref,
    pure = _ref.pure,
    sticky = _ref.sticky,
    notifyRowSpan = _ref.notifyRowSpan,
    rowHeightManager = _ref.rowHeightManager,
    onRowHeightChange = _ref.onRowHeightChange,
    onKeyDown = _ref.onKeyDown,
    onFocus = _ref.onFocus,
    onMount = _ref.onMount,
    onUnmount = _ref.onUnmount,
    rowContain = _ref.rowContain,
    naturalRowHeight = _ref.naturalRowHeight,
    useTransformPosition = _ref.useTransformPosition,
    _ref$from = _ref.from,
    from = _ref$from === void 0 ? 0 : _ref$from,
    _ref$to = _ref.to,
    to = _ref$to === void 0 ? count : _ref$to,
    virtualized = _ref.virtualized;
  var rows = [];
  for (var i = from; i < to; i++) {
    rows.push(_react.default.createElement(_Row.default, {
      contain: rowContain,
      pure: pure,
      ref: ref,
      sticky: sticky,
      rowHeight: rowHeight,
      useTransformPosition: useTransformPosition,
      onRowHeightChange: onRowHeightChange,
      notifyRowSpan: notifyRowSpan,
      key: i,
      index: i,
      count: count,
      renderRow: renderRow,
      rowHeightManager: rowHeightManager,
      showEmptyRows: showEmptyRows,
      onKeyDown: onKeyDown,
      onFocus: onFocus,
      onMount: onMount,
      onUnmount: onUnmount,
      virtualized: virtualized,
      naturalRowHeight: naturalRowHeight
    }));
  }
  return rows;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-list-pro/src/sealedObjectFactory.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-list-pro/src/sealedObjectFactory.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var DEFAULTS = {};
var _default = function _default() {
  var shape = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULTS;
  var sealed = Object.seal ? Object.seal(shape) : {};
  return sealed;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-scroll-container-pro/src/StickyScroller.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-scroll-container-pro/src/StickyScroller.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
Object.defineProperty(exports, "getScrollbarWidth", ({
  enumerable: true,
  get: function get() {
    return _getScrollbarWidth.default;
  }
}));
Object.defineProperty(exports, "isMobile", ({
  enumerable: true,
  get: function get() {
    return _isMobile.default;
  }
}));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _reactDom = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _src = _interopRequireDefault(__webpack_require__(/*! ../../react-scroll-container-pro/src */ "./node_modules/@inovua/reactdatagrid-community/packages/react-scroll-container-pro/src/index.js"));
var _reactCleanProps = _interopRequireDefault(__webpack_require__(/*! ../../react-clean-props */ "./node_modules/@inovua/reactdatagrid-community/packages/react-clean-props/index.js"));
var _hasSticky = __webpack_require__(/*! ../../hasSticky */ "./node_modules/@inovua/reactdatagrid-community/packages/hasSticky/index.js");
var _smoothScrollTo = _interopRequireDefault(__webpack_require__(/*! ../../smoothScrollTo */ "./node_modules/@inovua/reactdatagrid-community/packages/smoothScrollTo/index.js"));
var _isMobile = _interopRequireDefault(__webpack_require__(/*! ../../isMobile */ "./node_modules/@inovua/reactdatagrid-community/packages/isMobile/index.js"));
var _getScrollbarWidth = _interopRequireDefault(__webpack_require__(/*! ../../getScrollbarWidth */ "./node_modules/@inovua/reactdatagrid-community/packages/getScrollbarWidth/index.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../join */ "./node_modules/@inovua/reactdatagrid-community/packages/join/index.js"));
var _isSafari = _interopRequireDefault(__webpack_require__(/*! ../../isSafari */ "./node_modules/@inovua/reactdatagrid-community/packages/isSafari.js"));
var _src2 = _interopRequireDefault(__webpack_require__(/*! ../../react-notify-resize/src */ "./node_modules/@inovua/reactdatagrid-community/packages/react-notify-resize/src/index.js"));
var _getGlobal = __webpack_require__(/*! ../../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var globalObject = (0, _getGlobal.getGlobal)();
var STICKY_STYLE = {
  position: _hasSticky.sticky,
  top: 0,
  left: 0
};
var WRAPPER_STYLE = {
  display: 'block',
  position: 'absolute',
  flex: '',
  top: 0,
  left: 0,
  right: 0,
  bottom: 0
};
var ua = globalObject.navigator ? globalObject.navigator.userAgent : '';
var IS_EDGE = ua.indexOf('Edge/') !== -1;
var StickyVirtualScrollContainer = function (_React$Component) {
  (0, _inherits2.default)(StickyVirtualScrollContainer, _React$Component);
  var _super = _createSuper(StickyVirtualScrollContainer);
  function StickyVirtualScrollContainer(_props) {
    var _this;
    (0, _classCallCheck2.default)(this, StickyVirtualScrollContainer);
    _this = _super.call(this, _props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "initializeScrollLeftForRtl", function () {
      var fixScrollLeft = function fixScrollLeft() {
        if (_this.scroller && _this.scrollLeftMax) {
          _this.scroller.getScrollerNode().scrollLeft = 1000000000;
          return;
        }
        requestAnimationFrame(fixScrollLeft);
      };
      requestAnimationFrame(fixScrollLeft);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onResize", function () {
      if (_this.props.onResize) {
        var _this$props;
        (_this$props = _this.props).onResize.apply(_this$props, arguments);
      }
      _this.sync();
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "sync", function () {
      _this.scroller.sync();
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "rafSync", function () {
      if (_this.scroller.rafSync) {
        _this.scroller.rafSync();
      } else {
        _this.scroller.sync();
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "smoothScrollTo", function (newValue, config, callback) {
      (0, _smoothScrollTo.default)(_this.scroller, newValue, config, callback);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getScrollbars", function () {
      return {
        horizontal: _this.hasHorizontalScrollbar(),
        vertical: _this.hasVerticalScrollbar()
      };
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "hasScrollbar", function (orientation) {
      return _this.scroller.hasScrollbar.call((0, _assertThisInitialized2.default)(_this), orientation);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "hasVerticalScrollbar", function () {
      return _this.hasScrollbar('vertical');
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "hasHorizontalScrollbar", function () {
      return _this.hasScrollbar('horizontal');
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "focus", function () {
      _this.scroller.focus();
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onFocus", function (event) {
      if (event.target === _this.domNode) {
        _this.focus();
      }
      if (_this.props.onFocus) {
        _this.props.onFocus(event);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getTransformNode", function () {
      return _this.viewNode.children[0].children[0];
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getScrollSize", function () {
      var node = _this.getTransformNode();
      var size;
      if (_this.props.getScrollSize) {
        size = _this.props.getScrollSize(node);
      } else {
        size = {
          width: node.scrollWidth,
          height: node.scrollHeight
        };
      }
      return size;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getScrollPosition", function () {
      return _this.scroller.getScrollPosition();
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "updateScrollStyle", function (scrollPos, prevScrollPos) {
      scrollPos = scrollPos || _this.getScrollPosition();
      var _scrollPos = scrollPos,
        scrollTop = _scrollPos.scrollTop,
        scrollLeft = _scrollPos.scrollLeft,
        scrollLeftMax = _scrollPos.scrollLeftMax;
      _this.scrollLeftMaxValue = scrollLeftMax;
      if (_this.props.onContainerScroll) {
        _this.props.onContainerScroll(scrollPos, prevScrollPos);
      }
      var node = _this.getTransformNode();
      var shouldApplyDefaultTransform = true;
      if (_this.props.applyScrollStyle) {
        shouldApplyDefaultTransform = _this.props.applyScrollStyle({
          scrollLeft: scrollLeft,
          scrollTop: scrollTop,
          scrollLeftMax: scrollLeftMax
        }, node) !== false;
      }
      if (shouldApplyDefaultTransform) {
        node.style.willChange = "transform";
        node.style.backfaceVisibility = "hidden";
        if (_this.props.useTransformToScroll) {
          node.style.transform = "translate3d(".concat(-scrollLeft, "px, ").concat(-scrollTop, "px, 0px)");
        } else {
          node.style.top = "".concat(-scrollTop, "px");
          node.style.left = "".concat(-scrollLeft, "px");
        }
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getBeforeHeight", function () {
      return _this.props.before ? _this.state.beforeElementSize.height || 0 : 0;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getAfterHeight", function () {
      return _this.props.after ? _this.state.afterElementSize.height || 0 : 0;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getBeforeAndAfterHeight", function () {
      return _this.getBeforeHeight() + _this.getAfterHeight();
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onViewResize", function () {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      var size = args[0];
      _this.setState({
        size: size
      }, function () {
        _this.rafSync();
      });
      if (_this.props.onViewResize) {
        var _this$props2;
        (_this$props2 = _this.props).onViewResize.apply(_this$props2, args);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderScrollerSpacer", function () {
      var spacerProps = {
        key: 'spacer',
        'data-name': 'spacer--sticky-scroller',
        style: _objectSpread({
          pointerEvents: 'none',
          position: 'absolute',
          top: 0,
          left: 0
        }, _this.state.size)
      };
      var result;
      if (_this.props.renderScrollerSpacer) {
        result = _this.props.renderScrollerSpacer(spacerProps, _this.state.size);
      }
      if (result === undefined) {
        result = _react.default.createElement("div", _objectSpread({}, spacerProps));
      }
      return result;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderScroller", function (scrollerProps) {
      var scrollerOffset = _this.props.nativeScroll ? 0 : -_this.getEmptyScrollOffset();
      var props = _objectSpread(_objectSpread({}, scrollerProps), {}, {
        'data-name': 'scroller',
        className: '',
        style: {
          display: 'block',
          position: 'absolute',
          WebkitOverflowScrolling: 'touch',
          top: 0,
          left: 0,
          right: scrollerOffset,
          bottom: scrollerOffset,
          overflow: _this.props.nativeScroll ? 'auto' : 'scroll'
        },
        children: [_this.props.extraChildren, scrollerProps.children, _this.renderScrollerSpacer()]
      });
      var result;
      if (_this.props.renderScroller) {
        result = _this.props.renderScroller(props);
      }
      if (result === undefined) {
        result = _react.default.createElement("div", _objectSpread({}, props));
      }
      return result;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getBefore", function () {
      var before = _this.props.before;
      if (!before) {
        return null;
      }
      return _react.default.cloneElement(before, {
        style: _objectSpread({
          position: 'absolute',
          top: 0
        }, before.props.style),
        children: _react.default.createElement(_react.default.Fragment, null, before.props.children, _react.default.createElement(_src2.default, {
          notifyOnMount: true,
          onResize: _this.onBeforeElementResize
        }))
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getAfter", function () {
      var after = _this.props.after;
      if (!after) {
        return null;
      }
      return _react.default.cloneElement(after, {
        style: _objectSpread({
          position: 'absolute',
          bottom: 0
        }, after.props.style),
        children: _react.default.createElement(_react.default.Fragment, null, after.props.children, _react.default.createElement(_src2.default, {
          notifyOnMount: true,
          onResize: _this.onAfterElementResize
        }))
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onBeforeElementResize", function (size) {
      _this.setState({
        beforeElementSize: size
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onAfterElementResize", function (size) {
      _this.setState({
        afterElementSize: size
      });
    });
    _this.refView = function (c) {
      _this.viewNode = c ? (0, _reactDom.findDOMNode)(c) : null;
    };
    _this.refScroller = function (s) {
      _this.scroller = s;
      _this.scrollerNode = s ? s.getScrollerNode() : null;
    };
    _this.state = {
      size: {},
      beforeElementSize: {
        height: 0
      },
      afterElementSize: {
        height: 0
      }
    };
    return _this;
  }
  (0, _createClass2.default)(StickyVirtualScrollContainer, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.sync();
      if (this.props.rtl) {
        this.initializeScrollLeftForRtl();
      }
    }
  }, {
    key: "getDOMNode",
    value: function getDOMNode() {
      return this.scroller.getDOMNode();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (this.props.rtl) {
        if (prevProps.rtl !== this.props.rtl || prevProps.nativeScroll !== this.props.nativeScroll) {
          this.initializeScrollLeftForRtl();
        }
      }
    }
  }, {
    key: "scrollTop",
    get: function get() {
      return this.scroller.scrollTop;
    },
    set: function set(value) {
      this.scroller.scrollTop = value;
    }
  }, {
    key: "scrollTopMax",
    get: function get() {
      return this.scroller.scrollTopMax;
    }
  }, {
    key: "scrollLeft",
    get: function get() {
      return this.scroller.scrollLeft;
    },
    set: function set(value) {
      this.scroller.scrollLeft = this.props.rtl && value < 0 ? this.scrollLeftMax + value : value;
    }
  }, {
    key: "scrollLeftMax",
    get: function get() {
      return this.scrollLeftMaxValue != null ? this.scrollLeftMaxValue : this.scroller.scrollLeftMax;
    }
  }, {
    key: "getEmptyScrollOffset",
    value: function getEmptyScrollOffset() {
      return this.props.emptyScrollOffset == null ? (0, _getScrollbarWidth.default)() : this.props.emptyScrollOffset;
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;
      var props = this.props;
      var style = props.style,
        className = props.className;
      var rtl = props.rtl,
        contain = props.contain;
      if (contain) {
        style = _objectSpread({}, style);
        if (contain === true) {
          style.contain = 'style layout paint';
        } else {
          style.contain = contain;
        }
      }
      if (this.props.rtl) {
        style = _objectSpread(_objectSpread({}, style), {}, {
          direction: 'ltr'
        });
      }
      className = (0, _join.default)(className, 'inovua-react-virtual-scroll-container', rtl && 'inovua-react-virtual-scroll-container--rtl', 'inovua-react-virtual-scroll-container--sticky-strategy');
      var stickyStyle = STICKY_STYLE;
      if (this.props.rtl) {
        stickyStyle = _objectSpread(_objectSpread({}, stickyStyle), {}, {
          direction: 'rtl'
        });
      }
      var beforeHeight = this.getBeforeHeight();
      var afterHeight = this.getAfterHeight();
      var renderView = function renderView(viewProps) {
        var viewDOMProps = {
          ref: _this2.refView,
          style: stickyStyle,
          key: 'view',
          'data-name': 'view',
          children: _react.default.createElement("div", {
            style: {
              position: 'absolute',
              minWidth: '100%',
              direction: 'ltr'
            }
          }, _react.default.createElement("div", {
            style: {
              position: 'absolute',
              overflow: 'visible',
              minWidth: '100%',
              direction: _this2.props.rtl ? 'rtl' : 'ltr'
            }
          }, viewProps.children[0], viewProps.children[1]))
        };
        var result;
        if (_this2.props.renderView) {
          result = _this2.props.renderView(viewDOMProps);
        }
        if (result === undefined) {
          result = _react.default.createElement("div", _objectSpread({}, viewDOMProps));
        }
        return result;
      };
      var cleanedProps = (0, _reactCleanProps.default)(this.props, this.constructor.propTypes);
      if (this.props.nativeScroll) {
        cleanedProps.scrollbars = false;
      }
      return _react.default.createElement(_src.default, _objectSpread(_objectSpread({
        tabIndex: -1,
        display: this.props.display || 'block',
        className: className,
        wrapperStyle: _objectSpread(_objectSpread({}, WRAPPER_STYLE), {}, {
          top: beforeHeight,
          bottom: afterHeight
        })
      }, cleanedProps), {}, {
        style: style,
        before: this.getBefore(),
        after: this.getAfter(),
        nativeScroll: this.props.nativeScroll,
        emptyScrollOffset: 0,
        getScrollSize: this.getScrollSize,
        renderScroller: this.renderScroller,
        renderView: renderView,
        onViewResize: this.onViewResize,
        onContainerScroll: this.updateScrollStyle,
        ref: this.refScroller
      }));
    }
  }]);
  return StickyVirtualScrollContainer;
}(_react.default.Component);
StickyVirtualScrollContainer.propTypes = {
  contain: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),
  before: _propTypes.default.element,
  after: _propTypes.default.element,
  extraChildren: _propTypes.default.node,
  renderScrollerSpacer: _propTypes.default.func,
  applyScrollStyle: _propTypes.default.func,
  useTransformToScroll: _propTypes.default.bool,
  preventRtlInherit: _propTypes.default.bool
};
StickyVirtualScrollContainer.defaultProps = {
  useTransformToScroll: !IS_EDGE,
  shouldAllowScrollbars: function shouldAllowScrollbars(props, scrollbarWidth) {
    if (props.nativeScroll) {
      return false;
    }
    if (scrollbarWidth) {
      return true;
    }
    if (_isMobile.default || (0, _isSafari.default)()) {
      return false;
    }
    return true;
  }
};
var _default = StickyVirtualScrollContainer;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-scroll-container-pro/src/index.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-scroll-container-pro/src/index.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = exports.NativeScrollContainer = void 0;
Object.defineProperty(exports, "getScrollbarWidth", ({
  enumerable: true,
  get: function get() {
    return _getScrollbarWidth.default;
  }
}));
Object.defineProperty(exports, "hasSticky", ({
  enumerable: true,
  get: function get() {
    return _hasSticky.default;
  }
}));
Object.defineProperty(exports, "isMobile", ({
  enumerable: true,
  get: function get() {
    return _StickyScroller.isMobile;
  }
}));
var _getScrollbarWidth = _interopRequireDefault(__webpack_require__(/*! ../../../packages/getScrollbarWidth */ "./node_modules/@inovua/reactdatagrid-community/packages/getScrollbarWidth/index.js"));
var _hasSticky = _interopRequireDefault(__webpack_require__(/*! ../../../packages/hasSticky */ "./node_modules/@inovua/reactdatagrid-community/packages/hasSticky/index.js"));
var _StickyScroller = _interopRequireWildcard(__webpack_require__(/*! ./StickyScroller */ "./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-scroll-container-pro/src/StickyScroller.js"));
var _old = _interopRequireDefault(__webpack_require__(/*! ./old */ "./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-scroll-container-pro/src/old/index.js"));
var _NativeScrollContainer = _interopRequireDefault(__webpack_require__(/*! ./old/NativeScrollContainer */ "./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-scroll-container-pro/src/old/NativeScrollContainer.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var _default = (0, _hasSticky.default)() ? _StickyScroller.default : _old.default;
exports["default"] = _default;
var NativeScrollContainer = (0, _hasSticky.default)() ? _StickyScroller.default : _NativeScrollContainer.default;
exports.NativeScrollContainer = NativeScrollContainer;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-scroll-container-pro/src/old/NativeScrollContainer.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-scroll-container-pro/src/old/NativeScrollContainer.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _src = __webpack_require__(/*! ../../../../packages/react-scroll-container-pro/src */ "./node_modules/@inovua/reactdatagrid-community/packages/react-scroll-container-pro/src/index.js");
var _debounce = _interopRequireDefault(__webpack_require__(/*! ../../../../packages/debounce */ "./node_modules/@inovua/reactdatagrid-community/packages/debounce/index.js"));
var _getScrollbarWidth = _interopRequireDefault(__webpack_require__(/*! ../../../../packages/getScrollbarWidth */ "./node_modules/@inovua/reactdatagrid-community/packages/getScrollbarWidth/index.js"));
var _isSafari = _interopRequireDefault(__webpack_require__(/*! ../../../../packages/isSafari */ "./node_modules/@inovua/reactdatagrid-community/packages/isSafari.js"));
var _ScrollerFactory = _interopRequireDefault(__webpack_require__(/*! ./ScrollerFactory */ "./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-scroll-container-pro/src/old/ScrollerFactory.js"));
var _getGlobal = __webpack_require__(/*! ../../../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var globalObject = (0, _getGlobal.getGlobal)();
var raf = globalObject.requestAnimationFrame;
var emptyObject = {};
var SCROLLBAR_WIDTH = (0, _getScrollbarWidth.default)();
var onScrollbarsChange = function onScrollbarsChange(scrollbars) {
  if (SCROLLBAR_WIDTH) {
    var style = this.childNode.style;
    var rtl = this.props.rtl;
    var right = scrollbars.vertical ? SCROLLBAR_WIDTH : 0;
    var bottom = scrollbars.horizontal ? SCROLLBAR_WIDTH : 0;
    style ? style[rtl && !(0, _isSafari.default)() ? 'left' : 'right'] = "".concat(right, "px") : null;
    style ? style.bottom = "".concat(bottom, "px") : null;
  }
  if (this.props.onScrollbarsChange) {
    this.props.onScrollbarsChange(scrollbars);
  }
};
var onStop = function onStop(scrollPos, prevScrollPos) {
  this.scrollStarted = false;
  if (this.props.onScrollStop) {
    this.props.onScrollStop(scrollPos, prevScrollPos);
  }
};
var onScroll = function onScroll(_ref) {
  var target = _ref.target;
  var _this$props = this.props,
    onScrollStart = _this$props.onScrollStart,
    onScrollStop = _this$props.onScrollStop;
  var startStop = !!(onScrollStart || onScrollStop);
  var scrollTop = target.scrollTop,
    scrollLeft = target.scrollLeft;
  var scrollPos = {
    scrollTop: scrollTop,
    scrollLeft: scrollLeft
  };
  var prevScrollPos = this.currentScrollPosition || emptyObject;
  var prevScrollTop = prevScrollPos.scrollTop,
    prevScrollLeft = prevScrollPos.scrollLeft;
  if (startStop) {
    if (!this.scrollStarted) {
      if (onScrollStart) {
        onScrollStart(scrollPos, prevScrollPos);
      }
    }
  }
  var scrollVertical = false;
  var scrollHorizontal = false;
  if (this.props.onContainerScroll) {
    this.props.onContainerScroll(scrollPos, prevScrollPos);
  }
  var scrollTopChange = scrollTop !== prevScrollTop;
  if (scrollTopChange) {
    scrollVertical = true;
    if (this.props.onContainerScrollVertical) {
      this.props.onContainerScrollVertical(scrollTop, prevScrollTop);
    }
    if (this.props.onContainerScrollVerticalMin && scrollTop === 0) {
      this.props.onContainerScrollVerticalMin(0);
    }
    if (this.props.onContainerScrollVerticalMax && scrollTop === this.scrollTopMax) {
      this.props.onContainerScrollVerticalMax(scrollTop);
    }
  }
  var scrollLeftChange = scrollLeft !== prevScrollLeft;
  if (scrollLeftChange) {
    scrollHorizontal = true;
    if (this.props.onContainerScrollHorizontal) {
      this.props.onContainerScrollHorizontal(scrollLeft, prevScrollLeft);
    }
    if (this.props.onContainerScrollHorizontalMin && scrollLeft === 0) {
      this.props.onContainerScrollHorizontalMin(0);
    }
    if (this.props.onContainerScrollHorizontalMax && scrollLeft === this.scrollLeftMax) {
      this.props.onContainerScrollHorizontalMax(scrollLeft);
    }
  }
  if (startStop && (scrollTopChange || scrollLeftChange)) {
    if (!this.scrollStarted || this.scrollStarted.vertical !== scrollVertical || this.scrollStarted.horizontal !== scrollHorizontal) {
      this.scrollStarted = {
        horizontal: scrollHorizontal,
        vertical: scrollVertical
      };
    }
    this.onStop(scrollPos, prevScrollPos);
  }
  this.currentScrollPosition = scrollPos;
};
var InovuaNativeScrollContainer = (0, _ScrollerFactory.default)('InovuaNativeScrollContainer', {
  init: function init(props) {
    var _this = this;
    this.refScroller = function (s) {
      _this.scroller = s;
    };
    this.onStop = (0, _debounce.default)(onStop.bind(this), props.scrollStopDelay, {
      leading: false
    });
    this.onScrollerScroll = function (event) {
      if (event.target === _this.scroller) {
        raf(function () {
          _this.updateScrollStyle();
        });
        onScroll.call(_this, event);
        _this.onScrollIntent();
      }
      if (_this.props.onScroll) {
        _this.props.onScroll(event);
      }
    };
  },
  prepareClassName: function prepareClassName(className) {
    return "".concat(className, " inovua-react-virtual-scroll-container--native");
  },
  sync: function sync() {
    if (!this.oldScrollbars) {
      this.oldScrollbars = this.getScrollbars();
      return;
    }
    var scrollbars = this.getScrollbars();
    if (scrollbars.vertical !== this.oldScrollbars.vertical || scrollbars.horizontal !== this.oldScrollbars.horizontal) {
      onScrollbarsChange.call(this, scrollbars);
    }
    this.oldScrollbars = scrollbars;
  },
  getClientSize: function getClientSize() {
    var scroller = this.scroller;
    return {
      height: scroller.clientHeight,
      width: scroller.clientWidth
    };
  },
  hasScrollbar: function hasScrollbar(orientation) {
    var scroller = this.scroller;
    return orientation === 'horizontal' ? scroller.scrollWidth > scroller.clientWidth : scroller.scrollHeight > scroller.clientHeight;
  },
  getScrollLeftMax: function getScrollLeftMax() {
    var scroller = this.scroller;
    return scroller.scrollWidth - scroller.clientWidth;
  },
  getScrollTopMax: function getScrollTopMax() {
    var scroller = this.scroller;
    return scroller.scrollHeight - scroller.clientHeight;
  },
  getScrollPosition: function getScrollPosition() {
    return {
      scrollTop: this.scrollTop,
      scrollLeft: this.scrollLeft
    };
  },
  renderScroller: function renderScroller(_ref2) {
    var content = _ref2.content,
      spacer = _ref2.spacer,
      scrollerStyle = _ref2.scrollerStyle,
      props = _ref2.props;
    var renderScroller = props.renderScroller;
    var className = 'inovua-react-virtual-scroll-container__scroll-container';
    if (props.avoidRepaintOnScroll) {
      className += " ".concat(className, "--avoid-repaint");
    }
    var domProps = {
      key: 'scroller',
      tabIndex: -1,
      onScroll: this.onScrollerScroll,
      ref: this.refScroller,
      style: scrollerStyle,
      className: className,
      children: [content, spacer]
    };
    var result = typeof renderScroller === 'function' ? renderScroller(domProps) : _react.default.createElement("div", _objectSpread({}, domProps));
    return result;
  }
});
InovuaNativeScrollContainer.propTypes = _objectSpread(_objectSpread({
  renderScrollerSpacer: _propTypes.default.func
}, _src.propTypes), InovuaNativeScrollContainer.propTypes);
InovuaNativeScrollContainer.defaultProps.scrollStopDelay = 150;
var _default = InovuaNativeScrollContainer;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-scroll-container-pro/src/old/ScrollerFactory.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-scroll-container-pro/src/old/ScrollerFactory.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/@babel/runtime/helpers/classCallCheck.js"));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/@babel/runtime/helpers/createClass.js"));
var _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ "./node_modules/@babel/runtime/helpers/inherits.js"));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _reactCleanProps = _interopRequireDefault(__webpack_require__(/*! ../../../../packages/react-clean-props */ "./node_modules/@inovua/reactdatagrid-community/packages/react-clean-props/index.js"));
var _debounce = _interopRequireDefault(__webpack_require__(/*! ../../../../packages/debounce */ "./node_modules/@inovua/reactdatagrid-community/packages/debounce/index.js"));
var _src = _interopRequireDefault(__webpack_require__(/*! ../../../../packages/react-notify-resize/src */ "./node_modules/@inovua/reactdatagrid-community/packages/react-notify-resize/src/index.js"));
var _smoothScrollTo = _interopRequireDefault(__webpack_require__(/*! ../../../../packages/smoothScrollTo */ "./node_modules/@inovua/reactdatagrid-community/packages/smoothScrollTo/index.js"));
var _uglified = _interopRequireDefault(__webpack_require__(/*! ../../../../packages/uglified */ "./node_modules/@inovua/reactdatagrid-community/packages/uglified/index.js"));
var _join = _interopRequireDefault(__webpack_require__(/*! ../../../../packages/join */ "./node_modules/@inovua/reactdatagrid-community/packages/join/index.js"));
var _isSafari = _interopRequireDefault(__webpack_require__(/*! ../../../../packages/isSafari */ "./node_modules/@inovua/reactdatagrid-community/packages/isSafari.js"));
var _getScrollbarWidth = _interopRequireDefault(__webpack_require__(/*! ../../../../packages/getScrollbarWidth */ "./node_modules/@inovua/reactdatagrid-community/packages/getScrollbarWidth/index.js"));
var _getGlobal = __webpack_require__(/*! ../../../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var globalObject = (0, _getGlobal.getGlobal)();
var raf = globalObject.requestAnimationFrame;
var HAS_NEGATIVE_SCROLL;
var ua = globalObject.navigator ? globalObject.navigator.userAgent : '';
var IS_EDGE = ua.indexOf('Edge/') !== -1;
var IS_MS_BROWSER = IS_EDGE || ua.indexOf('Trident') !== -1;
var IS_IE = IS_MS_BROWSER && !IS_EDGE;
var IS_FF = ua.toLowerCase().indexOf('firefox') > -1;
var SCROLLER_Z_INDEX = 1000;
var SCROLLER_STYLE = {
  overflow: 'auto',
  position: 'static',
  flex: '1 1 auto',
  WebkitOverflowScrolling: 'auto'
};
if (IS_EDGE) {
  SCROLLER_STYLE.position = 'relative';
} else {
  SCROLLER_STYLE.zIndex = SCROLLER_Z_INDEX;
}
var _default = function _default(displayName, CONFIG) {
  var VirtualScrollContainer = function (_React$Component) {
    (0, _inherits2.default)(VirtualScrollContainer, _React$Component);
    var _super = _createSuper(VirtualScrollContainer);
    function VirtualScrollContainer(props) {
      var _this;
      (0, _classCallCheck2.default)(this, VirtualScrollContainer);
      _this = _super.call(this, props);
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onResize", function () {
        if (_this.props.onResize) {
          var _this$props;
          (_this$props = _this.props).onResize.apply(_this$props, arguments);
        }
        _this.sync();
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "sync", function () {
        if (!_this.domNode) {
          return;
        }
        CONFIG.sync.call((0, _assertThisInitialized2.default)(_this));
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "smoothScrollTo", function (newValue, config, callback) {
        (0, _smoothScrollTo.default)(_this.scroller, newValue, config, callback);
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getScrollbars", function () {
        return {
          horizontal: _this.hasHorizontalScrollbar(),
          vertical: _this.hasVerticalScrollbar()
        };
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "hasScrollbar", function (orientation) {
        return CONFIG.hasScrollbar.call((0, _assertThisInitialized2.default)(_this), orientation);
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "hasVerticalScrollbar", function () {
        return _this.hasScrollbar('vertical');
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "hasHorizontalScrollbar", function () {
        return _this.hasScrollbar('horizontal');
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "focus", function () {
        _this.scroller.focus();
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onFocus", function (event) {
        if (event.target === _this.domNode) {
          _this.focus();
        }
        if (_this.props.onFocus) {
          _this.props.onFocus(event);
        }
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onChildResize", function (scrollSize) {
        _this.setState({
          scrollSize: scrollSize
        }, _this.sync);
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getScrollPosition", function () {
        return CONFIG.getScrollPosition.call((0, _assertThisInitialized2.default)(_this));
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "updateScrollStyle", function (scrollPos) {
        scrollPos = scrollPos || _this.getScrollPosition();
        var _scrollPos = scrollPos,
          scrollTop = _scrollPos.scrollTop;
        var _scrollPos2 = scrollPos,
          scrollLeft = _scrollPos2.scrollLeft;
        if (_this.props.rtl && scrollLeft < 0) {
          HAS_NEGATIVE_SCROLL = true;
        }
        var node = _this.childNode.current ? _this.childNode.current.firstChild : null;
        if (_this.props.rtl) {
          if (!HAS_NEGATIVE_SCROLL) {
            if (IS_MS_BROWSER) {
              scrollLeft = -scrollLeft;
            } else {
              scrollLeft = -(_this.scrollLeftMax - scrollLeft);
            }
          }
        }
        if (_this.props.applyScrollStyle) {
          _this.props.applyScrollStyle({
            scrollLeft: scrollLeft,
            scrollTop: scrollTop
          }, node);
        } else {
          node.style.top = "".concat(-scrollTop, "px");
          node.style.left = "".concat(-scrollLeft, "px");
        }
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onNotifyResizeMount", function () {
        _this.notifierMounted = true;
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getBefore", function () {
        var before = _this.props.before;
        if (!before) {
          return null;
        }
        return _react.default.cloneElement(before, {
          key: 'before',
          style: _objectSpread({
            position: 'absolute',
            top: 0,
            zIndex: 2 * SCROLLER_Z_INDEX + 1
          }, before.props.style),
          children: _react.default.createElement(_react.default.Fragment, null, before.props.children, _react.default.createElement(_src.default, {
            notifyOnMount: true,
            onResize: _this.onBeforeElementResize
          }))
        });
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getAfter", function () {
        var after = _this.props.after;
        if (!after) {
          return null;
        }
        var bottom = _this.props.nativeScroll ? _this.oldScrollbars && _this.oldScrollbars.horizontal ? (0, _getScrollbarWidth.default)() : 0 : 0;
        return _react.default.cloneElement(after, {
          key: 'after',
          style: _objectSpread(_objectSpread({
            position: 'absolute',
            zIndex: 2 * SCROLLER_Z_INDEX + 1
          }, after.props.style), {}, {
            bottom: bottom
          }),
          children: _react.default.createElement(_react.default.Fragment, null, after.props.children, _react.default.createElement(_src.default, {
            notifyOnMount: true,
            onResize: _this.onAfterElementResize
          }))
        });
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getBeforeHeight", function () {
        return _this.props.before ? _this.state.beforeElementSize.height || 0 : 0;
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getAfterHeight", function () {
        return _this.props.after ? _this.state.afterElementSize.height || 0 : 0;
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onBeforeElementResize", function (size) {
        _this.setState({
          beforeElementSize: size
        });
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onAfterElementResize", function (size) {
        _this.setState({
          afterElementSize: size
        });
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "scrollIntoView", function (_ref) {
        var target = _ref.target;
        if (target === _this.childNode.current) {
          if (target.scrollTop !== 0) {
            _this.scrollTop += target.scrollTop;
            target.scrollTop = 0;
          }
          if (target.scrollLeft !== 0) {
            _this.scrollLeft += target.scrollLeft;
            target.scrollLeft = 0;
          }
        }
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onScrollIntent", function () {
        if (!_this.wheelCapturedOnScroller || IS_EDGE) {
          return;
        }
        _this.clear();
        _this.lazyRestorePointerEvents();
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "lazyRestorePointerEvents", function () {
        if (_this.childNode.current && _this.wheelCapturedOnScroller) {
          _this.clear();
          _this.rafHandle = raf(function () {
            _this.wheelCapturedOnScroller = false;
            delete _this.rafHandle;
            _this.childNode.current.style.pointerEvents = 'auto';
          });
        }
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onWheelEvent", function (event) {
        if ((0, _isSafari.default)() && globalObject.WheelEvent) {
          _this.scrollerNode.dispatchEvent(new WheelEvent('wheel', event.nativeEvent));
          event.stopPropagation();
          event.preventDefault();
          return;
        }
        _this.childNode.current.style.pointerEvents = 'none';
        _this.wheelCapturedOnScroller = true;
        event.stopPropagation();
        var isProbablyChrome = !IS_MS_BROWSER && !IS_FF && !(0, _isSafari.default)();
        var now = Date.now ? Date.now() : +new Date();
        if (isProbablyChrome) {
          if (now - _this.wheelEventTimestamp < 150) {
            event.preventDefault();
          }
        } else {
          event.preventDefault();
        }
        _this.wheelEventTimestamp = now;
        _this.onScrollIntent();
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "clear", function () {
        if (_this.rafHandle) {
          cancelAnimationFrame(_this.rafHandle);
          _this.rafHandle = null;
        }
      });
      _this.wheelEventTimestamp = 0;
      _this.lazyRestorePointerEvents = (0, _debounce.default)(_this.lazyRestorePointerEvents, props.pointerEventsRestoreDelay, {
        leading: false,
        trailing: true
      });
      _this.childNode = (0, _react.createRef)();
      _this.refThis = function (c) {
        _this.domNode = c;
      };
      if (CONFIG.init) {
        CONFIG.init.call((0, _assertThisInitialized2.default)(_this), props);
      }
      _this.state = {
        beforeElementSize: {
          height: 0
        },
        afterElementSize: {
          height: 0
        }
      };
      return _this;
    }
    (0, _createClass2.default)(VirtualScrollContainer, [{
      key: "ensureNonStaticStyle",
      value: function ensureNonStaticStyle(style, domNode) {
        if (!this.props.forceNonStaticPosition) {
          return style;
        }
        style = style || {};
        var _style = style,
          position = _style.position;
        var nonStatic = position === 'relative' || position === 'absolute';
        if (nonStatic) {
          return style;
        }
        if (domNode) {
          position = globalObject.getComputedStyle(domNode).position;
          nonStatic = position === 'relative' || position === 'absolute';
          if (!nonStatic) {
            return Object.assign({}, style, {
              position: 'relative'
            });
          }
        }
        return Object.assign({}, style, {
          position: 'relative'
        });
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        if (this.props.showWarnings) {
          if (!this.props.scrollSize) {
            if (!this.notifierMounted) {
              console.warn("The component inside the ".concat(displayName, " has not rendered its children. Please either render its children, or specify a 'scrollSize' prop to determine the size of the scrolling content."));
            }
          }
          if (!this.props.forceNonStaticPosition && getComputedStyle(this.domNode).position === 'static') {
            console.warn("".concat(displayName, " has position: \"static\". It should have a non-static position!"));
          }
        }
        var contentNode = this.childNode.current ? this.childNode.current.firstChild : null;
        if (contentNode) {
          contentNode.style.willChange = 'transform';
        }
        if (this.props.rtl && !this.scrollLeft) {
          this.updateScrollStyle();
        }
        this.sync();
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        var prevScrollSize = prevProps.scrollSize;
        var scrollSize = this.props.scrollSize;
        if (prevScrollSize && !scrollSize) {
          this.sync();
        } else if (prevScrollSize && scrollSize) {
          if (prevScrollSize.width !== scrollSize.width || prevScrollSize.height !== scrollSize.height) {
            this.sync();
          }
        }
      }
    }, {
      key: "clientSize",
      get: function get() {
        return CONFIG.getClientSize.call(this);
      }
    }, {
      key: "scrollTopMax",
      get: function get() {
        return CONFIG.getScrollTopMax.call(this);
      }
    }, {
      key: "scrollLeftMax",
      get: function get() {
        return CONFIG.getScrollLeftMax.call(this);
      }
    }, {
      key: "scrollTop",
      get: function get() {
        return this.scroller.scrollTop;
      },
      set: function set(value) {
        this.scroller.scrollTop = value;
      }
    }, {
      key: "scrollLeft",
      get: function get() {
        return this.scroller.scrollLeft;
      },
      set: function set(value) {
        this.scroller.scrollLeft = value;
      }
    }, {
      key: "render",
      value: function render() {
        var props = this.props;
        var style = props.style,
          className = props.className;
        var rtl = props.rtl,
          inertialScroll = props.inertialScroll,
          useWheelCapture = props.useWheelCapture,
          contain = props.contain,
          renderView = props.renderView;
        style = Object.assign({}, this.ensureNonStaticStyle(style, this.domNode), {
          overflow: 'hidden',
          display: 'flex',
          alignItems: 'stretch',
          alignContent: 'stretch',
          flexFlow: 'column',
          flexWrap: 'nowrap',
          transform: 'translate3d(0px, 0px, 0px)'
        });
        if (contain) {
          if (contain === true) {
            style.contain = 'style layout paint';
          } else {
            style.contain = contain;
          }
        }
        className = (0, _join.default)(className, 'inovua-react-virtual-scroll-container', rtl && 'inovua-react-virtual-scroll-container--rtl');
        if (CONFIG.prepareClassName) {
          className = CONFIG.prepareClassName.call(this, className);
        }
        var content = _react.default.Children.only(props.children);
        var newContentProps = {};
        if (!this.props.scrollSize) {
          newContentProps.children = [_react.default.createElement(_src.default, {
            key: "notify-resize",
            onResize: this.onChildResize,
            notifyOnMount: true,
            ResizeObserver: this.props.ResizeObserver,
            useRaf: this.props.rafOnResize,
            checkResizeDelay: this.props.checkResizeDelay,
            onMount: this.onNotifyResizeMount
          }), content.props.children];
        }
        newContentProps.style = Object.assign({}, content.props.style, (0, _defineProperty2.default)({
          position: 'absolute',
          top: 0
        }, rtl ? 'right' : 'left', 0));
        var beforeHeight = this.getBeforeHeight();
        var useAbsolutePosition = IS_IE || IS_FF;
        var childStyle = {
          overflow: 'hidden',
          position: useAbsolutePosition ? 'absolute' : 'fixed',
          top: beforeHeight,
          left: 0,
          right: 0,
          bottom: 0
        };
        if (!useAbsolutePosition) {
          childStyle.backfaceVisibility = 'hidden';
          if ((0, _isSafari.default)()) {
            childStyle.WebkitBackfaceVisibility = 'hidden';
          }
        }
        if (!IS_EDGE) {
          childStyle.zIndex = 2 * SCROLLER_Z_INDEX;
        }
        var domProps = (0, _defineProperty2.default)({
          ref: this.childNode,
          style: childStyle,
          onScroll: this.scrollIntoView
        }, useWheelCapture ? 'onWheelCapture' : 'onWheel', IS_EDGE ? null : this.onWheelEvent);
        content = _react.default.createElement(_react.default.Fragment, null, this.getBefore(), _react.default.createElement("div", _objectSpread({
          key: "content"
        }, domProps), (0, _react.cloneElement)(content, newContentProps)), this.getAfter());
        var scrollSize = this.props.scrollSize || this.state.scrollSize;
        var afterHeight = this.getAfterHeight();
        var extraHeight = beforeHeight + afterHeight;
        if (extraHeight && scrollSize) {
          scrollSize = Object.assign({}, scrollSize, {
            height: scrollSize.height + extraHeight
          });
        }
        var spacer = _react.default.createElement("div", {
          "data-name": "spacer",
          key: "spacer",
          style: Object.assign({
            pointerEvents: 'none'
          }, scrollSize)
        });
        if (this.props.renderSpacer) {
          spacer = this.props.renderSpacer(spacer, {
            scrollSize: scrollSize
          });
        }
        var scrollerStyle = inertialScroll ? Object.assign({}, SCROLLER_STYLE, {
          WebkitOverflowScrolling: 'touch'
        }) : SCROLLER_STYLE;
        return _react.default.createElement("div", _objectSpread(_objectSpread({
          tabIndex: -1
        }, (0, _reactCleanProps.default)(this.props, this.constructor.propTypes)), {}, {
          onFocus: this.onFocus,
          style: style,
          className: className,
          ref: this.refThis
        }), _react.default.createElement(_src.default, {
          onResize: this.onResize,
          notifyOnMount: true,
          ResizeObserver: this.props.ResizeObserver,
          useRaf: this.props.rafOnResize,
          checkResizeDelay: this.props.checkResizeDelay,
          measureSize: this.props.measureSize
        }), CONFIG.renderScroller.call(this, {
          props: props,
          content: content,
          spacer: spacer,
          scrollerStyle: scrollerStyle,
          renderView: renderView
        }));
      }
    }]);
    return VirtualScrollContainer;
  }(_react.default.Component);
  VirtualScrollContainer.propTypes = {
    applyScrollStyle: _propTypes.default.func,
    avoidRepaintOnScroll: _propTypes.default.bool,
    forceNonStaticPosition: _propTypes.default.bool,
    hideNativeScrollbarIfPossible: _propTypes.default.bool,
    inertialScroll: _propTypes.default.bool,
    measureSize: _propTypes.default.func,
    onResize: _propTypes.default.func,
    contain: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),
    onScrollbarsChange: _propTypes.default.func,
    pointerEventsRestoreDelay: _propTypes.default.number,
    checkResizeDelay: _propTypes.default.number,
    rafOnResize: _propTypes.default.bool,
    rtl: _propTypes.default.bool,
    scrollSize: _propTypes.default.shape({
      height: _propTypes.default.number,
      width: _propTypes.default.number
    }),
    scrollerStyle: _propTypes.default.shape({}),
    viewStyle: _propTypes.default.shape({}),
    showWarnings: _propTypes.default.bool,
    useWheelCapture: _propTypes.default.bool
  };
  VirtualScrollContainer.defaultProps = {
    avoidRepaintOnScroll: true,
    inertialScroll: true,
    rtl: false,
    rafOnResize: true,
    useWheelCapture: true,
    forceNonStaticPosition: false,
    pointerEventsRestoreDelay: 250,
    showWarnings: !_uglified.default
  };
  return VirtualScrollContainer;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-scroll-container-pro/src/old/index.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-scroll-container-pro/src/old/index.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));
var _src = _interopRequireWildcard(__webpack_require__(/*! ../../../../packages/react-scroll-container-pro/src */ "./node_modules/@inovua/reactdatagrid-community/packages/react-scroll-container-pro/src/index.js"));
var _ScrollerFactory = _interopRequireDefault(__webpack_require__(/*! ./ScrollerFactory */ "./node_modules/@inovua/reactdatagrid-community/packages/react-virtual-scroll-container-pro/src/old/ScrollerFactory.js"));
var _getGlobal = __webpack_require__(/*! ../../../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var globalObject = (0, _getGlobal.getGlobal)();
var raf = globalObject.requestAnimationFrame;
var caf = globalObject.cancelAnimationFrame;
var VIEW_STYLE = {
  position: 'static'
};
var FLEX_1_STYLE = {
  flex: 1
};
var filterScrollerProps = function filterScrollerProps(props) {
  return Object.keys(props).reduce(function (acc, propName) {
    if (_src.propTypes[propName] !== undefined) {
      acc[propName] = props[propName];
    }
    return acc;
  }, {});
};
var InovuaVirtualScrollContainer = (0, _ScrollerFactory.default)('InovuaVirtualScrollContainer', {
  init: function init() {
    var _this = this;
    this.childScrollLeft = 0;
    this.childScrollTop = 0;
    this.refScroller = function (s) {
      _this.scroller = s;
      _this.scrollerNode = s ? s.getScrollerNode() : null;
    };
    this.onContainerScroll = function (scrollPos) {
      var scrollLeft = scrollPos.scrollLeft,
        scrollTop = scrollPos.scrollTop;
      _this.childScrollLeft = scrollLeft;
      _this.childScrollTop = scrollTop;
      if (_this.containerScrollRafId) {
        caf(_this.containerScrollRafId);
      }
      _this.containerScrollRafId = raf(function () {
        delete _this.containerScrollRafId;
        _this.updateScrollStyle(scrollPos);
      });
      if (_this.props.onContainerScroll) {
        var _this$props;
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }
        (_this$props = _this.props).onContainerScroll.apply(_this$props, [scrollPos].concat(args));
      }
      if (_this.onScrollIntent) {
        _this.onScrollIntent();
      }
    };
  },
  sync: function sync() {
    if (!this.scroller) {
      return;
    }
    if (this.scroller.rafSync) {
      this.scroller.rafSync();
    } else if (this.scroller.sync) {
      this.scroller.sync();
    }
  },
  getClientSize: function getClientSize() {
    var scroller = this.scroller;
    return scroller.getClientSize();
  },
  hasScrollbar: function hasScrollbar(orientation) {
    return this.scroller.hasScrollbar(orientation);
  },
  getScrollLeftMax: function getScrollLeftMax() {
    var scroller = this.scroller;
    return scroller.scrollLeftMax;
  },
  getScrollTopMax: function getScrollTopMax() {
    var scroller = this.scroller;
    return scroller.scrollTopMax;
  },
  getScrollPosition: function getScrollPosition() {
    return {
      scrollTop: this.childScrollTop,
      scrollLeft: this.childScrollLeft
    };
  },
  renderScroller: function renderScroller(_ref) {
    var props = _ref.props,
      content = _ref.content,
      spacer = _ref.spacer,
      scrollerStyle = _ref.scrollerStyle,
      renderView = _ref.renderView,
      viewStyle = _ref.viewStyle;
    var className = 'inovua-react-virtual-scroll-container__scroll-container';
    if (props.avoidRepaintOnScroll) {
      className += " ".concat(className, "--avoid-repaint");
    }
    return _react.default.createElement(_src.default, _objectSpread(_objectSpread({}, filterScrollerProps(props)), {}, {
      onContainerScroll: this.onContainerScroll,
      ref: this.refScroller,
      style: FLEX_1_STYLE,
      className: className,
      scrollerStyle: scrollerStyle,
      renderView: renderView,
      viewStyle: viewStyle ? Object.assign({}, VIEW_STYLE, viewStyle) : VIEW_STYLE,
      resizer: false
    }), content, spacer);
  }
});
InovuaVirtualScrollContainer.propTypes = Object.assign({
  renderSpacer: _propTypes.default.func,
  renderScrollerSpacer: _propTypes.default.func
}, _src.propTypes, InovuaVirtualScrollContainer.propTypes);
var _default = InovuaVirtualScrollContainer;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/region-align/Region.proto.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/region-align/Region.proto.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _region = _interopRequireDefault(__webpack_require__(/*! ../region */ "./node_modules/@inovua/reactdatagrid-community/packages/region/index.js"));
_region.default.prototype.alignToRegion = function (region, alignPositions) {
  _region.default.align(this, region, alignPositions);
  return this;
};
_region.default.prototype.alignToPoint = function (point, anchor) {
  _region.default.alignToPoint(this, point, anchor);
  return this;
};

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/region-align/Region.static.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/region-align/Region.static.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _region = _interopRequireDefault(__webpack_require__(/*! ../region */ "./node_modules/@inovua/reactdatagrid-community/packages/region/index.js"));
_region.default.align = function (sourceRegion, targetRegion, align) {
  targetRegion = _region.default.from(targetRegion);
  align = (align || 'c-c').split('-');
  if (align.length != 2) {
    console.warn("Incorrect region alignment! The align parameter need to be in the form 'br-c', that is, a - separated string!", align);
  }
  return _region.default.alignToPoint(sourceRegion, targetRegion.getPoint(align[1]), align[0]);
};
_region.default.alignToPoint = function (region, point, anchor) {
  region = _region.default.from(region);
  var sourcePoint = region.getPoint(anchor);
  var count = 0;
  var shiftObj = {};
  if (sourcePoint.x != null && point.x != null) {
    count++;
    shiftObj.left = point.x - sourcePoint.x;
  }
  if (sourcePoint.y != null && point.y != null) {
    count++;
    shiftObj.top = point.y - sourcePoint.y;
  }
  if (count) {
    region.shift(shiftObj);
  }
  return region;
};

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/region-align/alignToNormalized.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/region-align/alignToNormalized.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _region = _interopRequireDefault(__webpack_require__(/*! ../region */ "./node_modules/@inovua/reactdatagrid-community/packages/region/index.js"));
function ALIGN_TO_NORMALIZED(sourceRegion, targetRegion, positions, config) {
  targetRegion = _region.default.from(targetRegion);
  config = config || {};
  var constrainTo = config.constrain,
    syncOption = config.sync,
    offsets = config.offset || [],
    syncWidth = false,
    syncHeight = false,
    sourceClone = sourceRegion.clone();
  if (!Array.isArray(positions)) {
    positions = positions ? [positions] : [];
  }
  if (!Array.isArray(offsets)) {
    offsets = offsets ? [offsets] : [];
  }
  if (constrainTo) {
    constrainTo = constrainTo === true ? _region.default.getDocRegion() : constrainTo.getRegion();
  }
  if (syncOption) {
    if (syncOption.size) {
      syncWidth = true;
      syncHeight = true;
    } else {
      syncWidth = syncOption === true ? true : syncOption.width || false;
      syncHeight = syncOption === true ? true : syncOption.height || false;
    }
  }
  if (syncWidth) {
    sourceClone.setWidth(targetRegion.getWidth());
  }
  if (syncHeight) {
    sourceClone.setHeight(targetRegion.getHeight());
  }
  var offset,
    i = 0,
    len = positions.length,
    pos,
    intersection,
    itArea,
    maxArea = -1,
    maxAreaIndex = -1;
  for (; i < len; i++) {
    pos = positions[i];
    offset = offsets[i];
    sourceClone.alignToRegion(targetRegion, pos);
    if (offset) {
      if (!Array.isArray(offset)) {
        offset = offsets[i] = [offset.x || offset.left, offset.y || offset.top];
      }
      sourceClone.shift({
        left: offset[0],
        top: offset[1]
      });
    }
    if (constrainTo) {
      intersection = sourceClone.getIntersection(constrainTo);
      if (intersection && intersection.equals(sourceClone)) {
        sourceRegion.set(sourceClone);
        return pos;
      } else {
        if (intersection && (itArea = intersection.getArea()) > maxArea) {
          maxArea = itArea;
          maxAreaIndex = i;
        }
      }
    } else {
      sourceRegion.set(sourceClone);
      return pos;
    }
  }
  if (~maxAreaIndex) {
    pos = positions[maxAreaIndex];
    offset = offsets[maxAreaIndex];
    sourceClone.alignToRegion(targetRegion, pos);
    if (offset) {
      sourceClone.shift({
        left: offset[0],
        top: offset[1]
      });
    }
    intersection = sourceClone.getIntersection(constrainTo);
    sourceClone.setRegion(intersection);
    sourceClone.alignToRegion(targetRegion, pos);
    if (offset) {
      sourceClone.shift({
        left: offset[0],
        top: offset[1]
      });
    }
    sourceRegion.set(sourceClone);
    return pos;
  }
}
var _default = ALIGN_TO_NORMALIZED;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/region-align/computeAlignRegion.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/region-align/computeAlignRegion.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _region = _interopRequireDefault(__webpack_require__(/*! ../region */ "./node_modules/@inovua/reactdatagrid-community/packages/region/index.js"));
var _alignToNormalized = _interopRequireDefault(__webpack_require__(/*! ./alignToNormalized */ "./node_modules/@inovua/reactdatagrid-community/packages/region-align/alignToNormalized.js"));
function COMPUTE_ALIGN_REGION(sourceRegion, targetRegion, positions, config) {
  sourceRegion = _region.default.from(sourceRegion);
  var sourceClone = sourceRegion.clone();
  var position = (0, _alignToNormalized.default)(sourceClone, targetRegion, positions, config);
  return {
    position: position,
    region: sourceClone,
    widthChanged: sourceClone.getWidth() != sourceRegion.getWidth(),
    heightChanged: sourceClone.getHeight() != sourceRegion.getHeight(),
    positionChanged: sourceClone.equalsPosition(sourceRegion)
  };
}
var _default = COMPUTE_ALIGN_REGION;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/region-align/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/region-align/index.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _region = _interopRequireDefault(__webpack_require__(/*! ../region */ "./node_modules/@inovua/reactdatagrid-community/packages/region/index.js"));
__webpack_require__(/*! ./Region.static */ "./node_modules/@inovua/reactdatagrid-community/packages/region-align/Region.static.js");
__webpack_require__(/*! ./Region.proto */ "./node_modules/@inovua/reactdatagrid-community/packages/region-align/Region.proto.js");
var _computeAlignRegion = _interopRequireDefault(__webpack_require__(/*! ./computeAlignRegion */ "./node_modules/@inovua/reactdatagrid-community/packages/region-align/computeAlignRegion.js"));
_region.default.alignRegions = function (sourceRegion, targetRegion, positions, config) {
  var result = (0, _computeAlignRegion.default)(sourceRegion, targetRegion, positions, config);
  var alignedRegion = result.region;
  if (!alignedRegion.equals(sourceRegion)) {
    sourceRegion.setRegion(alignedRegion);
  }
  return result.position;
};
_region.default.prototype.alignTo = function (target, positions, config) {
  config = config || {};
  var sourceRegion = this;
  var targetRegion = _region.default.from(target);
  var result = (0, _computeAlignRegion.default)(sourceRegion, targetRegion, positions, config);
  var resultRegion = result.region;
  if (!resultRegion.equalsSize(sourceRegion)) {
    this.setSize(resultRegion.getSize());
  }
  if (!resultRegion.equalsPosition(sourceRegion)) {
    this.setPosition(resultRegion.getPosition(), {
      absolute: !!config.absolute
    });
  }
  return result.position;
};
var _default = _region.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/region/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/region/index.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _src = _interopRequireDefault(__webpack_require__(/*! ./src */ "./node_modules/@inovua/reactdatagrid-community/packages/region/src/index.js"));
var _default = _src.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/region/src/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/region/src/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _construct2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/construct */ "./node_modules/@babel/runtime/helpers/construct.js"));
var _hasOwn = _interopRequireDefault(__webpack_require__(/*! ../../../packages/hasOwn */ "./node_modules/@inovua/reactdatagrid-community/packages/hasOwn/index.js"));
var _statics = _interopRequireDefault(__webpack_require__(/*! ./statics */ "./node_modules/@inovua/reactdatagrid-community/packages/region/src/statics.js"));
var _eventemitter = _interopRequireDefault(__webpack_require__(/*! eventemitter3 */ "./node_modules/eventemitter3/index.js"));
var _inherits = _interopRequireDefault(__webpack_require__(/*! ./inherits */ "./node_modules/@inovua/reactdatagrid-community/packages/region/src/inherits.js"));
var _validate = _interopRequireDefault(__webpack_require__(/*! ./validate */ "./node_modules/@inovua/reactdatagrid-community/packages/region/src/validate.js"));
var objectToString = Object.prototype.toString;
var isObject = function isObject(value) {
  return objectToString.apply(value) === '[object Object]';
};
function copyList(source, target, list) {
  if (source) {
    list.forEach(function (key) {
      if ((0, _hasOwn.default)(source, key)) {
        target[key] = source[key];
      }
    });
  }
  return target;
}
var POINT_POSITIONS = {
  cy: 'YCenter',
  cx: 'XCenter',
  t: 'Top',
  tc: 'TopCenter',
  tl: 'TopLeft',
  tr: 'TopRight',
  b: 'Bottom',
  bc: 'BottomCenter',
  bl: 'BottomLeft',
  br: 'BottomRight',
  l: 'Left',
  lc: 'LeftCenter',
  r: 'Right',
  rc: 'RightCenter',
  c: 'Center'
};
var REGION = function REGION() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  var top = args[0],
    right = args[1],
    bottom = args[2],
    left = args[3];
  if (!(this instanceof REGION)) {
    return (0, _construct2.default)(REGION, args);
  }
  _eventemitter.default.call(this);
  if (isObject(top)) {
    copyList(top, this, ['top', 'right', 'bottom', 'left']);
    if (top.bottom == null && top.height != null) {
      this.bottom = this.top + top.height;
    }
    if (top.right == null && top.width != null) {
      this.right = this.left + top.width;
    }
    if (this.right == null) {
      this.right = this.left;
    }
    if (this.bottom == null) {
      this.bottom = this.top;
    }
    if (top.emitChangeEvents) {
      this.emitChangeEvents = top.emitChangeEvents;
    }
  } else {
    this.top = top;
    this.right = right;
    this.bottom = bottom;
    this.left = left;
  }
  this[0] = this.left;
  this[1] = this.top;
  (0, _validate.default)(this);
};
(0, _inherits.default)(REGION, _eventemitter.default);
Object.assign(REGION.prototype, {
  emitChangeEvents: false,
  getRegion: function getRegion(clone) {
    return clone ? this.clone() : this;
  },
  setRegion: function setRegion(reg) {
    if (reg instanceof REGION) {
      this.set(reg.get());
    } else {
      this.set(reg);
    }
    return this;
  },
  validate: function validate() {
    return REGION.validate(this);
  },
  _before: function _before() {
    if (this.emitChangeEvents) {
      return copyList(this, {}, ['left', 'top', 'bottom', 'right']);
    }
  },
  _after: function _after(before) {
    if (this.emitChangeEvents) {
      if (this.top != before.top || this.left != before.left) {
        this.emitPositionChange();
      }
      if (this.right != before.right || this.bottom != before.bottom) {
        this.emitSizeChange();
      }
    }
  },
  notifyPositionChange: function notifyPositionChange() {
    this.emit('changeposition', this);
  },
  emitPositionChange: function emitPositionChange() {
    this.notifyPositionChange();
  },
  notifySizeChange: function notifySizeChange() {
    this.emit('changesize', this);
  },
  emitSizeChange: function emitSizeChange() {
    this.notifySizeChange();
  },
  add: function add(directions) {
    var before = this._before();
    var direction;
    for (direction in directions) if ((0, _hasOwn.default)(directions, direction)) {
      this[direction] += directions[direction];
    }
    this[0] = this.left;
    this[1] = this.top;
    this._after(before);
    return this;
  },
  substract: function substract(directions) {
    var before = this._before();
    var direction;
    for (direction in directions) if ((0, _hasOwn.default)(directions, direction)) {
      this[direction] -= directions[direction];
    }
    this[0] = this.left;
    this[1] = this.top;
    this._after(before);
    return this;
  },
  getSize: function getSize() {
    return {
      width: this.width,
      height: this.height
    };
  },
  setPosition: function setPosition(position) {
    var width = this.width;
    var height = this.height;
    if (position.left != undefined) {
      position.right = position.left + width;
    }
    if (position.top != undefined) {
      position.bottom = position.top + height;
    }
    return this.set(position);
  },
  setSize: function setSize(size) {
    if (size.height != undefined && size.width != undefined) {
      return this.set({
        right: this.left + size.width,
        bottom: this.top + size.height
      });
    }
    if (size.width != undefined) {
      this.setWidth(size.width);
    }
    if (size.height != undefined) {
      this.setHeight(size.height);
    }
    return this;
  },
  setWidth: function setWidth(width) {
    return this.set({
      right: this.left + width
    });
  },
  setHeight: function setHeight(height) {
    return this.set({
      bottom: this.top + height
    });
  },
  set: function set(directions) {
    var before = this._before();
    copyList(directions, this, ['left', 'top', 'bottom', 'right']);
    if (directions.bottom == null && directions.height != null) {
      this.bottom = this.top + directions.height;
    }
    if (directions.right == null && directions.width != null) {
      this.right = this.left + directions.width;
    }
    this[0] = this.left;
    this[1] = this.top;
    this._after(before);
    return this;
  },
  get: function get(dir) {
    return dir ? this[dir] : copyList(this, {}, ['left', 'right', 'top', 'bottom']);
  },
  shift: function shift(directions) {
    var before = this._before();
    if (directions.top) {
      this.top += directions.top;
      this.bottom += directions.top;
    }
    if (directions.left) {
      this.left += directions.left;
      this.right += directions.left;
    }
    this[0] = this.left;
    this[1] = this.top;
    this._after(before);
    return this;
  },
  unshift: function unshift(directions) {
    if (directions.top) {
      directions.top *= -1;
    }
    if (directions.left) {
      directions.left *= -1;
    }
    return this.shift(directions);
  },
  equals: function equals(region) {
    return this.equalsPosition(region) && this.equalsSize(region);
  },
  equalsSize: function equalsSize(size) {
    var isInstance = size instanceof REGION;
    var s = {
      width: size.width == null && isInstance ? size.getWidth() : size.width,
      height: size.height == null && isInstance ? size.getHeight() : size.height
    };
    return this.getWidth() == s.width && this.getHeight() == s.height;
  },
  equalsPosition: function equalsPosition(region) {
    return this.top == region.top && this.left == region.left;
  },
  addLeft: function addLeft(left) {
    var before = this._before();
    this.left = this[0] = this.left + left;
    this._after(before);
    return this;
  },
  addTop: function addTop(top) {
    var before = this._before();
    this.top = this[1] = this.top + top;
    this._after(before);
    return this;
  },
  addBottom: function addBottom(bottom) {
    var before = this._before();
    this.bottom += bottom;
    this._after(before);
    return this;
  },
  addRight: function addRight(right) {
    var before = this._before();
    this.right += right;
    this._after(before);
    return this;
  },
  minTop: function minTop() {
    return this.expand({
      top: 1
    });
  },
  maxBottom: function maxBottom() {
    return this.expand({
      bottom: 1
    });
  },
  minLeft: function minLeft() {
    return this.expand({
      left: 1
    });
  },
  maxRight: function maxRight() {
    return this.expand({
      right: 1
    });
  },
  expand: function expand(directions, region) {
    var docRegion = region || REGION.getDocRegion();
    var list = [];
    var direction;
    var before = this._before();
    for (direction in directions) if ((0, _hasOwn.default)(directions, direction)) {
      list.push(direction);
    }
    copyList(docRegion, this, list);
    this[0] = this.left;
    this[1] = this.top;
    this._after(before);
    return this;
  },
  clone: function clone() {
    return new REGION({
      top: this.top,
      left: this.left,
      right: this.right,
      bottom: this.bottom
    });
  },
  containsPoint: function containsPoint(x, y) {
    if (arguments.length == 1) {
      y = x.y;
      x = x.x;
    }
    return this.left <= x && x <= this.right && this.top <= y && y <= this.bottom;
  },
  containsRegion: function containsRegion(region) {
    return this.containsPoint(region.left, region.top) && this.containsPoint(region.right, region.bottom);
  },
  diffHeight: function diffHeight(region) {
    return this.diff(region, {
      top: true,
      bottom: true
    });
  },
  diffWidth: function diffWidth(region) {
    return this.diff(region, {
      left: true,
      right: true
    });
  },
  diff: function diff(region, directions) {
    var result = {};
    var dirName;
    for (dirName in directions) if ((0, _hasOwn.default)(directions, dirName)) {
      result[dirName] = this[dirName] - region[dirName];
    }
    return result;
  },
  getPosition: function getPosition() {
    return {
      left: this.left,
      top: this.top
    };
  },
  getPoint: function getPoint(position, asLeftTop) {
    if (!POINT_POSITIONS[position]) {
      console.warn('The position ', position, ' could not be found! Available options are tl, bl, tr, br, l, r, t, b.');
    }
    var method = 'getPoint' + POINT_POSITIONS[position],
      result = this[method]();
    if (asLeftTop) {
      return {
        left: result.x,
        top: result.y
      };
    }
    return result;
  },
  getPointYCenter: function getPointYCenter() {
    return {
      x: null,
      y: this.top + this.getHeight() / 2
    };
  },
  getPointXCenter: function getPointXCenter() {
    return {
      x: this.left + this.getWidth() / 2,
      y: null
    };
  },
  getPointTop: function getPointTop() {
    return {
      x: null,
      y: this.top
    };
  },
  getPointTopCenter: function getPointTopCenter() {
    return {
      x: this.left + this.getWidth() / 2,
      y: this.top
    };
  },
  getPointTopLeft: function getPointTopLeft() {
    return {
      x: this.left,
      y: this.top
    };
  },
  getPointTopRight: function getPointTopRight() {
    return {
      x: this.right,
      y: this.top
    };
  },
  getPointBottom: function getPointBottom() {
    return {
      x: null,
      y: this.bottom
    };
  },
  getPointBottomCenter: function getPointBottomCenter() {
    return {
      x: this.left + this.getWidth() / 2,
      y: this.bottom
    };
  },
  getPointBottomLeft: function getPointBottomLeft() {
    return {
      x: this.left,
      y: this.bottom
    };
  },
  getPointBottomRight: function getPointBottomRight() {
    return {
      x: this.right,
      y: this.bottom
    };
  },
  getPointLeft: function getPointLeft() {
    return {
      x: this.left,
      y: null
    };
  },
  getPointLeftCenter: function getPointLeftCenter() {
    return {
      x: this.left,
      y: this.top + this.getHeight() / 2
    };
  },
  getPointRight: function getPointRight() {
    return {
      x: this.right,
      y: null
    };
  },
  getPointRightCenter: function getPointRightCenter() {
    return {
      x: this.right,
      y: this.top + this.getHeight() / 2
    };
  },
  getPointCenter: function getPointCenter() {
    return {
      x: this.left + this.getWidth() / 2,
      y: this.top + this.getHeight() / 2
    };
  },
  getHeight: function getHeight() {
    return this.bottom - this.top;
  },
  getWidth: function getWidth() {
    return this.right - this.left;
  },
  getTop: function getTop() {
    return this.top;
  },
  getLeft: function getLeft() {
    return this.left;
  },
  getBottom: function getBottom() {
    return this.bottom;
  },
  getRight: function getRight() {
    return this.right;
  },
  getArea: function getArea() {
    return this.getWidth() * this.getHeight();
  },
  constrainTo: function constrainTo(contrain) {
    var intersect = this.getIntersection(contrain);
    var shift;
    if (!intersect || !intersect.equals(this)) {
      var contrainWidth = contrain.getWidth(),
        contrainHeight = contrain.getHeight();
      if (this.getWidth() > contrainWidth) {
        this.left = contrain.left;
        this.setWidth(contrainWidth);
      }
      if (this.getHeight() > contrainHeight) {
        this.top = contrain.top;
        this.setHeight(contrainHeight);
      }
      shift = {};
      if (this.right > contrain.right) {
        shift.left = contrain.right - this.right;
      }
      if (this.bottom > contrain.bottom) {
        shift.top = contrain.bottom - this.bottom;
      }
      if (this.left < contrain.left) {
        shift.left = contrain.left - this.left;
      }
      if (this.top < contrain.top) {
        shift.top = contrain.top - this.top;
      }
      this.shift(shift);
      return true;
    }
    return false;
  },
  __IS_REGION: true
});
Object.defineProperties(REGION.prototype, {
  width: {
    get: function get() {
      return this.getWidth();
    },
    set: function set(width) {
      return this.setWidth(width);
    }
  },
  height: {
    get: function get() {
      return this.getHeight();
    },
    set: function set(height) {
      return this.setHeight(height);
    }
  }
});
(0, _statics.default)(REGION);
var _default = REGION;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/region/src/inherits.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/region/src/inherits.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = _default;
function _default(ctor, superCtor) {
  ctor.super_ = superCtor;
  ctor.prototype = Object.create(superCtor.prototype, {
    constructor: {
      value: ctor,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/region/src/statics.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/region/src/statics.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = _default;
var _hasOwn = _interopRequireDefault(__webpack_require__(/*! ../../../packages/hasOwn */ "./node_modules/@inovua/reactdatagrid-community/packages/hasOwn/index.js"));
var _validate = _interopRequireDefault(__webpack_require__(/*! ./validate */ "./node_modules/@inovua/reactdatagrid-community/packages/region/src/validate.js"));
function _default(REGION) {
  var MAX = Math.max;
  var MIN = Math.min;
  var statics = {
    init: function init() {
      var exportAsNonStatic = {
        getIntersection: true,
        getIntersectionArea: true,
        getIntersectionHeight: true,
        getIntersectionWidth: true,
        getUnion: true
      };
      var thisProto = REGION.prototype;
      var newName;
      var exportHasOwn = (0, _hasOwn.default)(exportAsNonStatic);
      var methodName;
      for (methodName in exportAsNonStatic) if (exportHasOwn(methodName)) {
        newName = exportAsNonStatic[methodName];
        if (typeof newName != 'string') {
          newName = methodName;
        }
        (function (proto, methodName, protoMethodName) {
          proto[methodName] = function (region) {
            if (!REGION[protoMethodName]) {
              console.warn('cannot find method ', protoMethodName, ' on ', REGION);
            }
            return REGION[protoMethodName](this, region);
          };
        })(thisProto, newName, methodName);
      }
    },
    validate: _validate.default,
    getDocRegion: function getDocRegion() {
      return REGION.fromDOM(document.documentElement);
    },
    from: function from(reg) {
      if (!reg) {
        return;
      }
      if (reg.__IS_REGION) {
        return reg;
      }
      if (typeof document != 'undefined') {
        if (reg && reg.getBoundingClientRect) {
          return REGION.fromDOM(reg);
        }
        if (reg.type && typeof reg.pageX !== 'undefined' && typeof reg.pageY !== 'undefined') {
          return REGION.fromEvent(reg);
        }
      }
      return REGION(reg);
    },
    fromEvent: function fromEvent(event) {
      return REGION.fromPoint({
        x: event.pageX,
        y: event.pageY
      });
    },
    fromDOM: function fromDOM(dom) {
      var rect = dom.getBoundingClientRect();
      return new REGION({
        top: rect.top,
        left: rect.left,
        bottom: rect.bottom,
        right: rect.right
      });
    },
    getIntersection: function getIntersection(first, second) {
      var area = this.getIntersectionArea(first, second);
      if (area) {
        return new REGION(area);
      }
      return false;
    },
    getIntersectionWidth: function getIntersectionWidth(first, second) {
      var minRight = MIN(first.right, second.right);
      var maxLeft = MAX(first.left, second.left);
      if (maxLeft < minRight) {
        return minRight - maxLeft;
      }
      return 0;
    },
    getIntersectionHeight: function getIntersectionHeight(first, second) {
      var maxTop = MAX(first.top, second.top);
      var minBottom = MIN(first.bottom, second.bottom);
      if (maxTop < minBottom) {
        return minBottom - maxTop;
      }
      return 0;
    },
    getIntersectionArea: function getIntersectionArea(first, second) {
      var maxTop = MAX(first.top, second.top);
      var minRight = MIN(first.right, second.right);
      var minBottom = MIN(first.bottom, second.bottom);
      var maxLeft = MAX(first.left, second.left);
      if (maxTop < minBottom && maxLeft < minRight) {
        return {
          top: maxTop,
          right: minRight,
          bottom: minBottom,
          left: maxLeft,
          width: minRight - maxLeft,
          height: minBottom - maxTop
        };
      }
      return false;
    },
    getUnion: function getUnion(first, second) {
      var top = MIN(first.top, second.top);
      var right = MAX(first.right, second.right);
      var bottom = MAX(first.bottom, second.bottom);
      var left = MIN(first.left, second.left);
      return new REGION(top, right, bottom, left);
    },
    getRegion: function getRegion(reg) {
      return REGION.from(reg);
    },
    fromPoint: function fromPoint(xy) {
      return new REGION({
        top: xy.y,
        bottom: xy.y,
        left: xy.x,
        right: xy.x
      });
    }
  };
  Object.keys(statics).forEach(function (key) {
    REGION[key] = statics[key];
  });
  REGION.init();
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/region/src/validate.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/region/src/validate.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = validate;
function validate(region) {
  var isValid = true;
  if (region.right < region.left) {
    isValid = false;
    region.right = region.left;
  }
  if (region.bottom < region.top) {
    isValid = false;
    region.bottom = region.top;
  }
  return isValid;
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/scrollPage/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/scrollPage/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _smoothScrollTo = _interopRequireDefault(__webpack_require__(/*! ../../packages/smoothScrollTo */ "./node_modules/@inovua/reactdatagrid-community/packages/smoothScrollTo/index.js"));
var _default = function _default(node, _ref) {
  var orientation = _ref.orientation,
    direction = _ref.direction,
    pageSize = _ref.pageSize,
    duration = _ref.duration;
  if (!direction) {
    throw new Error('Please provide a scroll direction: 1 or -1!');
  }
  var horiz = orientation == 'horizontal';
  var scrollPosName = horiz ? 'scrollLeft' : 'scrollTop';
  pageSize = pageSize || (horiz ? node.clientWidth - 20 : node.clientHeight - 20);
  var currentValue = node[scrollPosName];
  var newValue = currentValue + direction * pageSize;
  (0, _smoothScrollTo.default)(node, newValue, {
    orientation: orientation,
    duration: duration
  });
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/shallowequal/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/shallowequal/index.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = equal;
exports.equalReturnKey = equalReturnKey;
var keyList = Object.keys;
var EMPTY_OBJECT = {};
function equal(a, b) {
  var except = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;
  if (a === b) return true;
  if (!(a instanceof Object) || !(b instanceof Object)) return false;
  var keys = keyList(a);
  var length = keys.length;
  var key;
  for (var i = 0; i < length; i++) {
    key = keys[i];
    if (except[key]) {
      continue;
    }
    if (!(key in b)) return false;
  }
  for (var i = 0; i < length; i++) {
    key = keys[i];
    if (except[key]) {
      continue;
    }
    if (a[key] !== b[key]) return false;
  }
  return length === keyList(b).length;
}
function equalReturnKey(a, b) {
  var except = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EMPTY_OBJECT;
  if (a === b) return {
    result: true,
    key: undefined
  };
  if (!(a instanceof Object) || !(b instanceof Object)) return {
    result: false,
    key: undefined
  };
  var keys = keyList(a);
  var length = keys.length;
  var key;
  for (var i = 0; i < length; i++) {
    key = keys[i];
    if (except[key]) {
      continue;
    }
    if (!(key in b)) return {
      result: false,
      key: key
    };
  }
  for (var i = 0; i < length; i++) {
    key = keys[i];
    if (except[key]) {
      continue;
    }
    if (a[key] !== b[key]) return {
      result: false,
      key: key
    };
  }
  return {
    result: length === keyList(b).length,
    key: undefined
  };
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/shouldComponentUpdate/index.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/shouldComponentUpdate/index.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _shallowequal = _interopRequireDefault(__webpack_require__(/*! ../../packages/shallowequal */ "./node_modules/@inovua/reactdatagrid-community/packages/shallowequal/index.js"));
var _default = function _default(inst, nextProps, nextState) {
  var props = inst.props;
  var state = inst.state;
  if (nextProps.shouldComponentUpdate) {
    return nextProps.shouldComponentUpdate({
      nextProps: nextProps,
      props: props,
      nextState: nextState,
      state: state
    });
  }
  return !(0, _shallowequal.default)(nextProps, props) || !(0, _shallowequal.default)(nextState, state);
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/smoothScrollTo/index.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/smoothScrollTo/index.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _getGlobal = __webpack_require__(/*! ../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
var globalObject = (0, _getGlobal.getGlobal)();
var DEFAULTS = {
  duration: 100,
  orientation: 'vertical'
};
var _default = function _default(node, newValue, config, callback) {
  if (typeof config === 'function') {
    callback = config;
    config = null;
  }
  if (!config) {
    config = DEFAULTS;
  }
  var _config = config,
    orientation = _config.orientation;
  var _config2 = config,
    duration = _config2.duration;
  var horiz = orientation == 'horizontal';
  var scrollPosName = horiz ? 'scrollLeft' : 'scrollTop';
  var currentValue = node[scrollPosName];
  var diff = newValue - currentValue;
  var now = Date.now();
  duration = duration != null ? duration : 100;
  var millisecondStep = diff / duration;
  if (!duration) {
    node[scrollPosName] = newValue;
    if (typeof callback === 'function') {
      callback(newValue);
    }
    return;
  }
  var scroll = function scroll() {
    var elapsed = Date.now() - now;
    node[scrollPosName] = currentValue + elapsed * millisecondStep;
    if (elapsed < duration) {
      globalObject.requestAnimationFrame(scroll);
    } else {
      node[scrollPosName] = newValue;
      if (typeof callback === 'function') {
        callback(newValue);
      }
    }
  };
  globalObject.requestAnimationFrame(scroll);
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/sorty/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/sorty/index.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _src = _interopRequireDefault(__webpack_require__(/*! ./src */ "./node_modules/@inovua/reactdatagrid-community/packages/sorty/src/index.js"));
var _default = _src.default;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/sorty/src/curry.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/sorty/src/curry.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
function curry(fn, n) {
  if (typeof n !== 'number') {
    n = fn.length;
  }
  function getCurryClosure(prevArgs) {
    function curryClosure() {
      var len = arguments.length;
      var args = [].concat(prevArgs);
      if (len) {
        args.push.apply(args, arguments);
      }
      if (args.length < n) {
        return getCurryClosure(args);
      }
      return fn.apply(this, args);
    }
    return curryClosure;
  }
  return getCurryClosure([]);
}
var _default = curry;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/sorty/src/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/sorty/src/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _deepGet = _interopRequireDefault(__webpack_require__(/*! ../../deep-get */ "./node_modules/@inovua/reactdatagrid-community/packages/deep-get/index.js"));
var _curry = _interopRequireDefault(__webpack_require__(/*! ./curry */ "./node_modules/@inovua/reactdatagrid-community/packages/sorty/src/curry.js"));
var _types = _interopRequireDefault(__webpack_require__(/*! ./types */ "./node_modules/@inovua/reactdatagrid-community/packages/sorty/src/types.js"));
function isFn(fn) {
  return typeof fn === 'function';
}
var sorty = (0, _curry.default)(function (sortInfo, array) {
  return array.sort(getMultiSortFunction(sortInfo));
});
sorty.types = _types.default;
var getSingleSortFunction = function getSingleSortFunction(info) {
  if (!info) {
    return;
  }
  var field = info.name;
  var dir = info.dir === 'desc' || info.dir < 0 ? -1 : info.dir === 'asc' || info.dir > 0 ? 1 : 0;
  if (!dir) {
    return;
  }
  if (!info.fn && info.type) {
    info.fn = sorty.types[info.type];
  }
  if (!info.fn) {
    info.fn = sorty.types.string || _types.default.string;
  }
  var fn = info.fn;
  return function (first, second) {
    var a = field ? (0, _deepGet.default)(first, field) : first;
    var b = field ? (0, _deepGet.default)(second, field) : second;
    return dir * fn(a, b, first, second, info);
  };
};
var getSortFunctions = function getSortFunctions(sortInfo) {
  if (!Array.isArray(sortInfo)) {
    sortInfo = [sortInfo];
  }
  return sortInfo.map(getSingleSortFunction).filter(isFn);
};
var getMultiSortFunction = function getMultiSortFunction(sortInfo) {
  var fns = getSortFunctions(sortInfo);
  return function (first, second) {
    var result = 0;
    var i = 0;
    var len = fns.length;
    var fn;
    for (; i < len; i++) {
      fn = fns[i];
      if (!fn) {
        continue;
      }
      result = fn(first, second);
      if (result != 0) {
        return result;
      }
    }
    return result;
  };
};
sorty._getSortFunctions = getSortFunctions;
sorty.getFunction = getMultiSortFunction;
var _default = sorty;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/sorty/src/types.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/sorty/src/types.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = {
  string: function string(a, b) {
    a += '';
    b += '';
    return a.localeCompare(b);
  },
  number: function number(a, b) {
    if (isFinite(a - b)) {
      return a - b;
    } else {
      return isFinite(a) ? -1 : 1;
    }
  }
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/throttle/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/throttle/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
function throttle(func, wait) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var context;
  var args;
  var result;
  var timeout = null;
  var previous = 0;
  var later = function later() {
    previous = options.leading === false ? 0 : Date.now();
    timeout = null;
    result = func.apply(context, args);
    if (!timeout) {
      context = null;
      args = null;
    }
  };
  return function () {
    for (var _len = arguments.length, _rest = new Array(_len), _key = 0; _key < _len; _key++) {
      _rest[_key] = arguments[_key];
    }
    var now = Date.now();
    if (!previous && options.leading === false) {
      previous = now;
    }
    var remaining = wait - (now - previous);
    context = this;
    args = arguments;
    if (remaining <= 0 || remaining > wait) {
      if (timeout) {
        clearTimeout(timeout);
        timeout = null;
      }
      previous = now;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    } else if (!timeout && options.trailing !== false) {
      timeout = setTimeout(later, remaining);
    }
    return result;
  }.apply(this, [func, wait, options]);
}
var _default = throttle;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/packages/uglified/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/packages/uglified/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
function myFunction() {}
var _default = myFunction.toString() != 'function myFunction(abc) { /* this is a simple comment */ }';
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/plugins/cell-selection/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/plugins/cell-selection/index.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _useCellSelection = __webpack_require__(/*! ./useCellSelection */ "./node_modules/@inovua/reactdatagrid-community/plugins/cell-selection/useCellSelection.js");
var _default = {
  name: 'cell-selection',
  hook: _useCellSelection.useCellSelection,
  defaultProps: function defaultProps() {
    return {};
  }
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/plugins/cell-selection/useActiveCell.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/plugins/cell-selection/useActiveCell.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js"));
var _useProperty3 = _interopRequireDefault(__webpack_require__(/*! @inovua/reactdatagrid-community/hooks/useProperty */ "./node_modules/@inovua/reactdatagrid-community/hooks/useProperty.js"));
var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _clamp = _interopRequireDefault(__webpack_require__(/*! @inovua/reactdatagrid-community/utils/clamp */ "./node_modules/@inovua/reactdatagrid-community/utils/clamp.js"));
var _usePrevious = _interopRequireDefault(__webpack_require__(/*! @inovua/reactdatagrid-community/hooks/usePrevious */ "./node_modules/@inovua/reactdatagrid-community/hooks/usePrevious.js"));
var _batchUpdate = _interopRequireDefault(__webpack_require__(/*! @inovua/reactdatagrid-community/utils/batchUpdate */ "./node_modules/@inovua/reactdatagrid-community/utils/batchUpdate.js"));
var _throttle = _interopRequireDefault(__webpack_require__(/*! @inovua/reactdatagrid-community/packages/throttle */ "./node_modules/@inovua/reactdatagrid-community/packages/throttle/index.js"));
var useActiveCell = function useActiveCell(props, computedPropsRef) {
  var _useProperty = (0, _useProperty3.default)(props, 'activeCell'),
    _useProperty2 = (0, _slicedToArray2.default)(_useProperty, 2),
    computedActiveCell = _useProperty2[0],
    doSetActiveCell = _useProperty2[1];
  if (!props.enableKeyboardNavigation) {
    computedActiveCell = undefined;
  }
  var setActiveCell = (0, _react.useCallback)(function (activeCell, queue) {
    var computedProps = computedPropsRef.current;
    if (!computedProps || !computedProps.computedCellNavigationEnabled) {
      return;
    }
    var computedActiveCell = computedProps.computedActiveCell,
      data = computedProps.data,
      visibleColumns = computedProps.visibleColumns;
    var shouldCommit = !queue;
    queue = queue || (0, _batchUpdate.default)();
    if (activeCell) {
      var _activeCell = activeCell,
        _activeCell2 = (0, _slicedToArray2.default)(_activeCell, 2),
        activeCellRowIndex = _activeCell2[0],
        activeCellColumnIndex = _activeCell2[1];
      activeCellRowIndex = (0, _clamp.default)(activeCellRowIndex, 0, data.length - 1);
      activeCellColumnIndex = (0, _clamp.default)(activeCellColumnIndex, 0, visibleColumns.length - 1);
      var col = computedProps.getColumnBy(activeCellColumnIndex);
      if (col && col.cellSelectable === false) {
        return;
      }
      if (!data || data.__group || activeCellRowIndex == null || activeCellColumnIndex == null) {
        queue(function () {
          doSetActiveCell(null);
          computedProps.setLastCellInRange('');
        });
        if (shouldCommit) {
          queue.commit();
        }
        return;
      }
      activeCell = [activeCellRowIndex, activeCellColumnIndex];
      if (activeCell === computedActiveCell || computedActiveCell && activeCell && computedActiveCell[0] === activeCell[0] && computedActiveCell[1] === activeCell[1]) {
        return;
      }
    }
    queue(function () {
      doSetActiveCell(activeCell);
      computedProps.setLastCellInRange('');
    });
    if (shouldCommit) {
      queue.commit();
    }
  }, []);
  var oldActiveCell = (0, _usePrevious.default)(computedActiveCell, null);
  (0, _react.useLayoutEffect)(function () {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    if (oldActiveCell !== computedActiveCell && computedActiveCell) {
      var _computedActiveCell = computedActiveCell,
        _computedActiveCell2 = (0, _slicedToArray2.default)(_computedActiveCell, 2),
        rowIndex = _computedActiveCell2[0],
        columnIndex = _computedActiveCell2[1];
      if (rowIndex == null || columnIndex == null) {
        return;
      }
      var top = !oldActiveCell || rowIndex < oldActiveCell[0];
      var right = !oldActiveCell || columnIndex > oldActiveCell[1];
      var scrollToColumnIndex = (0, _clamp.default)(columnIndex + (right ? 0 : -0), 0, computedProps.visibleColumns.length - 1);
      computedProps.scrollToCell({
        rowIndex: rowIndex,
        columnIndex: scrollToColumnIndex
      }, {
        top: top,
        right: right
      });
    }
  }, [computedActiveCell, oldActiveCell]);
  var getCellSelectionBetween = (0, _react.useCallback)(function (start, end) {
    var computedProps = computedPropsRef.current;
    if (!start || !end || !computedProps) {
      return {};
    }
    var startRow = Math.min(start[0], end[0]);
    var startCol = Math.min(start[1], end[1]);
    var endRow = Math.max(start[0], end[0]);
    var endCol = Math.max(start[1], end[1]);
    var range = {};
    var groupBy = computedProps.computedGroupBy;
    var dataSource = groupBy ? computedProps.data : [];
    var current;
    for (var row = startRow; row <= endRow; row++) {
      if (groupBy) {
        current = dataSource[row];
        if (!current) {
          break;
        }
        if (current.__group) {
          continue;
        }
      }
      for (var col = startCol; col <= endCol; col++) {
        range[getCellSelectionKey(row, col)] = true;
      }
    }
    return range;
  }, []);
  var getCellSelectionKey = (0, _react.useCallback)(function (cellProps, col) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return -1;
    }
    var rowKey;
    var colKey;
    if (typeof cellProps === 'string') {
      return cellProps;
    }
    if (typeof cellProps === 'number' && typeof col === 'number') {
      rowKey = cellProps;
      colKey = col;
    } else {
      if (cellProps) {
        rowKey = cellProps.rowIndex;
        colKey = cellProps.columnIndex;
      }
    }
    if (!computedProps.cellSelectionByIndex) {
      return computedProps.getCellSelectionIdKey(rowKey, colKey);
    }
    return "".concat([rowKey, colKey]);
  }, [computedPropsRef, props.columns]);
  var getCellSelectionIdKey = (0, _react.useCallback)(function (rowIndex, columnIndex) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return -1;
    }
    var col = computedProps.getColumnBy(columnIndex);
    if (!col) {
      return -1;
    }
    var colId = col.id || col.name;
    var item = computedProps.getItemAt(rowIndex);
    if (!item) {
      return '';
    }
    var rowId = computedProps.getItemId(item);
    return "".concat([rowId, colId]);
  }, []);
  var incrementActiveCell = (0, _react.useCallback)(function (direction) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var computedActiveCell = computedProps.computedActiveCell;
    if (!computedActiveCell) {
      computedActiveCell = [0, 0];
    }
    var _direction = (0, _slicedToArray2.default)(direction, 2),
      row = _direction[0],
      col = _direction[1];
    var data = computedProps.data,
      visibleColumns = computedProps.visibleColumns,
      computedGroupBy = computedProps.computedGroupBy,
      groupColumn = computedProps.groupColumn;
    var maxRow = data.length - 1;
    var columns = visibleColumns;
    var maxCol = columns.length - 1;
    var groupBy = computedGroupBy;
    var minCol = groupBy && !groupColumn ? groupBy.length : 0;
    var rowIndex = computedActiveCell[0];
    var colIndex = computedActiveCell[1];
    if (row) {
      var rowSign = row < 0 ? -1 : 1;
      var rowAdd = row;
      while (data[rowIndex + rowAdd] && data[rowIndex + rowAdd].__group) {
        rowIndex += rowAdd;
        rowAdd = rowSign;
      }
      rowIndex += rowAdd;
    }
    if (col) {
      var colSign = col < 0 ? -1 : 1;
      var colAdd = col;
      while (columns[colIndex + colAdd] && columns[colIndex + colAdd].cellSelectable === false) {
        colIndex += colSign;
        colAdd = colSign;
      }
      colIndex += colAdd;
    }
    rowIndex = (0, _clamp.default)(rowIndex, 0, maxRow);
    colIndex = (0, _clamp.default)(colIndex, minCol, maxCol);
    if (computedProps.activeCellThrottle) {
      (0, _throttle.default)(function () {
        return computedProps.setActiveCell([rowIndex, colIndex]);
      }, computedProps.activeCellThrottle, {
        trailing: true,
        leading: false
      });
    } else {
      computedProps.setActiveCell([rowIndex, colIndex]);
    }
  }, []);
  return {
    getCellSelectionBetween: getCellSelectionBetween,
    getCellSelectionIdKey: getCellSelectionIdKey,
    computedActiveCell: computedActiveCell,
    setActiveCell: setActiveCell,
    getCellSelectionKey: getCellSelectionKey,
    incrementActiveCell: incrementActiveCell
  };
};
var _default = useActiveCell;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/plugins/cell-selection/useCellSelection.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/plugins/cell-selection/useCellSelection.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.useCellSelection = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js"));
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js"));
var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _useProperty3 = _interopRequireDefault(__webpack_require__(/*! @inovua/reactdatagrid-community/hooks/useProperty */ "./node_modules/@inovua/reactdatagrid-community/hooks/useProperty.js"));
var _batchUpdate = _interopRequireDefault(__webpack_require__(/*! @inovua/reactdatagrid-community/utils/batchUpdate */ "./node_modules/@inovua/reactdatagrid-community/utils/batchUpdate.js"));
var _clamp = _interopRequireDefault(__webpack_require__(/*! @inovua/reactdatagrid-community/utils/clamp */ "./node_modules/@inovua/reactdatagrid-community/utils/clamp.js"));
var _useActiveCell2 = _interopRequireDefault(__webpack_require__(/*! ./useActiveCell */ "./node_modules/@inovua/reactdatagrid-community/plugins/cell-selection/useActiveCell.js"));
var _usePrevious = _interopRequireDefault(__webpack_require__(/*! @inovua/reactdatagrid-community/hooks/usePrevious */ "./node_modules/@inovua/reactdatagrid-community/hooks/usePrevious.js"));
var _useNamedState3 = _interopRequireDefault(__webpack_require__(/*! @inovua/reactdatagrid-community/hooks/useNamedState */ "./node_modules/@inovua/reactdatagrid-community/hooks/useNamedState.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var getFirstSelectedCell = function getFirstSelectedCell(cellSelection) {
  return cellSelection.sort(function (cell1, cell2) {
    if (cell1[0] < cell2[0]) {
      return -1;
    } else if (cell1[0] > cell2[0]) {
      return 1;
    }
    return cell1[1] < cell2[1] ? -1 : 1;
  })[0];
};
var useCellSelection = function useCellSelection(props, _ref, computedPropsRef) {
  var rowSelectionEnabled = _ref.rowSelectionEnabled,
    hasRowNavigation = _ref.hasRowNavigation,
    listenOnCellEnter = _ref.listenOnCellEnter;
  var _useProperty = (0, _useProperty3.default)(props, 'cellSelection'),
    _useProperty2 = (0, _slicedToArray2.default)(_useProperty, 2),
    cellSelection = _useProperty2[0],
    setCellSelection = _useProperty2[1];
  var _useNamedState = (0, _useNamedState3.default)(false, props.context, 'bulkUpdateMouseDown'),
    _useNamedState2 = (0, _slicedToArray2.default)(_useNamedState, 2),
    bulkUpdateMouseDown = _useNamedState2[0],
    setBulkUpdateMouseDown = _useNamedState2[1];
  var _useActiveCell = (0, _useActiveCell2.default)(props, computedPropsRef),
    computedActiveCell = _useActiveCell.computedActiveCell,
    getCellSelectionIdKey = _useActiveCell.getCellSelectionIdKey,
    getCellSelectionBetween = _useActiveCell.getCellSelectionBetween,
    setActiveCell = _useActiveCell.setActiveCell,
    getCellSelectionKey = _useActiveCell.getCellSelectionKey,
    incrementActiveCell = _useActiveCell.incrementActiveCell;
  var cellSelectionEnabled = !rowSelectionEnabled ? !!cellSelection : false;
  if (rowSelectionEnabled || hasRowNavigation) {
    computedActiveCell = undefined;
  }
  var cellNavigationEnabled = computedActiveCell !== undefined;
  if (cellSelection) {
    cellNavigationEnabled = props.enableKeyboardNavigation !== false && !hasRowNavigation ? true : computedActiveCell !== undefined || !!cellSelection;
  }
  if (props.enableKeyboardNavigation === false) {
    cellNavigationEnabled = false;
  }
  var cellMultiSelectionEnabledRef = (0, _react.useRef)(false);
  cellMultiSelectionEnabledRef.current = cellSelectionEnabled && props.multiSelect !== false;
  var cellMultiSelectionEnabled = cellMultiSelectionEnabledRef.current;
  var prevMultiSelectionEnabled = (0, _usePrevious.default)(cellMultiSelectionEnabled, cellMultiSelectionEnabled);
  (0, _react.useEffect)(function () {
    if (prevMultiSelectionEnabled && !cellMultiSelectionEnabled) {
      setCellSelection({});
    }
  }, [cellMultiSelectionEnabled, prevMultiSelectionEnabled]);
  var onCellEnter = (0, _react.useMemo)(function () {
    return listenOnCellEnter ? function (event, _ref2) {
      var columnIndex = _ref2.columnIndex,
        rowIndex = _ref2.rowIndex;
      var computedProps = computedPropsRef.current;
      if (!computedProps) {
        return;
      }
      var data = computedProps.getItemAt(rowIndex);
      if (!data || data.__group) {
        return;
      }
      var col = computedProps.getColumnBy(columnIndex);
      if (col && col.cellSelectable === false) {
        return;
      }
      var groupBy = computedProps.computedGroupBy;
      var minCol = groupBy ? groupBy.length : 0;
      if (columnIndex < minCol) {
        return;
      }
      var range = computedProps.getCellSelectionBetween(computedProps.selectionFixedCell || computedProps.computedActiveCell || computedProps.lastSelectedCell, [rowIndex, columnIndex]);
      var queue = (0, _batchUpdate.default)();
      queue(function () {
        computedProps.setCellSelection(range);
        computedProps.setLastCellInRange(Object.keys(range).pop() || '');
      });
      var direction = computedProps.cellDragStartRowIndex != null ? rowIndex - computedProps.cellDragStartRowIndex : rowIndex;
      var sign = direction < 0 ? -1 : direction > 0 ? 1 : 0;
      var scrollToRowIndex = (0, _clamp.default)(rowIndex + sign, 0, computedProps.count - 1);
      var visible = computedProps.isCellVisible({
        columnIndex: columnIndex,
        rowIndex: scrollToRowIndex
      });
      if (visible !== true) {
        visible = visible;
        var left = visible.leftDiff < 0;
        var top = visible.topDiff < 0;
        computedProps.scrollToCell({
          columnIndex: columnIndex,
          rowIndex: scrollToRowIndex
        }, {
          top: top,
          left: left
        });
      }
      queue.commit();
    } : null;
  }, [listenOnCellEnter]);
  var getContinuousSelectedRangeFor = function getContinuousSelectedRangeFor(selectionMap, cell) {
    if (!cell) {
      return [];
    }
    selectionMap = selectionMap || {};
    var _cell = (0, _slicedToArray2.default)(cell, 2),
      row = _cell[0],
      col = _cell[1];
    var key = getCellSelectionKey(row, col);
    var range = [];
    while (selectionMap[key]) {
      range.push([row, col]);
      key = getCellSelectionKey(row - 1, col - 1);
      if (selectionMap[key]) {
        row -= 1;
        col -= 1;
        continue;
      }
      if (!selectionMap[key]) {
        key = getCellSelectionKey(row - 1, col);
      }
      if (selectionMap[key]) {
        row -= 1;
        continue;
      }
      if (!selectionMap[key]) {
        key = getCellSelectionKey(row, col - 1);
        col -= 1;
      }
    }
    return range;
  };
  var toggleActiveCellSelection = (0, _react.useCallback)(function (fakeEvent) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var computedActiveCell = computedProps.computedActiveCell;
    if (!computedActiveCell) {
      return;
    }
    var _computedActiveCell = (0, _slicedToArray2.default)(computedActiveCell, 2),
      rowIndex = _computedActiveCell[0],
      columnIndex = _computedActiveCell[1];
    var column = computedProps.getColumnBy(columnIndex);
    if (column && column.cellSelectable === false) {
      return;
    }
    var selected = isCellSelected(rowIndex, columnIndex);
    var event = fakeEvent || {
      ctrlKey: selected
    };
    computedProps.onCellClickAction(event, {
      rowIndex: rowIndex,
      columnIndex: columnIndex
    });
  }, []);
  var isCellSelected = (0, _react.useCallback)(function (row, col) {
    if (row && (0, _typeof2.default)(row) === 'object') {
      col = row.columnIndex;
      row = row.rowIndex;
    }
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    if (computedProps.computedCellSelection) {
      var key = computedProps.getCellSelectionKey(row, col);
      return !!computedProps.computedCellSelection[key];
    }
    return false;
  }, []);
  var _useState = (0, _react.useState)(null),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    cellDragStartRowIndex = _useState2[0],
    setCellDragStartRowIndex = _useState2[1];
  var cellSelectionRef = (0, _react.useRef)(cellSelection);
  cellSelectionRef.current = cellSelection;
  var onCellSelectionDraggerMouseDown = (0, _react.useMemo)(function () {
    if (cellMultiSelectionEnabled && cellSelectionRef.current) {
      var _onCellSelectionDraggerMouseDown = function _onCellSelectionDraggerMouseDown(event, _ref3, selectionFixedCell) {
        var columnIndex = _ref3.columnIndex,
          rowIndex = _ref3.rowIndex;
        var computedProps = computedPropsRef.current;
        if (!computedProps) {
          return;
        }
        var column = computedProps.getColumnBy(columnIndex);
        if (column && column.cellSelectable === false) {
          return;
        }
        if (!selectionFixedCell) {
          var currentCell = [rowIndex, columnIndex];
          var groupBy = computedProps.computedGroupBy;
          var hasGroupBy = groupBy && groupBy.length;
          var currentRange = !hasGroupBy ? getContinuousSelectedRangeFor(computedProps.computedCellSelection, currentCell) : [];
          selectionFixedCell = !hasGroupBy ? getFirstSelectedCell(currentRange.length ? currentRange : [currentCell]) : computedProps.computedActiveCell || computedProps.lastSelectedCell;
        }
        var fn = function fn() {
          computedProps.setListenOnCellEnter(false, fn);
          setCellDragStartRowIndex(null);
          computedProps.setSelectionFixedCell(null);
        };
        var queue = (0, _batchUpdate.default)();
        queue(function () {
          setCellDragStartRowIndex(rowIndex);
          if (selectionFixedCell === undefined) {
            selectionFixedCell = null;
          }
          computedProps.setSelectionFixedCell(selectionFixedCell);
          computedProps.setListenOnCellEnter(true, fn);
        });
        queue.commit();
      };
      return _onCellSelectionDraggerMouseDown;
    }
    return null;
  }, [cellMultiSelectionEnabled]);
  var cellContentRef = (0, _react.useRef)(null);
  var computedCellBulkUpdateMouseDown = (0, _react.useCallback)(function (_event, _cellProps) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    if (!computedProps.enableCellBulkUpdate) {
      return;
    }
    var computedActiveCell = computedProps.computedActiveCell,
      data = computedProps.data;
    if (!computedActiveCell) {
      return;
    }
    setBulkUpdateMouseDown(true);
    var _computedActiveCell2 = (0, _slicedToArray2.default)(computedActiveCell, 2),
      activeRow = _computedActiveCell2[0],
      activeColumn = _computedActiveCell2[1];
    var row = data[activeRow];
    var column = computedProps.getColumnBy(activeColumn);
    var columnName = column.name;
    var cellContent = columnName ? row[columnName] : null;
    cellContentRef.current = cellContent;
  }, []);
  var computedCellBulkUpdateMouseUp = (0, _react.useCallback)(function (_event) {
    setBulkUpdateMouseDown(false);
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var cellContent = cellContentRef.current;
    if (!cellContent) {
      return;
    }
    if (!computedProps.enableCellBulkUpdate) {
      return;
    }
    var cellSelectionMap = computedProps.computedCellSelection;
    if (!cellSelectionMap) {
      return;
    }
    var dataMap = {};
    Object.keys(cellSelectionMap).map(function (key) {
      var _key$split = key.split(','),
        _key$split2 = (0, _slicedToArray2.default)(_key$split, 2),
        rowId = _key$split2[0],
        columnName = _key$split2[1];
      if (!dataMap[rowId]) {
        dataMap[rowId] = (0, _defineProperty2.default)({}, columnName, cellContent);
      }
      {
        dataMap[rowId] = _objectSpread(_objectSpread({}, dataMap[rowId]), {}, (0, _defineProperty2.default)({}, columnName, cellContent));
      }
    });
    var dataArray = Object.keys(dataMap).map(function (key) {
      var index = -1;
      index = computedProps.getItemIndexById(key);
      if (index === -1) {
        index = computedProps.getItemIndexById(Number(key));
      }
      if (index > -1) {
        var item = computedProps.getItemAt(index);
        var itemId = computedProps.getItemId(item);
        return _objectSpread({
          id: itemId
        }, dataMap[key]);
      }
    });
    computedProps.setItemsAt(dataArray, {
      replace: false
    });
    cellContentRef.current = null;
  }, []);
  return {
    onCellEnter: onCellEnter,
    toggleActiveCellSelection: toggleActiveCellSelection,
    cellDragStartRowIndex: cellDragStartRowIndex,
    setCellDragStartRowIndex: setCellDragStartRowIndex,
    onCellSelectionDraggerMouseDown: onCellSelectionDraggerMouseDown,
    computedCellBulkUpdateMouseDown: computedCellBulkUpdateMouseDown,
    bulkUpdateMouseDown: bulkUpdateMouseDown,
    computedCellBulkUpdateMouseUp: computedCellBulkUpdateMouseUp,
    getCellSelectionBetween: getCellSelectionBetween,
    computedActiveCell: computedActiveCell,
    incrementActiveCell: incrementActiveCell,
    getCellSelectionIdKey: getCellSelectionIdKey,
    setActiveCell: setActiveCell,
    getCellSelectionKey: getCellSelectionKey,
    cellSelectionEnabled: cellSelectionEnabled,
    cellNavigationEnabled: cellNavigationEnabled,
    cellMultiSelectionEnabled: cellMultiSelectionEnabled,
    computedCellSelection: cellSelection,
    setCellSelection: setCellSelection
  };
};
exports.useCellSelection = useCellSelection;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/plugins/empty.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/plugins/empty.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _warn = __webpack_require__(/*! ../warn */ "./node_modules/@inovua/reactdatagrid-community/warn.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var emptyPlugin = {
  name: '',
  hook: function hook(props, computedProps, computedPropsRef) {}
};
var _default = [_objectSpread(_objectSpread({}, emptyPlugin), {}, {
  name: 'sortable-columns',
  defaultProps: function defaultProps() {
    return {
      sortable: false
    };
  }
}), _objectSpread(_objectSpread({}, emptyPlugin), {}, {
  name: 'license',
  defaultProps: function defaultProps() {
    return {};
  },
  renderLicenseNotice: function renderLicenseNotice() {
    return null;
  }
}), _objectSpread(_objectSpread({}, emptyPlugin), {}, {
  name: 'menus',
  defaultProps: function defaultProps() {
    return {
      showColumnMenuTool: false
    };
  }
}), _objectSpread(_objectSpread({}, emptyPlugin), {}, {
  name: 'group-and-pivot',
  hook: function hook() {
    return {
      computeDataStep: function computeDataStep(_ref) {
        var config = _ref.config;
        (0, _warn.warnOnce)('You are trying to use the grouping or pivot functionality, but are currently using the community edition. Please use the enterprise edition for this functionality to be available.');
        return config;
      }
    };
  },
  defaultProps: function defaultProps() {
    return {};
  }
}), _objectSpread(_objectSpread({}, emptyPlugin), {}, {
  name: 'tree',
  hook: function hook() {
    return {
      computeTreeData: function computeTreeData(data, arg) {
        (0, _warn.warnOnce)('You are trying to use the tree functionality, but are currently using the community edition. Please use the enterprise edition for this functionality to be available.');
        return data;
      }
    };
  },
  defaultProps: function defaultProps() {
    return {};
  }
}), _objectSpread(_objectSpread({}, emptyPlugin), {}, {
  name: 'filters',
  defaultProps: function defaultProps() {
    return {
      columnFilterContextMenuConstrainTo: true,
      columnFilterContextMenuPosition: 'fixed'
    };
  }
}), _objectSpread(_objectSpread({}, emptyPlugin), {}, {
  name: 'cell-selection',
  hook: function hook() {
    return {};
  },
  defaultProps: function defaultProps() {
    return {};
  }
}), _objectSpread(_objectSpread({}, emptyPlugin), {}, {
  name: 'live-pagination',
  hook: function hook() {
    return {};
  },
  defaultProps: function defaultProps() {
    return {};
  }
}), _objectSpread(_objectSpread({}, emptyPlugin), {}, {
  name: 'row-index-column',
  renderRowResizeIndicator: function renderRowResizeIndicator() {
    return null;
  },
  defaultProps: function defaultProps() {
    return {};
  }
}), _objectSpread(_objectSpread({}, emptyPlugin), {}, {
  name: 'clipboard',
  hook: function hook() {
    return {};
  },
  defaultProps: function defaultProps() {
    return {};
  }
})];
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/plugins/filters/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/plugins/filters/index.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _useFilters = _interopRequireWildcard(__webpack_require__(/*! ./useFilters */ "./node_modules/@inovua/reactdatagrid-community/plugins/filters/useFilters/index.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var _default = {
  name: 'filters',
  hook: _useFilters.default,
  renderColumnFilterContextMenu: _useFilters.renderColumnFilterContextMenu,
  defaultProps: function defaultProps() {
    return {
      columnFilterContextMenuConstrainTo: true,
      columnFilterContextMenuPosition: 'absolute'
    };
  }
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/plugins/filters/useFilters/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/plugins/filters/useFilters/index.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.renderColumnFilterContextMenu = exports["default"] = void 0;
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js"));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _useProperty5 = _interopRequireDefault(__webpack_require__(/*! ../../../hooks/useProperty */ "./node_modules/@inovua/reactdatagrid-community/hooks/useProperty.js"));
var _getFilterValueForColumns = _interopRequireDefault(__webpack_require__(/*! ../../../hooks/useDataSource/getFilterValueForColumns */ "./node_modules/@inovua/reactdatagrid-community/hooks/useDataSource/getFilterValueForColumns.js"));
var _batchUpdate = _interopRequireDefault(__webpack_require__(/*! ../../../utils/batchUpdate */ "./node_modules/@inovua/reactdatagrid-community/utils/batchUpdate.js"));
var _mapColumns = _interopRequireDefault(__webpack_require__(/*! ../../../mapColumns */ "./node_modules/@inovua/reactdatagrid-community/mapColumns.js"));
var _ua = __webpack_require__(/*! ../../../common/ua */ "./node_modules/@inovua/reactdatagrid-community/common/ua.js");
var _Menu = _interopRequireDefault(__webpack_require__(/*! ../../../packages/Menu */ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/index.js"));
var _renderGridMenu = _interopRequireDefault(__webpack_require__(/*! ../../../renderGridMenu */ "./node_modules/@inovua/reactdatagrid-community/renderGridMenu.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var emptyArray = [];
var COLUMN_MENU_ALIGN_POSITIONS = ['tl-bl', 'tr-br', 'tl-tr', 'tr-tl', 'br-tr', 'bl-tl', 'br-tl', 'bl-tr', 'lc-tr', 'rc-tl'];
var COLUMN_MENU_ALIGN_POSITIONS_RTL = ['tr-br', 'tl-bl', 'tr-tl', 'tl-tr', 'br-tr', 'bl-tl', 'br-tl', 'bl-tr', 'lc-tr', 'rc-tl'];
var renderColumnFilterContextMenu = function renderColumnFilterContextMenu(computedProps, computedPropsRef) {
  if (!computedProps) {
    return null;
  }
  var cellProps = computedProps.columnFilterContextMenuProps;
  if (!cellProps) {
    return null;
  }
  var filterValue = computedProps.computedFilterValueMap ? computedProps.computedFilterValueMap[cellProps.id] : null;
  if (!filterValue) {
    return null;
  }
  var columnOperators = computedProps.initialProps.filterTypes[filterValue.type].operators || emptyArray;
  var selected = {
    operator: filterValue.operator
  };
  var showEnableButton = filterValue.active === false;
  var filterType = computedProps.initialProps.filterTypes[filterValue.type];
  var isFiltered = computedProps.computedFiltered;
  var items = function () {
    var activationItems = ['-', {
      label: computedProps.i18n('enable', 'Enable'),
      itemId: 'enableFilter',
      disabled: !showEnableButton,
      onClick: function onClick() {
        var newFilterValue = _objectSpread(_objectSpread({}, filterValue), {}, {
          active: true
        });
        var computedProps = computedPropsRef.current;
        if (!computedProps) {
          return;
        }
        computedProps.computedOnColumnFilterValueChange({
          columnId: cellProps.id,
          columnIndex: cellProps.computedVisibleIndex,
          cellProps: cellProps,
          filterValue: newFilterValue
        });
        computedProps.hideColumnFilterContextMenu();
      }
    }, {
      label: computedProps.i18n('disable', 'Disable'),
      disabled: showEnableButton,
      itemId: 'disableFilter',
      onClick: function onClick() {
        var computedProps = computedPropsRef.current;
        if (!computedProps) {
          return;
        }
        var newFilterValue = _objectSpread(_objectSpread({}, filterValue), {}, {
          active: false
        });
        computedProps.computedOnColumnFilterValueChange({
          columnId: cellProps.id,
          cellProps: cellProps,
          columnIndex: cellProps.computedVisibleIndex,
          filterValue: newFilterValue
        });
        computedProps.hideColumnFilterContextMenu();
      }
    }, '-', {
      label: computedProps.i18n('clear', 'Clear'),
      itemId: 'clearFilter',
      disabled: filterValue.value === filterType.emptyValue,
      onClick: function onClick() {
        var computedProps = computedPropsRef.current;
        if (!computedProps) {
          return;
        }
        computedProps.clearColumnFilter(cellProps.id);
        computedProps.hideColumnFilterContextMenu();
      }
    }, {
      label: computedProps.i18n('clearAll', 'Clear All'),
      itemId: 'clearAllFilters',
      disabled: !isFiltered,
      onClick: function onClick() {
        var computedProps = computedPropsRef.current;
        if (!computedProps) {
          return;
        }
        computedProps.clearAllFilters();
        computedProps.hideColumnFilterContextMenu();
      }
    }];
    var items = columnOperators.map(function (operator) {
      return {
        label: computedProps.i18n(operator.label, operator.label) || computedProps.i18n(operator.name, operator.name),
        name: 'operator',
        itemId: "operator-".concat(operator.name),
        value: operator.name
      };
    });
    items.push.apply(items, activationItems);
    return items;
  }();
  var onSelectionChange = function onSelectionChange(selected) {
    var operator = selected.operator;
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var filterTypes = computedProps.initialProps.filterTypes;
    var filterTypeDescription = filterTypes[filterType.type] || {
      operators: []
    };
    var operatorDescriptor = filterTypeDescription.operators.filter(function (op) {
      return op.name === operator;
    })[0];
    var newFilterValue = _objectSpread(_objectSpread({}, filterValue), {}, {
      operator: operator
    });
    if (operatorDescriptor && operatorDescriptor.valueOnOperatorSelect !== undefined) {
      newFilterValue.value = operatorDescriptor.valueOnOperatorSelect;
    }
    computedProps.computedOnColumnFilterValueChange({
      columnId: cellProps.id,
      cellProps: cellProps,
      columnIndex: cellProps.computedVisibleIndex,
      filterValue: newFilterValue
    });
    computedProps.hideColumnFilterContextMenu();
  };
  var rtl = computedProps.rtl;
  var menuProps = {
    autoFocus: true,
    dismissWithEscape: true,
    items: items,
    theme: computedProps.theme,
    updatePositionOnScroll: computedProps.updateMenuPositionOnScroll,
    nativeScroll: !_ua.IS_MS_BROWSER,
    enableSelection: true,
    maxHeight: computedProps.columnFilterContextMenuConstrainTo ? null : computedProps.getMenuAvailableHeight(),
    style: {
      zIndex: 10000,
      position: computedProps.columnFilterContextMenuPosition || 'absolute'
    },
    selected: selected,
    onSelectionChange: onSelectionChange,
    onDismiss: computedProps.hideColumnFilterContextMenu,
    constrainTo: computedProps.columnFilterContextMenuConstrainTo,
    alignPositions: computedProps.columnFilterContextMenuAlignPositions || rtl ? COLUMN_MENU_ALIGN_POSITIONS_RTL : COLUMN_MENU_ALIGN_POSITIONS,
    alignTo: computedProps.columnFilterContextMenuAlignToRef.current
  };
  var result;
  if (computedProps.initialProps.renderColumnFilterContextMenu) {
    result = computedProps.initialProps.renderColumnFilterContextMenu(menuProps, {
      cellProps: cellProps,
      grid: computedPropsRef,
      props: computedProps
    });
  }
  if (result === undefined) {
    result = _react.default.createElement(_Menu.default, _objectSpread({}, menuProps));
  }
  if (computedProps.initialProps.renderGridMenu) {
    return computedProps.initialProps.renderGridMenu(result, computedProps);
  }
  return (0, _renderGridMenu.default)(result, computedProps);
};
exports.renderColumnFilterContextMenu = renderColumnFilterContextMenu;
var useFilterValue = function useFilterValue(props, _ref, computedPropsRef) {
  var columnsMap = _ref.columnsMap,
    enableFiltering = _ref.enableFiltering;
  var _useProperty = (0, _useProperty5.default)(props, 'filterValue'),
    _useProperty2 = (0, _slicedToArray2.default)(_useProperty, 2),
    filterValue = _useProperty2[0],
    doSetFilterValue = _useProperty2[1];
  filterValue = (0, _react.useMemo)(function () {
    return (0, _getFilterValueForColumns.default)(filterValue || [], columnsMap);
  }, [filterValue || [], columnsMap]);
  if (!filterValue.length) {
    filterValue = null;
  }
  var setFilterValue = (0, _react.useCallback)(function (filterValue) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    filterValue = (0, _getFilterValueForColumns.default)(filterValue, computedProps.columnsMap);
    var queue = (0, _batchUpdate.default)();
    queue.commit(function () {
      computedProps.setLoadDataTrigger(function (loadDataTrigger) {
        return [].concat((0, _toConsumableArray2.default)(loadDataTrigger), ['filterValue']);
      });
      doSetFilterValue(filterValue);
    });
  }, [doSetFilterValue]);
  return [filterValue, setFilterValue];
};
var isFilterable = function isFilterable(_ref2) {
  var enableFiltering = _ref2.enableFiltering,
    filterValue = _ref2.filterValue;
  if (enableFiltering !== undefined) {
    return enableFiltering;
  }
  if (!Array.isArray(filterValue) || !filterValue.length) {
    return false;
  }
  return true;
};
var useFilters = function useFilters(props, computedProps, computedPropsRef) {
  var _useProperty3 = (0, _useProperty5.default)(props, 'enableFiltering'),
    _useProperty4 = (0, _slicedToArray2.default)(_useProperty3, 2),
    enableFiltering = _useProperty4[0],
    setEnableFiltering = _useProperty4[1];
  var isColumnFiltered = (0, _react.useCallback)(function (col) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return false;
    }
    var filterValue = computedProps.getColumnFilterValue(col.id);
    if (!filterValue) {
      return false;
    }
    var filterType = computedProps.initialProps.filterTypes[filterValue.type];
    return filterValue.value !== filterType.emptyValue;
  }, []);
  var columnsMap = (0, _react.useMemo)(function () {
    return (0, _mapColumns.default)(props.columns, {
      showWarnings: false
    });
  }, [props.columns]);
  var _useFilterValue = useFilterValue(props, {
      enableFiltering: enableFiltering,
      columnsMap: columnsMap
    }, computedPropsRef),
    _useFilterValue2 = (0, _slicedToArray2.default)(_useFilterValue, 2),
    computedFilterValue = _useFilterValue2[0],
    setFilterValue = _useFilterValue2[1];
  var getMenuAvailableHeight = (0, _react.useCallback)(function () {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return undefined;
    }
    var filtersHeight = 0;
    if (computedProps.computedFilterable) {
      var filterNode = computedProps.getDOMNode().querySelector('.InovuaReactDataGrid__column-header__filter-wrapper');
      if (filterNode) {
        filtersHeight = filterNode.offsetHeight;
      }
    }
    return computedProps.size ? computedProps.size.height - 5 + filtersHeight : undefined;
  }, []);
  var clearAllFilters = (0, _react.useCallback)(function () {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    if (!computedProps.computedFilterValueMap) {
      return;
    }
    var allFiltersValue = [];
    var headerCells = computedProps.getColumnLayout().getHeaderCells();
    computedProps.allColumns.forEach(function (column) {
      var filterValue = computedProps.computedFilterValueMap[column.id];
      if (!filterValue) {
        return;
      }
      var filterType = computedProps.initialProps.filterTypes[filterValue.type];
      var headerCell = headerCells[column.computedVisibleIndex];
      var newFilterValue = _objectSpread(_objectSpread({}, filterValue), {}, {
        value: filterType.emptyValue
      });
      if (headerCell && headerCell.filter) {
        headerCell.filter.setValue(newFilterValue.value);
      }
      allFiltersValue.push(newFilterValue);
    });
    setFilterValue(allFiltersValue);
  }, [setFilterValue]);
  var columnFilterContextMenuAlignToRef = (0, _react.useRef)(null);
  var columnFilterContextMenuConstrainToRef = (0, _react.useRef)(null);
  var _useState = (0, _react.useState)(null),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    columnFilterContextMenuProps = _useState2[0],
    setColumnFilterContextMenuProps = _useState2[1];
  var showColumnFilterContextMenu = (0, _react.useCallback)(function (alignTo, cellProps) {
    var computedProps = computedPropsRef.current;
    if (columnFilterContextMenuProps || !computedProps) {
      return;
    }
    columnFilterContextMenuAlignToRef.current = alignTo;
    columnFilterContextMenuConstrainToRef.current = computedProps.columnFilterContextMenuConstrainTo || computedProps.getDOMNode();
    if (computedProps.hideColumnContextMenu) {
      computedProps.hideColumnContextMenu();
    }
    setColumnFilterContextMenuProps(cellProps);
    computedProps.notifyColumnFilterVisibleStateChange(true);
  }, [setColumnFilterContextMenuProps]);
  var hideColumnFilterContextMenu = (0, _react.useCallback)(function (node) {
    var computedProps = computedPropsRef.current;
    if (columnFilterContextMenuProps && computedProps) {
      setColumnFilterContextMenuProps(null);
      computedProps.notifyColumnFilterVisibleStateChange(false);
    }
    if (node && !node.type) {
      var filterIcon = node.querySelector('.InovuaReactDataGrid__column-header__filter-settings-icon');
      filterIcon.focus();
    }
  }, [columnFilterContextMenuProps]);
  var shouldShowFilteringMenuItems = (0, _react.useCallback)(function () {
    if (props.showFilteringMenuItems) {
      return true;
    }
    if (computedFilterValue) {
      return true;
    }
    if (enableFiltering) {
      return true;
    }
    return false;
  }, [computedFilterValue, enableFiltering, props.showFilteringMenuItems]);
  var computedFilterValueMap = (0, _react.useMemo)(function () {
    return computedFilterValue ? computedFilterValue.reduce(function (acc, columnFilterValue) {
      acc[columnFilterValue.name] = columnFilterValue;
      return acc;
    }, {}) : null;
  }, [computedFilterValue]);
  var computedOnColumnFilterValueChange = (0, _react.useCallback)(function (columnFilterValue) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var isBinaryOperator = computedProps.isBinaryOperator;
    if (computedProps.onColumnFilterValueChange) {
      computedProps.onColumnFilterValueChange(columnFilterValue);
    }
    var computedFilterValue = computedProps.computedFilterValue;
    var newFilterValue = (computedFilterValue || []).map(function (oldFilterValue) {
      if (oldFilterValue.name === columnFilterValue.columnId) {
        var emptyValue = getColumnFilterEmptyValue(columnFilterValue.columnId);
        if (columnFilterValue.filterValue.type === 'date' || columnFilterValue.filterValue.type === 'number') {
          if (isBinaryOperator(oldFilterValue.operator) && !isBinaryOperator(columnFilterValue.filterValue.operator)) {
            return _objectSpread(_objectSpread({}, columnFilterValue.filterValue), {}, {
              value: emptyValue
            });
          }
          if (!isBinaryOperator(oldFilterValue.operator) && isBinaryOperator(columnFilterValue.filterValue.operator)) {
            return _objectSpread(_objectSpread({}, columnFilterValue.filterValue), {}, {
              value: columnFilterValue.filterValue && columnFilterValue.filterValue.value != null && columnFilterValue.filterValue.value.start != null ? columnFilterValue.filterValue.value : {
                start: emptyValue,
                end: emptyValue
              }
            });
          }
        }
        return columnFilterValue.filterValue;
      }
      return oldFilterValue;
    }).filter(function (f) {
      return !!f;
    });
    setFilterValue(newFilterValue);
  }, [setFilterValue]);
  var getColumnFilterValue = (0, _react.useCallback)(function (column) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return null;
    }
    var col = computedProps.getColumnBy(column);
    if (!col) {
      return null;
    }
    if (!computedProps.computedFilterValueMap) {
      return null;
    }
    return computedProps.computedFilterValueMap[col.id];
  }, []);
  var setColumnFilterValue = (0, _react.useCallback)(function (column, value, operator) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return null;
    }
    var filterValue = getColumnFilterValue(column);
    if (!filterValue) {
      return;
    }
    var newFilterValue = _objectSpread(_objectSpread({}, filterValue), {}, {
      value: value
    });
    if (operator) {
      newFilterValue.operator = operator;
    }
    var col = computedProps.getColumnBy(column);
    var headerCells = computedProps.getColumnLayout().getHeaderCells();
    var headerCell = headerCells[col.computedVisibleIndex];
    if (!headerCell || !headerCell.filter) {
      return;
    }
    computedProps.computedOnColumnFilterValueChange({
      columnId: col.id,
      columnIndex: col.computedVisibleIndex,
      filterValue: newFilterValue
    });
    headerCell.filter.setValue(value);
  }, []);
  var getColumnFilterEmptyValue = (0, _react.useCallback)(function (idNameOrIndex) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var col = computedProps.getColumnBy(idNameOrIndex);
    if (!col) {
      return;
    }
    if (!computedProps.computedFilterValueMap) {
      return;
    }
    var filterValue = computedProps.computedFilterValueMap[col.id];
    if (!filterValue) {
      return;
    }
    var filterType = computedProps.initialProps.filterTypes[filterValue.type];
    return filterType.emptyValue;
  }, []);
  var clearColumnFilter = (0, _react.useCallback)(function (idNameOrIndex) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var col = computedProps.getColumnBy(idNameOrIndex);
    if (!col) {
      return;
    }
    computedProps.setColumnFilterValue(idNameOrIndex, getColumnFilterEmptyValue(idNameOrIndex));
  }, []);
  var isFiltered = (0, _react.useCallback)(function () {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return false;
    }
    return (computedProps.computedFilterValue || []).reduce(function (result, filterValue) {
      if (result) {
        return true;
      }
      var col = computedProps.getColumnBy(filterValue.name);
      if (col && isColumnFiltered(col)) {
        return true;
      }
      return false;
    }, false);
  }, []);
  var computedFiltered = isFiltered();
  return {
    clearColumnFilter: clearColumnFilter,
    computedOnColumnFilterValueChange: computedOnColumnFilterValueChange,
    computedFilterValueMap: computedFilterValueMap,
    computedFilterValue: computedFilterValue,
    computedFiltered: computedFiltered,
    computedFilterable: isFilterable({
      enableFiltering: enableFiltering,
      filterValue: computedFilterValue
    }),
    setEnableFiltering: setEnableFiltering,
    setFilterValue: setFilterValue,
    getMenuAvailableHeight: getMenuAvailableHeight,
    showColumnFilterContextMenu: showColumnFilterContextMenu,
    hideColumnFilterContextMenu: hideColumnFilterContextMenu,
    shouldShowFilteringMenuItems: shouldShowFilteringMenuItems,
    renderColumnFilterContextMenu: renderColumnFilterContextMenu,
    columnFilterContextMenuProps: columnFilterContextMenuProps,
    columnFilterContextMenuAlignToRef: columnFilterContextMenuAlignToRef,
    clearAllFilters: clearAllFilters,
    getColumnFilterValue: getColumnFilterValue,
    setColumnFilterValue: setColumnFilterValue,
    isColumnFiltered: isColumnFiltered
  };
};
var _default = useFilters;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/plugins/menus/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/plugins/menus/index.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "./node_modules/@babel/runtime/helpers/typeof.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _useMenus = _interopRequireWildcard(__webpack_require__(/*! ./useMenus */ "./node_modules/@inovua/reactdatagrid-community/plugins/menus/useMenus/index.js"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var _default = {
  name: 'menus',
  hook: _useMenus.default,
  renderColumnContextMenu: _useMenus.renderColumnContextMenu,
  renderRowContextMenu: _useMenus.renderRowContextMenu,
  defaultProps: function defaultProps() {
    return {
      showColumnMenuTool: true
    };
  }
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/plugins/menus/useMenus/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/plugins/menus/useMenus/index.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
Object.defineProperty(exports, "renderColumnContextMenu", ({
  enumerable: true,
  get: function get() {
    return _renderColumnContextMenu.default;
  }
}));
Object.defineProperty(exports, "renderRowContextMenu", ({
  enumerable: true,
  get: function get() {
    return _renderRowContextMenu.default;
  }
}));
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js"));
var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _detectUa = __webpack_require__(/*! ../../../detect-ua */ "./node_modules/@inovua/reactdatagrid-community/detect-ua.js");
var _region = _interopRequireDefault(__webpack_require__(/*! ../../../packages/region */ "./node_modules/@inovua/reactdatagrid-community/packages/region/index.js"));
var _getGlobal = __webpack_require__(/*! ../../../getGlobal */ "./node_modules/@inovua/reactdatagrid-community/getGlobal.js");
var _renderColumnContextMenu = _interopRequireDefault(__webpack_require__(/*! ./renderColumnContextMenu */ "./node_modules/@inovua/reactdatagrid-community/plugins/menus/useMenus/renderColumnContextMenu.js"));
var _renderRowContextMenu = _interopRequireDefault(__webpack_require__(/*! ./renderRowContextMenu */ "./node_modules/@inovua/reactdatagrid-community/plugins/menus/useMenus/renderRowContextMenu.js"));
var globalObject = (0, _getGlobal.getGlobal)();
var _default = function _default(props, computedProps, computedPropsRef) {
  var _useState = (0, _react.useState)(null),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    columnContextMenuProps = _useState2[0],
    setColumnContextMenuProps = _useState2[1];
  var _useState3 = (0, _react.useState)(null),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    rowContextMenuProps = _useState4[0],
    setRowContextMenuProps = _useState4[1];
  var _useState5 = (0, _react.useState)(null),
    _useState6 = (0, _slicedToArray2.default)(_useState5, 2),
    columnContextMenuInstanceProps = _useState6[0],
    setColumnContextMenuInstanceProps = _useState6[1];
  var getConstrainRegion = function getConstrainRegion(computedProps) {
    if (!computedProps.parentComputedProps) {
      return document.documentElement;
    }
    var node = computedProps.getDOMNode();
    node = node ? node.querySelector('.InovuaReactDataGrid__virtual-list') || node : node;
    return node;
  };
  var getColumnMenuConstrainTo = (0, _react.useCallback)(function () {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    return computedProps.initialProps.columnContextMenuConstrainTo || getConstrainRegion(computedProps);
  }, []);
  var getRowMenuConstrainTo = (0, _react.useCallback)(function () {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    return computedProps.initialProps.rowContextMenuConstrainTo || getConstrainRegion(computedProps);
  }, []);
  var columnContextMenuIndex = (0, _react.useRef)(-1);
  var preventIEMenuCloseRef = (0, _react.useRef)(false);
  var columnContextMenuInfoRef = (0, _react.useRef)({
    menuAlignTo: null,
    getMenuConstrainTo: getColumnMenuConstrainTo,
    menuOnHide: function menuOnHide() {}
  });
  var rowContextMenuInfoRef = (0, _react.useRef)({
    menuAlignTo: null,
    getMenuConstrainTo: getRowMenuConstrainTo,
    menuOnHide: function menuOnHide() {}
  });
  var hideColumnContextMenu = (0, _react.useCallback)(function () {
    if (_detectUa.IS_IE && preventIEMenuCloseRef.current) {
      return;
    }
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    if (computedProps.columnContextMenuProps) {
      var columnContextMenuOnHide = columnContextMenuInfoRef.current.menuOnHide;
      if (typeof columnContextMenuOnHide == 'function') {
        columnContextMenuOnHide();
      }
      computedProps.setColumnContextMenuProps(null);
    }
  }, []);
  var hideRowContextMenu = (0, _react.useCallback)(function () {
    if (_detectUa.IS_IE && preventIEMenuCloseRef.current) {
      return;
    }
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    if (computedProps.preventBlurOnContextMenuOpen && computedProps.preventBlurOnContextMenuOpen.current) {
      computedProps.preventBlurOnContextMenuOpen.current = false;
    }
    if (computedProps.rowContextMenuProps) {
      var rowContextMenuOnHide = rowContextMenuInfoRef.current.menuOnHide;
      if (typeof rowContextMenuOnHide == 'function') {
        rowContextMenuOnHide();
      }
      computedProps.setRowContextMenuProps(null);
    }
  }, []);
  var showColumnContextMenu = (0, _react.useCallback)(function (alignTo, cellProps, _ref, onHide) {
    var computedVisibleIndex = _ref.computedVisibleIndex;
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    if (computedProps.columnContextMenuProps) {
      computedProps.hideColumnContextMenu();
      return;
    }
    columnContextMenuIndex.current = cellProps.columnIndex;
    columnContextMenuInfoRef.current = {
      menuAlignTo: alignTo,
      getMenuConstrainTo: getColumnMenuConstrainTo,
      menuOnHide: onHide
    };
    if (computedProps.hideColumnFilterContextMenu) {
      computedProps.hideColumnFilterContextMenu();
    }
    computedProps.setColumnContextMenuProps(cellProps);
    if (computedProps.setColumnContextMenuInstanceProps) {
      computedProps.setColumnContextMenuInstanceProps({
        computedVisibleIndex: computedVisibleIndex
      });
    }
  }, []);
  var getMenuAvailableHeight = (0, _react.useCallback)(function () {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return 0;
    }
    var filtersHeight = 0;
    if (computedProps.computedIsFilterable) {
      var filterNode = computedProps.getDOMNode().querySelector('.InovuaReactDataGrid__column-header__filter-wrapper');
      if (filterNode) {
        filtersHeight = filterNode.offsetHeight;
      }
    }
    var size = computedProps.initialProps.parentComputedProps ? computedProps.initialProps.parentComputedProps.size : computedProps.size;
    var result = size ? size.height - 5 + filtersHeight : 0;
    return result;
  }, []);
  var onRowContextMenu = (0, _react.useCallback)(function (rowProps, event) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var initialProps = computedProps.initialProps;
    if (initialProps.onRowContextMenu) {
      initialProps.onRowContextMenu(rowProps, event);
    }
    if (!initialProps.renderRowContextMenu) {
      return;
    }
    if (computedProps.preventBlurOnContextMenuOpen) {
      computedProps.preventBlurOnContextMenuOpen.current = true;
    }
    event.preventDefault();
    var cellProps = event.nativeEvent ? event.nativeEvent.__cellProps : undefined;
    var alignTo = _region.default.from(event);
    alignTo.shift({
      top: -globalObject.scrollY,
      left: -globalObject.scrollX
    });
    showRowContextMenu(alignTo, rowProps, cellProps, function () {});
  }, []);
  var showRowContextMenu = (0, _react.useCallback)(function (alignTo, rowProps, cellProps, onHide) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    if (computedProps.rowContextMenuProps) {
      computedProps.hideRowContextMenu();
      return;
    }
    rowContextMenuInfoRef.current = {
      menuAlignTo: alignTo,
      getMenuConstrainTo: getRowMenuConstrainTo,
      cellProps: cellProps,
      menuOnHide: onHide
    };
    if (computedProps.hideRowFilterContextMenu) {
      computedProps.hideRowFilterContextMenu();
    }
    computedProps.setRowContextMenuProps(rowProps);
  }, []);
  return {
    onRowContextMenu: onRowContextMenu,
    getMenuAvailableHeight: getMenuAvailableHeight,
    showRowContextMenu: showRowContextMenu,
    showColumnContextMenu: showColumnContextMenu,
    hideColumnContextMenu: hideColumnContextMenu,
    hideRowContextMenu: hideRowContextMenu,
    columnContextMenuProps: columnContextMenuProps,
    columnContextMenuInstanceProps: columnContextMenuInstanceProps,
    rowContextMenuProps: rowContextMenuProps,
    columnContextMenuInfoRef: columnContextMenuInfoRef,
    rowContextMenuInfoRef: rowContextMenuInfoRef,
    setColumnContextMenuProps: setColumnContextMenuProps,
    setColumnContextMenuInstanceProps: setColumnContextMenuInstanceProps,
    setRowContextMenuProps: setRowContextMenuProps,
    preventIEMenuCloseRef: preventIEMenuCloseRef,
    columnContextMenuIndex: columnContextMenuIndex
  };
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/plugins/menus/useMenus/renderColumnContextMenu.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/plugins/menus/useMenus/renderColumnContextMenu.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _detectUa = __webpack_require__(/*! ../../../detect-ua */ "./node_modules/@inovua/reactdatagrid-community/detect-ua.js");
var _Header = __webpack_require__(/*! ../../../Layout/ColumnLayout/HeaderLayout/Header */ "./node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/HeaderLayout/Header/index.js");
var _Menu = _interopRequireDefault(__webpack_require__(/*! ../../../packages/Menu */ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/index.js"));
var _renderGridMenu = _interopRequireDefault(__webpack_require__(/*! ../../../renderGridMenu */ "./node_modules/@inovua/reactdatagrid-community/renderGridMenu.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var COLUMN_MENU_ALIGN_POSITIONS = ['tl-bl', 'tr-br', 'tl-tr', 'tr-tl', 'br-tr', 'bl-tl', 'br-tl', 'bl-tr', 'lc-tr', 'rc-tl'];
var COLUMN_MENU_ALIGN_POSITIONS_RTL = ['tr-br', 'tl-bl', 'tr-tl', 'tl-tr', 'br-tr', 'bl-tl', 'br-tl', 'bl-tr', 'lc-tr', 'rc-tl'];
var notEmpty = function notEmpty(x) {
  return !!x;
};
var getTopComputedProps = function getTopComputedProps(computedProps) {
  while (computedProps.initialProps.parentComputedProps) {
    computedProps = computedProps.initialProps.parentComputedProps;
  }
  return computedProps;
};
var getAlignTo = function getAlignTo(selection, menuTools, index) {
  var filteredTools = menuTools.filter(function (_, i) {
    return i !== Object.keys(selection).length;
  });
  var length = filteredTools.length;
  var alignTo;
  if (index > length) {
    alignTo = filteredTools[length - 1];
  } else if (index <= length) {
    alignTo = filteredTools[index - 1];
  }
  if (!alignTo) {
    alignTo = filteredTools[0];
  }
  return alignTo;
};
var _default = function _default(computedProps, computedPropsRef) {
  var cellProps = computedProps.columnContextMenuProps;
  if (!cellProps) {
    return null;
  }
  var groupBy = computedProps.computedGroupBy;
  var visibleCountWithColumnMenu = 0;
  var visibleMap = computedProps.initialProps.columns.reduce(function (acc, col) {
    var column = computedProps.getColumnBy(col.name || col.id);
    if (column && computedProps.isColumnVisible(column)) {
      var value = column.id || column.name;
      acc[value] = column.id || column.name;
      if (column.showColumnMenuTool !== false) {
        visibleCountWithColumnMenu++;
      }
    }
    return acc;
  }, {});
  var onSelectionChange = function onSelectionChange(selection) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    if (_detectUa.IS_IE) {
      computedProps.preventIEMenuCloseRef.current = true;
      setTimeout(function () {
        computedProps.preventIEMenuCloseRef.current = false;
      }, 100);
    }
    computedProps.initialProps.columns.forEach(function (col) {
      var computedCol = computedProps.getColumnBy(col);
      if (computedCol) {
        var visible = (computedCol.id in selection);
        computedProps.setColumnVisible(col, visible);
      }
    });
    if (computedProps.updateMenuPositionOnColumnsChange) {
      requestAnimationFrame(function () {
        var menuTools = Array.prototype.slice.call(computedProps.domRef.current.querySelectorAll('.InovuaReactDataGrid__column-header__menu-tool'));
        var mainMenu = computedProps.domRef.current.querySelector('.InovuaReactDataGrid > .inovua-react-toolkit-menu');
        var cellInstance = computedProps.columnContextMenuInstanceProps;
        var columnIndex = cellInstance.computedVisibleIndex;
        var alignTo = getAlignTo(selection, menuTools, columnIndex);
        if (alignTo) {
          computedProps.updateMainMenuPosition(alignTo);
          if (mainMenu) {
            mainMenu.style.transition = 'transform 200ms';
            setTimeout(function () {
              mainMenu.style.transition = '';
            }, 200);
          }
        }
      });
    }
  };
  var currentColumn = computedProps.getColumnBy(cellProps.id);
  var colSortInfo = currentColumn.computedSortInfo;
  var lockLimit = !cellProps.computedLocked && computedProps.unlockedColumns.length <= 1;
  var isAutoLock = cellProps.autoLock && computedProps.lockedStartColumns && !!computedProps.lockedStartColumns.filter(function (c) {
    return !c.autoLock;
  }).length;
  var showColumnMenuLockOptions = cellProps.showColumnMenuLockOptions !== undefined ? cellProps.showColumnMenuLockOptions : computedProps.initialProps.showColumnMenuLockOptions;
  if (cellProps.lockable === false) {
    showColumnMenuLockOptions = false;
  }
  var showColumnMenuGroupOptions = cellProps.showColumnMenuGroupOptions !== undefined ? cellProps.showColumnMenuGroupOptions : computedProps.initialProps.showColumnMenuGroupOptions;
  var showColumnMenuFilterOptions = cellProps.showColumnMenuFilterOptions !== undefined ? cellProps.showColumnMenuFilterOptions : computedProps.initialProps.showColumnMenuFilterOptions;
  var showColumnMenuSortOptions = cellProps.showColumnMenuSortOptions !== undefined ? cellProps.showColumnMenuSortOptions : computedProps.initialProps.showColumnMenuSortOptions;
  var enableColumnAutosize = computedProps.enableColumnAutosize ? computedProps.enableColumnAutosize : computedProps.initialProps.enableColumnAutosize;
  var columnsItem = {
    label: computedProps.i18n('columns'),
    itemId: 'columns',
    menuProps: {
      dismissOnClick: false
    },
    items: computedProps.getColumnsInOrder().filter(function (c) {
      return c.showInContextMenu !== false;
    }).map(function (c) {
      var value = c.id || c.name || '';
      return {
        label: (0, _Header.getCellHeader)(c, c, null, {
          currentColumn: currentColumn
        }),
        itemId: "column-".concat(c.id),
        value: value,
        disabled: c.hideable === false || visibleCountWithColumnMenu === 1 && visibleMap[value],
        name: value
      };
    })
  };
  if (computedProps.computedPivot) {
    columnsItem = null;
  }
  var items = [showColumnMenuSortOptions === false ? null : {
    label: computedProps.i18n('sortAsc'),
    itemId: 'sortAsc',
    disabled: !cellProps.computedSortable || colSortInfo && colSortInfo.dir === 1,
    onClick: function onClick() {
      var computedProps = computedPropsRef.current;
      if (!computedProps) {
        return;
      }
      computedProps.setColumnSortInfo(cellProps.id, 1);
      computedProps.hideColumnContextMenu();
    }
  }, showColumnMenuSortOptions === false ? null : {
    label: computedProps.i18n('sortDesc'),
    itemId: 'sortDesc',
    disabled: !cellProps.computedSortable || colSortInfo && colSortInfo.dir === -1,
    onClick: function onClick() {
      var computedProps = computedPropsRef.current;
      if (!computedProps) {
        return;
      }
      computedProps.setColumnSortInfo(cellProps.id, -1);
      computedProps.hideColumnContextMenu();
    }
  }, (computedProps.initialProps.allowUnsort || computedProps.computedIsMultiSort) && showColumnMenuSortOptions !== false ? {
    label: computedProps.i18n('unsort'),
    itemId: 'unsort',
    disabled: !colSortInfo,
    onClick: function onClick() {
      var computedProps = computedPropsRef.current;
      if (!computedProps) {
        return;
      }
      computedProps.unsortColumn(cellProps.id);
      computedProps.hideColumnContextMenu();
    }
  } : null, showColumnMenuGroupOptions === false ? null : '-', showColumnMenuGroupOptions === false ? null : {
    label: computedProps.i18n('group'),
    itemId: 'group',
    disabled: !groupBy || groupBy.indexOf(cellProps.id) !== -1 || currentColumn.groupBy === false,
    onClick: function onClick() {
      var computedProps = computedPropsRef.current;
      if (!computedProps) {
        return;
      }
      computedProps.addGroupByColumn(cellProps.id);
      computedProps.hideColumnContextMenu();
    }
  }, showColumnMenuGroupOptions === false ? null : {
    label: computedProps.i18n('ungroup'),
    itemId: 'ungroup',
    disabled: !groupBy || groupBy.indexOf(cellProps.id) === -1 || currentColumn.groupBy === false,
    onClick: function onClick() {
      var computedProps = computedPropsRef.current;
      if (!computedProps) {
        return;
      }
      computedProps.removeGroupByColumn(cellProps.id);
      computedProps.hideColumnContextMenu();
    }
  }, showColumnMenuLockOptions === false ? null : '-', showColumnMenuLockOptions === false ? null : {
    label: computedProps.i18n('lockStart'),
    itemId: 'lockStart',
    disabled: cellProps.computedLocked === 'start' || lockLimit,
    onClick: function onClick() {
      var computedProps = computedPropsRef.current;
      if (!computedProps) {
        return;
      }
      computedProps.setColumnLocked(cellProps.id, 'start');
      computedProps.hideColumnContextMenu();
    }
  }, showColumnMenuLockOptions === false ? null : {
    label: computedProps.i18n('lockEnd'),
    itemId: 'lockEnd',
    disabled: cellProps.computedLocked === 'end' || lockLimit || isAutoLock,
    onClick: function onClick() {
      var computedProps = computedPropsRef.current;
      if (!computedProps) {
        return;
      }
      computedProps.setColumnLocked(cellProps.id, 'end');
      computedProps.hideColumnContextMenu();
    }
  }, showColumnMenuLockOptions === false ? null : {
    label: computedProps.i18n('unlock'),
    itemId: 'unlock',
    disabled: !cellProps.computedLocked || isAutoLock,
    onClick: function onClick() {
      var computedProps = computedPropsRef.current;
      if (!computedProps) {
        return;
      }
      computedProps.setColumnLocked(cellProps.id, false);
      computedProps.hideColumnContextMenu();
    }
  }, computedProps.enableColumnAutosize ? '-' : null, computedProps.enableColumnAutosize === false ? null : {
    label: computedProps.i18n('autoSizeToFit'),
    itemId: 'autoSizeToFit',
    menuProps: {
      dismissOnClick: true
    },
    onClick: function onClick() {
      var computedProps = computedPropsRef.current;
      if (!computedProps) {
        return;
      }
      if (computedProps.setColumnSizesToFit) {
        computedProps.setColumnSizesToFit();
        computedProps.hideColumnContextMenu();
      }
    }
  }, computedProps.enableColumnAutosize === false ? null : {
    label: computedProps.i18n('autoresizeThisColumn'),
    itemId: 'autoresizeThisColumn',
    menuProps: {
      dismissOnClick: true
    },
    onClick: function onClick() {
      var computedProps = computedPropsRef.current;
      if (!computedProps) {
        return;
      }
      var columnId = cellProps.id;
      if (computedProps.setColumnSizeAuto) {
        computedProps.setColumnSizeAuto(columnId);
        computedProps.hideColumnContextMenu();
      }
    }
  }, enableColumnAutosize === false ? null : {
    label: computedProps.i18n('autoresizeAllColumns'),
    itemId: 'autoresizeAllColumns',
    menuProps: {
      dismissOnClick: true
    },
    onClick: function onClick() {
      var computedProps = computedPropsRef.current;
      if (!computedProps) {
        return;
      }
      if (computedProps.setColumnsSizesAuto) {
        computedProps.setColumnsSizesAuto();
        computedProps.hideColumnContextMenu();
      }
    }
  }, columnsItem ? '-' : null, columnsItem].filter(notEmpty);
  if (items[0] === '-') {
    items = items.slice(1);
  }
  if (computedProps.initialProps.enableFiltering !== false && showColumnMenuFilterOptions !== false) {
    var isFilterable = computedProps.computedFilterable;
    var showFilteringMenuItems = computedProps.shouldShowFilteringMenuItems ? computedProps.shouldShowFilteringMenuItems() : false;
    if (showFilteringMenuItems) {
      items.push('-');
      items.push({
        label: computedProps.i18n('showFilteringRow', 'Show Filtering Row'),
        itemId: 'showFilteringRow',
        disabled: isFilterable,
        onClick: function onClick() {
          var computedProps = computedPropsRef.current;
          if (!computedProps) {
            return;
          }
          computedProps.setEnableFiltering(true);
          computedProps.hideColumnContextMenu();
        }
      });
      items.push({
        label: computedProps.i18n('hideFilteringRow', 'Hide Filtering Row'),
        itemId: 'hideFilteringRow',
        disabled: !isFilterable,
        onClick: function onClick() {
          var computedProps = computedPropsRef.current;
          if (!computedProps) {
            return;
          }
          computedProps.setEnableFiltering(false);
          computedProps.hideColumnContextMenu();
        }
      });
    }
  }
  items.forEach(function (item) {
    var onClick = item.onClick;
    if (onClick && _detectUa.IS_MS_BROWSER) {
      item.onClick = function () {
        requestAnimationFrame(onClick);
      };
    }
  });
  var constrainToComputedProps = getTopComputedProps(computedProps);
  var constrainTo = true;
  var menuProps = {
    updatePositionOnScroll: computedProps.updateMenuPositionOnScroll,
    stopBlurPropagation: false,
    maxHeight: constrainToComputedProps.initialProps.columnContextMenuConstrainTo ? null : constrainTo === true ? null : computedProps.getMenuAvailableHeight(),
    nativeScroll: !_detectUa.IS_MS_BROWSER,
    autoFocus: true,
    enableSelection: true,
    defaultSelected: visibleMap,
    onDismiss: function onDismiss() {
      var computedProps = computedPropsRef.current;
      if (!computedProps) {
        return;
      }
      computedProps.hideColumnContextMenu();
    },
    onSelectionChange: onSelectionChange,
    style: {
      zIndex: 110000,
      position: computedProps.initialProps.columnContextMenuPosition || 'absolute'
    },
    items: items,
    theme: computedProps.theme,
    constrainTo: constrainTo,
    alignPositions: computedProps.initialProps.columnContextMenuAlignPositions || computedProps.rtl ? COLUMN_MENU_ALIGN_POSITIONS_RTL : COLUMN_MENU_ALIGN_POSITIONS,
    alignTo: computedProps.columnContextMenuInfoRef.current.menuAlignTo
  };
  var result;
  if (computedProps.initialProps.renderColumnContextMenu) {
    result = computedProps.initialProps.renderColumnContextMenu(menuProps, {
      cellProps: cellProps,
      grid: computedProps.publicAPI,
      computedProps: computedProps,
      computedPropsRef: computedPropsRef
    });
  }
  if (result === undefined) {
    result = _react.default.createElement(_Menu.default, _objectSpread({}, menuProps));
  }
  if (computedProps.initialProps.renderGridMenu) {
    return computedProps.initialProps.renderGridMenu(result, computedProps);
  }
  return (0, _renderGridMenu.default)(result, computedProps);
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/plugins/menus/useMenus/renderRowContextMenu.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/plugins/menus/useMenus/renderRowContextMenu.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var _detectUa = __webpack_require__(/*! ../../../detect-ua */ "./node_modules/@inovua/reactdatagrid-community/detect-ua.js");
var _Menu = _interopRequireDefault(__webpack_require__(/*! ../../../packages/Menu */ "./node_modules/@inovua/reactdatagrid-community/packages/Menu/index.js"));
var _renderGridMenu = _interopRequireDefault(__webpack_require__(/*! ../../../renderGridMenu */ "./node_modules/@inovua/reactdatagrid-community/renderGridMenu.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var ROW_MENU_ALIGN_POSITIONS = ['tl-bl', 'tr-br', 'tl-tr', 'tr-tl', 'br-tr', 'bl-tl', 'br-tl', 'bl-tr', 'lc-tr', 'rc-tl'];
var ROW_MENU_ALIGN_POSITIONS_RTL = ['tr-br', 'tl-bl', 'tr-tl', 'tl-tr', 'br-tr', 'bl-tl', 'br-tl', 'bl-tr', 'lc-tr', 'rc-tl'];
var notEmpty = function notEmpty(x) {
  return !!x;
};
var getTopComputedProps = function getTopComputedProps(computedProps) {
  while (computedProps.initialProps.parentComputedProps) {
    computedProps = computedProps.initialProps.parentComputedProps;
  }
  return computedProps;
};
var _default = function _default(computedProps, computedPropsRef) {
  var rowProps = computedProps.rowContextMenuProps;
  if (!rowProps) {
    return null;
  }
  var rowContextMenuInfo = computedProps.rowContextMenuInfoRef;
  if (!rowProps || !rowContextMenuInfo.current) {
    return null;
  }
  var cellProps = rowContextMenuInfo.current.cellProps;
  var constrainToComputedProps = getTopComputedProps(computedProps);
  var items = [];
  var menuProps = {
    updatePositionOnScroll: computedProps.updateMenuPositionOnScroll,
    stopBlurPropagation: false,
    maxHeight: constrainToComputedProps.initialProps.columnContextMenuConstrainTo ? null : computedProps.getMenuAvailableHeight(),
    autoFocus: true,
    theme: computedProps.theme,
    onDismiss: computedProps.hideRowContextMenu,
    nativeScroll: !_detectUa.IS_MS_BROWSER,
    style: {
      zIndex: 110000,
      position: computedProps.initialProps.rowContextMenuPosition || 'absolute'
    },
    items: items,
    constrainTo: constrainToComputedProps.columnContextMenuInfoRef.current.getMenuConstrainTo(),
    alignPositions: computedProps.initialProps.rowContextMenuAlignPositions || computedProps.rtl ? ROW_MENU_ALIGN_POSITIONS_RTL : ROW_MENU_ALIGN_POSITIONS,
    alignTo: computedProps.rowContextMenuInfoRef.current.menuAlignTo
  };
  var result;
  if (computedProps.initialProps.renderRowContextMenu) {
    result = computedProps.initialProps.renderRowContextMenu(menuProps, {
      rowProps: rowProps,
      cellProps: cellProps,
      grid: computedProps.publicAPI,
      computedProps: computedProps,
      computedPropsRef: computedPropsRef
    });
  }
  if (result === undefined) {
    result = _react.default.createElement(_Menu.default, _objectSpread({}, menuProps));
  }
  if (computedProps.initialProps.renderGridMenu) {
    return computedProps.initialProps.renderGridMenu(result, computedProps);
  }
  return (0, _renderGridMenu.default)(result, computedProps);
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/plugins/sortable-columns/index.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/plugins/sortable-columns/index.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _useSortInfo = _interopRequireDefault(__webpack_require__(/*! ./useSortInfo */ "./node_modules/@inovua/reactdatagrid-community/plugins/sortable-columns/useSortInfo.js"));
var _sorty = _interopRequireDefault(__webpack_require__(/*! ../../packages/sorty */ "./node_modules/@inovua/reactdatagrid-community/packages/sorty/index.js"));
var _default = {
  name: 'sortable-columns',
  hook: _useSortInfo.default,
  defaultProps: function defaultProps() {
    return {
      sorty: _sorty.default,
      sortable: true
    };
  }
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/plugins/sortable-columns/useSortInfo.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/plugins/sortable-columns/useSortInfo.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js"));
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _isControlledProperty = _interopRequireDefault(__webpack_require__(/*! ../../utils/isControlledProperty */ "./node_modules/@inovua/reactdatagrid-community/utils/isControlledProperty.js"));
var _useProperty3 = _interopRequireDefault(__webpack_require__(/*! ../../hooks/useProperty */ "./node_modules/@inovua/reactdatagrid-community/hooks/useProperty.js"));
var _batchUpdate = _interopRequireDefault(__webpack_require__(/*! ../../utils/batchUpdate */ "./node_modules/@inovua/reactdatagrid-community/utils/batchUpdate.js"));
var getNextSortInfoForColumn = function getNextSortInfoForColumn(currentDir, column, _ref) {
  var allowUnsort = _ref.allowUnsort,
    multiSort = _ref.multiSort,
    forceDir = _ref.forceDir,
    defaultDir = _ref.defaultDir,
    sortFunctions = _ref.sortFunctions;
  var newSortInfo = {
    dir: 1,
    id: column.id,
    name: column.sortName || column.name || '',
    columnName: column.name || '',
    type: column.type
  };
  var sortName = newSortInfo.name;
  if (!sortName && !column.sort) {
    return null;
  }
  var sortFn = column.sort;
  if (!sortFn && sortFunctions && sortFunctions[column.type]) {
    sortFn = sortFunctions[column.type];
  }
  if (sortFn) {
    newSortInfo.fn = function (one, two) {
      return sortFn(one, two, column);
    };
  }
  if (forceDir !== undefined) {
    newSortInfo.dir = forceDir;
    return newSortInfo;
  }
  if (defaultDir === undefined) {
    defaultDir = 1;
  }
  if (defaultDir === 1) {
    if (!currentDir) {
      newSortInfo.dir = 1;
    } else if (currentDir === 1) {
      newSortInfo.dir = -1;
    } else if (currentDir === -1) {
      if (allowUnsort || multiSort) {
        return null;
      }
      newSortInfo.dir = 1;
    }
  } else if (defaultDir === -1) {
    if (!currentDir) {
      newSortInfo.dir = -1;
    } else if (currentDir === -1) {
      newSortInfo.dir = 1;
    } else if (currentDir === 1) {
      if (allowUnsort || multiSort) {
        return null;
      }
      newSortInfo.dir = 1;
    }
  }
  return newSortInfo;
};
var getNextSingleSortInfo = function getNextSingleSortInfo(column, currentSortInfo, _ref2) {
  var _ref2$allowUnsort = _ref2.allowUnsort,
    allowUnsort = _ref2$allowUnsort === void 0 ? false : _ref2$allowUnsort,
    multiSort = _ref2.multiSort,
    forceDir = _ref2.forceDir,
    defaultDir = _ref2.defaultDir,
    sortFunctions = _ref2.sortFunctions;
  if (Array.isArray(currentSortInfo)) {
    return null;
  }
  return getNextSortInfoForColumn(currentSortInfo && (currentSortInfo.name === column.id || currentSortInfo.id === column.id || currentSortInfo.name === column.sortName) ? currentSortInfo.dir : 0, column, {
    allowUnsort: allowUnsort,
    multiSort: multiSort,
    forceDir: forceDir,
    defaultDir: defaultDir,
    sortFunctions: sortFunctions
  });
};
var getNextMultipleSortInfo = function getNextMultipleSortInfo(column, currentSortInfo, _ref3) {
  var _ref3$allowUnsort = _ref3.allowUnsort,
    allowUnsort = _ref3$allowUnsort === void 0 ? false : _ref3$allowUnsort,
    forceDir = _ref3.forceDir,
    sortFunctions = _ref3.sortFunctions;
  var result;
  if (!Array.isArray(currentSortInfo)) {
    var info = getNextSingleSortInfo(column, currentSortInfo, {
      allowUnsort: allowUnsort,
      multiSort: true,
      forceDir: forceDir,
      sortFunctions: sortFunctions
    });
    result = [info].filter(function (x) {
      return x;
    });
  } else {
    var sortInfoIndex = currentSortInfo.findIndex(function (value) {
      return value.id ? value.id === column.id : value.name === column.name || value.name === column.sortName;
    });
    var currentSortInfoForColumn = currentSortInfo[sortInfoIndex];
    var nextSortInfoForColumn = getNextSingleSortInfo(column, currentSortInfo[sortInfoIndex], {
      allowUnsort: allowUnsort,
      multiSort: true,
      forceDir: forceDir,
      sortFunctions: sortFunctions
    });
    if (nextSortInfoForColumn && forceDir !== undefined) {
      nextSortInfoForColumn.dir = forceDir;
    }
    result = (currentSortInfoForColumn ? [].concat((0, _toConsumableArray2.default)(currentSortInfo.slice(0, sortInfoIndex)), [nextSortInfoForColumn], (0, _toConsumableArray2.default)(currentSortInfo.slice(sortInfoIndex + 1))) : [].concat((0, _toConsumableArray2.default)(currentSortInfo), [nextSortInfoForColumn])).filter(function (x) {
      return x;
    });
  }
  return result;
};
var useSortInfo = function useSortInfo(props, _, computedPropsRef) {
  var controlled = (0, _isControlledProperty.default)(props, 'sortInfo');
  var _useProperty = (0, _useProperty3.default)(props, 'sortInfo'),
    _useProperty2 = (0, _slicedToArray2.default)(_useProperty, 2),
    sortInfo = _useProperty2[0],
    silentSetSortInfo = _useProperty2[1];
  if (controlled) {}
  var setSortInfo = (0, _react.useCallback)(function (sortInfo) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var queue = (0, _batchUpdate.default)();
    var computedRemoteData = computedProps.computedRemoteData;
    queue.commit(function () {
      if (computedProps.computedPagination && computedProps.setSkip && computedProps.computedSkip) {
        computedProps.setSkip(0);
      }
      silentSetSortInfo(sortInfo);
      if (computedRemoteData) {
        computedProps.setLoadDataTrigger(function (loadDataTrigger) {
          return [].concat((0, _toConsumableArray2.default)(loadDataTrigger), ['sortInfo']);
        });
      }
    });
  }, [silentSetSortInfo]);
  var toggleColumnSort = (0, _react.useCallback)(function (colId, defaultSortingDirection) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var allowUnsort = computedProps.allowUnsort;
    var computedColumn = computedProps.getColumnBy(colId);
    if (!computedColumn) {
      return;
    }
    var sortInfo = computedProps.computedSortInfo === undefined ? null : computedProps.computedSortInfo;
    var sortingDirection;
    if (computedProps.defaultSortingDirection) {
      sortingDirection = computedProps.defaultSortingDirection === 'asc' ? 1 : -1;
    }
    if (defaultSortingDirection) {
      sortingDirection = defaultSortingDirection === 'asc' ? 1 : -1;
    }
    var computedIsMultiSort = computedProps.computedIsMultiSort;
    var nextSortInfo = computedIsMultiSort ? getNextMultipleSortInfo(computedColumn, sortInfo, {
      allowUnsort: allowUnsort,
      sortFunctions: computedProps.sortFunctions
    }) : getNextSingleSortInfo(computedColumn, sortInfo, {
      allowUnsort: allowUnsort,
      multiSort: false,
      forceDir: undefined,
      defaultDir: sortingDirection,
      sortFunctions: computedProps.sortFunctions
    });
    setSortInfo(nextSortInfo);
  }, [setSortInfo]);
  var setColumnSortInfo = (0, _react.useCallback)(function (column, dir) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var allowUnsort = computedProps.allowUnsort;
    var computedColumn = computedProps.getColumnBy(column);
    if (!computedColumn) {
      return;
    }
    var computedIsMultiSort = computedProps.computedIsMultiSort;
    var nextSortInfo = computedIsMultiSort ? getNextMultipleSortInfo(computedColumn, sortInfo, {
      allowUnsort: allowUnsort,
      forceDir: dir,
      sortFunctions: computedProps.sortFunctions
    }) : getNextSingleSortInfo(computedColumn, sortInfo, {
      allowUnsort: allowUnsort,
      multiSort: false,
      forceDir: dir,
      sortFunctions: computedProps.sortFunctions
    });
    setSortInfo(nextSortInfo);
  }, [setSortInfo]);
  var unsortColumn = function unsortColumn(column) {
    var computedProps = computedPropsRef.current;
    if (!computedProps) {
      return;
    }
    var computedColumn = computedProps.getColumnBy(column);
    if (!computedColumn) {
      return;
    }
    var columnSortInfo = computedColumn.computedSortInfo;
    if (!columnSortInfo) {
      return;
    }
    var sortInfo = computedProps.computedSortInfo;
    var newSortInfo = null;
    if (Array.isArray(sortInfo)) {
      newSortInfo = sortInfo.filter(function (sortInfo) {
        if (sortInfo && (sortInfo.id === columnSortInfo.id || sortInfo.name === columnSortInfo.name)) {
          return false;
        }
        return true;
      });
    }
    setSortInfo(newSortInfo);
  };
  return {
    computedSortInfo: sortInfo,
    unsortColumn: unsortColumn,
    setSortInfo: setSortInfo,
    computedIsMultiSort: Array.isArray(sortInfo),
    toggleColumnSort: toggleColumnSort,
    setColumnSortInfo: setColumnSortInfo
  };
};
var _default = useSortInfo;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/renderEmptyContent.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/renderEmptyContent.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));
var STYLE = {
  display: 'inline-block'
};
var _default = function _default(content) {
  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'empty';
  var style = arguments.length > 2 ? arguments[2] : undefined;
  if (typeof content === 'function') {
    content = content();
  }
  if (content == null || content == false || content == '') {
    return null;
  }
  if (typeof content === 'string') {
    content = _react.default.createElement("div", {
      className: "InovuaReactDataGrid__".concat(name, "-text"),
      style: STYLE
    }, content);
  }
  return _react.default.createElement("div", {
    key: "emptyContentWrapper",
    className: "InovuaReactDataGrid__".concat(name, "-wrapper"),
    style: style
  }, content);
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/renderGridMenu.js":
/*!************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/renderGridMenu.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _reactDom = _interopRequireDefault(__webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js"));
var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _default = function _default(menu, computedProps, menusRef) {
  var menuPortalContainer = computedProps.menuPortalContainer;
  var didMount = menu ? menu.props.componentDidMount : null;
  var willUnmount = menu ? menu.props.componentWillUnmount : null;
  if (menu) {
    menu = (0, _react.cloneElement)(menu, {
      rtl: computedProps.rtl,
      componentDidMount: function componentDidMount() {
        if (didMount) {
          didMount.apply(void 0, arguments);
        }
        menusRef = menusRef || computedProps.menusRef;
        var menuInstance = arguments.length <= 0 ? undefined : arguments[0];
        menusRef.current.push(menuInstance);
      },
      componentWillUnmount: function componentWillUnmount() {
        if (willUnmount) {
          willUnmount.apply(void 0, arguments);
        }
        var menuInstance = arguments.length <= 0 ? undefined : arguments[0];
        menusRef = menusRef || computedProps.menusRef;
        menusRef.current = menusRef.current.filter(function (it) {
          return it !== menuInstance;
        });
      }
    });
  }
  if (menuPortalContainer && _reactDom.default.createPortal) {
    var container = menuPortalContainer;
    if (typeof container === 'string') {
      container = document.querySelector(container);
    }
    if (container) {
      return _reactDom.default.createPortal(menu, container);
    }
  }
  return menu;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/setColumnId.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/setColumnId.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var random = function random() {
  return Date.now ? "".concat(Date.now()).concat(Math.random()) : "".concat(new Date().getTime()) + Math.random();
};
var _default = function _default(col) {
  col.id = col.id == null ? col.name || random() : col.id;
  return col;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/treeFilter.js":
/*!********************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/treeFilter.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _filterTypes = _interopRequireDefault(__webpack_require__(/*! ./filterTypes */ "./node_modules/@inovua/reactdatagrid-community/filterTypes.js"));
var _filter = __webpack_require__(/*! ./filter */ "./node_modules/@inovua/reactdatagrid-community/filter.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var doFilter = function doFilter(item, filterValueArray) {
  var filterTypes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _filterTypes.default;
  var columnsMap = arguments.length > 3 ? arguments[3] : undefined;
  var typeOperators = (0, _filter.buildTypeOperators)(filterTypes);
  for (var i = 0, len = filterValueArray.length; i < len; i++) {
    var fv = filterValueArray[i];
    var type = fv.type,
      operator = fv.operator,
      fn = fv.fn;
    var currentTypeOperators = typeOperators[type];
    if ((0, _filter.validateFilters)(fv, filterTypes, currentTypeOperators)) {
      continue;
    }
    var filterParam = (0, _filter.buildFilterParam)(item, fv, filterTypes, columnsMap);
    var filterFn = fn || currentTypeOperators[operator].fn;
    if (filterFn(filterParam) !== true) {
      return false;
    }
  }
  return true;
};
var filterData = function filterData(dataArray, filterFn, config) {
  var nodesName = config.nodesName;
  return dataArray.map(function (item) {
    return _objectSpread({}, item);
  }).filter(function (item) {
    var itemNodes = item[nodesName];
    if (!itemNodes) {
      return filterFn(item);
    }
    var filteredItemNodes = filterData(itemNodes, filterFn, config);
    if (filteredItemNodes.length) {
      item[nodesName] = filteredItemNodes;
      return true;
    }
    return filterFn(item);
  });
};
var treeFilter = function treeFilter(data, filterValueArray) {
  var filterTypes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _filterTypes.default;
  var columnsMap = arguments.length > 3 ? arguments[3] : undefined;
  var options = arguments.length > 4 ? arguments[4] : undefined;
  var computedProps = options && options.props || {};
  var nodesName = computedProps && computedProps.nodesProperty || 'nodes';
  var config = {
    nodesName: nodesName
  };
  var filterFn = function filterFn(item) {
    var filterItem = doFilter(item, filterValueArray, filterTypes, columnsMap);
    return filterItem;
  };
  return filterData(data, filterFn, config) || [];
};
var _default = treeFilter;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/utils/batchUpdate.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/utils/batchUpdate.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _reactDom = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
var _default = function _default() {
  var commited = false;
  var fns = [];
  var queue = function queue(fn) {
    fns.push(fn);
  };
  queue.commit = function (extraFn) {
    if (commited) {
      return Promise.resolve(true);
    }
    commited = true;
    return new Promise(function (resolve) {
      (0, _reactDom.unstable_batchedUpdates)(function () {
        if (extraFn) {
          fns.push(extraFn);
        }
        fns.forEach(function (fn) {
          return fn();
        });
        fns = undefined;
        resolve(true);
      });
    });
  };
  return queue;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/utils/clamp.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/utils/clamp.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = function _default(value, min, max) {
  if (min == null) {
    min = value;
  }
  return value < min ? min : max != null && value > max ? max : value;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/utils/columnResize/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/utils/columnResize/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "./node_modules/@babel/runtime/helpers/defineProperty.js"));
var _clamp = _interopRequireDefault(__webpack_require__(/*! ../clamp */ "./node_modules/@inovua/reactdatagrid-community/utils/clamp.js"));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var normalize = function normalize(result) {
  var newColumnFlexes = result.newColumnFlexes,
    newColumnSizes = result.newColumnSizes,
    maxAvailableWidthForColumns = result.maxAvailableWidthForColumns;
  if (newColumnFlexes && !Object.keys(newColumnFlexes).length) {
    newColumnFlexes = undefined;
  }
  if (newColumnSizes && !Object.keys(newColumnSizes).length) {
    newColumnSizes = undefined;
  }
  return _objectSpread(_objectSpread({}, result), {}, {
    newColumnFlexes: newColumnFlexes,
    newColumnSizes: newColumnSizes,
    maxAvailableWidthForColumns: maxAvailableWidthForColumns
  });
};
var assignFlexes = function assignFlexes(columns) {
  return columns.reduce(function (flexes, col) {
    if (col.computedFlex) {
      flexes[col.id] = col.computedWidth;
    }
    return flexes;
  }, {});
};
var clampColSize = function clampColSize(size, col) {
  return (0, _clamp.default)(size, col.computedMinWidth, col.computedMaxWidth);
};
var resizeGroupColumns = function resizeGroupColumns(arg, config) {
  var totalDiff = arg.diff,
    maxAvailableWidthForColumns = arg.maxAvailableWidthForColumns,
    shareSpaceOnResize = arg.shareSpaceOnResize,
    index = arg.index,
    groupColumns = arg.groupColumns,
    columns = arg.columns;
  columns = columns.map(function (c) {
    return _objectSpread({}, c);
  });
  var newColumnSizes = config.newColumnSizes || {};
  var columnsMap = columns.reduce(function (map, col) {
    map[col.id] = col;
    return map;
  }, {});
  var newColumnFlexes = _objectSpread(_objectSpread({}, assignFlexes(groupColumns.map(function (colId) {
    return columnsMap[colId];
  }))), config.newColumnFlexes);
  while (Math.abs(totalDiff) > 0) {
    groupColumns.forEach(function (colId, idx) {
      var col = columnsMap[colId];
      if (col.computedResizable === false) {
        return;
      }
      var totalGroupResizableWidth = groupColumns.slice(idx).reduce(function (total, colId) {
        var col = columnsMap[colId];
        if (col.computedResizable === false) {
          return total;
        }
        if (totalDiff > 0 && col.computedMaxWidth && col.computedWidth >= col.computedMaxWidth) {
          return total;
        }
        if (totalDiff < 0 && col.computedMinWidth && col.computedWidth <= col.computedMinWidth) {
          return total;
        }
        return total + col.computedWidth;
      }, 0);
      var diff = totalGroupResizableWidth ? Math.round(col.computedWidth / totalGroupResizableWidth * totalDiff) : 0;
      var adjustment = 0;
      if (!col.computedFlex) {
        newColumnSizes[col.id] = col.computedWidth = col.computedWidth + diff;
      } else {
        delete newColumnSizes[col.id];
        newColumnFlexes[col.id] = col.computedWidth = col.computedWidth + diff;
      }
      if (newColumnSizes[col.id] !== undefined) {
        var size = newColumnSizes[col.id];
        var clampedSize = (0, _clamp.default)(size, col.computedMinWidth, col.computedMaxWidth);
        if (clampedSize !== size) {
          adjustment = size - clampedSize;
          newColumnSizes[col.id] = clampedSize;
        }
      } else if (newColumnFlexes[col.id] !== undefined) {
        var _size = newColumnFlexes[col.id];
        var _clampedSize = (0, _clamp.default)(_size, col.computedMinWidth, col.computedMaxWidth);
        if (_clampedSize !== _size) {
          adjustment = _size - _clampedSize;
          newColumnFlexes[col.id] = col.computedWidth = _clampedSize;
        }
      }
      if (diff === 0) {
        totalDiff = 0;
      } else {
        totalDiff = totalDiff - diff + adjustment;
      }
    });
  }
  return normalize(_objectSpread(_objectSpread({}, config), {}, {
    newColumnSizes: newColumnSizes,
    newColumnFlexes: newColumnFlexes
  }));
};
var _default = function _default(arg) {
  var shareSpaceOnResize = arg.shareSpaceOnResize,
    groupColumns = arg.groupColumns;
  var result = shareSpaceOnResize ? resizeShareSpace(arg) : resizeNoShareSpace(arg);
  if (groupColumns) {
    return resizeGroupColumns(arg, result);
  }
  return result;
};
exports["default"] = _default;
var resizeShareSpace = function resizeShareSpace(arg) {
  var columns = arg.columns,
    index = arg.index,
    diff = arg.diff;
  var maxAvailableWidthForColumns = arg.maxAvailableWidthForColumns;
  var colLeft = columns[index];
  var colsToRight = columns.slice(index + 1);
  var colRight = colsToRight[0];
  if (!colRight || colRight.computedResizable === false) {
    return resizeNoShareSpace(arg);
  }
  if (!colLeft.computedFlex && !colRight.computedFlex) {
    var _newColumnSizes;
    var newColLeftSize = colLeft.computedWidth + diff;
    var newColRightSize = clampColSize(colRight.computedWidth - diff, colRight);
    var remainingDiff = newColRightSize - (colRight.computedWidth - diff);
    var newColumnSizes = (_newColumnSizes = {}, (0, _defineProperty2.default)(_newColumnSizes, colLeft.id, newColLeftSize + remainingDiff), (0, _defineProperty2.default)(_newColumnSizes, colRight.id, newColRightSize), _newColumnSizes);
    return normalize({
      newColumnSizes: newColumnSizes,
      maxAvailableWidthForColumns: maxAvailableWidthForColumns
    });
  }
  if (colLeft.computedFlex && colRight.computedFlex) {
    var newColumnFlexes = assignFlexes(columns);
    newColumnFlexes[colLeft.id] = colLeft.computedWidth + diff;
    newColumnFlexes[colRight.id] = colRight.computedWidth - diff;
    return normalize({
      newColumnFlexes: newColumnFlexes,
      maxAvailableWidthForColumns: maxAvailableWidthForColumns
    });
  }
  if (!colLeft.computedFlex) {
    var _newColumnFlexes = assignFlexes(columns);
    var _newColumnSizes2 = (0, _defineProperty2.default)({}, colLeft.id, colLeft.computedWidth + diff);
    _newColumnFlexes[colRight.id] = colRight.computedWidth - diff;
    return normalize({
      newColumnFlexes: _newColumnFlexes,
      newColumnSizes: _newColumnSizes2,
      maxAvailableWidthForColumns: maxAvailableWidthForColumns
    });
  }
  if (!colRight.computedFlex) {
    var flexCount = columns.reduce(function (count, col) {
      return count + (col.computedFlex ? 1 : 0);
    }, 0);
    var _newColumnFlexes2 = assignFlexes(columns);
    var _newColumnSizes4 = (0, _defineProperty2.default)({}, colRight.id, colRight.computedWidth - diff);
    _newColumnFlexes2[colLeft.id] = colLeft.computedWidth + diff;
    if (flexCount === 1 && colLeft.computedFlex) {
      _newColumnFlexes2 = {};
    }
    return normalize({
      newColumnFlexes: _newColumnFlexes2,
      newColumnSizes: _newColumnSizes4,
      maxAvailableWidthForColumns: maxAvailableWidthForColumns
    });
  }
};
var resizeNoShareSpace = function resizeNoShareSpace(arg) {
  var columns = arg.columns,
    index = arg.index,
    diff = arg.diff,
    totalComputedWidth = arg.totalComputedWidth;
  var maxAvailableWidthForColumns = arg.maxAvailableWidthForColumns;
  var colLeft = columns[index];
  var colsToRight = columns.slice(index + 1);
  var colRight = colsToRight[0];
  var newColumnSizes;
  var newColumnFlexes;
  var flexCount = columns.reduce(function (count, col) {
    return count + (col.computedFlex ? 1 : 0);
  }, 0);
  if (!colLeft.computedFlex) {
    if (!flexCount) {
      newColumnSizes = {};
      if (colLeft.computedResizable !== false) {
        newColumnSizes[colLeft.id] = clampColSize(colLeft.computedWidth + diff, colLeft);
      }
      return normalize({
        newColumnSizes: newColumnSizes,
        newColumnFlexes: undefined,
        maxAvailableWidthForColumns: maxAvailableWidthForColumns
      });
    }
    newColumnSizes = {};
    newColumnSizes[colLeft.id] = clampColSize(colLeft.computedWidth + diff, colLeft);
    return normalize({
      newColumnSizes: newColumnSizes,
      newColumnFlexes: assignFlexes(columns),
      maxAvailableWidthForColumns: totalComputedWidth + diff
    });
  }
  newColumnFlexes = assignFlexes(columns);
  newColumnFlexes[colLeft.id] = colLeft.computedWidth + diff;
  if (flexCount === 1) {
    if (!colLeft.keepFlex) {
      delete newColumnFlexes[colLeft.id];
      newColumnSizes = {};
      newColumnSizes[colLeft.id] = clampColSize(colLeft.computedWidth + diff, colLeft);
    } else {
      newColumnFlexes = {};
      maxAvailableWidthForColumns = totalComputedWidth + diff;
    }
  } else {
    if (!colLeft.keepFlex) {
      delete newColumnFlexes[colLeft.id];
      newColumnSizes = {};
      newColumnSizes[colLeft.id] = clampColSize(colLeft.computedWidth + diff, colLeft);
      maxAvailableWidthForColumns = totalComputedWidth + diff;
    } else {
      newColumnFlexes[colLeft.id] = colLeft.computedWidth + diff;
      maxAvailableWidthForColumns = totalComputedWidth + diff;
    }
  }
  return normalize({
    newColumnFlexes: newColumnFlexes,
    newColumnSizes: newColumnSizes,
    maxAvailableWidthForColumns: maxAvailableWidthForColumns
  });
};

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/utils/flex/computeFlexWidths.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/utils/flex/computeFlexWidths.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "./node_modules/@babel/runtime/helpers/toConsumableArray.js"));
var sum = function sum(a, b) {
  return (a || 0) + (b || 0);
};
var EMPTY_ARRAY = [];
var _default = function _default(_ref) {
  var flexes = _ref.flexes,
    availableSize = _ref.availableSize,
    _ref$maxWidths = _ref.maxWidths,
    maxWidths = _ref$maxWidths === void 0 ? EMPTY_ARRAY : _ref$maxWidths,
    _ref$minWidths = _ref.minWidths,
    minWidths = _ref$minWidths === void 0 ? EMPTY_ARRAY : _ref$minWidths;
  flexes = (0, _toConsumableArray2.default)(flexes);
  var sumOfAllFlexes = flexes.reduce(sum, 0);
  if (minWidths.length && minWidths.length != flexes.length) {
    throw 'minWidths.length needs to be === flexes.length';
  }
  if (maxWidths.length && maxWidths.length != flexes.length) {
    throw 'maxWidths.length needs to be === flexes.length';
  }
  var oneFlex = sumOfAllFlexes ? availableSize / sumOfAllFlexes : 0;
  var result = flexes.map(function (_) {
    return null;
  });
  flexes.forEach(function (flex, index) {
    var minWidth = minWidths[index];
    flex = flex || 0;
    if (flex === 0) {
      return;
    }
    var size;
    var flexSize = Math.round(flex * oneFlex);
    var maxWidth = maxWidths[index];
    if (minWidth != null && flexSize < minWidth) {
      availableSize -= minWidth;
      flexes[index] = 0;
      size = minWidth;
      sumOfAllFlexes -= flex;
      oneFlex = sumOfAllFlexes ? availableSize / sumOfAllFlexes : 0;
    } else if (maxWidth != null && flexSize > maxWidth) {
      availableSize -= maxWidth;
      flexes[index] = 0;
      size = maxWidth;
      sumOfAllFlexes -= flex;
      oneFlex = sumOfAllFlexes ? availableSize / sumOfAllFlexes : 0;
    }
    if (size) {
      result[index] = size;
    }
  });
  var lastValidFlexIndex = flexes.reduce(function (acc, flex, index) {
    return flex ? index : acc;
  }, -1);
  flexes.forEach(function (flex, index) {
    if (!flex) {
      return;
    }
    var flexSize = Math.round(flex * oneFlex);
    if (index === lastValidFlexIndex) {
      flexSize = availableSize;
    }
    if (minWidths[index] != null) {
      flexSize = Math.max(flexSize, minWidths[index] || 0);
    }
    if (maxWidths[index] != null) {
      flexSize = Math.min(flexSize, maxWidths[index] || Infinity);
    }
    availableSize -= Math.max(flexSize, 0);
    result[index] = flexSize;
  });
  return result;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/utils/getIndexBy.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/utils/getIndexBy.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var getIndexBy = function getIndexBy(data, by, id, getItemId, compoundIdProperty) {
  var index = -1;
  for (var i = 0, len = data.length; i < len; i++) {
    var item = data[i];
    var itemId = compoundIdProperty ? getItemId(item) : item[by];
    var parsedId = typeof itemId === 'number' ? Number(id) : id;
    if (itemId === parsedId) {
      index = i;
      break;
    }
  }
  return index;
};
var _default = getIndexBy;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/utils/humanize.js":
/*!************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/utils/humanize.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = function _default(x) {
  return x || '';
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/utils/isControlledProperty.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/utils/isControlledProperty.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _isControlledValue = _interopRequireDefault(__webpack_require__(/*! ./isControlledValue */ "./node_modules/@inovua/reactdatagrid-community/utils/isControlledValue.js"));
var _default = function _default(props, propName) {
  if (!props) {
    return false;
  }
  return (0, _isControlledValue.default)(props[propName]);
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/utils/isControlledValue.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/utils/isControlledValue.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = function _default(value) {
  return value !== undefined;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/utils/isFocusable.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/utils/isFocusable.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _matchesSelector = _interopRequireDefault(__webpack_require__(/*! ./matchesSelector */ "./node_modules/@inovua/reactdatagrid-community/utils/matchesSelector.js"));
var FOCUSABLE_SELECTOR = 'input, select, textarea, button, object, a[href], [tabindex]';
var _default = function _default(element) {
  return (0, _matchesSelector.default)(element, FOCUSABLE_SELECTOR);
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/utils/matchesSelector.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/utils/matchesSelector.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = function _default(element, selector) {
  var proto = Element.prototype;
  var vendor = proto.matches || proto.matchesSelector || proto.webkitMatchesSelector || proto.mozMatchesSelector || proto.msMatchesSelector || proto.oMatchesSelector;
  function match(el, sel) {
    if (vendor) {
      return vendor.call(el, sel);
    }
    var nodes = el.parentNode.querySelectorAll(sel);
    for (var i = 0, len = nodes.length; i < len; i++) {
      if (nodes[i] == el) {
        return true;
      }
    }
    return false;
  }
  return match(element, selector);
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/utils/moveXBeforeY.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/utils/moveXBeforeY.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = function _default(array, from, to) {
  if (!Array.isArray(array)) {
    array = [];
  }
  var result = [].concat(array);
  var len = array.length;
  if (from === to || !len || from == null || to == null || from >= len || to > len) {
    return result;
  }
  from = Array.isArray(from) ? from : [from];
  var lessThanCount = from.reduce(function (acc, index) {
    return acc + (index < to ? 1 : 0);
  }, 0);
  var values = from.map(function (index) {
    return array[index];
  }).reverse();
  var emptyArray = [];
  emptyArray.concat(from).sort(function (a, b) {
    return b - a;
  }).forEach(function (index) {
    result.splice(index, 1);
  });
  from.reverse().forEach(function (_, i) {
    result.splice(to - lessThanCount, 0, values[i]);
  });
  return result;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/utils/notifier.js":
/*!************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/utils/notifier.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.notifier = notifier;
function notifier(defaultValue) {
  var lastValue = defaultValue;
  var listeners = [];
  function fn(value) {
    lastValue = value;
    listeners.forEach(function (listener) {
      return listener(lastValue);
    });
  }
  fn.get = function () {
    return lastValue;
  };
  fn.onCalled = function (listener) {
    listeners.push(listener);
    return function () {
      listeners = listeners.filter(function (l) {
        return l !== listener;
      });
    };
  };
  fn.destroy = function () {
    listeners.length = 0;
  };
  return fn;
}

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/utils/paginate.js":
/*!************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/utils/paginate.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = function _default(array, _ref) {
  var skip = _ref.skip,
    limit = _ref.limit;
  return array.slice(skip, skip + limit);
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/utils/prepareClassName.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/utils/prepareClassName.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _join = _interopRequireDefault(__webpack_require__(/*! ../packages/join */ "./node_modules/@inovua/reactdatagrid-community/packages/join/index.js"));
var prepareClassName = function prepareClassName(computedProps) {
  var visibleColumns = computedProps.visibleColumns,
    computedShowCellBorders = computedProps.computedShowCellBorders,
    computedShowZebraRows = computedProps.computedShowZebraRows,
    theme = computedProps.theme,
    rtl = computedProps.rtl,
    viewportAvailableWidth = computedProps.viewportAvailableWidth,
    totalComputedWidth = computedProps.totalComputedWidth,
    computedFocused = computedProps.computedFocused,
    computedShowHoverRows = computedProps.computedShowHoverRows,
    nativeScroll = computedProps.nativeScroll,
    focusedClassName = computedProps.focusedClassName,
    computedFilterable = computedProps.computedFilterable,
    computedShowHeaderBorderRight = computedProps.computedShowHeaderBorderRight,
    virtualizeColumns = computedProps.virtualizeColumns,
    className = computedProps.className,
    stickyHeader = computedProps.stickyHeader;
  return (0, _join.default)('InovuaReactDataGrid', className, theme && "InovuaReactDataGrid--theme-".concat(theme), virtualizeColumns && 'InovuaReactDataGrid--virtualize-columns', nativeScroll && 'InovuaReactDataGrid--native-scroll', visibleColumns.length && 'InovuaReactDataGrid--columns-ready', computedShowZebraRows && 'InovuaReactDataGrid--zebra-rows', computedFilterable && 'InovuaReactDataGrid--filterable', computedFocused && 'InovuaReactDataGrid--focused', computedShowHoverRows && 'InovuaReactDataGrid--show-hover-rows', rtl ? 'InovuaReactDataGrid--direction-rtl' : 'InovuaReactDataGrid--direction-ltr', computedFocused && focusedClassName, computedShowHeaderBorderRight ? 'InovuaReactDataGrid--show-header-border-right' : 'InovuaReactDataGrid--no-header-border-right', viewportAvailableWidth > totalComputedWidth && 'InovuaReactDataGrid--show-border-right', computedShowCellBorders && (computedShowCellBorders === true ? 'InovuaReactDataGrid--cell-borders-horizontal InovuaReactDataGrid--cell-borders-vertical' : "InovuaReactDataGrid--cell-borders-".concat(computedShowCellBorders)), stickyHeader && 'InovuaReactDataGrid--sticky-header');
};
var _default = prepareClassName;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/utils/sealedObjectFactory.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/utils/sealedObjectFactory.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = function _default(props) {
  var rowProps = Object.seal ? Object.seal(props) : {};
  return rowProps;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/utils/searchClosestSmallerValue.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/utils/searchClosestSmallerValue.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = function _default(array, value) {
  var low = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
  var high = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : array.length - 1;
  var mid;
  var midValue;
  var midNextIndex;
  var midNextValue;
  while (low <= high) {
    mid = low + (high - low >> 1);
    midValue = array[mid];
    midNextIndex = mid + 1;
    midNextValue = array[midNextIndex];
    if (midValue <= value) {
      if (midNextValue === undefined || midNextValue > value) {
        return mid;
      }
      low = mid + 1;
    } else {
      high = mid - 1;
    }
  }
  return -1;
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/utils/toUpperFirst.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/utils/toUpperFirst.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;
var _default = function _default(s) {
  return "".concat(s.charAt(0).toUpperCase()).concat(s.substring(1));
};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/warn.js":
/*!**************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/warn.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** 
 * Copyright © INOVUA TRADING.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.warnOnce = exports.warn = exports.communityFeatureWarn = void 0;
var warn = function warn(msg) {
  console.warn("**************************************** INOVUA REACTDATAGRID COMMUNITY EDITION WARNING ****************************************\n\n                             ".concat(msg, "\n\n*********************************************************************************************************************************\n    "));
};
exports.warn = warn;
var onceMessages = {};
var warnOnce = function warnOnce(msg) {
  if (onceMessages[msg]) {
    return;
  }
  onceMessages[msg] = true;
  console.warn("**************************************** INOVUA REACTDATAGRID COMMUNITY EDITION WARNING ****************************************\n\n                             ".concat(msg, "\n\n*********************************************************************************************************************************\n    "));
};
exports.warnOnce = warnOnce;
var communityFeatureWarn = function communityFeatureWarn(featureName, checkObj) {
  if (checkObj[featureName]) {
    return;
  }
  checkObj[featureName] = true;
  warn("".concat(featureName, " is only supported in ENTERPRISE Edition, but you're using the Community Edition!"));
};
exports.communityFeatureWarn = communityFeatureWarn;

/***/ }),

/***/ "./node_modules/@mui/icons-material/Add.js":
/*!*************************************************!*\
  !*** ./node_modules/@mui/icons-material/Add.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(/*! ./utils/createSvgIcon */ "./node_modules/@mui/icons-material/utils/createSvgIcon.js"));

var _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
}), 'Add');

exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@mui/icons-material/Code.js":
/*!**************************************************!*\
  !*** ./node_modules/@mui/icons-material/Code.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(/*! ./utils/createSvgIcon */ "./node_modules/@mui/icons-material/utils/createSvgIcon.js"));

var _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M9.4 16.6 4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0 4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z"
}), 'Code');

exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@mui/icons-material/Delete.js":
/*!****************************************************!*\
  !*** ./node_modules/@mui/icons-material/Delete.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _createSvgIcon = _interopRequireDefault(__webpack_require__(/*! ./utils/createSvgIcon */ "./node_modules/@mui/icons-material/utils/createSvgIcon.js"));

var _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");

var _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)("path", {
  d: "M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
}), 'Delete');

exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@mui/lab/LoadingButton/LoadingButton.js":
/*!**************************************************************!*\
  !*** ./node_modules/@mui/lab/LoadingButton/LoadingButton.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @mui/utils */ "./node_modules/@mui/utils/esm/chainPropTypes/chainPropTypes.js");
/* harmony import */ var _mui_material_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @mui/material/utils */ "./node_modules/@mui/material/esm/utils/capitalize.js");
/* harmony import */ var _mui_material_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @mui/material/utils */ "./node_modules/@mui/material/esm/utils/useId.js");
/* harmony import */ var _mui_base__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @mui/base */ "./node_modules/@mui/utils/esm/composeClasses/composeClasses.js");
/* harmony import */ var _mui_material_styles__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @mui/material/styles */ "./node_modules/@mui/material/esm/styles/styled.js");
/* harmony import */ var _mui_material_styles__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @mui/material/styles */ "./node_modules/@mui/material/esm/styles/useThemeProps.js");
/* harmony import */ var _mui_material_Button__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @mui/material/Button */ "./node_modules/@mui/material/esm/Button/Button.js");
/* harmony import */ var _mui_material_CircularProgress__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @mui/material/CircularProgress */ "./node_modules/@mui/material/esm/CircularProgress/CircularProgress.js");
/* harmony import */ var _loadingButtonClasses__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./loadingButtonClasses */ "./node_modules/@mui/lab/LoadingButton/loadingButtonClasses.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");


const _excluded = ["children", "disabled", "id", "loading", "loadingIndicator", "loadingPosition", "variant"];












const useUtilityClasses = ownerState => {
  const {
    loading,
    loadingPosition,
    classes
  } = ownerState;
  const slots = {
    root: ['root', loading && 'loading'],
    startIcon: [loading && `startIconLoading${(0,_mui_material_utils__WEBPACK_IMPORTED_MODULE_4__["default"])(loadingPosition)}`],
    endIcon: [loading && `endIconLoading${(0,_mui_material_utils__WEBPACK_IMPORTED_MODULE_4__["default"])(loadingPosition)}`],
    loadingIndicator: ['loadingIndicator', loading && `loadingIndicator${(0,_mui_material_utils__WEBPACK_IMPORTED_MODULE_4__["default"])(loadingPosition)}`]
  };
  const composedClasses = (0,_mui_base__WEBPACK_IMPORTED_MODULE_5__["default"])(slots, _loadingButtonClasses__WEBPACK_IMPORTED_MODULE_6__.getLoadingButtonUtilityClass, classes);
  return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, classes, composedClasses);
}; // TODO use `import { rootShouldForwardProp } from '../styles/styled';` once move to core


const rootShouldForwardProp = prop => prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as' && prop !== 'classes';

const LoadingButtonRoot = (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_7__["default"])(_mui_material_Button__WEBPACK_IMPORTED_MODULE_8__["default"], {
  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',
  name: 'MuiLoadingButton',
  slot: 'Root',
  overridesResolver: (props, styles) => {
    return [styles.root, styles.startIconLoadingStart && {
      [`& .${_loadingButtonClasses__WEBPACK_IMPORTED_MODULE_6__["default"].startIconLoadingStart}`]: styles.startIconLoadingStart
    }, styles.endIconLoadingEnd && {
      [`& .${_loadingButtonClasses__WEBPACK_IMPORTED_MODULE_6__["default"].endIconLoadingEnd}`]: styles.endIconLoadingEnd
    }];
  }
})(({
  ownerState,
  theme
}) => (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({
  [`& .${_loadingButtonClasses__WEBPACK_IMPORTED_MODULE_6__["default"].startIconLoadingStart}, & .${_loadingButtonClasses__WEBPACK_IMPORTED_MODULE_6__["default"].endIconLoadingEnd}`]: {
    transition: theme.transitions.create(['opacity'], {
      duration: theme.transitions.duration.short
    }),
    opacity: 0
  }
}, ownerState.loadingPosition === 'center' && {
  transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color'], {
    duration: theme.transitions.duration.short
  }),
  [`&.${_loadingButtonClasses__WEBPACK_IMPORTED_MODULE_6__["default"].loading}`]: {
    color: 'transparent'
  }
}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {
  [`& .${_loadingButtonClasses__WEBPACK_IMPORTED_MODULE_6__["default"].startIconLoadingStart}, & .${_loadingButtonClasses__WEBPACK_IMPORTED_MODULE_6__["default"].endIconLoadingEnd}`]: {
    transition: theme.transitions.create(['opacity'], {
      duration: theme.transitions.duration.short
    }),
    opacity: 0,
    marginRight: -8
  }
}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {
  [`& .${_loadingButtonClasses__WEBPACK_IMPORTED_MODULE_6__["default"].startIconLoadingStart}, & .${_loadingButtonClasses__WEBPACK_IMPORTED_MODULE_6__["default"].endIconLoadingEnd}`]: {
    transition: theme.transitions.create(['opacity'], {
      duration: theme.transitions.duration.short
    }),
    opacity: 0,
    marginLeft: -8
  }
}));
const LoadingButtonLoadingIndicator = (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_7__["default"])('div', {
  name: 'MuiLoadingButton',
  slot: 'LoadingIndicator',
  overridesResolver: (props, styles) => {
    const {
      ownerState
    } = props;
    return [styles.loadingIndicator, styles[`loadingIndicator${(0,_mui_material_utils__WEBPACK_IMPORTED_MODULE_4__["default"])(ownerState.loadingPosition)}`]];
  }
})(({
  theme,
  ownerState
}) => (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({
  position: 'absolute',
  visibility: 'visible',
  display: 'flex'
}, ownerState.loadingPosition === 'start' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {
  left: ownerState.size === 'small' ? 10 : 14
}, ownerState.loadingPosition === 'start' && ownerState.variant === 'text' && {
  left: 6
}, ownerState.loadingPosition === 'center' && {
  left: '50%',
  transform: 'translate(-50%)',
  color: (theme.vars || theme).palette.action.disabled
}, ownerState.loadingPosition === 'end' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {
  right: ownerState.size === 'small' ? 10 : 14
}, ownerState.loadingPosition === 'end' && ownerState.variant === 'text' && {
  right: 6
}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {
  position: 'relative',
  left: -10
}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {
  position: 'relative',
  right: -10
}));
const LoadingButton = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2__.forwardRef(function LoadingButton(inProps, ref) {
  const props = (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_9__["default"])({
    props: inProps,
    name: 'MuiLoadingButton'
  });

  const {
    children,
    disabled = false,
    id: idProp,
    loading = false,
    loadingIndicator: loadingIndicatorProp,
    loadingPosition = 'center',
    variant = 'text'
  } = props,
        other = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(props, _excluded);

  const id = (0,_mui_material_utils__WEBPACK_IMPORTED_MODULE_10__["default"])(idProp);
  const loadingIndicator = loadingIndicatorProp != null ? loadingIndicatorProp : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_CircularProgress__WEBPACK_IMPORTED_MODULE_11__["default"], {
    "aria-labelledby": id,
    color: "inherit",
    size: 16
  });

  const ownerState = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props, {
    disabled,
    loading,
    loadingIndicator,
    loadingPosition,
    variant
  });

  const classes = useUtilityClasses(ownerState);
  const loadingButtonLoadingIndicator = loading ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(LoadingButtonLoadingIndicator, {
    className: classes.loadingIndicator,
    ownerState: ownerState,
    children: loadingIndicator
  }) : null;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(LoadingButtonRoot, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({
    disabled: disabled || loading,
    id: id,
    ref: ref
  }, other, {
    variant: variant,
    classes: classes,
    ownerState: ownerState,
    children: [ownerState.loadingPosition === 'end' ? children : loadingButtonLoadingIndicator, ownerState.loadingPosition === 'end' ? loadingButtonLoadingIndicator : children]
  }));
});
 true ? LoadingButton.propTypes
/* remove-proptypes */
= {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------

  /**
   * The content of the component.
   */
  children: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().node),

  /**
   * Override or extend the styles applied to the component.
   */
  classes: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().object),

  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().bool),

  /**
   * @ignore
   */
  id: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string),

  /**
   * If `true`, the loading indicator is shown.
   * @default false
   */
  loading: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().bool),

  /**
   * Element placed before the children if the button is in loading state.
   * The node should contain an element with `role="progressbar"` with an accessible name.
   * By default we render a `CircularProgress` that is labelled by the button itself.
   * @default <CircularProgress color="inherit" size={16} />
   */
  loadingIndicator: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().node),

  /**
   * The loading indicator can be positioned on the start, end, or the center of the button.
   * @default 'center'
   */
  loadingPosition: (0,_mui_utils__WEBPACK_IMPORTED_MODULE_13__["default"])(prop_types__WEBPACK_IMPORTED_MODULE_12___default().oneOf(['start', 'end', 'center']), props => {
    if (props.loadingPosition === 'start' && !props.startIcon) {
      return new Error(`MUI: The loadingPosition="start" should be used in combination with startIcon.`);
    }

    if (props.loadingPosition === 'end' && !props.endIcon) {
      return new Error(`MUI: The loadingPosition="end" should be used in combination with endIcon.`);
    }

    return null;
  }),

  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: prop_types__WEBPACK_IMPORTED_MODULE_12___default().oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_12___default().arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_12___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_12___default().func), (prop_types__WEBPACK_IMPORTED_MODULE_12___default().object), (prop_types__WEBPACK_IMPORTED_MODULE_12___default().bool)])), (prop_types__WEBPACK_IMPORTED_MODULE_12___default().func), (prop_types__WEBPACK_IMPORTED_MODULE_12___default().object)]),

  /**
   * The variant to use.
   * @default 'text'
   */
  variant: prop_types__WEBPACK_IMPORTED_MODULE_12___default().oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_12___default().oneOf(['contained', 'outlined', 'text']), (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string)])
} : 0;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (LoadingButton);

/***/ }),

/***/ "./node_modules/@mui/lab/LoadingButton/loadingButtonClasses.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@mui/lab/LoadingButton/loadingButtonClasses.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   getLoadingButtonUtilityClass: () => (/* binding */ getLoadingButtonUtilityClass)
/* harmony export */ });
/* harmony import */ var _mui_material_generateUtilityClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @mui/material/generateUtilityClass */ "./node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js");
/* harmony import */ var _mui_material_generateUtilityClasses__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mui/material/generateUtilityClasses */ "./node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js");


function getLoadingButtonUtilityClass(slot) {
  return (0,_mui_material_generateUtilityClass__WEBPACK_IMPORTED_MODULE_0__["default"])('MuiLoadingButton', slot);
}
const loadingButtonClasses = (0,_mui_material_generateUtilityClasses__WEBPACK_IMPORTED_MODULE_1__["default"])('MuiLoadingButton', ['root', 'loading', 'loadingIndicator', 'loadingIndicatorCenter', 'loadingIndicatorStart', 'loadingIndicatorEnd', 'endIconLoadingEnd', 'startIconLoadingStart']);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (loadingButtonClasses);

/***/ }),

/***/ "./node_modules/@mui/material/esm/ButtonGroup/ButtonGroup.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@mui/material/esm/ButtonGroup/ButtonGroup.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! clsx */ "./node_modules/clsx/dist/clsx.m.js");
/* harmony import */ var _mui_base__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @mui/base */ "./node_modules/@mui/utils/esm/composeClasses/composeClasses.js");
/* harmony import */ var _mui_system__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @mui/system */ "./node_modules/@mui/system/esm/colorManipulator.js");
/* harmony import */ var _utils_capitalize__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/capitalize */ "./node_modules/@mui/material/esm/utils/capitalize.js");
/* harmony import */ var _styles_styled__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../styles/styled */ "./node_modules/@mui/material/esm/styles/styled.js");
/* harmony import */ var _styles_useThemeProps__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../styles/useThemeProps */ "./node_modules/@mui/material/esm/styles/useThemeProps.js");
/* harmony import */ var _buttonGroupClasses__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./buttonGroupClasses */ "./node_modules/@mui/material/esm/ButtonGroup/buttonGroupClasses.js");
/* harmony import */ var _ButtonGroupContext__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./ButtonGroupContext */ "./node_modules/@mui/material/esm/ButtonGroup/ButtonGroupContext.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");


const _excluded = ["children", "className", "color", "component", "disabled", "disableElevation", "disableFocusRipple", "disableRipple", "fullWidth", "orientation", "size", "variant"];












const overridesResolver = (props, styles) => {
  const {
    ownerState
  } = props;
  return [{
    [`& .${_buttonGroupClasses__WEBPACK_IMPORTED_MODULE_5__["default"].grouped}`]: styles.grouped
  }, {
    [`& .${_buttonGroupClasses__WEBPACK_IMPORTED_MODULE_5__["default"].grouped}`]: styles[`grouped${(0,_utils_capitalize__WEBPACK_IMPORTED_MODULE_6__["default"])(ownerState.orientation)}`]
  }, {
    [`& .${_buttonGroupClasses__WEBPACK_IMPORTED_MODULE_5__["default"].grouped}`]: styles[`grouped${(0,_utils_capitalize__WEBPACK_IMPORTED_MODULE_6__["default"])(ownerState.variant)}`]
  }, {
    [`& .${_buttonGroupClasses__WEBPACK_IMPORTED_MODULE_5__["default"].grouped}`]: styles[`grouped${(0,_utils_capitalize__WEBPACK_IMPORTED_MODULE_6__["default"])(ownerState.variant)}${(0,_utils_capitalize__WEBPACK_IMPORTED_MODULE_6__["default"])(ownerState.orientation)}`]
  }, {
    [`& .${_buttonGroupClasses__WEBPACK_IMPORTED_MODULE_5__["default"].grouped}`]: styles[`grouped${(0,_utils_capitalize__WEBPACK_IMPORTED_MODULE_6__["default"])(ownerState.variant)}${(0,_utils_capitalize__WEBPACK_IMPORTED_MODULE_6__["default"])(ownerState.color)}`]
  }, styles.root, styles[ownerState.variant], ownerState.disableElevation === true && styles.disableElevation, ownerState.fullWidth && styles.fullWidth, ownerState.orientation === 'vertical' && styles.vertical];
};

const useUtilityClasses = ownerState => {
  const {
    classes,
    color,
    disabled,
    disableElevation,
    fullWidth,
    orientation,
    variant
  } = ownerState;
  const slots = {
    root: ['root', variant, orientation === 'vertical' && 'vertical', fullWidth && 'fullWidth', disableElevation && 'disableElevation'],
    grouped: ['grouped', `grouped${(0,_utils_capitalize__WEBPACK_IMPORTED_MODULE_6__["default"])(orientation)}`, `grouped${(0,_utils_capitalize__WEBPACK_IMPORTED_MODULE_6__["default"])(variant)}`, `grouped${(0,_utils_capitalize__WEBPACK_IMPORTED_MODULE_6__["default"])(variant)}${(0,_utils_capitalize__WEBPACK_IMPORTED_MODULE_6__["default"])(orientation)}`, `grouped${(0,_utils_capitalize__WEBPACK_IMPORTED_MODULE_6__["default"])(variant)}${(0,_utils_capitalize__WEBPACK_IMPORTED_MODULE_6__["default"])(color)}`, disabled && 'disabled']
  };
  return (0,_mui_base__WEBPACK_IMPORTED_MODULE_7__["default"])(slots, _buttonGroupClasses__WEBPACK_IMPORTED_MODULE_5__.getButtonGroupUtilityClass, classes);
};

const ButtonGroupRoot = (0,_styles_styled__WEBPACK_IMPORTED_MODULE_8__["default"])('div', {
  name: 'MuiButtonGroup',
  slot: 'Root',
  overridesResolver
})(({
  theme,
  ownerState
}) => (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({
  display: 'inline-flex',
  borderRadius: (theme.vars || theme).shape.borderRadius
}, ownerState.variant === 'contained' && {
  boxShadow: (theme.vars || theme).shadows[2]
}, ownerState.disableElevation && {
  boxShadow: 'none'
}, ownerState.fullWidth && {
  width: '100%'
}, ownerState.orientation === 'vertical' && {
  flexDirection: 'column'
}, {
  [`& .${_buttonGroupClasses__WEBPACK_IMPORTED_MODULE_5__["default"].grouped}`]: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({
    minWidth: 40,
    '&:not(:first-of-type)': (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, ownerState.orientation === 'horizontal' && {
      borderTopLeftRadius: 0,
      borderBottomLeftRadius: 0
    }, ownerState.orientation === 'vertical' && {
      borderTopRightRadius: 0,
      borderTopLeftRadius: 0
    }, ownerState.variant === 'outlined' && ownerState.orientation === 'horizontal' && {
      marginLeft: -1
    }, ownerState.variant === 'outlined' && ownerState.orientation === 'vertical' && {
      marginTop: -1
    }),
    '&:not(:last-of-type)': (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, ownerState.orientation === 'horizontal' && {
      borderTopRightRadius: 0,
      borderBottomRightRadius: 0
    }, ownerState.orientation === 'vertical' && {
      borderBottomRightRadius: 0,
      borderBottomLeftRadius: 0
    }, ownerState.variant === 'text' && ownerState.orientation === 'horizontal' && {
      borderRight: theme.vars ? `1px solid rgba(${theme.vars.palette.common.onBackgroundChannel} / 0.23)` : `1px solid ${theme.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'}`
    }, ownerState.variant === 'text' && ownerState.orientation === 'vertical' && {
      borderBottom: theme.vars ? `1px solid rgba(${theme.vars.palette.common.onBackgroundChannel} / 0.23)` : `1px solid ${theme.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'}`
    }, ownerState.variant === 'text' && ownerState.color !== 'inherit' && {
      borderColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.5)` : (0,_mui_system__WEBPACK_IMPORTED_MODULE_9__.alpha)(theme.palette[ownerState.color].main, 0.5)
    }, ownerState.variant === 'outlined' && ownerState.orientation === 'horizontal' && {
      borderRightColor: 'transparent'
    }, ownerState.variant === 'outlined' && ownerState.orientation === 'vertical' && {
      borderBottomColor: 'transparent'
    }, ownerState.variant === 'contained' && ownerState.orientation === 'horizontal' && {
      borderRight: `1px solid ${(theme.vars || theme).palette.grey[400]}`,
      [`&.${_buttonGroupClasses__WEBPACK_IMPORTED_MODULE_5__["default"].disabled}`]: {
        borderRight: `1px solid ${(theme.vars || theme).palette.action.disabled}`
      }
    }, ownerState.variant === 'contained' && ownerState.orientation === 'vertical' && {
      borderBottom: `1px solid ${(theme.vars || theme).palette.grey[400]}`,
      [`&.${_buttonGroupClasses__WEBPACK_IMPORTED_MODULE_5__["default"].disabled}`]: {
        borderBottom: `1px solid ${(theme.vars || theme).palette.action.disabled}`
      }
    }, ownerState.variant === 'contained' && ownerState.color !== 'inherit' && {
      borderColor: (theme.vars || theme).palette[ownerState.color].dark
    }, {
      '&:hover': (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, ownerState.variant === 'outlined' && ownerState.orientation === 'horizontal' && {
        borderRightColor: 'currentColor'
      }, ownerState.variant === 'outlined' && ownerState.orientation === 'vertical' && {
        borderBottomColor: 'currentColor'
      })
    }),
    '&:hover': (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, ownerState.variant === 'contained' && {
      boxShadow: 'none'
    })
  }, ownerState.variant === 'contained' && {
    boxShadow: 'none'
  })
}));
const ButtonGroup = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2__.forwardRef(function ButtonGroup(inProps, ref) {
  const props = (0,_styles_useThemeProps__WEBPACK_IMPORTED_MODULE_10__["default"])({
    props: inProps,
    name: 'MuiButtonGroup'
  });

  const {
    children,
    className,
    color = 'primary',
    component = 'div',
    disabled = false,
    disableElevation = false,
    disableFocusRipple = false,
    disableRipple = false,
    fullWidth = false,
    orientation = 'horizontal',
    size = 'medium',
    variant = 'outlined'
  } = props,
        other = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(props, _excluded);

  const ownerState = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props, {
    color,
    component,
    disabled,
    disableElevation,
    disableFocusRipple,
    disableRipple,
    fullWidth,
    orientation,
    size,
    variant
  });

  const classes = useUtilityClasses(ownerState);
  const context = react__WEBPACK_IMPORTED_MODULE_2__.useMemo(() => ({
    className: classes.grouped,
    color,
    disabled,
    disableElevation,
    disableFocusRipple,
    disableRipple,
    fullWidth,
    size,
    variant
  }), [color, disabled, disableElevation, disableFocusRipple, disableRipple, fullWidth, size, variant, classes.grouped]);
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(ButtonGroupRoot, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({
    as: component,
    role: "group",
    className: (0,clsx__WEBPACK_IMPORTED_MODULE_3__["default"])(classes.root, className),
    ref: ref,
    ownerState: ownerState
  }, other, {
    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_ButtonGroupContext__WEBPACK_IMPORTED_MODULE_11__["default"].Provider, {
      value: context,
      children: children
    })
  }));
});
 true ? ButtonGroup.propTypes
/* remove-proptypes */
= {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------

  /**
   * The content of the component.
   */
  children: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().node),

  /**
   * Override or extend the styles applied to the component.
   */
  classes: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().object),

  /**
   * @ignore
   */
  className: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string),

  /**
   * The color of the component.
   * It supports both default and custom theme colors, which can be added as shown in the
   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
   * @default 'primary'
   */
  color: prop_types__WEBPACK_IMPORTED_MODULE_12___default().oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_12___default().oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string)]),

  /**
   * The component used for the root node.
   * Either a string to use a HTML element or a component.
   */
  component: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().elementType),

  /**
   * If `true`, the component is disabled.
   * @default false
   */
  disabled: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().bool),

  /**
   * If `true`, no elevation is used.
   * @default false
   */
  disableElevation: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().bool),

  /**
   * If `true`, the button keyboard focus ripple is disabled.
   * @default false
   */
  disableFocusRipple: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().bool),

  /**
   * If `true`, the button ripple effect is disabled.
   * @default false
   */
  disableRipple: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().bool),

  /**
   * If `true`, the buttons will take up the full width of its container.
   * @default false
   */
  fullWidth: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().bool),

  /**
   * The component orientation (layout flow direction).
   * @default 'horizontal'
   */
  orientation: prop_types__WEBPACK_IMPORTED_MODULE_12___default().oneOf(['horizontal', 'vertical']),

  /**
   * The size of the component.
   * `small` is equivalent to the dense button styling.
   * @default 'medium'
   */
  size: prop_types__WEBPACK_IMPORTED_MODULE_12___default().oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_12___default().oneOf(['small', 'medium', 'large']), (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string)]),

  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: prop_types__WEBPACK_IMPORTED_MODULE_12___default().oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_12___default().arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_12___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_12___default().func), (prop_types__WEBPACK_IMPORTED_MODULE_12___default().object), (prop_types__WEBPACK_IMPORTED_MODULE_12___default().bool)])), (prop_types__WEBPACK_IMPORTED_MODULE_12___default().func), (prop_types__WEBPACK_IMPORTED_MODULE_12___default().object)]),

  /**
   * The variant to use.
   * @default 'outlined'
   */
  variant: prop_types__WEBPACK_IMPORTED_MODULE_12___default().oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_12___default().oneOf(['contained', 'outlined', 'text']), (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string)])
} : 0;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ButtonGroup);

/***/ }),

/***/ "./node_modules/@mui/material/esm/ButtonGroup/buttonGroupClasses.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@mui/material/esm/ButtonGroup/buttonGroupClasses.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   getButtonGroupUtilityClass: () => (/* binding */ getButtonGroupUtilityClass)
/* harmony export */ });
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mui/utils */ "./node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js");
/* harmony import */ var _generateUtilityClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../generateUtilityClass */ "./node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js");


function getButtonGroupUtilityClass(slot) {
  return (0,_generateUtilityClass__WEBPACK_IMPORTED_MODULE_0__["default"])('MuiButtonGroup', slot);
}
const buttonGroupClasses = (0,_mui_utils__WEBPACK_IMPORTED_MODULE_1__["default"])('MuiButtonGroup', ['root', 'contained', 'outlined', 'text', 'disableElevation', 'disabled', 'fullWidth', 'vertical', 'grouped', 'groupedHorizontal', 'groupedVertical', 'groupedText', 'groupedTextHorizontal', 'groupedTextVertical', 'groupedTextPrimary', 'groupedTextSecondary', 'groupedOutlined', 'groupedOutlinedHorizontal', 'groupedOutlinedVertical', 'groupedOutlinedPrimary', 'groupedOutlinedSecondary', 'groupedContained', 'groupedContainedHorizontal', 'groupedContainedVertical', 'groupedContainedPrimary', 'groupedContainedSecondary']);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (buttonGroupClasses);

/***/ }),

/***/ "./node_modules/@mui/material/esm/DialogTitle/DialogTitle.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@mui/material/esm/DialogTitle/DialogTitle.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! clsx */ "./node_modules/clsx/dist/clsx.m.js");
/* harmony import */ var _mui_base__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @mui/base */ "./node_modules/@mui/utils/esm/composeClasses/composeClasses.js");
/* harmony import */ var _Typography__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../Typography */ "./node_modules/@mui/material/esm/Typography/Typography.js");
/* harmony import */ var _styles_styled__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../styles/styled */ "./node_modules/@mui/material/esm/styles/styled.js");
/* harmony import */ var _styles_useThemeProps__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../styles/useThemeProps */ "./node_modules/@mui/material/esm/styles/useThemeProps.js");
/* harmony import */ var _dialogTitleClasses__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dialogTitleClasses */ "./node_modules/@mui/material/esm/DialogTitle/dialogTitleClasses.js");
/* harmony import */ var _Dialog_DialogContext__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../Dialog/DialogContext */ "./node_modules/@mui/material/esm/Dialog/DialogContext.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");


const _excluded = ["className", "id"];











const useUtilityClasses = ownerState => {
  const {
    classes
  } = ownerState;
  const slots = {
    root: ['root']
  };
  return (0,_mui_base__WEBPACK_IMPORTED_MODULE_5__["default"])(slots, _dialogTitleClasses__WEBPACK_IMPORTED_MODULE_6__.getDialogTitleUtilityClass, classes);
};

const DialogTitleRoot = (0,_styles_styled__WEBPACK_IMPORTED_MODULE_7__["default"])(_Typography__WEBPACK_IMPORTED_MODULE_8__["default"], {
  name: 'MuiDialogTitle',
  slot: 'Root',
  overridesResolver: (props, styles) => styles.root
})({
  padding: '16px 24px',
  flex: '0 0 auto'
});
const DialogTitle = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2__.forwardRef(function DialogTitle(inProps, ref) {
  const props = (0,_styles_useThemeProps__WEBPACK_IMPORTED_MODULE_9__["default"])({
    props: inProps,
    name: 'MuiDialogTitle'
  });

  const {
    className,
    id: idProp
  } = props,
        other = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(props, _excluded);

  const ownerState = props;
  const classes = useUtilityClasses(ownerState);
  const {
    titleId: id = idProp
  } = react__WEBPACK_IMPORTED_MODULE_2__.useContext(_Dialog_DialogContext__WEBPACK_IMPORTED_MODULE_10__["default"]);
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(DialogTitleRoot, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
    component: "h2",
    className: (0,clsx__WEBPACK_IMPORTED_MODULE_3__["default"])(classes.root, className),
    ownerState: ownerState,
    ref: ref,
    variant: "h6",
    id: id
  }, other));
});
 true ? DialogTitle.propTypes
/* remove-proptypes */
= {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------

  /**
   * The content of the component.
   */
  children: (prop_types__WEBPACK_IMPORTED_MODULE_11___default().node),

  /**
   * Override or extend the styles applied to the component.
   */
  classes: (prop_types__WEBPACK_IMPORTED_MODULE_11___default().object),

  /**
   * @ignore
   */
  className: (prop_types__WEBPACK_IMPORTED_MODULE_11___default().string),

  /**
   * @ignore
   */
  id: (prop_types__WEBPACK_IMPORTED_MODULE_11___default().string),

  /**
   * The system prop that allows defining system overrides as well as additional CSS styles.
   */
  sx: prop_types__WEBPACK_IMPORTED_MODULE_11___default().oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_11___default().arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_11___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_11___default().func), (prop_types__WEBPACK_IMPORTED_MODULE_11___default().object), (prop_types__WEBPACK_IMPORTED_MODULE_11___default().bool)])), (prop_types__WEBPACK_IMPORTED_MODULE_11___default().func), (prop_types__WEBPACK_IMPORTED_MODULE_11___default().object)])
} : 0;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DialogTitle);

/***/ }),

/***/ "./node_modules/@mui/styles/StylesProvider/StylesProvider.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@mui/styles/StylesProvider/StylesProvider.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   StylesContext: () => (/* binding */ StylesContext),
/* harmony export */   "default": () => (/* binding */ StylesProvider),
/* harmony export */   sheetsManager: () => (/* binding */ defaultSheetsManager)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @mui/utils */ "./node_modules/@mui/utils/esm/exactProp/exactProp.js");
/* harmony import */ var jss__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! jss */ "./node_modules/jss/dist/jss.esm.js");
/* harmony import */ var _createGenerateClassName__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../createGenerateClassName */ "./node_modules/@mui/styles/createGenerateClassName/createGenerateClassName.js");
/* harmony import */ var _jssPreset__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../jssPreset */ "./node_modules/@mui/styles/jssPreset/jssPreset.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");


const _excluded = ["children", "injectFirst", "disableGeneration"];





 // Default JSS instance.


const defaultJSS = (0,jss__WEBPACK_IMPORTED_MODULE_4__.create)((0,_jssPreset__WEBPACK_IMPORTED_MODULE_5__["default"])()); // Use a singleton or the provided one by the context.
//
// The counter-based approach doesn't tolerate any mistake.
// It's much safer to use the same counter everywhere.

const defaultGenerateClassName = (0,_createGenerateClassName__WEBPACK_IMPORTED_MODULE_6__["default"])();
const defaultSheetsManager = new Map(); // Exported for test purposes


const defaultOptions = {
  disableGeneration: false,
  generateClassName: defaultGenerateClassName,
  jss: defaultJSS,
  sheetsCache: null,
  sheetsManager: defaultSheetsManager,
  sheetsRegistry: null
};
const StylesContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2__.createContext(defaultOptions);

if (true) {
  StylesContext.displayName = 'StylesContext';
}

let injectFirstNode;
function StylesProvider(props) {
  const {
    children,
    injectFirst = false,
    disableGeneration = false
  } = props,
        localOptions = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__["default"])(props, _excluded);

  const outerOptions = react__WEBPACK_IMPORTED_MODULE_2__.useContext(StylesContext);

  const {
    generateClassName,
    jss,
    serverGenerateClassName,
    sheetsCache,
    sheetsManager,
    sheetsRegistry
  } = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, outerOptions, localOptions);

  if (true) {
    if (injectFirst && localOptions.jss) {
      console.error('MUI: You cannot use the jss and injectFirst props at the same time.');
    }
  }

  const value = react__WEBPACK_IMPORTED_MODULE_2__.useMemo(() => {
    const context = {
      disableGeneration,
      generateClassName,
      jss,
      serverGenerateClassName,
      sheetsCache,
      sheetsManager,
      sheetsRegistry
    };

    if (true) {
      if (typeof window === 'undefined' && !context.sheetsManager) {
        console.error('MUI: You need to use the ServerStyleSheets API when rendering on the server.');
      }
    }

    if (true) {
      if (context.jss.options.insertionPoint && injectFirst) {
        console.error('MUI: You cannot use a custom insertionPoint and <StylesContext injectFirst> at the same time.');
      }
    }

    if (!context.jss.options.insertionPoint && injectFirst && typeof window !== 'undefined') {
      if (!injectFirstNode) {
        const head = document.head;
        injectFirstNode = document.createComment('mui-inject-first');
        head.insertBefore(injectFirstNode, head.firstChild);
      }

      context.jss = (0,jss__WEBPACK_IMPORTED_MODULE_4__.create)({
        plugins: (0,_jssPreset__WEBPACK_IMPORTED_MODULE_5__["default"])().plugins,
        insertionPoint: injectFirstNode
      });
    }

    return context;
  }, [injectFirst, disableGeneration, generateClassName, jss, serverGenerateClassName, sheetsCache, sheetsManager, sheetsRegistry]);
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(StylesContext.Provider, {
    value: value,
    children: children
  });
}
 true ? StylesProvider.propTypes = {
  /**
   * Your component tree.
   */
  children: (prop_types__WEBPACK_IMPORTED_MODULE_7___default().node),

  /**
   * You can disable the generation of the styles with this option.
   * It can be useful when traversing the React tree outside of the HTML
   * rendering step on the server.
   * Let's say you are using react-apollo to extract all
   * the queries made by the interface server-side - you can significantly speed up the traversal with this prop.
   */
  disableGeneration: (prop_types__WEBPACK_IMPORTED_MODULE_7___default().bool),

  /**
   * JSS's class name generator.
   */
  generateClassName: (prop_types__WEBPACK_IMPORTED_MODULE_7___default().func),

  /**
   * By default, the styles are injected last in the <head> element of the page.
   * As a result, they gain more specificity than any other style sheet.
   * If you want to override MUI's styles, set this prop.
   */
  injectFirst: (prop_types__WEBPACK_IMPORTED_MODULE_7___default().bool),

  /**
   * JSS's instance.
   */
  jss: (prop_types__WEBPACK_IMPORTED_MODULE_7___default().object),

  /**
   * @ignore
   */
  serverGenerateClassName: (prop_types__WEBPACK_IMPORTED_MODULE_7___default().func),

  /**
   * @ignore
   *
   * Beta feature.
   *
   * Cache for the sheets.
   */
  sheetsCache: (prop_types__WEBPACK_IMPORTED_MODULE_7___default().object),

  /**
   * @ignore
   *
   * The sheetsManager is used to deduplicate style sheet injection in the page.
   * It's deduplicating using the (theme, styles) couple.
   * On the server, you should provide a new instance for each request.
   */
  sheetsManager: (prop_types__WEBPACK_IMPORTED_MODULE_7___default().object),

  /**
   * @ignore
   *
   * Collect the sheets.
   */
  sheetsRegistry: (prop_types__WEBPACK_IMPORTED_MODULE_7___default().object)
} : 0;

if (true) {
   true ? StylesProvider.propTypes = (0,_mui_utils__WEBPACK_IMPORTED_MODULE_8__["default"])(StylesProvider.propTypes) : 0;
}

/***/ }),

/***/ "./node_modules/@mui/styles/createGenerateClassName/createGenerateClassName.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@mui/styles/createGenerateClassName/createGenerateClassName.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ createGenerateClassName)
/* harmony export */ });
/* harmony import */ var _mui_private_theming_ThemeProvider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @mui/private-theming/ThemeProvider */ "./node_modules/@mui/styles/node_modules/@mui/private-theming/ThemeProvider/nested.js");

/**
 * This is the list of the style rule name we use as drop in replacement for the built-in
 * pseudo classes (:checked, :disabled, :focused, etc.).
 *
 * Why do they exist in the first place?
 * These classes are used at a specificity of 2.
 * It allows them to override previously defined styles as well as
 * being untouched by simple user overrides.
 */

const stateClasses = ['checked', 'disabled', 'error', 'focused', 'focusVisible', 'required', 'expanded', 'selected']; // Returns a function which generates unique class names based on counters.
// When new generator function is created, rule counter is reset.
// We need to reset the rule counter for SSR for each request.
//
// It's inspired by
// https://github.com/cssinjs/jss/blob/4e6a05dd3f7b6572fdd3ab216861d9e446c20331/src/utils/createGenerateClassName.js

function createGenerateClassName(options = {}) {
  const {
    disableGlobal = false,
    productionPrefix = 'jss',
    seed = ''
  } = options;
  const seedPrefix = seed === '' ? '' : `${seed}-`;
  let ruleCounter = 0;

  const getNextCounterId = () => {
    ruleCounter += 1;

    if (true) {
      if (ruleCounter >= 1e10) {
        console.warn(['MUI: You might have a memory leak.', 'The ruleCounter is not supposed to grow that much.'].join(''));
      }
    }

    return ruleCounter;
  };

  return (rule, styleSheet) => {
    const name = styleSheet.options.name; // Is a global static MUI style?

    if (name && name.indexOf('Mui') === 0 && !styleSheet.options.link && !disableGlobal) {
      // We can use a shorthand class name, we never use the keys to style the components.
      if (stateClasses.indexOf(rule.key) !== -1) {
        return `Mui-${rule.key}`;
      }

      const prefix = `${seedPrefix}${name}-${rule.key}`;

      if (!styleSheet.options.theme[_mui_private_theming_ThemeProvider__WEBPACK_IMPORTED_MODULE_0__["default"]] || seed !== '') {
        return prefix;
      }

      return `${prefix}-${getNextCounterId()}`;
    }

    if (false) {}

    const suffix = `${rule.key}-${getNextCounterId()}`; // Help with debuggability.

    if (styleSheet.options.classNamePrefix) {
      return `${seedPrefix}${styleSheet.options.classNamePrefix}-${suffix}`;
    }

    return `${seedPrefix}${suffix}`;
  };
}

/***/ }),

/***/ "./node_modules/@mui/styles/getStylesCreator/getStylesCreator.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@mui/styles/getStylesCreator/getStylesCreator.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ getStylesCreator)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @mui/utils */ "./node_modules/@mui/utils/esm/deepmerge.js");
/* harmony import */ var _propsToClassKey__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../propsToClassKey */ "./node_modules/@mui/styles/propsToClassKey/propsToClassKey.js");
/* harmony import */ var _noopTheme__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./noopTheme */ "./node_modules/@mui/styles/getStylesCreator/noopTheme.js");




function getStylesCreator(stylesOrCreator) {
  const themingEnabled = typeof stylesOrCreator === 'function';

  if (true) {
    if (typeof stylesOrCreator !== 'object' && !themingEnabled) {
      console.error(['MUI: The `styles` argument provided is invalid.', 'You need to provide a function generating the styles or a styles object.'].join('\n'));
    }
  }

  return {
    create: (theme, name) => {
      let styles;

      try {
        styles = themingEnabled ? stylesOrCreator(theme) : stylesOrCreator;
      } catch (err) {
        if (true) {
          if (themingEnabled === true && theme === _noopTheme__WEBPACK_IMPORTED_MODULE_1__["default"]) {
            // TODO: prepend error message/name instead
            console.error(['MUI: The `styles` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\n'));
          }
        }

        throw err;
      }

      if (!name || !theme.components || !theme.components[name] || !theme.components[name].styleOverrides && !theme.components[name].variants) {
        return styles;
      }

      const overrides = theme.components[name].styleOverrides || {};
      const variants = theme.components[name].variants || [];

      const stylesWithOverrides = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, styles);

      Object.keys(overrides).forEach(key => {
        if (true) {
          if (!stylesWithOverrides[key]) {
            console.warn(['MUI: You are trying to override a style that does not exist.', `Fix the \`${key}\` key of \`theme.components.${name}.styleOverrides\`.`, '', `If you intentionally wanted to add a new key, please use the theme.components[${name}].variants option.`].join('\n'));
          }
        }

        stylesWithOverrides[key] = (0,_mui_utils__WEBPACK_IMPORTED_MODULE_2__["default"])(stylesWithOverrides[key] || {}, overrides[key]);
      });
      variants.forEach(definition => {
        const classKey = (0,_propsToClassKey__WEBPACK_IMPORTED_MODULE_3__["default"])(definition.props);
        stylesWithOverrides[classKey] = (0,_mui_utils__WEBPACK_IMPORTED_MODULE_2__["default"])(stylesWithOverrides[classKey] || {}, definition.style);
      });
      return stylesWithOverrides;
    },
    options: {}
  };
}

/***/ }),

/***/ "./node_modules/@mui/styles/getStylesCreator/noopTheme.js":
/*!****************************************************************!*\
  !*** ./node_modules/@mui/styles/getStylesCreator/noopTheme.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// We use the same empty object to ref count the styles that don't need a theme object.
const noopTheme = {};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (noopTheme);

/***/ }),

/***/ "./node_modules/@mui/styles/jssPreset/jssPreset.js":
/*!*********************************************************!*\
  !*** ./node_modules/@mui/styles/jssPreset/jssPreset.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ jssPreset)
/* harmony export */ });
/* harmony import */ var jss_plugin_rule_value_function__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jss-plugin-rule-value-function */ "./node_modules/jss-plugin-rule-value-function/dist/jss-plugin-rule-value-function.esm.js");
/* harmony import */ var jss_plugin_global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jss-plugin-global */ "./node_modules/jss-plugin-global/dist/jss-plugin-global.esm.js");
/* harmony import */ var jss_plugin_nested__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jss-plugin-nested */ "./node_modules/jss-plugin-nested/dist/jss-plugin-nested.esm.js");
/* harmony import */ var jss_plugin_camel_case__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jss-plugin-camel-case */ "./node_modules/jss-plugin-camel-case/dist/jss-plugin-camel-case.esm.js");
/* harmony import */ var jss_plugin_default_unit__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! jss-plugin-default-unit */ "./node_modules/jss-plugin-default-unit/dist/jss-plugin-default-unit.esm.js");
/* harmony import */ var jss_plugin_vendor_prefixer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! jss-plugin-vendor-prefixer */ "./node_modules/jss-plugin-vendor-prefixer/dist/jss-plugin-vendor-prefixer.esm.js");
/* harmony import */ var jss_plugin_props_sort__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! jss-plugin-props-sort */ "./node_modules/jss-plugin-props-sort/dist/jss-plugin-props-sort.esm.js");






 // Subset of jss-preset-default with only the plugins the MUI components are using.

function jssPreset() {
  return {
    plugins: [(0,jss_plugin_rule_value_function__WEBPACK_IMPORTED_MODULE_0__["default"])(), (0,jss_plugin_global__WEBPACK_IMPORTED_MODULE_1__["default"])(), (0,jss_plugin_nested__WEBPACK_IMPORTED_MODULE_2__["default"])(), (0,jss_plugin_camel_case__WEBPACK_IMPORTED_MODULE_3__["default"])(), (0,jss_plugin_default_unit__WEBPACK_IMPORTED_MODULE_4__["default"])(), // Disable the vendor prefixer server-side, it does nothing.
    // This way, we can get a performance boost.
    // In the documentation, we are using `autoprefixer` to solve this problem.
    typeof window === 'undefined' ? null : (0,jss_plugin_vendor_prefixer__WEBPACK_IMPORTED_MODULE_5__["default"])(), (0,jss_plugin_props_sort__WEBPACK_IMPORTED_MODULE_6__["default"])()]
  };
}

/***/ }),

/***/ "./node_modules/@mui/styles/makeStyles/indexCounter.js":
/*!*************************************************************!*\
  !*** ./node_modules/@mui/styles/makeStyles/indexCounter.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   increment: () => (/* binding */ increment)
/* harmony export */ });
/* eslint-disable import/prefer-default-export */
// Global index counter to preserve source order.
// We create the style sheet during the creation of the component,
// children are handled after the parents, so the order of style elements would be parent->child.
// It is a problem though when a parent passes a className
// which needs to override any child's styles.
// StyleSheet of the child has a higher specificity, because of the source order.
// So our solution is to render sheets them in the reverse order child->sheet, so
// that parent has a higher specificity.
let indexCounter = -1e9;
function increment() {
  indexCounter += 1;

  if (true) {
    if (indexCounter >= 0) {
      console.warn(['MUI: You might have a memory leak.', 'The indexCounter is not supposed to grow that much.'].join('\n'));
    }
  }

  return indexCounter;
}

/***/ }),

/***/ "./node_modules/@mui/styles/makeStyles/makeStyles.js":
/*!***********************************************************!*\
  !*** ./node_modules/@mui/styles/makeStyles/makeStyles.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ makeStyles)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var jss__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! jss */ "./node_modules/jss/dist/jss.esm.js");
/* harmony import */ var _mergeClasses__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../mergeClasses */ "./node_modules/@mui/styles/mergeClasses/mergeClasses.js");
/* harmony import */ var _multiKeyStore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./multiKeyStore */ "./node_modules/@mui/styles/makeStyles/multiKeyStore.js");
/* harmony import */ var _useTheme__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../useTheme */ "./node_modules/@mui/styles/node_modules/@mui/private-theming/useTheme/useTheme.js");
/* harmony import */ var _StylesProvider__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../StylesProvider */ "./node_modules/@mui/styles/StylesProvider/StylesProvider.js");
/* harmony import */ var _indexCounter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./indexCounter */ "./node_modules/@mui/styles/makeStyles/indexCounter.js");
/* harmony import */ var _getStylesCreator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../getStylesCreator */ "./node_modules/@mui/styles/getStylesCreator/getStylesCreator.js");
/* harmony import */ var _getStylesCreator_noopTheme__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../getStylesCreator/noopTheme */ "./node_modules/@mui/styles/getStylesCreator/noopTheme.js");


const _excluded = ["name", "classNamePrefix", "Component", "defaultTheme"];










function getClasses({
  state,
  stylesOptions
}, classes, Component) {
  if (stylesOptions.disableGeneration) {
    return classes || {};
  }

  if (!state.cacheClasses) {
    state.cacheClasses = {
      // Cache for the finalized classes value.
      value: null,
      // Cache for the last used classes prop pointer.
      lastProp: null,
      // Cache for the last used rendered classes pointer.
      lastJSS: {}
    };
  } // Tracks if either the rendered classes or classes prop has changed,
  // requiring the generation of a new finalized classes object.


  let generate = false;

  if (state.classes !== state.cacheClasses.lastJSS) {
    state.cacheClasses.lastJSS = state.classes;
    generate = true;
  }

  if (classes !== state.cacheClasses.lastProp) {
    state.cacheClasses.lastProp = classes;
    generate = true;
  }

  if (generate) {
    state.cacheClasses.value = (0,_mergeClasses__WEBPACK_IMPORTED_MODULE_3__["default"])({
      baseClasses: state.cacheClasses.lastJSS,
      newClasses: classes,
      Component
    });
  }

  return state.cacheClasses.value;
}

function attach({
  state,
  theme,
  stylesOptions,
  stylesCreator,
  name
}, props) {
  if (stylesOptions.disableGeneration) {
    return;
  }

  let sheetManager = _multiKeyStore__WEBPACK_IMPORTED_MODULE_4__["default"].get(stylesOptions.sheetsManager, stylesCreator, theme);

  if (!sheetManager) {
    sheetManager = {
      refs: 0,
      staticSheet: null,
      dynamicStyles: null
    };
    _multiKeyStore__WEBPACK_IMPORTED_MODULE_4__["default"].set(stylesOptions.sheetsManager, stylesCreator, theme, sheetManager);
  }

  const options = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, stylesCreator.options, stylesOptions, {
    theme,
    flip: typeof stylesOptions.flip === 'boolean' ? stylesOptions.flip : theme.direction === 'rtl'
  });

  options.generateId = options.serverGenerateClassName || options.generateClassName;
  const sheetsRegistry = stylesOptions.sheetsRegistry;

  if (sheetManager.refs === 0) {
    let staticSheet;

    if (stylesOptions.sheetsCache) {
      staticSheet = _multiKeyStore__WEBPACK_IMPORTED_MODULE_4__["default"].get(stylesOptions.sheetsCache, stylesCreator, theme);
    }

    const styles = stylesCreator.create(theme, name);

    if (!staticSheet) {
      staticSheet = stylesOptions.jss.createStyleSheet(styles, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({
        link: false
      }, options));
      staticSheet.attach();

      if (stylesOptions.sheetsCache) {
        _multiKeyStore__WEBPACK_IMPORTED_MODULE_4__["default"].set(stylesOptions.sheetsCache, stylesCreator, theme, staticSheet);
      }
    }

    if (sheetsRegistry) {
      sheetsRegistry.add(staticSheet);
    }

    sheetManager.staticSheet = staticSheet;
    sheetManager.dynamicStyles = (0,jss__WEBPACK_IMPORTED_MODULE_5__.getDynamicStyles)(styles);
  }

  if (sheetManager.dynamicStyles) {
    const dynamicSheet = stylesOptions.jss.createStyleSheet(sheetManager.dynamicStyles, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({
      link: true
    }, options));
    dynamicSheet.update(props);
    dynamicSheet.attach();
    state.dynamicSheet = dynamicSheet;
    state.classes = (0,_mergeClasses__WEBPACK_IMPORTED_MODULE_3__["default"])({
      baseClasses: sheetManager.staticSheet.classes,
      newClasses: dynamicSheet.classes
    });

    if (sheetsRegistry) {
      sheetsRegistry.add(dynamicSheet);
    }
  } else {
    state.classes = sheetManager.staticSheet.classes;
  }

  sheetManager.refs += 1;
}

function update({
  state
}, props) {
  if (state.dynamicSheet) {
    state.dynamicSheet.update(props);
  }
}

function detach({
  state,
  theme,
  stylesOptions,
  stylesCreator
}) {
  if (stylesOptions.disableGeneration) {
    return;
  }

  const sheetManager = _multiKeyStore__WEBPACK_IMPORTED_MODULE_4__["default"].get(stylesOptions.sheetsManager, stylesCreator, theme);
  sheetManager.refs -= 1;
  const sheetsRegistry = stylesOptions.sheetsRegistry;

  if (sheetManager.refs === 0) {
    _multiKeyStore__WEBPACK_IMPORTED_MODULE_4__["default"].delete(stylesOptions.sheetsManager, stylesCreator, theme);
    stylesOptions.jss.removeStyleSheet(sheetManager.staticSheet);

    if (sheetsRegistry) {
      sheetsRegistry.remove(sheetManager.staticSheet);
    }
  }

  if (state.dynamicSheet) {
    stylesOptions.jss.removeStyleSheet(state.dynamicSheet);

    if (sheetsRegistry) {
      sheetsRegistry.remove(state.dynamicSheet);
    }
  }
}

function useSynchronousEffect(func, values) {
  const key = react__WEBPACK_IMPORTED_MODULE_2__.useRef([]);
  let output; // Store "generation" key. Just returns a new object every time

  const currentKey = react__WEBPACK_IMPORTED_MODULE_2__.useMemo(() => ({}), values); // eslint-disable-line react-hooks/exhaustive-deps
  // "the first render", or "memo dropped the value"

  if (key.current !== currentKey) {
    key.current = currentKey;
    output = func();
  }

  react__WEBPACK_IMPORTED_MODULE_2__.useEffect(() => () => {
    if (output) {
      output();
    }
  }, [currentKey] // eslint-disable-line react-hooks/exhaustive-deps
  );
}

function makeStyles(stylesOrCreator, options = {}) {
  const {
    // alias for classNamePrefix, if provided will listen to theme (required for theme.components[name].styleOverrides)
    name,
    // Help with debuggability.
    classNamePrefix: classNamePrefixOption,
    Component,
    defaultTheme = _getStylesCreator_noopTheme__WEBPACK_IMPORTED_MODULE_6__["default"]
  } = options,
        stylesOptions2 = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(options, _excluded);

  const stylesCreator = (0,_getStylesCreator__WEBPACK_IMPORTED_MODULE_7__["default"])(stylesOrCreator);
  const classNamePrefix = name || classNamePrefixOption || 'makeStyles';
  stylesCreator.options = {
    index: (0,_indexCounter__WEBPACK_IMPORTED_MODULE_8__.increment)(),
    name,
    meta: classNamePrefix,
    classNamePrefix
  };

  const useStyles = (props = {}) => {
    const theme = (0,_useTheme__WEBPACK_IMPORTED_MODULE_9__["default"])() || defaultTheme;

    const stylesOptions = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, react__WEBPACK_IMPORTED_MODULE_2__.useContext(_StylesProvider__WEBPACK_IMPORTED_MODULE_10__.StylesContext), stylesOptions2);

    const instance = react__WEBPACK_IMPORTED_MODULE_2__.useRef();
    const shouldUpdate = react__WEBPACK_IMPORTED_MODULE_2__.useRef();
    useSynchronousEffect(() => {
      const current = {
        name,
        state: {},
        stylesCreator,
        stylesOptions,
        theme
      };
      attach(current, props);
      shouldUpdate.current = false;
      instance.current = current;
      return () => {
        detach(current);
      };
    }, [theme, stylesCreator]);
    react__WEBPACK_IMPORTED_MODULE_2__.useEffect(() => {
      if (shouldUpdate.current) {
        update(instance.current, props);
      }

      shouldUpdate.current = true;
    });
    const classes = getClasses(instance.current, props.classes, Component);

    if (true) {
      // eslint-disable-next-line react-hooks/rules-of-hooks
      react__WEBPACK_IMPORTED_MODULE_2__.useDebugValue(classes);
    }

    if (true) {
      const supportedComponents = ['MuiAvatar', 'MuiBadge', 'MuiButton', 'MuiButtonGroup', 'MuiChip', 'MuiDivider', 'MuiFab', 'MuiPaper', 'MuiToolbar', 'MuiTypography', 'MuiAlert', 'MuiPagination', 'MuiPaginationItem', 'MuiSkeleton', 'MuiTimelineDot'];

      if (name && supportedComponents.indexOf(name) >= 0 && props.variant && !classes[props.variant]) {
        console.error([`MUI: You are using a variant value \`${props.variant}\` for which you didn't define styles.`, `Please create a new variant matcher in your theme for this variant. To learn more about matchers visit https://mui.com/r/custom-component-variants.`].join('\n'));
      }
    }

    return classes;
  };

  return useStyles;
}

/***/ }),

/***/ "./node_modules/@mui/styles/makeStyles/multiKeyStore.js":
/*!**************************************************************!*\
  !*** ./node_modules/@mui/styles/makeStyles/multiKeyStore.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Used https://github.com/thinkloop/multi-key-cache as inspiration
const multiKeyStore = {
  set: (cache, key1, key2, value) => {
    let subCache = cache.get(key1);

    if (!subCache) {
      subCache = new Map();
      cache.set(key1, subCache);
    }

    subCache.set(key2, value);
  },
  get: (cache, key1, key2) => {
    const subCache = cache.get(key1);
    return subCache ? subCache.get(key2) : undefined;
  },
  delete: (cache, key1, key2) => {
    const subCache = cache.get(key1);
    subCache.delete(key2);
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (multiKeyStore);

/***/ }),

/***/ "./node_modules/@mui/styles/mergeClasses/mergeClasses.js":
/*!***************************************************************!*\
  !*** ./node_modules/@mui/styles/mergeClasses/mergeClasses.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ mergeClasses)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mui/utils */ "./node_modules/@mui/utils/esm/getDisplayName.js");


function mergeClasses(options = {}) {
  const {
    baseClasses,
    newClasses,
    Component
  } = options;

  if (!newClasses) {
    return baseClasses;
  }

  const nextClasses = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, baseClasses);

  if (true) {
    if (typeof newClasses === 'string') {
      console.error([`MUI: The value \`${newClasses}\` ` + `provided to the classes prop of ${(0,_mui_utils__WEBPACK_IMPORTED_MODULE_1__["default"])(Component)} is incorrect.`, 'You might want to use the className prop instead.'].join('\n'));
      return baseClasses;
    }
  }

  Object.keys(newClasses).forEach(key => {
    if (true) {
      if (!baseClasses[key] && newClasses[key]) {
        console.error([`MUI: The key \`${key}\` ` + `provided to the classes prop is not implemented in ${(0,_mui_utils__WEBPACK_IMPORTED_MODULE_1__["default"])(Component)}.`, `You can only override one of the following: ${Object.keys(baseClasses).join(',')}.`].join('\n'));
      }

      if (newClasses[key] && typeof newClasses[key] !== 'string') {
        console.error([`MUI: The key \`${key}\` ` + `provided to the classes prop is not valid for ${(0,_mui_utils__WEBPACK_IMPORTED_MODULE_1__["default"])(Component)}.`, `You need to provide a non empty string instead of: ${newClasses[key]}.`].join('\n'));
      }
    }

    if (newClasses[key]) {
      nextClasses[key] = `${baseClasses[key]} ${newClasses[key]}`;
    }
  });
  return nextClasses;
}

/***/ }),

/***/ "./node_modules/@mui/styles/node_modules/@mui/private-theming/ThemeProvider/nested.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@mui/styles/node_modules/@mui/private-theming/ThemeProvider/nested.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const hasSymbol = typeof Symbol === 'function' && Symbol.for;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__');

/***/ }),

/***/ "./node_modules/@mui/styles/node_modules/@mui/private-theming/useTheme/ThemeContext.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@mui/styles/node_modules/@mui/private-theming/useTheme/ThemeContext.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

const ThemeContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);
if (true) {
  ThemeContext.displayName = 'ThemeContext';
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ThemeContext);

/***/ }),

/***/ "./node_modules/@mui/styles/node_modules/@mui/private-theming/useTheme/useTheme.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@mui/styles/node_modules/@mui/private-theming/useTheme/useTheme.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ useTheme)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ThemeContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ThemeContext */ "./node_modules/@mui/styles/node_modules/@mui/private-theming/useTheme/ThemeContext.js");


function useTheme() {
  const theme = react__WEBPACK_IMPORTED_MODULE_0__.useContext(_ThemeContext__WEBPACK_IMPORTED_MODULE_1__["default"]);
  if (true) {
    // eslint-disable-next-line react-hooks/rules-of-hooks
    react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue(theme);
  }
  return theme;
}

/***/ }),

/***/ "./node_modules/@mui/styles/propsToClassKey/propsToClassKey.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@mui/styles/propsToClassKey/propsToClassKey.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ propsToClassKey)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");
/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mui/utils */ "./node_modules/@mui/utils/esm/capitalize/capitalize.js");

const _excluded = ["variant"];


function isEmpty(string) {
  return string.length === 0;
}
/**
 * Generates string classKey based on the properties provided. It starts with the
 * variant if defined, and then it appends all other properties in alphabetical order.
 * @param {object} props - the properties for which the classKey should be created
 */


function propsToClassKey(props) {
  const {
    variant
  } = props,
        other = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(props, _excluded);

  let classKey = variant || '';
  Object.keys(other).sort().forEach(key => {
    if (key === 'color') {
      classKey += isEmpty(classKey) ? props[key] : (0,_mui_utils__WEBPACK_IMPORTED_MODULE_1__["default"])(props[key]);
    } else {
      classKey += `${isEmpty(classKey) ? key : (0,_mui_utils__WEBPACK_IMPORTED_MODULE_1__["default"])(key)}${(0,_mui_utils__WEBPACK_IMPORTED_MODULE_1__["default"])(props[key].toString())}`;
    }
  });
  return classKey;
}

/***/ }),

/***/ "./resources/js/admin/@crema/core/AppComponentCard/highlightTheme.js":
/*!***************************************************************************!*\
  !*** ./resources/js/admin/@crema/core/AppComponentCard/highlightTheme.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   highlightTheme: () => (/* binding */ highlightTheme)
/* harmony export */ });
/* harmony import */ var _shared_constants_AppEnums__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shared/constants/AppEnums */ "./resources/js/admin/shared/constants/AppEnums.js");

var highlightTheme = {
  plain: {
    color: '#F8F8F2',
    fontFamily: 'Poppins',
    fontWeight: _shared_constants_AppEnums__WEBPACK_IMPORTED_MODULE_0__.Fonts.REGULAR,
    backgroundColor: '#333333'
  },
  styles: [{
    types: ['prolog', 'constant', 'builtin'],
    style: {
      color: '#FFFFFF'
    }
  }, {
    types: ['inserted', 'tag', 'function'],
    style: {
      color: '#E6DB74'
    }
  }, {
    types: ['deleted'],
    style: {
      color: 'rgb(255, 85, 85)'
    }
  }, {
    types: ['changed'],
    style: {
      color: 'rgb(255, 184, 108)'
    }
  }, {
    types: ['punctuation', 'symbol'],
    style: {
      color: 'rgb(248, 248, 242)'
    }
  }, {
    types: ['string', 'char', 'selector'],
    style: {
      color: '#98CD2F'
    }
  }, {
    types: ['keyword', 'variable'],
    style: {
      color: '#65D4EA'
      // fontStyle: "italic"
    }
  }, {
    types: ['comment'],
    style: {
      color: 'rgb(98, 114, 164)'
    }
  }, {
    types: ['attr-name'],
    style: {
      color: '#98CD2F'
    }
  }]
};

/***/ }),

/***/ "./resources/js/admin/@crema/core/AppComponentCard/index.js":
/*!******************************************************************!*\
  !*** ./resources/js/admin/@crema/core/AppComponentCard/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _mui_material_Card__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @mui/material/Card */ "./node_modules/@mui/material/esm/Card/Card.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _mui_material_CardHeader__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @mui/material/CardHeader */ "./node_modules/@mui/material/esm/CardHeader/CardHeader.js");
/* harmony import */ var _mui_material_CardContent__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @mui/material/CardContent */ "./node_modules/@mui/material/esm/CardContent/CardContent.js");
/* harmony import */ var _mui_icons_material_Code__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @mui/icons-material/Code */ "./node_modules/@mui/icons-material/Code.js");
/* harmony import */ var prism_react_renderer__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! prism-react-renderer */ "./node_modules/prism-react-renderer/dist/index.js");
/* harmony import */ var _mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @mui/material/IconButton */ "./node_modules/@mui/material/esm/IconButton/IconButton.js");
/* harmony import */ var _mui_material_Collapse__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @mui/material/Collapse */ "./node_modules/@mui/material/esm/Collapse/Collapse.js");
/* harmony import */ var _AppScrollbar_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../AppScrollbar/index.js */ "./resources/js/admin/@crema/core/AppScrollbar/index.js");
/* harmony import */ var _highlightTheme_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./highlightTheme.js */ "./resources/js/admin/@crema/core/AppComponentCard/highlightTheme.js");
/* harmony import */ var _mui_material_Box__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @mui/material/Box */ "./node_modules/@mui/material/esm/Box/Box.js");
/* harmony import */ var _AppAnimate_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../AppAnimate/index.js */ "./resources/js/admin/@crema/core/AppAnimate/index.js");
/* harmony import */ var _shared_constants_AppEnums__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../shared/constants/AppEnums */ "./resources/js/admin/shared/constants/AppEnums.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }














var AppComponentCard = function AppComponentCard(_ref) {
  var title = _ref.title,
    maxHeight = _ref.maxHeight,
    description = _ref.description,
    Component = _ref.component,
    source = _ref.source,
    noScrollbar = _ref.noScrollbar;
  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),
    _useState2 = _slicedToArray(_useState, 2),
    viewSource = _useState2[0],
    setToggleViewSource = _useState2[1];
  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),
    _useState4 = _slicedToArray(_useState3, 2),
    animation = _useState4[0],
    setAnimation = _useState4[1];
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_AppAnimate_index_js__WEBPACK_IMPORTED_MODULE_3__["default"], {
    animation: "transition.slideUpIn",
    delay: 200,
    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_mui_material_Card__WEBPACK_IMPORTED_MODULE_6__["default"], {
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_mui_material_CardHeader__WEBPACK_IMPORTED_MODULE_7__["default"], {
        sx: {
          py: 4,
          pb: 1,
          px: 5,
          display: 'flex',
          alignItems: 'center',
          minHeight: 50,
          boxSizing: 'border-box',
          '& .MuiTypography-h5': {
            fontSize: 14,
            fontWeight: _shared_constants_AppEnums__WEBPACK_IMPORTED_MODULE_4__.Fonts.BOLD,
            marginBottom: 0.25
          }
        },
        title: title,
        subheader: description,
        root: {
          subheader: {
            fontSize: 13
          }
        },
        action: source ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_8__["default"], {
          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9__["default"], {
            "aria-label": "view code",
            onClick: function onClick() {
              if (animation) {
                setAnimation(!animation);
                setTimeout(function () {
                  return setToggleViewSource(!viewSource);
                }, 400);
              } else {
                setAnimation(!animation);
                setToggleViewSource(!viewSource);
              }
            },
            size: "large",
            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_mui_icons_material_Code__WEBPACK_IMPORTED_MODULE_10__["default"], {})
          })
        }) : null
      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)(_mui_material_CardContent__WEBPACK_IMPORTED_MODULE_11__["default"], {
        sx: {
          px: 4,
          pt: 0
        },
        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_mui_material_Collapse__WEBPACK_IMPORTED_MODULE_12__["default"], {
          "in": animation,
          children: viewSource ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_AppScrollbar_index_js__WEBPACK_IMPORTED_MODULE_1__["default"], {
            sx: {
              borderRadius: 3,
              background: '#333333'
            },
            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(prism_react_renderer__WEBPACK_IMPORTED_MODULE_13__["default"], _objectSpread(_objectSpread({}, prism_react_renderer__WEBPACK_IMPORTED_MODULE_13__.defaultProps), {}, {
              code: source,
              language: "jsx",
              theme: _highlightTheme_js__WEBPACK_IMPORTED_MODULE_2__.highlightTheme,
              children: function children(_ref2) {
                var style = _ref2.style,
                  tokens = _ref2.tokens,
                  getLineProps = _ref2.getLineProps,
                  getTokenProps = _ref2.getTokenProps;
                return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("pre", {
                  style: _objectSpread(_objectSpread({}, style), {}, {
                    maxHeight: 500,
                    borderRadius: 8,
                    padding: 12
                  }),
                  children: tokens.map(function (line, i) {
                    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_8__["default"], _objectSpread(_objectSpread({}, getLineProps({
                      line: line,
                      key: i
                    })), {}, {
                      children: line.map(function (token, key) {
                        return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)("span", _objectSpread({}, getTokenProps({
                          token: token,
                          key: key
                        })), 'token-' + key);
                      })
                    }), 'line-' + i);
                  })
                });
              }
            }))
          }) : null
        }), noScrollbar ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_8__["default"], {
          sx: {
            width: '100%',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            p: 4,
            backgroundColor: function backgroundColor(theme) {
              return theme.palette.background["default"];
            }
          },
          children: typeof Component === 'function' ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(Component, {}) : Component
        }) : /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_AppScrollbar_index_js__WEBPACK_IMPORTED_MODULE_1__["default"], {
          sx: {
            mt: 2,
            p: 4,
            borderRadius: 3,
            maxHeight: maxHeight,
            backgroundColor: function backgroundColor(theme) {
              return theme.palette.background["default"];
            }
          },
          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_8__["default"], {
            sx: {
              width: '100%',
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center'
            },
            children: typeof Component === 'function' ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(Component, {}) : Component
          })
        })]
      })]
    })
  });
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AppComponentCard);
AppComponentCard.defaultProps = {
  description: '',
  maxHeight: 500
};

/***/ }),

/***/ "./resources/js/admin/@crema/core/AppConfirmDialog/index.js":
/*!******************************************************************!*\
  !*** ./resources/js/admin/@crema/core/AppConfirmDialog/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _mui_material_Dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @mui/material/Dialog */ "./node_modules/@mui/material/esm/Dialog/Dialog.js");
/* harmony import */ var _mui_material_DialogActions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @mui/material/DialogActions */ "./node_modules/@mui/material/esm/DialogActions/DialogActions.js");
/* harmony import */ var _mui_material_DialogContent__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @mui/material/DialogContent */ "./node_modules/@mui/material/esm/DialogContent/DialogContent.js");
/* harmony import */ var _mui_material_DialogTitle__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @mui/material/DialogTitle */ "./node_modules/@mui/material/esm/DialogTitle/DialogTitle.js");
/* harmony import */ var _mui_material_Typography__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @mui/material/Typography */ "./node_modules/@mui/material/esm/Typography/Typography.js");
/* harmony import */ var _mui_material_Slide__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @mui/material/Slide */ "./node_modules/@mui/material/esm/Slide/Slide.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _mui_material_Button__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @mui/material/Button */ "./node_modules/@mui/material/esm/Button/Button.js");
/* harmony import */ var _utility_IntlMessages_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utility/IntlMessages.js */ "./resources/js/admin/@crema/utility/IntlMessages.js");
/* harmony import */ var _shared_constants_AppEnums__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../shared/constants/AppEnums */ "./resources/js/admin/shared/constants/AppEnums.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }






function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }






var Transition = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().forwardRef(function Transition(props, ref) {
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_Slide__WEBPACK_IMPORTED_MODULE_4__["default"], _objectSpread({
    direction: "up",
    ref: ref
  }, props));
});
var AppConfirmDialog = function AppConfirmDialog(_ref) {
  var open = _ref.open,
    onDeny = _ref.onDeny,
    onConfirm = _ref.onConfirm,
    title = _ref.title,
    dialogTitle = _ref.dialogTitle;
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_mui_material_Dialog__WEBPACK_IMPORTED_MODULE_5__["default"], {
    TransitionComponent: Transition,
    open: open,
    onClose: function onClose() {
      return onDeny(false);
    },
    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_DialogTitle__WEBPACK_IMPORTED_MODULE_6__["default"], {
      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_Typography__WEBPACK_IMPORTED_MODULE_7__["default"], {
        // component='h4'
        // variant='h4'
        sx: {
          mb: 3,
          fontWeight: _shared_constants_AppEnums__WEBPACK_IMPORTED_MODULE_2__.Fonts.SEMI_BOLD
        },
        id: "alert-dialog-title",
        children: dialogTitle
      })
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_DialogContent__WEBPACK_IMPORTED_MODULE_8__["default"], {
      sx: {
        color: 'text.secondary',
        fontSize: 14
      },
      id: "alert-dialog-description",
      children: title
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_mui_material_DialogActions__WEBPACK_IMPORTED_MODULE_9__["default"], {
      sx: {
        pb: 5,
        px: 6
      },
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_Button__WEBPACK_IMPORTED_MODULE_10__["default"], {
        variant: "outlined",
        sx: {
          fontWeight: _shared_constants_AppEnums__WEBPACK_IMPORTED_MODULE_2__.Fonts.MEDIUM
        },
        onClick: onConfirm,
        color: "primary",
        autoFocus: true,
        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_utility_IntlMessages_js__WEBPACK_IMPORTED_MODULE_1__["default"], {
          id: "common.yes"
        })
      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_Button__WEBPACK_IMPORTED_MODULE_10__["default"], {
        variant: "outlined",
        sx: {
          fontWeight: _shared_constants_AppEnums__WEBPACK_IMPORTED_MODULE_2__.Fonts.MEDIUM
        },
        onClick: function onClick() {
          return onDeny(false);
        },
        color: "secondary",
        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_utility_IntlMessages_js__WEBPACK_IMPORTED_MODULE_1__["default"], {
          id: "common.no"
        })
      })]
    })]
  });
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AppConfirmDialog);

/***/ }),

/***/ "./resources/js/admin/@crema/core/AppFormComponents/AppAutoComplete/index.js":
/*!***********************************************************************************!*\
  !*** ./resources/js/admin/@crema/core/AppFormComponents/AppAutoComplete/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ AppAutoComplete)
/* harmony export */ });
/* harmony import */ var _mui_material_Chip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @mui/material/Chip */ "./node_modules/@mui/material/esm/Chip/Chip.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _mui_material_TextField__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @mui/material/TextField */ "./node_modules/@mui/material/esm/TextField/TextField.js");
/* harmony import */ var _mui_material_Autocomplete__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @mui/material/Autocomplete */ "./node_modules/@mui/material/esm/Autocomplete/Autocomplete.js");
/* harmony import */ var _mui_material_CircularProgress__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @mui/material/CircularProgress */ "./node_modules/@mui/material/esm/CircularProgress/CircularProgress.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }







function AppAutoComplete(_ref) {
  var _ref$options = _ref.options,
    options = _ref$options === void 0 ? [] : _ref$options,
    _ref$onType = _ref.onType,
    onType = _ref$onType === void 0 ? function () {} : _ref$onType,
    keyName = _ref.keyName,
    _ref$idField = _ref.idField,
    idField = _ref$idField === void 0 ? 'id' : _ref$idField,
    name = _ref.name,
    placeholder = _ref.placeholder,
    dataLoading = _ref.dataLoading,
    handleChange = _ref.handleChange,
    disabled = _ref.disabled,
    _ref$disabledId = _ref.disabledId,
    disabledId = _ref$disabledId === void 0 ? [] : _ref$disabledId,
    value = _ref.value,
    _ref$helperText = _ref.helperText,
    helperText = _ref$helperText === void 0 ? '' : _ref$helperText,
    error = _ref.error,
    _ref$multiple = _ref.multiple,
    multiple = _ref$multiple === void 0 ? false : _ref$multiple;
  var loading = !disabled && dataLoading;
  var onSelectValue = function onSelectValue(e, value) {
    var event = {
      target: {
        name: name,
        value: multiple === true ? value.map(function (data) {
          return data === null || data === void 0 ? void 0 : data[idField];
        }) : value === null || value === void 0 ? void 0 : value[idField]
      }
    };
    if (handleChange) handleChange(event);
  };
  var getValue = function getValue() {
    if (multiple) {
      if (value) {
        return options === null || options === void 0 ? void 0 : options.filter(function (option) {
          return value.includes(option === null || option === void 0 ? void 0 : option[idField]);
        });
      } else {
        return [];
      }
    }
    return (options === null || options === void 0 ? void 0 : options.find(function (option) {
      return (option === null || option === void 0 ? void 0 : option[idField]) === value;
    })) || null;
  };
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Autocomplete__WEBPACK_IMPORTED_MODULE_2__["default"], {
    disabled: disabled,
    multiple: multiple,
    onChange: onSelectValue,
    isOptionEqualToValue: function isOptionEqualToValue(option, value) {
      if (multiple) {
        return (option === null || option === void 0 ? void 0 : option[idField]) === (value === null || value === void 0 ? void 0 : value[idField]);
      } else {
        return (option === null || option === void 0 ? void 0 : option[idField]) === (value === null || value === void 0 ? void 0 : value[idField]);
      }
    },
    getOptionLabel: function getOptionLabel(option) {
      return option === null || option === void 0 ? void 0 : option[keyName];
    },
    options: options,
    loading: loading,
    name: name,
    value: getValue(),
    renderTags: function renderTags(tagValue, getTagProps) {
      return tagValue.map(function (option, index) {
        return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Chip__WEBPACK_IMPORTED_MODULE_3__["default"], _objectSpread(_objectSpread({
          label: option[keyName]
        }, getTagProps({
          index: index
        })), {}, {
          disabled: disabledId.indexOf(option === null || option === void 0 ? void 0 : option[idField]) !== -1
        }), index);
      });
    },
    renderOption: function renderOption(props, option, state) {
      // console.log('test', props, option, state.index);
      //return [props, option, state.index] as React.ReactNode
      return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("li", _objectSpread(_objectSpread({}, props), {}, {
        key: option === null || option === void 0 ? void 0 : option[idField]
      }), option === null || option === void 0 ? void 0 : option[keyName]);
    },
    renderInput: function renderInput(params) {
      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_TextField__WEBPACK_IMPORTED_MODULE_4__["default"], _objectSpread(_objectSpread({
        name: name,
        placeholder: placeholder
      }, params), {}, {
        variant: "outlined",
        onChange: function onChange(ev) {
          return onType(ev.target.value);
        },
        InputProps: _objectSpread(_objectSpread({}, params.InputProps), {}, {
          endAdornment: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), {
            children: [loading ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_CircularProgress__WEBPACK_IMPORTED_MODULE_5__["default"], {
              color: "inherit",
              size: 20
            }) : null, params.InputProps.endAdornment]
          })
        }),
        helperText: helperText,
        error: error
      }));
    }
  });
}

/***/ }),

/***/ "./resources/js/admin/@crema/core/AppFormComponents/AppAutocompleteField.js":
/*!**********************************************************************************!*\
  !*** ./resources/js/admin/@crema/core/AppFormComponents/AppAutocompleteField.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var formik__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! formik */ "./node_modules/formik/dist/formik.esm.js");
/* harmony import */ var _AppAutoComplete_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AppAutoComplete/index.js */ "./resources/js/admin/@crema/core/AppFormComponents/AppAutoComplete/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }




var AppAutocompleteField = function AppAutocompleteField(props) {
  var _useField = (0,formik__WEBPACK_IMPORTED_MODULE_0__.useField)(props),
    _useField2 = _slicedToArray(_useField, 2),
    field = _useField2[0],
    meta = _useField2[1];
  var errorText = meta.error && meta.touched ? meta.error : '';
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_AppAutoComplete_index_js__WEBPACK_IMPORTED_MODULE_1__["default"], _objectSpread(_objectSpread(_objectSpread({}, props), field), {}, {
    helperText: !props.disabled ? errorText : '',
    error: !!errorText
  }));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AppAutocompleteField);

/***/ }),

/***/ "./resources/js/admin/components/CsDataTable/index.js":
/*!************************************************************!*\
  !*** ./resources/js/admin/components/CsDataTable/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _inovua_reactdatagrid_community_index_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @inovua/reactdatagrid-community/index.css */ "./node_modules/@inovua/reactdatagrid-community/index.css");
/* harmony import */ var _inovua_reactdatagrid_community__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @inovua/reactdatagrid-community */ "./node_modules/@inovua/reactdatagrid-community/index.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }





var CsDataTable = function CsDataTable(props) {
  console.log("CsDataTable", props);
  var columns = props.columns,
    _props$pagination = props.pagination,
    pagination = _props$pagination === void 0 ? true : _props$pagination,
    _props$loading = props.loading,
    loading = _props$loading === void 0 ? false : _props$loading,
    _props$pageSize = props.pageSize,
    pageSize = _props$pageSize === void 0 ? 10 : _props$pageSize,
    _props$pageNo = props.pageNo,
    pageNo = _props$pageNo === void 0 ? 0 : _props$pageNo,
    _props$refresh = props.refresh,
    refresh = _props$refresh === void 0 ? 0 : _props$refresh;
  var gridStyle = {
    minHeight: 550
  };
  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),
    _useState2 = _slicedToArray(_useState, 2),
    gridRef = _useState2[0],
    setGridRef = _useState2[1];
  var reloadTable = function reloadTable() {
    // @ts-ignore
    gridRef.current.reload();
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
    if (refresh > 1) {
      reloadTable();
    }
  }, [refresh]);
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.Fragment, {
    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div", {
      style: {
        minHeight: '500px',
        height: 'auto',
        width: '100%'
      },
      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_inovua_reactdatagrid_community__WEBPACK_IMPORTED_MODULE_2__["default"], _objectSpread(_objectSpread({
        onReady: setGridRef,
        style: gridStyle,
        idProperty: "uniqueId"
      }, props), {}, {
        columns: columns
        //dataSource={data}
        ,
        pagination: pagination,
        loading: loading,
        defaultLimit: pageSize,
        defaultSkip: pageNo,
        pageSizes: [5, 10, 20, 50, 100]
        // onLimitChange={handleLimitChange}
        // onSkipChange={handleSkipChange}
        // onSortInfoChange={handleSortChange}
      }))
    })
  });
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CsDataTable);

/***/ }),

/***/ "./resources/js/admin/pages/bankBranch/AddItem/index.js":
/*!**************************************************************!*\
  !*** ./resources/js/admin/pages/bankBranch/AddItem/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _mui_material_Grid__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @mui/material/Grid */ "./node_modules/@mui/material/esm/Grid/Grid.js");
/* harmony import */ var _mui_material_Button__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @mui/material/Button */ "./node_modules/@mui/material/esm/Button/Button.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _mui_lab__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @mui/lab */ "./node_modules/@mui/lab/LoadingButton/LoadingButton.js");
/* harmony import */ var _mui_icons_material_Close__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @mui/icons-material/Close */ "./node_modules/@mui/icons-material/Close.js");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var _mui_material_Drawer__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @mui/material/Drawer */ "./node_modules/@mui/material/esm/Drawer/Drawer.js");
/* harmony import */ var _mui_material_Box__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @mui/material/Box */ "./node_modules/@mui/material/esm/Box/Box.js");
/* harmony import */ var formik__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! formik */ "./node_modules/formik/dist/formik.esm.js");
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! yup */ "./node_modules/yup/es/index.js");
/* harmony import */ var _mui_material_Divider__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @mui/material/Divider */ "./node_modules/@mui/material/esm/Divider/Divider.js");
/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! react-intl */ "./node_modules/react-intl/lib/src/components/useIntl.js");
/* harmony import */ var _redux_actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../redux/actions */ "./resources/js/admin/redux/actions/index.js");
/* harmony import */ var _crema_core_AppGridContainer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../@crema/core/AppGridContainer */ "./resources/js/admin/@crema/core/AppGridContainer/index.js");
/* harmony import */ var _crema_core_AppComponentHeader__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../@crema/core/AppComponentHeader */ "./resources/js/admin/@crema/core/AppComponentHeader/index.js");
/* harmony import */ var _crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../@crema/utility/IntlMessages */ "./resources/js/admin/@crema/utility/IntlMessages.js");
/* harmony import */ var _crema_core_AppFormComponents_AppTextField__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../@crema/core/AppFormComponents/AppTextField */ "./resources/js/admin/@crema/core/AppFormComponents/AppTextField.js");
/* harmony import */ var _crema_core_AppFormComponents_AppAutocompleteField__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../@crema/core/AppFormComponents/AppAutocompleteField */ "./resources/js/admin/@crema/core/AppFormComponents/AppAutocompleteField.js");
/* harmony import */ var _services_BankBranchService__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../services/BankBranchService */ "./resources/js/admin/services/BankBranchService.js");
/* harmony import */ var _services_BankService__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../services/BankService */ "./resources/js/admin/services/BankService.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }


function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
















//import AppTextEditor from '../../../components/AppTextEditor/';






var AddItem = function AddItem(_ref) {
  var isOpen = _ref.isOpen,
    handleOpen = _ref.handleOpen;
  var dispatch = (0,react_redux__WEBPACK_IMPORTED_MODULE_1__.useDispatch)();
  var _useIntl = (0,react_intl__WEBPACK_IMPORTED_MODULE_13__["default"])(),
    messages = _useIntl.messages;
  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),
    _useState2 = _slicedToArray(_useState, 2),
    bankList = _useState2[0],
    setBankList = _useState2[1];
  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(''),
    _useState4 = _slicedToArray(_useState3, 2),
    selectedBank = _useState4[0],
    setSelectedBank = _useState4[1];
  var _useState5 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true),
    _useState6 = _slicedToArray(_useState5, 2),
    loadingBankList = _useState6[0],
    setLoadingBankList = _useState6[1];
  var action = function action() {
    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_mui_material_Button__WEBPACK_IMPORTED_MODULE_14__["default"], {
      onClick: function onClick() {
        return handleOpen(false);
      },
      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_mui_icons_material_Close__WEBPACK_IMPORTED_MODULE_15__["default"], {})
    });
  };
  var validationSchema = yup__WEBPACK_IMPORTED_MODULE_3__.object({
    branch_name: yup__WEBPACK_IMPORTED_MODULE_3__.string().required(String(messages["validation.branchNameRequired"])),
    branch_code: yup__WEBPACK_IMPORTED_MODULE_3__.string().required(String(messages["validation.branchCodeRequired"])),
    ifsc_code: yup__WEBPACK_IMPORTED_MODULE_3__.string().required(String(messages["validation.ifscRequired"]))
  });
  var handleFormSubmit = /*#__PURE__*/function () {
    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(data) {
      var reqData;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            dispatch((0,_redux_actions__WEBPACK_IMPORTED_MODULE_4__.fetchStart)());
            reqData = _objectSpread({}, data);
            _context.next = 4;
            return _services_BankBranchService__WEBPACK_IMPORTED_MODULE_10__["default"].createItem(reqData).then(function (response) {
              dispatch((0,_redux_actions__WEBPACK_IMPORTED_MODULE_4__.fetchSuccess)());
              dispatch((0,_redux_actions__WEBPACK_IMPORTED_MODULE_4__.showMessage)(response.message));
              handleOpen(true);
            })["catch"](function (error) {
              dispatch((0,_redux_actions__WEBPACK_IMPORTED_MODULE_4__.fetchError)(error));
            });
          case 4:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function handleFormSubmit(_x) {
      return _ref2.apply(this, arguments);
    };
  }();
  var fetchBankList = function fetchBankList() {
    var searchStr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
    setBankList([]);
    setLoadingBankList(true);
    _services_BankService__WEBPACK_IMPORTED_MODULE_11__["default"].listItem({
      page: 0,
      page_no: 0,
      page_size: 100,
      searchFilters: JSON.stringify({
        "rules": [{
          "name": "bank_name",
          "operator": "startsWith",
          "type": "string",
          "value": searchStr
        }]
      })
    }).then(function (response) {
      var _response$data;
      setLoadingBankList(false);
      var data = (response === null || response === void 0 || (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data) || [];
      setBankList(data);
    })["catch"](function (error) {
      setLoadingBankList(false);
      setBankList([]);
    });
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
    if (isOpen) {
      fetchBankList();
    }
  }, [isOpen]);
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.Fragment, {
    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(_mui_material_Drawer__WEBPACK_IMPORTED_MODULE_16__["default"], {
      open: isOpen,
      onClose: function onClose() {
        handleOpen(true);
      },
      anchor: "right",
      PaperProps: {
        sx: {
          minWidth: "30%",
          maxWidth: '50%'
        }
      },
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_17__["default"]
      // role='presentation'
      , {
        sx: {
          padding: 5,
          paddingBottom: 0
        },
        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_crema_core_AppComponentHeader__WEBPACK_IMPORTED_MODULE_6__["default"], {
          title: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_7__["default"], {
            id: "common.bankBranch.create"
          }),
          action: action()
        })
      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_mui_material_Divider__WEBPACK_IMPORTED_MODULE_18__["default"], {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_17__["default"], {
        role: "presentation",
        sx: {
          padding: 5
        },
        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(formik__WEBPACK_IMPORTED_MODULE_2__.Formik, {
          validateOnChange: true,
          initialValues: {
            branch_name: "",
            branch_code: '',
            ifsc_code: '',
            contact_person: '',
            contact_number: '',
            branch_address: '',
            bank_uuid: '',
            state_id: '',
            city_id: '',
            country_id: '',
            zip: ''
          },
          validationSchema: validationSchema,
          onSubmit: /*#__PURE__*/function () {
            var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(data, _ref3) {
              var setSubmitting;
              return _regeneratorRuntime().wrap(function _callee2$(_context2) {
                while (1) switch (_context2.prev = _context2.next) {
                  case 0:
                    setSubmitting = _ref3.setSubmitting;
                    setSubmitting(true);
                    _context2.next = 4;
                    return handleFormSubmit(data);
                  case 4:
                    setSubmitting(false);
                  case 5:
                  case "end":
                    return _context2.stop();
                }
              }, _callee2);
            }));
            return function (_x2, _x3) {
              return _ref4.apply(this, arguments);
            };
          }(),
          children: function children(_ref5) {
            var isSubmitting = _ref5.isSubmitting,
              resetForm = _ref5.resetForm,
              setFieldValue = _ref5.setFieldValue;
            return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(formik__WEBPACK_IMPORTED_MODULE_2__.Form, {
              style: {
                textAlign: "left"
              },
              noValidate: true,
              autoComplete: "off",
              children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(_crema_core_AppGridContainer__WEBPACK_IMPORTED_MODULE_5__["default"], {
                spacing: 4,
                children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_mui_material_Grid__WEBPACK_IMPORTED_MODULE_19__["default"], {
                  item: true,
                  xs: 12,
                  md: 12,
                  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_crema_core_AppFormComponents_AppAutocompleteField__WEBPACK_IMPORTED_MODULE_9__["default"], {
                    helperText: "Please select Bank",
                    name: "role",
                    options: bankList,
                    keyName: "bank_name",
                    idField: "uuid",
                    placeholder: "Select Bank",
                    label: "Bank",
                    value: selectedBank,
                    handleChange: function handleChange(e) {
                      setFieldValue('bank_uuid', e.target.value);
                      setSelectedBank(e.target.value);
                    },
                    dataLoading: loadingBankList,
                    onType: function onType(val) {
                      fetchBankList(val);
                    }
                  })
                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_mui_material_Grid__WEBPACK_IMPORTED_MODULE_19__["default"], {
                  item: true,
                  xs: 12,
                  md: 12,
                  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_crema_core_AppFormComponents_AppTextField__WEBPACK_IMPORTED_MODULE_8__["default"], {
                    name: "branch_name",
                    placeholder: messages["common.bankBranchName"],
                    label: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_7__["default"], {
                      id: "common.bankBranchName"
                    }),
                    variant: "outlined",
                    sx: {
                      width: "100%"
                    }
                  })
                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_mui_material_Grid__WEBPACK_IMPORTED_MODULE_19__["default"], {
                  item: true,
                  xs: 12,
                  md: 12,
                  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_crema_core_AppFormComponents_AppTextField__WEBPACK_IMPORTED_MODULE_8__["default"], {
                    name: "branch_code",
                    placeholder: messages["common.branchCode"],
                    label: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_7__["default"], {
                      id: "common.branchCode"
                    }),
                    variant: "outlined",
                    sx: {
                      width: "100%"
                    }
                  })
                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_mui_material_Grid__WEBPACK_IMPORTED_MODULE_19__["default"], {
                  item: true,
                  xs: 12,
                  md: 12,
                  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_crema_core_AppFormComponents_AppTextField__WEBPACK_IMPORTED_MODULE_8__["default"], {
                    name: "ifsc_code",
                    placeholder: messages["common.ifscCode"],
                    label: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_7__["default"], {
                      id: "common.ifscCode"
                    }),
                    variant: "outlined",
                    sx: {
                      width: "100%"
                    }
                  })
                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_mui_material_Grid__WEBPACK_IMPORTED_MODULE_19__["default"], {
                  item: true,
                  xs: 12,
                  md: 12,
                  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_crema_core_AppFormComponents_AppTextField__WEBPACK_IMPORTED_MODULE_8__["default"], {
                    name: "contact_person",
                    placeholder: messages["common.contactPerson"],
                    label: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_7__["default"], {
                      id: "common.contactPerson"
                    }),
                    variant: "outlined",
                    sx: {
                      width: "100%"
                    }
                  })
                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_mui_material_Grid__WEBPACK_IMPORTED_MODULE_19__["default"], {
                  item: true,
                  xs: 12,
                  md: 12,
                  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_crema_core_AppFormComponents_AppTextField__WEBPACK_IMPORTED_MODULE_8__["default"], {
                    name: "contact_number",
                    placeholder: messages["common.contactNumber"],
                    label: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_7__["default"], {
                      id: "common.contactNumber"
                    }),
                    variant: "outlined",
                    sx: {
                      width: "100%"
                    }
                  })
                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_mui_material_Grid__WEBPACK_IMPORTED_MODULE_19__["default"], {
                  item: true,
                  xs: 12,
                  md: 12,
                  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_crema_core_AppFormComponents_AppTextField__WEBPACK_IMPORTED_MODULE_8__["default"], {
                    name: "branch_address",
                    placeholder: messages["common.branchAddress"],
                    label: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_7__["default"], {
                      id: "common.branchAddress"
                    }),
                    variant: "outlined",
                    sx: {
                      width: "100%"
                    }
                  })
                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_mui_material_Grid__WEBPACK_IMPORTED_MODULE_19__["default"], {
                  item: true,
                  xs: 12,
                  md: 12,
                  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_17__["default"], {
                    sx: {
                      display: "flex",
                      alignItems: "center"
                    },
                    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_mui_lab__WEBPACK_IMPORTED_MODULE_20__["default"], {
                      variant: "contained",
                      color: "primary",
                      type: "submit",
                      loading: isSubmitting,
                      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_7__["default"], {
                        id: "common.save"
                      })
                    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_mui_material_Button__WEBPACK_IMPORTED_MODULE_14__["default"], {
                      variant: "contained",
                      color: "warning",
                      type: "reset",
                      disabled: isSubmitting,
                      sx: {
                        marginLeft: 2
                      },
                      onClick: function onClick(e) {
                        resetForm();
                        handleOpen(false);
                      },
                      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_7__["default"], {
                        id: "common.cancel"
                      })
                    })]
                  })
                })]
              })
            });
          }
        })
      })]
    })
  });
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AddItem);

/***/ }),

/***/ "./resources/js/admin/pages/bankBranch/ItemDetails/index.js":
/*!******************************************************************!*\
  !*** ./resources/js/admin/pages/bankBranch/ItemDetails/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _mui_material_Drawer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @mui/material/Drawer */ "./node_modules/@mui/material/esm/Drawer/Drawer.js");
/* harmony import */ var _mui_material_Divider__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @mui/material/Divider */ "./node_modules/@mui/material/esm/Divider/Divider.js");
/* harmony import */ var _mui_material_Box__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @mui/material/Box */ "./node_modules/@mui/material/esm/Box/Box.js");
/* harmony import */ var _mui_material_Button__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @mui/material/Button */ "./node_modules/@mui/material/esm/Button/Button.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _mui_icons_material_Close__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @mui/icons-material/Close */ "./node_modules/@mui/icons-material/Close.js");
/* harmony import */ var _crema_core_AppComponentHeader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../@crema/core/AppComponentHeader */ "./resources/js/admin/@crema/core/AppComponentHeader/index.js");
/* harmony import */ var _crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../@crema/utility/IntlMessages */ "./resources/js/admin/@crema/utility/IntlMessages.js");
/* harmony import */ var _services_CategoryService__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../services/CategoryService */ "./resources/js/admin/services/CategoryService.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }




function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }









var ItemDetails = function ItemDetails(_ref) {
  var isOpen = _ref.isOpen,
    handleOpen = _ref.handleOpen,
    values = _ref.values;
  var _React$useState = react__WEBPACK_IMPORTED_MODULE_0___default().useState('personal-info'),
    _React$useState2 = _slicedToArray(_React$useState, 2),
    value = _React$useState2[0],
    setValue = _React$useState2[1];
  var _React$useState3 = react__WEBPACK_IMPORTED_MODULE_0___default().useState(true),
    _React$useState4 = _slicedToArray(_React$useState3, 2),
    itemInfoLoading = _React$useState4[0],
    setItemInfoLoading = _React$useState4[1];
  var _React$useState5 = react__WEBPACK_IMPORTED_MODULE_0___default().useState(null),
    _React$useState6 = _slicedToArray(_React$useState5, 2),
    itemInfo = _React$useState6[0],
    setItemInfo = _React$useState6[1];
  var handleChange = function handleChange(event, newValue) {
    setValue(newValue);
  };
  var action = function action() {
    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_mui_material_Button__WEBPACK_IMPORTED_MODULE_5__["default"], {
      onClick: function onClick() {
        return handleOpen(false);
      },
      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_mui_icons_material_Close__WEBPACK_IMPORTED_MODULE_6__["default"], {})
    });
  };
  var fetchItemInfo = /*#__PURE__*/function () {
    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            setItemInfoLoading(true);
            _services_CategoryService__WEBPACK_IMPORTED_MODULE_3__["default"].findItem(values.uuid).then(function (res) {
              if (res.data) {
                setItemInfo(res.data);
              }
              setItemInfoLoading(false);
            })["catch"](function (error) {
              setItemInfoLoading(false);
              console.log('Error while fetching user', error);
            });
          case 2:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function fetchItemInfo() {
      return _ref2.apply(this, arguments);
    };
  }();
  react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(function () {
    if (isOpen && values.uuid) {
      fetchItemInfo();
    }
  }, [isOpen]);
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment, {
    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(_mui_material_Drawer__WEBPACK_IMPORTED_MODULE_7__["default"], {
      open: isOpen,
      onClose: function onClose() {
        handleOpen(true);
      },
      anchor: "right",
      PaperProps: {
        sx: {
          minWidth: "50%",
          maxWidth: "50%"
        }
      },
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_8__["default"], {
        // role='presentation'
        sx: {
          padding: 5,
          paddingBottom: 0
        },
        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_crema_core_AppComponentHeader__WEBPACK_IMPORTED_MODULE_1__["default"], {
          title: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_2__["default"], {
            id: "common.category.info"
          }),
          action: action()
        })
      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_mui_material_Divider__WEBPACK_IMPORTED_MODULE_9__["default"], {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_8__["default"], {
        role: "presentation",
        sx: {
          padding: 5
        }
      })]
    })
  });
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ItemDetails);

/***/ }),

/***/ "./resources/js/admin/pages/bankBranch/ListItems/index.js":
/*!****************************************************************!*\
  !*** ./resources/js/admin/pages/bankBranch/ListItems/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _mui_styles__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @mui/styles */ "./node_modules/@mui/styles/makeStyles/makeStyles.js");
/* harmony import */ var _services_BankBranchService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../services/BankBranchService */ "./resources/js/admin/services/BankBranchService.js");
/* harmony import */ var _UpdateItem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../UpdateItem */ "./resources/js/admin/pages/bankBranch/UpdateItem/index.js");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var _redux_actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../redux/actions */ "./resources/js/admin/redux/actions/index.js");
/* harmony import */ var _crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../@crema/utility/IntlMessages */ "./resources/js/admin/@crema/utility/IntlMessages.js");
/* harmony import */ var _crema_core_AppConfirmDialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../@crema/core/AppConfirmDialog */ "./resources/js/admin/@crema/core/AppConfirmDialog/index.js");
/* harmony import */ var _mui_icons_material_Edit__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @mui/icons-material/Edit */ "./node_modules/@mui/icons-material/Edit.js");
/* harmony import */ var _mui_icons_material_Delete__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @mui/icons-material/Delete */ "./node_modules/@mui/icons-material/Delete.js");
/* harmony import */ var _mui_icons_material_Visibility__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @mui/icons-material/Visibility */ "./node_modules/@mui/icons-material/Visibility.js");
/* harmony import */ var _mui_material_IconButton__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @mui/material/IconButton */ "./node_modules/@mui/material/esm/IconButton/IconButton.js");
/* harmony import */ var _mui_material_Menu__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @mui/material/Menu */ "./node_modules/@mui/material/esm/Menu/Menu.js");
/* harmony import */ var _mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @mui/material/MenuItem */ "./node_modules/@mui/material/esm/MenuItem/MenuItem.js");
/* harmony import */ var _mui_icons_material_MoreVert__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @mui/icons-material/MoreVert */ "./node_modules/@mui/icons-material/MoreVert.js");
/* harmony import */ var _shared_Helper__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../shared/Helper */ "./resources/js/admin/shared/Helper.js");
/* harmony import */ var _inovua_reactdatagrid_community_SelectFilter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @inovua/reactdatagrid-community/SelectFilter */ "./node_modules/@inovua/reactdatagrid-community/SelectFilter/index.js");
/* harmony import */ var _inovua_reactdatagrid_community_DateFilter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @inovua/reactdatagrid-community/DateFilter */ "./node_modules/@inovua/reactdatagrid-community/DateFilter/index.js");
/* harmony import */ var _components_CsDataTable__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../components/CsDataTable */ "./resources/js/admin/components/CsDataTable/index.js");
/* harmony import */ var _ItemDetails__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../ItemDetails */ "./resources/js/admin/pages/bankBranch/ItemDetails/index.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

























var useStyles = (0,_mui_styles__WEBPACK_IMPORTED_MODULE_13__["default"])(function (theme) {
  return {
    emailLink: function emailLink(props) {
      return {
        // fontWeight: 'bold',
        textDecoration: 'none',
        color: theme['palette'].primary.main
      };
    },
    hoverPointer: function hoverPointer(props) {
      return {
        cursor: 'pointer'
      };
    }
  };
});
var ListItems = function ListItems(_ref) {
  var _ref$refresh = _ref.refresh,
    refresh = _ref$refresh === void 0 ? 0 : _ref$refresh;
  var dispatch = (0,react_redux__WEBPACK_IMPORTED_MODULE_3__.useDispatch)();
  var classes = useStyles();
  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(refresh),
    _useState2 = _slicedToArray(_useState, 2),
    refreshGrid = _useState2[0],
    setRefreshGrid = _useState2[1];
  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),
    _useState4 = _slicedToArray(_useState3, 2),
    loading = _useState4[0],
    setLoading = _useState4[1];
  var _useState5 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0),
    _useState6 = _slicedToArray(_useState5, 2),
    pageNo = _useState6[0],
    setPageNo = _useState6[1];
  var _useState7 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(10),
    _useState8 = _slicedToArray(_useState7, 2),
    pageSize = _useState8[0],
    setPageSize = _useState8[1];
  var _useState9 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({}),
    _useState10 = _slicedToArray(_useState9, 2),
    item = _useState10[0],
    setItem = _useState10[1];
  var _useState11 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),
    _useState12 = _slicedToArray(_useState11, 2),
    deleteDialog = _useState12[0],
    setDeleteDialog = _useState12[1];
  var _useState13 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),
    _useState14 = _slicedToArray(_useState13, 2),
    suspendDialog = _useState14[0],
    setSuspendDialog = _useState14[1];
  var _useState15 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),
    _useState16 = _slicedToArray(_useState15, 2),
    activateDialog = _useState16[0],
    setActivateDialog = _useState16[1];
  var _useState17 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),
    _useState18 = _slicedToArray(_useState17, 2),
    updateItemModal = _useState18[0],
    setUpdateItemModal = _useState18[1];
  var _useState19 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),
    _useState20 = _slicedToArray(_useState19, 2),
    itemInfoModal = _useState20[0],
    setItemInfoModal = _useState20[1];
  var _React$useState = react__WEBPACK_IMPORTED_MODULE_0___default().useState(null),
    _React$useState2 = _slicedToArray(_React$useState, 2),
    menuAnchorEl = _React$useState2[0],
    setMenuAnchorEl = _React$useState2[1];
  var open = Boolean(menuAnchorEl);
  var handleActionMenuClick = function handleActionMenuClick(event, str) {
    setMenuAnchorEl(event.currentTarget);
    setItem(JSON.parse(str));
  };
  var handleEditItemModal = function handleEditItemModal() {
    var reload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
    if (reload) {
      handleRefreshGrid();
    }
    setUpdateItemModal(!updateItemModal);
  };
  var handleItemInfoModal = function handleItemInfoModal() {
    setItemInfoModal(!itemInfoModal);
  };
  var handleRefreshGrid = function handleRefreshGrid() {
    setRefreshGrid(refreshGrid + 1);
  };
  var deleteItem = function deleteItem() {
    dispatch((0,_redux_actions__WEBPACK_IMPORTED_MODULE_4__.fetchStart)());
    _services_BankBranchService__WEBPACK_IMPORTED_MODULE_1__["default"].deleteItem(item['uuid']).then(function (response) {
      handleRefreshGrid();
      dispatch((0,_redux_actions__WEBPACK_IMPORTED_MODULE_4__.fetchSuccess)());
      dispatch((0,_redux_actions__WEBPACK_IMPORTED_MODULE_4__.showMessage)(response.message));
      setDeleteDialog(false);
      setItem({});
    })["catch"](function (error) {
      dispatch((0,_redux_actions__WEBPACK_IMPORTED_MODULE_4__.fetchError)(error));
    });
  };
  /**
   * Fetch items list
   */
  var listItems = function listItems(props) {
    var _pageNo = pageNo;
    var sortBy = 'id';
    var sortOrder = 'asc';
    var skip = props.skip,
      limit = props.limit,
      sortInfo = props.sortInfo,
      filterValue = props.filterValue;
    if (sortInfo) {
      sortBy = sortInfo.name;
      sortOrder = sortInfo.sort == '1' ? 'asc' : 'desc';
    }
    if (skip) {
      _pageNo = Math.ceil(skip / limit) + 1;
      setPageNo(pageNo);
    }
    if (limit) {
      setPageSize(limit);
    }
    var reqData = {
      page_no: _pageNo,
      // + 1,
      page: _pageNo,
      // + 1,
      page_size: limit,
      sort_by: sortBy,
      sort_order: sortOrder,
      searchQuery: JSON.stringify(filterValue),
      searchFilters: JSON.stringify({
        "rules": filterValue
      })
    };
    setLoading(true);
    return _services_BankBranchService__WEBPACK_IMPORTED_MODULE_1__["default"].listItem(reqData).then(function (response) {
      setLoading(false);
      var data = [];
      var count = 0;
      if (response.data && response.data.data) {
        //setData(response.data.items);
        data = response.data.data;
        count = response.data.total;
      }
      return {
        data: data,
        count: count
      };
    })["catch"](function (error) {
      setLoading(false);
      return {
        data: [],
        count: 0
      };
    });
  };
  var getUserAvatar = function getUserAvatar(user) {
    if (user.firstName) {
      return user.firstName.charAt(0).toUpperCase();
    }
    if (user.email) {
      return user.email.charAt(0).toUpperCase();
    }
  };
  var columns = [{
    name: 'branch_name',
    header: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)("b", {
      children: "Branch Name"
    }),
    defaultFlex: 1,
    enableColumnFilterContextMenu: false
  }, {
    name: 'branch_code',
    header: 'Branch Code',
    defaultFlex: 1,
    enableColumnFilterContextMenu: false
  }, {
    name: 'ifsc_code',
    header: 'IFSC Code',
    defaultFlex: 1,
    enableColumnFilterContextMenu: false
  }, {
    name: 'contact_person',
    header: 'Contact Person',
    defaultFlex: 1,
    enableColumnFilterContextMenu: false
  }, {
    name: 'contact_number',
    header: 'Contact Number',
    defaultFlex: 1,
    enableColumnFilterContextMenu: false
  }, {
    name: 'bank_name',
    header: 'Bank Name',
    defaultFlex: 1
  }, {
    name: 'updated_at',
    header: 'Updated On',
    defaultFlex: 1,
    filterEditor: _inovua_reactdatagrid_community_DateFilter__WEBPACK_IMPORTED_MODULE_9__["default"],
    filterEditorProps: {
      dateFormat: 'MM-DD-YYYY'
    },
    render: function render(_ref2) {
      var value = _ref2.value;
      return (0,_shared_Helper__WEBPACK_IMPORTED_MODULE_7__.formatDateTime)(value);
    }
  }, {
    name: 'uuid',
    header: 'Action',
    defaultFlex: 1,
    render: function render(_ref3) {
      var item = _ref3.data,
        rowIndex = _ref3.rowIndex,
        value = _ref3.value;
      //const { data: item, rowIndex, value } = args;
      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)("div", {
        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_14__["default"], {
          "aria-label": "more",
          id: "long-button",
          "aria-controls": "long-menu",
          "aria-expanded": open ? 'true' : undefined,
          "aria-haspopup": "true",
          onClick: function onClick(e) {
            return handleActionMenuClick(e, JSON.stringify(item));
          },
          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_mui_icons_material_MoreVert__WEBPACK_IMPORTED_MODULE_15__["default"], {})
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(_mui_material_Menu__WEBPACK_IMPORTED_MODULE_16__["default"], {
          id: "long-menu",
          MenuListProps: {
            'aria-labelledby': 'long-button'
          },
          anchorEl: menuAnchorEl,
          open: open,
          onClose: function onClose() {
            return setMenuAnchorEl(null);
          },
          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_17__["default"], {
            onClick: function onClick() {
              setUpdateItemModal(true);
              setMenuAnchorEl(null);
            },
            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_mui_icons_material_Edit__WEBPACK_IMPORTED_MODULE_18__["default"], {}), " Edit"]
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_17__["default"], {
            onClick: function onClick() {
              setItemInfoModal(true);
              setMenuAnchorEl(null);
            },
            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_mui_icons_material_Visibility__WEBPACK_IMPORTED_MODULE_19__["default"], {}), " View Details"]
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_17__["default"], {
            onClick: function onClick() {
              setDeleteDialog(true);
              setMenuAnchorEl(null);
            },
            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_mui_icons_material_Delete__WEBPACK_IMPORTED_MODULE_20__["default"], {}), " Delete"]
          })]
        })]
      }, "action-btn-".concat(rowIndex));
    }
  }];
  var filterValue = [{
    name: 'branch_name',
    operator: 'startsWith',
    type: 'string',
    value: ''
  }, {
    name: 'branch_code',
    operator: 'startsWith',
    type: 'string',
    value: ''
  }, {
    name: 'ifsc_code',
    operator: 'startsWith',
    type: 'string',
    value: ''
  }, {
    name: 'contact_person',
    operator: 'startsWith',
    type: 'string',
    value: ''
  }, {
    name: 'contact_number',
    operator: 'startsWith',
    type: 'string',
    value: ''
  }, {
    name: 'branch_address',
    operator: 'startsWith',
    type: 'string',
    value: ''
  }, {
    name: 'status_id',
    operator: 'eq',
    type: 'select',
    value: ''
  }];
  var dataSource = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(listItems, [refresh]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
    handleRefreshGrid();
  }, [refresh]);
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.Fragment, {
    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_components_CsDataTable__WEBPACK_IMPORTED_MODULE_10__["default"], {
      columns: columns,
      pagination: true,
      defaultLoading: true,
      loading: loading,
      dataSource: dataSource,
      pageNo: pageNo,
      pageSize: pageSize,
      defaultFilterValue: filterValue,
      refresh: refreshGrid,
      rowSelection: {
        showCheckbox: false,
        selectBy: {
          isSelectedKey: 'isSelected'
        }
      }
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_crema_core_AppConfirmDialog__WEBPACK_IMPORTED_MODULE_6__["default"], {
      dialogTitle: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_5__["default"], {
        id: "common.delete.confirmHeading"
      }),
      title: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_5__["default"], {
        id: "common.delete.confirmMessage"
      }),
      open: deleteDialog,
      onDeny: function onDeny() {
        setItem({});
        setDeleteDialog(false);
      },
      onConfirm: deleteItem
    }), ",", /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_crema_core_AppConfirmDialog__WEBPACK_IMPORTED_MODULE_6__["default"], {
      dialogTitle: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_5__["default"], {
        id: "common.delete.confirmHeading"
      }),
      title: "Once suspended use can no longer access system.",
      open: suspendDialog,
      onDeny: function onDeny() {
        setItem({});
        setSuspendDialog(false);
      },
      onConfirm: function onConfirm() {
        return changeUserStatus('inactive');
      }
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_crema_core_AppConfirmDialog__WEBPACK_IMPORTED_MODULE_6__["default"], {
      dialogTitle: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_5__["default"], {
        id: "common.delete.confirmHeading"
      }),
      title: "Once you activate user will be able to use system.",
      open: activateDialog,
      onDeny: function onDeny() {
        setItem({});
        setActivateDialog(false);
      },
      onConfirm: function onConfirm() {
        return changeUserStatus('active');
      }
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_UpdateItem__WEBPACK_IMPORTED_MODULE_2__["default"], {
      values: item,
      isOpen: updateItemModal,
      handleOpen: handleEditItemModal
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_12__.jsx)(_ItemDetails__WEBPACK_IMPORTED_MODULE_11__["default"], {
      values: item,
      isOpen: itemInfoModal,
      handleOpen: handleItemInfoModal
    })]
  });
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ListItems);

/***/ }),

/***/ "./resources/js/admin/pages/bankBranch/ManageItems.js":
/*!************************************************************!*\
  !*** ./resources/js/admin/pages/bankBranch/ManageItems.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _mui_material_Grid__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @mui/material/Grid */ "./node_modules/@mui/material/esm/Grid/Grid.js");
/* harmony import */ var _mui_material_ButtonGroup__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @mui/material/ButtonGroup */ "./node_modules/@mui/material/esm/ButtonGroup/ButtonGroup.js");
/* harmony import */ var _mui_material_Button__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @mui/material/Button */ "./node_modules/@mui/material/esm/Button/Button.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../@crema/utility/IntlMessages */ "./resources/js/admin/@crema/utility/IntlMessages.js");
/* harmony import */ var _crema_core_AppGridContainer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../@crema/core/AppGridContainer */ "./resources/js/admin/@crema/core/AppGridContainer/index.js");
/* harmony import */ var _crema_core_AppComponentCard__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../@crema/core/AppComponentCard */ "./resources/js/admin/@crema/core/AppComponentCard/index.js");
/* harmony import */ var _crema_core_AppComponentHeader__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../@crema/core/AppComponentHeader */ "./resources/js/admin/@crema/core/AppComponentHeader/index.js");
/* harmony import */ var _mui_icons_material_Add__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @mui/icons-material/Add */ "./node_modules/@mui/icons-material/Add.js");
/* harmony import */ var _crema_core_AppAnimate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../@crema/core/AppAnimate */ "./resources/js/admin/@crema/core/AppAnimate/index.js");
/* harmony import */ var _ListItems__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ListItems */ "./resources/js/admin/pages/bankBranch/ListItems/index.js");
/* harmony import */ var _AddItem__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./AddItem */ "./resources/js/admin/pages/bankBranch/AddItem/index.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");



function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }












var ManageItems = function ManageItems(_ref) {
  var _ref$entity_type = _ref.entity_type,
    entity_type = _ref$entity_type === void 0 ? '' : _ref$entity_type;
  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),
    _useState2 = _slicedToArray(_useState, 2),
    addItemModal = _useState2[0],
    setAddItemModal = _useState2[1];
  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0),
    _useState4 = _slicedToArray(_useState3, 2),
    refresh = _useState4[0],
    setRefresh = _useState4[1];
  var handleAddItemModal = function handleAddItemModal() {
    var reload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
    if (reload) {
      setRefresh(refresh + 1);
    }
    setAddItemModal(!addItemModal);
  };
  var action = function action() {
    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_mui_material_ButtonGroup__WEBPACK_IMPORTED_MODULE_9__["default"], {
      variant: "contained",
      "aria-label": "outlined primary button group",
      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(_mui_material_Button__WEBPACK_IMPORTED_MODULE_10__["default"], {
        onClick: function onClick() {
          return handleAddItemModal(false);
        },
        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_mui_icons_material_Add__WEBPACK_IMPORTED_MODULE_11__["default"], {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_1__["default"], {
          id: "common.createNew"
        })]
      })
    });
  };
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.Fragment, {
    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_crema_core_AppComponentHeader__WEBPACK_IMPORTED_MODULE_4__["default"], {
      title: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_1__["default"], {
        id: "common.bankBranch.manage"
      }),
      description: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_1__["default"], {
        id: "common.bankBranch.description"
      }),
      action: action()
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_crema_core_AppAnimate__WEBPACK_IMPORTED_MODULE_5__["default"], {
      animation: "transition.slideUpIn",
      delay: 200,
      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_crema_core_AppGridContainer__WEBPACK_IMPORTED_MODULE_2__["default"], {
        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_mui_material_Grid__WEBPACK_IMPORTED_MODULE_12__["default"], {
          item: true,
          xs: 12,
          md: 12,
          lg: 12,
          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_crema_core_AppComponentCard__WEBPACK_IMPORTED_MODULE_3__["default"], {
            title: "",
            component: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_ListItems__WEBPACK_IMPORTED_MODULE_6__["default"], {
              refresh: refresh
            })
          })
        })
      })
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__.jsx)(_AddItem__WEBPACK_IMPORTED_MODULE_7__["default"], {
      isOpen: addItemModal,
      handleOpen: handleAddItemModal
    })]
  });
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ManageItems);

/***/ }),

/***/ "./resources/js/admin/pages/bankBranch/UpdateItem/index.js":
/*!*****************************************************************!*\
  !*** ./resources/js/admin/pages/bankBranch/UpdateItem/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _mui_material_Grid__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @mui/material/Grid */ "./node_modules/@mui/material/esm/Grid/Grid.js");
/* harmony import */ var _mui_material_Button__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @mui/material/Button */ "./node_modules/@mui/material/esm/Button/Button.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _mui_lab__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @mui/lab */ "./node_modules/@mui/lab/LoadingButton/LoadingButton.js");
/* harmony import */ var _mui_icons_material_Close__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @mui/icons-material/Close */ "./node_modules/@mui/icons-material/Close.js");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-redux */ "./node_modules/react-redux/es/index.js");
/* harmony import */ var _mui_material_Drawer__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @mui/material/Drawer */ "./node_modules/@mui/material/esm/Drawer/Drawer.js");
/* harmony import */ var _mui_material_Box__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @mui/material/Box */ "./node_modules/@mui/material/esm/Box/Box.js");
/* harmony import */ var formik__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! formik */ "./node_modules/formik/dist/formik.esm.js");
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! yup */ "./node_modules/yup/es/index.js");
/* harmony import */ var _mui_material_Divider__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @mui/material/Divider */ "./node_modules/@mui/material/esm/Divider/Divider.js");
/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! react-intl */ "./node_modules/react-intl/lib/src/components/useIntl.js");
/* harmony import */ var _redux_actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../redux/actions */ "./resources/js/admin/redux/actions/index.js");
/* harmony import */ var _crema_core_AppGridContainer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../@crema/core/AppGridContainer */ "./resources/js/admin/@crema/core/AppGridContainer/index.js");
/* harmony import */ var _crema_core_AppComponentHeader__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../@crema/core/AppComponentHeader */ "./resources/js/admin/@crema/core/AppComponentHeader/index.js");
/* harmony import */ var _crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../@crema/utility/IntlMessages */ "./resources/js/admin/@crema/utility/IntlMessages.js");
/* harmony import */ var _crema_core_AppFormComponents_AppTextField__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../@crema/core/AppFormComponents/AppTextField */ "./resources/js/admin/@crema/core/AppFormComponents/AppTextField.js");
/* harmony import */ var _crema_core_AppFormComponents_AppAutocompleteField__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../@crema/core/AppFormComponents/AppAutocompleteField */ "./resources/js/admin/@crema/core/AppFormComponents/AppAutocompleteField.js");
/* harmony import */ var _services_BankBranchService__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../services/BankBranchService */ "./resources/js/admin/services/BankBranchService.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }


function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }




















var UpdateItem = function UpdateItem(_ref) {
  var isOpen = _ref.isOpen,
    handleOpen = _ref.handleOpen,
    values = _ref.values;
  var dispatch = (0,react_redux__WEBPACK_IMPORTED_MODULE_1__.useDispatch)();
  var _useIntl = (0,react_intl__WEBPACK_IMPORTED_MODULE_12__["default"])(),
    messages = _useIntl.messages;
  var action = function action() {
    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_mui_material_Button__WEBPACK_IMPORTED_MODULE_13__["default"], {
      onClick: function onClick() {
        return handleOpen(false);
      },
      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_mui_icons_material_Close__WEBPACK_IMPORTED_MODULE_14__["default"], {})
    });
  };
  var validationSchema = yup__WEBPACK_IMPORTED_MODULE_3__.object({
    uuid: yup__WEBPACK_IMPORTED_MODULE_3__.string().required(String(messages["validation.uuidRequired"])),
    branch_name: yup__WEBPACK_IMPORTED_MODULE_3__.string().required(String(messages["validation.branchNameRequired"])),
    branch_code: yup__WEBPACK_IMPORTED_MODULE_3__.string().required(String(messages["validation.branchCodeRequired"])),
    ifsc_code: yup__WEBPACK_IMPORTED_MODULE_3__.string().required(String(messages["validation.ifscRequired"]))
  });
  var handleFormSubmit = /*#__PURE__*/function () {
    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(data) {
      var reqData;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            dispatch((0,_redux_actions__WEBPACK_IMPORTED_MODULE_4__.fetchStart)());
            reqData = _objectSpread({}, data);
            if (typeof reqData.parent != "undefined" && (reqData.parent === '' || reqData.parent === null)) {
              delete reqData.parent;
            }
            _context.next = 5;
            return _services_BankBranchService__WEBPACK_IMPORTED_MODULE_10__["default"].updateItem(reqData.uuid, reqData).then(function (response) {
              dispatch((0,_redux_actions__WEBPACK_IMPORTED_MODULE_4__.fetchSuccess)());
              dispatch((0,_redux_actions__WEBPACK_IMPORTED_MODULE_4__.showMessage)(response.message));
              handleOpen(true);
            })["catch"](function (error) {
              dispatch((0,_redux_actions__WEBPACK_IMPORTED_MODULE_4__.fetchError)(error));
            });
          case 5:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function handleFormSubmit(_x) {
      return _ref2.apply(this, arguments);
    };
  }();
  // useEffect(() => {}, [ isOpen]);
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.Fragment, {
    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsxs)(_mui_material_Drawer__WEBPACK_IMPORTED_MODULE_15__["default"], {
      open: isOpen,
      onClose: function onClose() {
        handleOpen(true);
      },
      anchor: "right",
      PaperProps: {
        sx: {
          minWidth: "30%",
          maxWidth: '50%'
        }
      },
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_16__["default"]
      // role='presentation'
      , {
        sx: {
          padding: 5,
          paddingBottom: 0
        },
        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_crema_core_AppComponentHeader__WEBPACK_IMPORTED_MODULE_6__["default"], {
          title: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_7__["default"], {
            id: "common.bankBranch.update"
          }),
          action: action()
        })
      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_mui_material_Divider__WEBPACK_IMPORTED_MODULE_17__["default"], {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_16__["default"], {
        role: "presentation",
        sx: {
          padding: 5
        },
        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(formik__WEBPACK_IMPORTED_MODULE_2__.Formik, {
          validateOnChange: true,
          initialValues: {
            uuid: values.uuid,
            branch_name: values.branch_name,
            branch_code: values.branch_code,
            ifsc_code: values.ifsc_code,
            contact_person: values.contact_person,
            contact_number: values.contact_number,
            branch_address: values.branch_address,
            bank_uuid: values.bank_uuid,
            state_id: values.state_id,
            city_id: values.city_id,
            country_id: values.country_id,
            zip: values.zip
          },
          validationSchema: validationSchema,
          onSubmit: /*#__PURE__*/function () {
            var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(data, _ref3) {
              var setSubmitting;
              return _regeneratorRuntime().wrap(function _callee2$(_context2) {
                while (1) switch (_context2.prev = _context2.next) {
                  case 0:
                    setSubmitting = _ref3.setSubmitting;
                    setSubmitting(true);
                    _context2.next = 4;
                    return handleFormSubmit(data);
                  case 4:
                    setSubmitting(false);
                  case 5:
                  case "end":
                    return _context2.stop();
                }
              }, _callee2);
            }));
            return function (_x2, _x3) {
              return _ref4.apply(this, arguments);
            };
          }(),
          children: function children(_ref5) {
            var isSubmitting = _ref5.isSubmitting,
              resetForm = _ref5.resetForm,
              setFieldValue = _ref5.setFieldValue;
            return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(formik__WEBPACK_IMPORTED_MODULE_2__.Form, {
              style: {
                textAlign: "left"
              },
              noValidate: true,
              autoComplete: "off",
              children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsxs)(_crema_core_AppGridContainer__WEBPACK_IMPORTED_MODULE_5__["default"], {
                spacing: 4,
                children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_mui_material_Grid__WEBPACK_IMPORTED_MODULE_18__["default"], {
                  item: true,
                  xs: 12,
                  md: 12,
                  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_crema_core_AppFormComponents_AppTextField__WEBPACK_IMPORTED_MODULE_8__["default"], {
                    name: "branch_name",
                    placeholder: messages["common.bankBranchName"],
                    label: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_7__["default"], {
                      id: "common.bankBranchName"
                    }),
                    variant: "outlined",
                    sx: {
                      width: "100%"
                    }
                  })
                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_mui_material_Grid__WEBPACK_IMPORTED_MODULE_18__["default"], {
                  item: true,
                  xs: 12,
                  md: 12,
                  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_crema_core_AppFormComponents_AppTextField__WEBPACK_IMPORTED_MODULE_8__["default"], {
                    name: "branch_code",
                    placeholder: messages["common.branchCode"],
                    label: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_7__["default"], {
                      id: "common.branchCode"
                    }),
                    variant: "outlined",
                    sx: {
                      width: "100%"
                    }
                  })
                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_mui_material_Grid__WEBPACK_IMPORTED_MODULE_18__["default"], {
                  item: true,
                  xs: 12,
                  md: 12,
                  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_crema_core_AppFormComponents_AppTextField__WEBPACK_IMPORTED_MODULE_8__["default"], {
                    name: "ifsc_code",
                    placeholder: messages["common.ifscCode"],
                    label: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_7__["default"], {
                      id: "common.ifscCode"
                    }),
                    variant: "outlined",
                    sx: {
                      width: "100%"
                    }
                  })
                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_mui_material_Grid__WEBPACK_IMPORTED_MODULE_18__["default"], {
                  item: true,
                  xs: 12,
                  md: 12,
                  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_crema_core_AppFormComponents_AppTextField__WEBPACK_IMPORTED_MODULE_8__["default"], {
                    name: "contact_person",
                    placeholder: messages["common.contactPerson"],
                    label: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_7__["default"], {
                      id: "common.contactPerson"
                    }),
                    variant: "outlined",
                    sx: {
                      width: "100%"
                    }
                  })
                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_mui_material_Grid__WEBPACK_IMPORTED_MODULE_18__["default"], {
                  item: true,
                  xs: 12,
                  md: 12,
                  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_crema_core_AppFormComponents_AppTextField__WEBPACK_IMPORTED_MODULE_8__["default"], {
                    name: "contact_number",
                    placeholder: messages["common.contactNumber"],
                    label: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_7__["default"], {
                      id: "common.contactNumber"
                    }),
                    variant: "outlined",
                    sx: {
                      width: "100%"
                    }
                  })
                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_mui_material_Grid__WEBPACK_IMPORTED_MODULE_18__["default"], {
                  item: true,
                  xs: 12,
                  md: 12,
                  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_crema_core_AppFormComponents_AppTextField__WEBPACK_IMPORTED_MODULE_8__["default"], {
                    name: "branch_address",
                    placeholder: messages["common.branchAddress"],
                    label: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_7__["default"], {
                      id: "common.branchAddress"
                    }),
                    variant: "outlined",
                    sx: {
                      width: "100%"
                    }
                  })
                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_mui_material_Grid__WEBPACK_IMPORTED_MODULE_18__["default"], {
                  item: true,
                  xs: 12,
                  md: 12,
                  children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_16__["default"], {
                    sx: {
                      display: "flex",
                      alignItems: "center"
                    },
                    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_mui_lab__WEBPACK_IMPORTED_MODULE_19__["default"], {
                      variant: "contained",
                      color: "primary",
                      type: "submit",
                      loading: isSubmitting,
                      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_7__["default"], {
                        id: "common.save"
                      })
                    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_mui_material_Button__WEBPACK_IMPORTED_MODULE_13__["default"], {
                      variant: "contained",
                      color: "warning",
                      type: "reset",
                      disabled: isSubmitting,
                      sx: {
                        marginLeft: 2
                      },
                      onClick: function onClick(e) {
                        resetForm();
                        handleOpen(false);
                      },
                      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_crema_utility_IntlMessages__WEBPACK_IMPORTED_MODULE_7__["default"], {
                        id: "common.cancel"
                      })
                    })]
                  })
                })]
              })
            });
          }
        })
      })]
    })
  });
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (UpdateItem);

/***/ }),

/***/ "./resources/js/admin/services/BankBranchService.js":
/*!**********************************************************!*\
  !*** ./resources/js/admin/services/BankBranchService.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createItem: () => (/* binding */ createItem),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   deleteItem: () => (/* binding */ deleteItem),
/* harmony export */   findItem: () => (/* binding */ findItem),
/* harmony export */   listItem: () => (/* binding */ listItem),
/* harmony export */   updateItem: () => (/* binding */ updateItem)
/* harmony export */ });
/* harmony import */ var _crema_services_auth_jwt_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../@crema/services/auth/jwt-auth */ "./resources/js/admin/@crema/services/auth/jwt-auth/index.js");
/* harmony import */ var _ResponseService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ResponseService */ "./resources/js/admin/services/ResponseService.js");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


var createItem = /*#__PURE__*/function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(reqData) {
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          return _context.abrupt("return", _crema_services_auth_jwt_auth__WEBPACK_IMPORTED_MODULE_0__["default"].post('/admin/bank-branch', reqData).then(_ResponseService__WEBPACK_IMPORTED_MODULE_1__["default"].handleSuccessResponse)["catch"](_ResponseService__WEBPACK_IMPORTED_MODULE_1__["default"].handleErrorResponse));
        case 1:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function createItem(_x) {
    return _ref.apply(this, arguments);
  };
}();
var updateItem = /*#__PURE__*/function () {
  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(uuid, reqData) {
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          return _context2.abrupt("return", _crema_services_auth_jwt_auth__WEBPACK_IMPORTED_MODULE_0__["default"].patch("/admin/bank-branch/".concat(uuid), reqData).then(_ResponseService__WEBPACK_IMPORTED_MODULE_1__["default"].handleSuccessResponse)["catch"](_ResponseService__WEBPACK_IMPORTED_MODULE_1__["default"].handleErrorResponse));
        case 1:
        case "end":
          return _context2.stop();
      }
    }, _callee2);
  }));
  return function updateItem(_x2, _x3) {
    return _ref2.apply(this, arguments);
  };
}();
var deleteItem = /*#__PURE__*/function () {
  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(uuid) {
    return _regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          return _context3.abrupt("return", _crema_services_auth_jwt_auth__WEBPACK_IMPORTED_MODULE_0__["default"]["delete"]("/admin/bank-branch/".concat(uuid)).then(_ResponseService__WEBPACK_IMPORTED_MODULE_1__["default"].handleSuccessResponse)["catch"](_ResponseService__WEBPACK_IMPORTED_MODULE_1__["default"].handleErrorResponse));
        case 1:
        case "end":
          return _context3.stop();
      }
    }, _callee3);
  }));
  return function deleteItem(_x4) {
    return _ref3.apply(this, arguments);
  };
}();
var findItem = /*#__PURE__*/function () {
  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(uuid) {
    return _regeneratorRuntime().wrap(function _callee4$(_context4) {
      while (1) switch (_context4.prev = _context4.next) {
        case 0:
          return _context4.abrupt("return", _crema_services_auth_jwt_auth__WEBPACK_IMPORTED_MODULE_0__["default"].get("/admin/bank-branch/".concat(uuid)).then(_ResponseService__WEBPACK_IMPORTED_MODULE_1__["default"].handleSuccessResponse)["catch"](_ResponseService__WEBPACK_IMPORTED_MODULE_1__["default"].handleErrorResponse));
        case 1:
        case "end":
          return _context4.stop();
      }
    }, _callee4);
  }));
  return function findItem(_x5) {
    return _ref4.apply(this, arguments);
  };
}();
var listItem = /*#__PURE__*/function () {
  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {
    var reqData,
      _args5 = arguments;
    return _regeneratorRuntime().wrap(function _callee5$(_context5) {
      while (1) switch (_context5.prev = _context5.next) {
        case 0:
          reqData = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : {};
          return _context5.abrupt("return", _crema_services_auth_jwt_auth__WEBPACK_IMPORTED_MODULE_0__["default"].get("/admin/bank-branch", {
            params: reqData
          }).then(_ResponseService__WEBPACK_IMPORTED_MODULE_1__["default"].handleSuccessResponse)["catch"](_ResponseService__WEBPACK_IMPORTED_MODULE_1__["default"].handleErrorResponse));
        case 2:
        case "end":
          return _context5.stop();
      }
    }, _callee5);
  }));
  return function listItem() {
    return _ref5.apply(this, arguments);
  };
}();
var BankService = {
  createItem: createItem,
  updateItem: updateItem,
  deleteItem: deleteItem,
  findItem: findItem,
  listItem: listItem
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BankService);

/***/ }),

/***/ "./resources/js/admin/services/BankService.js":
/*!****************************************************!*\
  !*** ./resources/js/admin/services/BankService.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createItem: () => (/* binding */ createItem),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   deleteItem: () => (/* binding */ deleteItem),
/* harmony export */   findItem: () => (/* binding */ findItem),
/* harmony export */   listItem: () => (/* binding */ listItem),
/* harmony export */   updateItem: () => (/* binding */ updateItem)
/* harmony export */ });
/* harmony import */ var _crema_services_auth_jwt_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../@crema/services/auth/jwt-auth */ "./resources/js/admin/@crema/services/auth/jwt-auth/index.js");
/* harmony import */ var _ResponseService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ResponseService */ "./resources/js/admin/services/ResponseService.js");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


var createItem = /*#__PURE__*/function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(reqData) {
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          return _context.abrupt("return", _crema_services_auth_jwt_auth__WEBPACK_IMPORTED_MODULE_0__["default"].post('/admin/bank', reqData).then(_ResponseService__WEBPACK_IMPORTED_MODULE_1__["default"].handleSuccessResponse)["catch"](_ResponseService__WEBPACK_IMPORTED_MODULE_1__["default"].handleErrorResponse));
        case 1:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function createItem(_x) {
    return _ref.apply(this, arguments);
  };
}();
var updateItem = /*#__PURE__*/function () {
  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(uuid, reqData) {
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          return _context2.abrupt("return", _crema_services_auth_jwt_auth__WEBPACK_IMPORTED_MODULE_0__["default"].patch("/admin/bank/".concat(uuid), reqData).then(_ResponseService__WEBPACK_IMPORTED_MODULE_1__["default"].handleSuccessResponse)["catch"](_ResponseService__WEBPACK_IMPORTED_MODULE_1__["default"].handleErrorResponse));
        case 1:
        case "end":
          return _context2.stop();
      }
    }, _callee2);
  }));
  return function updateItem(_x2, _x3) {
    return _ref2.apply(this, arguments);
  };
}();
var deleteItem = /*#__PURE__*/function () {
  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(uuid) {
    return _regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          return _context3.abrupt("return", _crema_services_auth_jwt_auth__WEBPACK_IMPORTED_MODULE_0__["default"]["delete"]("/admin/bank/".concat(uuid)).then(_ResponseService__WEBPACK_IMPORTED_MODULE_1__["default"].handleSuccessResponse)["catch"](_ResponseService__WEBPACK_IMPORTED_MODULE_1__["default"].handleErrorResponse));
        case 1:
        case "end":
          return _context3.stop();
      }
    }, _callee3);
  }));
  return function deleteItem(_x4) {
    return _ref3.apply(this, arguments);
  };
}();
var findItem = /*#__PURE__*/function () {
  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(uuid) {
    return _regeneratorRuntime().wrap(function _callee4$(_context4) {
      while (1) switch (_context4.prev = _context4.next) {
        case 0:
          return _context4.abrupt("return", _crema_services_auth_jwt_auth__WEBPACK_IMPORTED_MODULE_0__["default"].get("/admin/bank/".concat(uuid)).then(_ResponseService__WEBPACK_IMPORTED_MODULE_1__["default"].handleSuccessResponse)["catch"](_ResponseService__WEBPACK_IMPORTED_MODULE_1__["default"].handleErrorResponse));
        case 1:
        case "end":
          return _context4.stop();
      }
    }, _callee4);
  }));
  return function findItem(_x5) {
    return _ref4.apply(this, arguments);
  };
}();
var listItem = /*#__PURE__*/function () {
  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {
    var reqData,
      _args5 = arguments;
    return _regeneratorRuntime().wrap(function _callee5$(_context5) {
      while (1) switch (_context5.prev = _context5.next) {
        case 0:
          reqData = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : {};
          return _context5.abrupt("return", _crema_services_auth_jwt_auth__WEBPACK_IMPORTED_MODULE_0__["default"].get("/admin/bank", {
            params: reqData
          }).then(_ResponseService__WEBPACK_IMPORTED_MODULE_1__["default"].handleSuccessResponse)["catch"](_ResponseService__WEBPACK_IMPORTED_MODULE_1__["default"].handleErrorResponse));
        case 2:
        case "end":
          return _context5.stop();
      }
    }, _callee5);
  }));
  return function listItem() {
    return _ref5.apply(this, arguments);
  };
}();
var BankService = {
  createItem: createItem,
  updateItem: updateItem,
  deleteItem: deleteItem,
  findItem: findItem,
  listItem: listItem
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BankService);

/***/ }),

/***/ "./resources/js/admin/services/CategoryService.js":
/*!********************************************************!*\
  !*** ./resources/js/admin/services/CategoryService.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createItem: () => (/* binding */ createItem),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   deleteItem: () => (/* binding */ deleteItem),
/* harmony export */   findItem: () => (/* binding */ findItem),
/* harmony export */   listItem: () => (/* binding */ listItem),
/* harmony export */   updateItem: () => (/* binding */ updateItem)
/* harmony export */ });
/* harmony import */ var _crema_services_auth_jwt_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../@crema/services/auth/jwt-auth */ "./resources/js/admin/@crema/services/auth/jwt-auth/index.js");
/* harmony import */ var _ResponseService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ResponseService */ "./resources/js/admin/services/ResponseService.js");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


var createItem = /*#__PURE__*/function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(reqData) {
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          return _context.abrupt("return", _crema_services_auth_jwt_auth__WEBPACK_IMPORTED_MODULE_0__["default"].post('/admin/category', reqData).then(_ResponseService__WEBPACK_IMPORTED_MODULE_1__["default"].handleSuccessResponse)["catch"](_ResponseService__WEBPACK_IMPORTED_MODULE_1__["default"].handleErrorResponse));
        case 1:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function createItem(_x) {
    return _ref.apply(this, arguments);
  };
}();
var updateItem = /*#__PURE__*/function () {
  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(uuid, reqData) {
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          return _context2.abrupt("return", _crema_services_auth_jwt_auth__WEBPACK_IMPORTED_MODULE_0__["default"].patch("/admin/category/".concat(uuid), reqData).then(_ResponseService__WEBPACK_IMPORTED_MODULE_1__["default"].handleSuccessResponse)["catch"](_ResponseService__WEBPACK_IMPORTED_MODULE_1__["default"].handleErrorResponse));
        case 1:
        case "end":
          return _context2.stop();
      }
    }, _callee2);
  }));
  return function updateItem(_x2, _x3) {
    return _ref2.apply(this, arguments);
  };
}();
var deleteItem = /*#__PURE__*/function () {
  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(uuid) {
    return _regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          return _context3.abrupt("return", _crema_services_auth_jwt_auth__WEBPACK_IMPORTED_MODULE_0__["default"]["delete"]("/admin/category/".concat(uuid)).then(_ResponseService__WEBPACK_IMPORTED_MODULE_1__["default"].handleSuccessResponse)["catch"](_ResponseService__WEBPACK_IMPORTED_MODULE_1__["default"].handleErrorResponse));
        case 1:
        case "end":
          return _context3.stop();
      }
    }, _callee3);
  }));
  return function deleteItem(_x4) {
    return _ref3.apply(this, arguments);
  };
}();
var findItem = /*#__PURE__*/function () {
  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(uuid) {
    return _regeneratorRuntime().wrap(function _callee4$(_context4) {
      while (1) switch (_context4.prev = _context4.next) {
        case 0:
          return _context4.abrupt("return", _crema_services_auth_jwt_auth__WEBPACK_IMPORTED_MODULE_0__["default"].get("/admin/category/".concat(uuid)).then(_ResponseService__WEBPACK_IMPORTED_MODULE_1__["default"].handleSuccessResponse)["catch"](_ResponseService__WEBPACK_IMPORTED_MODULE_1__["default"].handleErrorResponse));
        case 1:
        case "end":
          return _context4.stop();
      }
    }, _callee4);
  }));
  return function findItem(_x5) {
    return _ref4.apply(this, arguments);
  };
}();
var listItem = /*#__PURE__*/function () {
  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {
    var reqData,
      _args5 = arguments;
    return _regeneratorRuntime().wrap(function _callee5$(_context5) {
      while (1) switch (_context5.prev = _context5.next) {
        case 0:
          reqData = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : {};
          return _context5.abrupt("return", _crema_services_auth_jwt_auth__WEBPACK_IMPORTED_MODULE_0__["default"].get("/admin/category", {
            params: reqData
          }).then(_ResponseService__WEBPACK_IMPORTED_MODULE_1__["default"].handleSuccessResponse)["catch"](_ResponseService__WEBPACK_IMPORTED_MODULE_1__["default"].handleErrorResponse));
        case 2:
        case "end":
          return _context5.stop();
      }
    }, _callee5);
  }));
  return function listItem() {
    return _ref5.apply(this, arguments);
  };
}();
var CategoryService = {
  createItem: createItem,
  updateItem: updateItem,
  deleteItem: deleteItem,
  findItem: findItem,
  listItem: listItem
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CategoryService);

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].oneOf[1].use[1]!./node_modules/laravel-mix/node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[5].oneOf[1].use[2]!./node_modules/@inovua/reactdatagrid-community/index.css":
/*!***************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].oneOf[1].use[1]!./node_modules/laravel-mix/node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[5].oneOf[1].use[2]!./node_modules/@inovua/reactdatagrid-community/index.css ***!
  \***************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, "/** \n * Copyright © INOVUA TRADING.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n.inovua-react-toolkit-checkbox{-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;display:flex;align-items:center;outline:none;vertical-align:middle}.inovua-react-toolkit-checkbox--inline-block{display:inline-flex}.inovua-react-toolkit-checkbox__icon-wrapper{display:flex}.inovua-react-toolkit-checkbox__icon-wrapper svg{display:block}.inovua-react-toolkit-checkbox--children-position-start{flex-flow:row-reverse}.inovua-react-toolkit-checkbox--rtl{direction:rtl}.inovua-react-toolkit-checkbox--read-only{cursor:auto}.inovua-react-toolkit-checkbox--disabled{cursor:auto;outline:none;pointer-events:none}.inovua-react-toolkit-checkbox--browser-native{padding:0;margin:0;display:inline-block}.inovua-react-toolkit-overlay{position:absolute;visibility:hidden;opacity:0;pointer-events:none}.inovua-react-toolkit-overlay,.inovua-react-toolkit-overlay *{box-sizing:border-box}.inovua-react-toolkit-overlay--position-fixed{position:fixed}.inovua-react-toolkit-overlay--visible{visibility:visible;pointer-events:inherit;opacity:1}.inovua-react-toolkit-overlay--has-transition.inovua-react-toolkit-overlay--transition-enter{opacity:0;visibility:visible}.inovua-react-toolkit-overlay--has-transition.inovua-react-toolkit-overlay--transition-enter-active{transition:opacity 1s ease;opacity:1}.inovua-react-toolkit-overlay--has-transition.inovua-react-toolkit-overlay--transition-leave{visibility:visible;opacity:1}.inovua-react-toolkit-overlay--has-transition.inovua-react-toolkit-overlay--transition-leave-active{transition:opacity 1s ease;opacity:0}.inovua-react-toolkit-overlay__content{position:relative;z-index:1}.inovua-react-toolkit-overlay__arrow-wrapper{position:absolute;overflow:hidden}.inovua-react-toolkit-overlay__arrow-wrapper--bottom,.inovua-react-toolkit-overlay__arrow-wrapper--top{transform:translateX(-50%)}.inovua-react-toolkit-overlay__arrow-wrapper--left,.inovua-react-toolkit-overlay__arrow-wrapper--right{transform:translateY(-50%)}.inovua-react-toolkit-overlay__arrow{position:absolute;transform-origin:center}.inovua-react-toolkit-overlay__arrow--top{left:50%;top:0}.inovua-react-toolkit-overlay__arrow--left,.inovua-react-toolkit-overlay__arrow--top{transform:translateX(-50%) translateY(-50%) rotate(45deg)}.inovua-react-toolkit-overlay__arrow--left{top:50%;left:0}.inovua-react-toolkit-overlay__arrow--right{right:0;top:50%;transform:translateX(50%) translateY(-50%) rotate(45deg)}.inovua-react-toolkit-overlay__arrow--bottom{left:50%;bottom:0;transform:translateX(-50%) translateY(50%) rotate(45deg)}.inovua-react-toolkit-date-input{box-sizing:border-box;position:relative;overflow:visible;vertical-align:middle}.inovua-react-toolkit-date-input *,.inovua-react-toolkit-date-input :after,.inovua-react-toolkit-date-input :before{box-sizing:border-box}.inovua-react-toolkit-date-input>.inovua-react-toolkit-date-input__picker{min-width:100%;position:absolute;z-index:100;left:-1px;background:#fff}.inovua-react-toolkit-date-input--picker-position-bottom>.inovua-react-toolkit-date-input__picker{top:100%}.inovua-react-toolkit-date-input--picker-position-top>.inovua-react-toolkit-date-input__picker{bottom:100%}.inovua-react-toolkit-date-input__input{width:100%;flex:1 1 auto;padding:5px;border:none;outline:none}.inovua-react-toolkit-date-input__clear-icon{color:grey;fill:grey;cursor:pointer;display:flex;align-items:center}.inovua-react-toolkit-date-input__clear-icon svg{vertical-align:middle}.inovua-react-toolkit-date-input__clear-icon:hover{color:#4d4d4d;fill:#4d4d4d}.inovua-react-toolkit-calendar__clock{box-sizing:border-box;display:inline-block;border-radius:50%;position:relative}.inovua-react-toolkit-calendar__clock *,.inovua-react-toolkit-calendar__clock :after,.inovua-react-toolkit-calendar__clock :before{box-sizing:border-box}.inovua-react-toolkit-calendar__clock-center,.inovua-react-toolkit-calendar__clock-overlay{border-radius:50%;position:absolute;transform:translate3d(-50%,-50%,0);top:50%;left:50%}.inovua-react-toolkit-calendar__clock-hand,.inovua-react-toolkit-calendar__clock-tick{position:absolute;left:50%;top:50%;width:1px}.inovua-react-toolkit-calendar__date-format-spinner,.inovua-react-toolkit-calendar__date-format-spinner *,.inovua-react-toolkit-calendar__date-format-spinner :after,.inovua-react-toolkit-calendar__date-format-spinner :before,.inovua-react-toolkit-calendar__time-picker,.inovua-react-toolkit-calendar__time-picker *,.inovua-react-toolkit-calendar__time-picker :after,.inovua-react-toolkit-calendar__time-picker :before{box-sizing:border-box}.inovua-react-toolkit-calendar__time-picker-input{margin-top:10px}.inovua-react-toolkit-calendar__year-view{box-sizing:border-box;outline:none}.inovua-react-toolkit-calendar__year-view *,.inovua-react-toolkit-calendar__year-view :after,.inovua-react-toolkit-calendar__year-view :before{box-sizing:border-box}.inovua-react-toolkit-calendar__year-view-month{text-align:center}.inovua-react-toolkit-calendar__decade-view{box-sizing:border-box;outline:none}.inovua-react-toolkit-calendar__decade-view *,.inovua-react-toolkit-calendar__decade-view :after,.inovua-react-toolkit-calendar__decade-view :before{box-sizing:border-box}.inovua-react-toolkit-calendar__decade-view-year{text-align:center}.inovua-react-toolkit-calendar__month-decade-view{box-sizing:border-box;outline:none}.inovua-react-toolkit-calendar__month-decade-view *,.inovua-react-toolkit-calendar__month-decade-view :after,.inovua-react-toolkit-calendar__month-decade-view :before{box-sizing:border-box}.inovua-react-toolkit-calendar__month-decade-view__separator{border:none}.inovua-react-toolkit-calendar__nav-bar{box-sizing:border-box;outline:none}.inovua-react-toolkit-calendar__nav-bar *,.inovua-react-toolkit-calendar__nav-bar :after,.inovua-react-toolkit-calendar__nav-bar :before{box-sizing:border-box}.inovua-react-toolkit-calendar__nav-bar-date{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.inovua-react-toolkit-calendar__nav-bar svg{vertical-align:middle}.inovua-react-toolkit-calendar__nav-bar-month-decade-view-modal{position:absolute;top:0;bottom:0;left:0;right:0;z-index:100}.inovua-react-toolkit-calendar__nav-bar-month-decade-view{z-index:100;position:absolute;margin:auto;left:0;top:0;width:100%;height:100%}.inovua-react-toolkit-calendar__nav-bar-month-decade-view-calendar,.inovua-react-toolkit-calendar__nav-bar-month-decade-view-month{left:0}.inovua-react-toolkit-calendar__nav-bar-month-decade-view-show-animation{visibility:visible;animation:inovua-react-toolkit-calendar-month-decade-view-animation-fade-in .3s}@keyframes inovua-react-toolkit-calendar-month-decade-view-animation-fade-in{0%{opacity:0}to{opacity:1}}.inovua-react-toolkit-calendar__nav-bar-arrow{-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;position:relative}.inovua-react-toolkit-calendar__nav-bar-arrow--disabled{fill:#bfbfbf;cursor:default}.inovua-react-toolkit-date-input__overlay{border:0;visibility:visible;animation:inovua-react-toolkit-date-input-animation-fade-in .2s}.inovua-react-toolkit-calendar,.inovua-react-toolkit-calendar *,.inovua-react-toolkit-calendar :after,.inovua-react-toolkit-calendar :before,.inovua-react-toolkit-calendar__basic-month-view,.inovua-react-toolkit-calendar__basic-month-view *,.inovua-react-toolkit-calendar__basic-month-view :after,.inovua-react-toolkit-calendar__basic-month-view :before,.inovua-react-toolkit-calendar__calendar,.inovua-react-toolkit-calendar__calendar *,.inovua-react-toolkit-calendar__calendar :after,.inovua-react-toolkit-calendar__calendar :before,.inovua-react-toolkit-calendar__month-view,.inovua-react-toolkit-calendar__month-view *,.inovua-react-toolkit-calendar__month-view :after,.inovua-react-toolkit-calendar__month-view :before{box-sizing:border-box}.inovua-react-toolkit-calendar__month-view-week-number{flex:none}.inovua-react-toolkit-calendar__transition-month-view{position:relative}.inovua-react-toolkit-calendar__prev{transform:translate3d(-100%,0,0)}.inovua-react-toolkit-calendar__next{transform:translate3d(100%,0,0)}.inovua-react-toolkit-calendar--transition-left{transform:translate3d(-100%,0,0)}.inovua-react-toolkit-calendar--transition-left.inovua-react-toolkit-calendar__next{transform:translateZ(0)}.inovua-react-toolkit-calendar--transition-right{z-index:1111;transform:translate3d(100%,0,0)}.inovua-react-toolkit-calendar--transition-right.inovua-react-toolkit-calendar__prev{transform:translateZ(0)}.inovua-react-toolkit-calendar__center{z-index:10}.inovua-react-toolkit-calendar__center.inovua-react-toolkit-calendar--transition,.inovua-react-toolkit-calendar__next.inovua-react-toolkit-calendar--transition,.inovua-react-toolkit-calendar__prev.inovua-react-toolkit-calendar--transition{transition-property:transform}.inovua-react-toolkit-calendar__next,.inovua-react-toolkit-calendar__prev{top:0;left:0;height:100%;width:100%;position:absolute!important}.inovua-react-toolkit-calendar__basic-month-view,.inovua-react-toolkit-calendar__month-view{outline:none}.inovua-react-toolkit-calendar__basic-month-view-week-day-name,.inovua-react-toolkit-calendar__month-view-week-day-name{padding:5px 0}.inovua-react-toolkit-calendar__basic-month-view-day--hidden,.inovua-react-toolkit-calendar__month-view-day--hidden{visibility:hidden}.inovua-react-toolkit-calendar__basic-month-view-day--disabled,.inovua-react-toolkit-calendar__month-view-day--disabled{color:#bfbfbf}.inovua-react-toolkit-calendar__basic-month-view-cell,.inovua-react-toolkit-calendar__month-view-cell{flex:1 0 auto;display:flex;flex-flow:row;align-items:center;justify-content:center}.inovua-react-toolkit-calendar__basic-month-view-week-day-names,.inovua-react-toolkit-calendar__month-view-week-day-names{flex:none}.inovua-react-toolkit-calendar__basic-month-view-row,.inovua-react-toolkit-calendar__month-view-row{display:flex;flex-flow:row;flex-grow:1;flex-shrink:0;flex-basis:auto}.inovua-react-toolkit-text-input{box-sizing:border-box;text-align:start;direction:ltr;display:inline-flex;border:1px solid #c5c5c5;overflow:hidden;background:#fff;align-items:center}.inovua-react-toolkit-text-input *,.inovua-react-toolkit-text-input :after,.inovua-react-toolkit-text-input :before{box-sizing:border-box}.inovua-react-toolkit-text-input:focus{outline:none}.inovua-react-toolkit-text-input--rtl{direction:rtl}.inovua-react-toolkit-text-input--rtl .inovua-react-toolkit-text-input__input{padding:0 8px 0 5px}.inovua-react-toolkit-text-input--rtl .inovua-react-toolkit-text-input__clear-button{margin:0 0 0 6px}.inovua-react-toolkit-text-input__input{border:none;outline:none;background:none;width:100%;height:100%;padding:0 5px 0 8px}.inovua-react-toolkit-text-input__input::-ms-clear{display:none}.inovua-react-toolkit-text-input__clear-button{cursor:pointer;flex:1;display:flex;align-items:center;justify-content:center;background:none;border:none;padding:0;outline:none;top:0;right:1px;bottom:0;margin:0 6px 0 0}.inovua-react-toolkit-text-input__clear-button svg{width:20px;height:20px}.inovua-react-toolkit-text-input__clear-button-wrapper{visibility:visible;transition:opacity .2s;opacity:1;transform:translateZ(0)}.inovua-react-toolkit-text-input__clear-button-wrapper:active{margin-top:2px}.inovua-react-toolkit-text-input__clear-button-wrapper--hidden{opacity:0;visibility:hidden}.InovuaReactDataGrid{text-align:start;outline:none;z-index:0}.InovuaReactDataGrid,.InovuaReactDataGrid *,.InovuaReactDataGrid :after,.InovuaReactDataGrid :before{box-sizing:border-box}.InovuaReactDataGrid .inovua-react-pagination-toolbar{position:absolute;bottom:0;left:0;right:0}.InovuaReactDataGrid .InovuaReactDataGrid-modifier--relative{position:relative}.InovuaReactDataGrid .inovua-react-virtual-list{position:absolute;height:100%;box-sizing:initial}.InovuaReactDataGrid{flex:1;position:relative;min-height:200px}.InovuaReactDataGrid div:focus{outline:0}.InovuaReactDataGrid--rtl{direction:rtl}.InovuaReactDataGrid__body,.InovuaReactDataGrid__body-scroll-wrapper{position:absolute;width:100%;height:100%;top:0;left:0}.InovuaReactDataGrid__body{overflow:hidden;transform:translateZ(0)}.InovuaReactDataGrid__row-active-borders{pointer-events:none;z-index:1}.InovuaReactDataGrid__virtual-list--scrolling .InovuaReactDataGrid__row{pointer-events:none;contain:strict}.InovuaReactDataGrid__column-layout{position:relative;min-width:100%;max-height:100%}.InovuaReactDataGrid__column-layout--fixed{overflow:hidden}.InovuaReactDataGrid__column-reorder-arrow{position:absolute;z-index:1000;fill:#000;display:block}.InovuaReactDataGrid__column-reorder-arrow-fill{height:100%;flex:1}.InovuaReactDataGrid__header-wrapper{display:flex;flex-flow:row;align-items:stretch;flex-wrap:nowrap}.InovuaReactDataGrid__header-wrapper--direction-ltr{direction:ltr}.InovuaReactDataGrid__header-wrapper--direction-rtl{direction:rtl}.InovuaReactDataGrid__header-wrapper__fill{flex:1;position:relative;visibility:hidden}.InovuaReactDataGrid--columns-ready .InovuaReactDataGrid__header-wrapper__fill{visibility:visible}.InovuaReactDataGrid__header-wrapper__fill__filters{position:absolute;bottom:0;left:0;right:0}.InovuaReactDataGrid__header{position:relative;z-index:1;display:flex;flex-flow:row nowrap;box-sizing:initial}.InovuaReactDataGrid__header--placeholder{position:absolute}.InovuaReactDataGrid__header-layout{position:relative}.InovuaReactDataGrid__header-layout__sticky-header{position:sticky;top:0;z-index:1}.InovuaReactDataGrid--sticky-header .InovuaReactDataGrid__body{overflow:visible;contain:paint}.InovuaReactDataGrid__header{flex:none}.InovuaReactDataGrid__column-layout__body__inner-wrapper{position:relative}.InovuaReactDataGrid__row{position:relative;overflow:visible;z-index:unset}.InovuaReactDataGrid__row--disabled{opacity:.5;pointer-events:none}.InovuaReactDataGrid__row:not(.InovuaReactDataGrid__row--virtualize-columns),.InovuaReactDataGrid__row:not(.InovuaReactDataGrid__row--virtualize-columns)>.InovuaReactDataGrid__row-cell-wrap{display:flex;flex-flow:row;flex-wrap:nowrap;align-items:stretch}.InovuaReactDataGrid__row--direction-rtl>.InovuaReactDataGrid__row-cell-wrap.InovuaReactDataGrid__row-cell-wrap{flex-flow:row-reverse}.InovuaReactDataGrid__row--has-rowspan{z-index:1}.InovuaReactDataGrid__row-resize-handle{position:absolute;bottom:0;left:0;right:0;height:4px;cursor:ns-resize}.InovuaReactDataGrid__row-resize-handle.InovuaReactDataGrid__row-resize-handle--mobile{height:10px}.InovuaReactDataGrid__cover{position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none}.InovuaReactDataGrid__cover--active{pointer-events:all;z-index:10000}.InovuaReactDataGrid__row-resize-indicator{position:absolute;top:0;border-bottom:2px solid transparent;cursor:ns-resize;left:0;right:0;z-index:10000;pointer-events:none}.InovuaReactDataGrid__row-resize-indicator--active{pointer-events:all}.InovuaReactDataGrid__row-resize-indicator--mobile{border-bottom:2px solid transparent}.InovuaReactDataGrid__row-cell-wrap{background:inherit}.InovuaReactDataGrid__row--editing{z-index:100}.InovuaReactDataGrid__row__placeholder{position:absolute;left:10px;top:50%;transform:translateY(-50%);width:350px;height:20px;background:#eaecef}.InovuaReactDataGrid__resize-overlay{opacity:0;pointer-events:none;position:fixed;top:0;left:0;bottom:0;width:100%;z-index:100000;cursor:col-resize}.InovuaReactDataGrid__resize-overlay--active{opacity:1}.InovuaReactDataGrid__resize-proxy{position:absolute;top:0;left:0;bottom:0}.InovuaReactDataGrid__box--ellipsis,.InovuaReactDataGrid__cell__content,.InovuaReactDataGrid__header-group__title{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.InovuaReactDataGrid__header-group__title--text-align-start{text-align:start}.InovuaReactDataGrid__header-group__title--text-align-end{text-align:end}.InovuaReactDataGrid__header-group__title--text-align-left{text-align:left}.InovuaReactDataGrid__header-group__title--text-align-right{text-align:right}.InovuaReactDataGrid__header-group__title--text-align-center{text-align:center}.InovuaReactDataGrid__cell--cell-selected,.InovuaReactDataGrid__cell--cell-selected.InovuaReactDataGrid__cell--locked{z-index:10}.InovuaReactDataGrid__cell--cell-active,.InovuaReactDataGrid__cell--cell-active.InovuaReactDataGrid__cell--locked{z-index:20}.InovuaReactDataGrid__cell--cell-active .InovuaReactDataGrid__cell__selection{z-index:100}.InovuaReactDataGrid__cell--cell-selected:not(.InovuaReactDataGrid__cell--cell-active).InovuaReactDataGrid__cell--cell-has-top-selected-sibling .InovuaReactDataGrid__cell__selection:after{border-top-width:0}.InovuaReactDataGrid__cell--cell-selected:not(.InovuaReactDataGrid__cell--cell-active).InovuaReactDataGrid__cell--cell-has-bottom-selected-sibling .InovuaReactDataGrid__cell__selection:after{border-bottom-width:0}.InovuaReactDataGrid__cell--cell-selected:not(.InovuaReactDataGrid__cell--cell-active).InovuaReactDataGrid__cell--cell-has-left-selected-sibling .InovuaReactDataGrid__cell__selection:after{border-left-width:0}.InovuaReactDataGrid__cell--cell-selected:not(.InovuaReactDataGrid__cell--cell-active).InovuaReactDataGrid__cell--cell-has-right-selected-sibling .InovuaReactDataGrid__cell__selection:after{border-right-width:0}.InovuaReactDataGrid__cell__selection{z-index:10;position:absolute;top:-1px;bottom:0;right:-1px;left:0;pointer-events:none}.InovuaReactDataGrid__cell__selection:after{content:\"\";pointer-events:none;position:absolute;right:0;bottom:0;top:0;left:0}.InovuaReactDataGrid__cell--show-border-bottom>.InovuaReactDataGrid__cell__selection{bottom:-1px}.InovuaReactDataGrid__cell--show-border-left>.InovuaReactDataGrid__cell__selection{left:-1px}.InovuaReactDataGrid__cell--show-border-right>.InovuaReactDataGrid__cell__selection{right:-1px}.InovuaReactDataGrid__cell--show-border-top>.InovuaReactDataGrid__cell__selection{top:-1px}.InovuaReactDataGrid__cell--locked-start.InovuaReactDataGrid__cell--first-in-section .InovuaReactDataGrid__cell__selection{right:-2px}.InovuaReactDataGrid__cell--locked-end.InovuaReactDataGrid__cell--first-in-section .InovuaReactDataGrid__cell__selection{left:-3px}.InovuaReactDataGrid__cell__selection-dragger{position:absolute;bottom:0;width:8px;height:8px;cursor:crosshair;pointer-events:all;z-index:10;border-top:1px solid #fff;border-left:1px solid #fff}.InovuaReactDataGrid__cell__selection-dragger--direction-ltr{right:-2px}.InovuaReactDataGrid__cell__selection-dragger--direction-rtl{left:-2px}.InovuaReactDataGrid__cell__editor{position:absolute;z-index:10000;top:0;left:0;width:100%;height:100%;border:0;background:#fff}.InovuaReactDataGrid__cell__editor--bool{display:flex;align-items:center;justify-content:center}.InovuaReactDataGrid .InovuaReactDataGrid__cell__editor.InovuaReactDataGrid__cell__editor--text{height:100%;width:100%}.InovuaReactDataGrid__column-header__filter-wrapper{display:flex;flex-flow:row;align-items:stretch}.InovuaReactDataGrid__column-header__filter-wrapper>*{min-width:0}.InovuaReactDataGrid__column-header__filter-wrapper>:first-child{flex:1}.InovuaReactDataGrid__column-header__filter{flex:1;align-self:center}.InovuaReactDataGrid__column-header__filter--bool{justify-content:center}.InovuaReactDataGrid__column-header{position:relative}.InovuaReactDataGrid__column-header__menu-tool{height:100%;flex:none;margin-left:auto;display:flex;align-items:center;cursor:pointer;top:0}.InovuaReactDataGrid__column-header__menu-tool .InovuaReactDataGrid__sort-icon--asc,.InovuaReactDataGrid__column-header__menu-tool .InovuaReactDataGrid__sort-icon--desc{margin-top:2px}.InovuaReactDataGrid__column-header__menu-tool--show-on-hover{position:absolute}.InovuaReactDataGrid__column-header__menu-tool--show-on-hover:not(.InovuaReactDataGrid__column-header__menu-tool--visible){opacity:0;pointer-events:none}.InovuaReactDataGrid__column-header--align-start.InovuaReactDataGrid__column-header--direction-ltr>.InovuaReactDataGrid__column-header__menu-tool--show-on-hover{right:0}.InovuaReactDataGrid__column-header--align-start.InovuaReactDataGrid__column-header--direction-rtl>.InovuaReactDataGrid__column-header__menu-tool--show-on-hover{left:0}.InovuaReactDataGrid__column-header--align-center{position:relative}.InovuaReactDataGrid__column-header--align-center>.InovuaReactDataGrid__column-header__menu-tool--show-on-hover{position:absolute;right:0;top:0;bottom:0}.InovuaReactDataGrid__column-header--align-end.InovuaReactDataGrid__column-header--direction-ltr .InovuaReactDataGrid__column-header__menu-tool--show-on-hover{right:auto;left:0}.InovuaReactDataGrid__column-header--align-end.InovuaReactDataGrid__column-header--direction-rtl .InovuaReactDataGrid__column-header__menu-tool--show-on-hover{left:auto;right:0}.InovuaReactDataGrid__column-header:hover>.InovuaReactDataGrid__column-header__menu-tool{opacity:1;pointer-events:all}.InovuaReactDataGrid__column-header--overflow-hidden{overflow:hidden}.InovuaReactDataGrid__footer-rows-container{position:relative;z-index:10000}.InovuaReactDataGrid__footer-row-group--locked-start,.InovuaReactDataGrid__locked-row-group--locked-start,.InovuaReactDataGrid__locked-start-wrapper,.InovuaReactDataGrid__row-details{z-index:11000}.InovuaReactDataGrid__row-details{contain:strict}.InovuaReactDataGrid__row-details>.InovuaReactDataGrid{height:100%}.InovuaReactDataGrid__row-details-special-bottom-border{position:absolute;bottom:0;left:0;right:0}.InovuaReactDataGrid__row-details-border,.InovuaReactDataGrid__row-details-special-bottom-border{z-index:100000}.InovuaReactDataGrid__footer-row-group--end,.InovuaReactDataGrid__locked-end-wrapper,.InovuaReactDataGrid__locked-row-group--end{z-index:10100}.InovuaReactDataGrid__row--virtualize-columns .InovuaReactDataGrid__locked-end-wrapper{position:absolute;top:0;left:0}.InovuaReactDataGrid__unlocked-wrapper{z-index:0}.InovuaReactDataGrid__locked-end-wrapper,.InovuaReactDataGrid__locked-start-wrapper{display:flex;flex-flow:row}.InovuaReactDataGrid__row-cell-wrap .InovuaReactDataGrid__locked-end-wrapper--direction-rtl,.InovuaReactDataGrid__row-cell-wrap .InovuaReactDataGrid__locked-start-wrapper--direction-rtl{flex-flow:row-reverse}.InovuaReactDataGrid__column-header__resize-wrapper{position:relative;display:flex;vertical-align:middle;flex-flow:column nowrap}.InovuaReactDataGrid__column-resizer,.InovuaReactDataGrid__header-group-resizer{position:absolute;z-index:1000;height:100%;top:0;cursor:col-resize;right:0}.InovuaReactDataGrid__column-resizer--direction-rtl{right:unset}.InovuaReactDataGrid__column-resizer:hover .InovuaReactDataGrid__column-resize-handle{visibility:visible}.InovuaReactDataGrid__column-resizer--active{z-index:4000}.InovuaReactDataGrid__header-group-resizer:hover .InovuaReactDataGrid__header-group-resize-handle{visibility:visible}.InovuaReactDataGrid__drag-proxy{z-index:10000!important}.InovuaReactDataGrid__column-resize-handle,.InovuaReactDataGrid__header-group-resize-handle{height:100%;position:relative;visibility:hidden}.InovuaReactDataGrid__column-header{display:inline-flex;vertical-align:middle;flex-flow:row;align-items:center;justify-content:flex-start;flex:1;-ms-flex:1 1 auto;white-space:nowrap}.InovuaReactDataGrid__column-header--align-start{justify-content:flex-start;text-align:start}.InovuaReactDataGrid__column-header--align-center{justify-content:center;text-align:center}.InovuaReactDataGrid__column-header--align-end{justify-content:flex-end;text-align:end}.InovuaReactDataGrid__column-header--vertical-align-start,.InovuaReactDataGrid__column-header--vertical-align-top{align-items:flex-start}.InovuaReactDataGrid__column-header--vertical-align-bottom,.InovuaReactDataGrid__column-header--vertical-align-end{align-items:flex-end}.InovuaReactDataGrid__column-header__content{flex:1}.InovuaReactDataGrid__column-header__content>*{display:inline-block}.InovuaReactDataGrid__cell,.InovuaReactDataGrid__footer-row-cell,.InovuaReactDataGrid__locked-row-cell{display:inline-flex;flex-flow:row;align-items:center;justify-content:flex-start;white-space:nowrap;flex-wrap:nowrap;position:relative}.InovuaReactDataGrid__footer-row-cell,.InovuaReactDataGrid__locked-row-cell{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.InovuaReactDataGrid__cell--rowspan{background:inherit}.InovuaReactDataGrid__cell--direction-rtl,.InovuaReactDataGrid__column-header--direction-rtl,.InovuaReactDataGrid__footer-row-cell--direction-rtl,.InovuaReactDataGrid__locked-row-cell--direction-rtl{direction:rtl}.InovuaReactDataGrid__cell--user-select-none,.InovuaReactDataGrid__column-header--user-select-none,.InovuaReactDataGrid__footer-row-cell--user-select-none,.InovuaReactDataGrid__locked-row-cell--user-select-none{-moz-user-select:none;user-select:none;-webkit-user-select:none}.InovuaReactDataGrid__cell--user-select-text,.InovuaReactDataGrid__column-header--user-select-text,.InovuaReactDataGrid__footer-row-cell--user-select-text,.InovuaReactDataGrid__locked-row-cell--user-select-text{-moz-user-select:text;user-select:text;-webkit-user-select:text}.InovuaReactDataGrid__cell--user-select-all,.InovuaReactDataGrid__column-header--user-select-all,.InovuaReactDataGrid__footer-row-cell--user-select-all,.InovuaReactDataGrid__locked-row-cell--user-select-all{-moz-user-select:all;user-select:all;-webkit-user-select:all}.InovuaReactDataGrid__cell--stretch{align-items:stretch}.InovuaReactDataGrid__nested-cell,.InovuaReactDataGrid__nested-group-cell{flex:1}.InovuaReactDataGrid__cell .InovuaReactDataGrid__cell__content,.InovuaReactDataGrid__nested-cell .InovuaReactDataGrid__nested-group-cell__content,.InovuaReactDataGrid__nested-group-cell .InovuaReactDataGrid__nested-group-cell__content{flex:1;width:0;align-self:center}.InovuaReactDataGrid__cell--align-end,.InovuaReactDataGrid__cell--align-right{text-align:end}.InovuaReactDataGrid__cell--align-left,.InovuaReactDataGrid__cell--align-start{text-align:start}.InovuaReactDataGrid__cell--align-center{text-align:center}.InovuaReactDataGrid__cell--vertical-align-start,.InovuaReactDataGrid__cell--vertical-align-top{align-items:flex-start}.InovuaReactDataGrid__cell--vertical-align-start .InovuaReactDataGrid__cell__content,.InovuaReactDataGrid__cell--vertical-align-top .InovuaReactDataGrid__cell__content{align-self:flex-start}.InovuaReactDataGrid__cell--vertical-align-bottom,.InovuaReactDataGrid__cell--vertical-align-end{align-items:flex-end}.InovuaReactDataGrid__cell--vertical-align-bottom .InovuaReactDataGrid__cell__content,.InovuaReactDataGrid__cell--vertical-align-end .InovuaReactDataGrid__cell__content{align-self:flex-end}.InovuaReactDataGrid__sort-icon--hidden{visibility:hidden}.InovuaReactDataGrid__column-header__filter-settings{flex:none;cursor:pointer;display:flex;align-items:center}.InovuaReactDataGrid__column-header__filter-settings-icon,.InovuaReactDataGrid__sort-icon--asc,.InovuaReactDataGrid__sort-icon--desc{display:inline-block;vertical-align:middle}.InovuaReactDataGrid__load-mask{z-index:10000;overflow:hidden;visibility:visible}.InovuaReactDataGrid__load-mask--hidden{visibility:hidden}.InovuaReactDataGrid__group-toolbar--direction-rtl{direction:rtl}.InovuaReactDataGrid__group-toolbar-item{display:inline-block;position:relative}.InovuaReactDataGrid__group-toolbar-item--dragging{top:0;position:absolute}.InovuaReactDataGrid__group-toolbar-item--dragging.InovuaReactDataGrid__group-toolbar-item--direction-ltr{left:0}.InovuaReactDataGrid__group-toolbar-item--dragging.InovuaReactDataGrid__group-toolbar-item--direction-rtl{right:0}.InovuaReactDataGrid__group-toolbar-item__clear-icon{display:inline-block;line-height:0}.inovua-react-virtual-scroll-container{overflow:hidden;position:relative;backface-visibility:hidden}.inovua-react-virtual-scroll-container,.inovua-react-virtual-scroll-container *,.inovua-react-virtual-scroll-container :after,.inovua-react-virtual-scroll-container :before{box-sizing:border-box}.inovua-react-virtual-scroll-container>.inovua-react-scroll-container .inovua-react-scroll-container__scrollbar{z-index:10000}.inovua-react-virtual-scroll-container__scroll-container{flex:1}.inovua-react-virtual-scroll-container--rtl{direction:rtl}.inovua-react-virtual-scroll-container--native{display:flex;overflow:hidden;align-items:stretch;align-content:stretch;flex-flow:column;flex-wrap:nowrap;transform:translateZ(0)}.inovua-react-virtual-scroll-container__view{flex:none;width:100%}.inovua-react-virtual-scroll-container__scroll-container--avoid-repaint{backface-visibility:hidden}.inovua-react-virtual-list{box-sizing:border-box}.inovua-react-virtual-list:not(.inovua-react-virtual-list--virtual-scroll) .inovua-react-scroll-container__scroller{align-items:stretch}.inovua-react-virtual-list *,.inovua-react-virtual-list :after,.inovua-react-virtual-list :before{box-sizing:border-box}.inovua-react-scroll-container--theme-default .inovua-react-scroll-container__track--visible{background-color:rgba(0,0,0,.15)}.inovua-react-scroll-container--theme-default .inovua-react-scroll-container__thumb{background-color:rgba(0,0,0,.25)}.inovua-react-toolkit-flex-v3{display:flex}.inovua-react-toolkit-flex-v3--inline{display:inline-flex}.inovua-react-toolkit-flex-v3--display-flex{display:flex}.inovua-react-toolkit-flex-v3--display-inline-flex{display:inline-flex}.inovua-react-toolkit-flex-v3--align-items-center{align-items:center}.inovua-react-toolkit-flex-v3--align-items-stretch{align-items:stretch}.inovua-react-toolkit-flex-v3--align-items-baseline{align-items:baseline}.inovua-react-toolkit-flex-v3--align-items-end,.inovua-react-toolkit-flex-v3--align-items-flex-end{align-items:flex-end}.inovua-react-toolkit-flex-v3--align-items-flex-start,.inovua-react-toolkit-flex-v3--align-items-start{align-items:flex-start}.inovua-react-toolkit-flex-v3--align-self-center{align-self:center}.inovua-react-toolkit-flex-v3--align-self-stretch{align-self:stretch}.inovua-react-toolkit-flex-v3--align-self-baseline{align-self:baseline}.inovua-react-toolkit-flex-v3--align-self-auto{align-self:auto}.inovua-react-toolkit-flex-v3--align-self-end,.inovua-react-toolkit-flex-v3--align-self-flex-end{align-self:flex-end}.inovua-react-toolkit-flex-v3--align-self-flex-start,.inovua-react-toolkit-flex-v3--align-self-start{align-self:flex-start}.inovua-react-toolkit-flex-v3--align-content-center{align-content:center}.inovua-react-toolkit-flex-v3--align-content-stretch{align-content:stretch}.inovua-react-toolkit-flex-v3--align-content-around,.inovua-react-toolkit-flex-v3--align-content-space-around{align-content:space-around}.inovua-react-toolkit-flex-v3--align-content-between,.inovua-react-toolkit-flex-v3--align-content-space-between{align-content:space-between}.inovua-react-toolkit-flex-v3--align-content-end,.inovua-react-toolkit-flex-v3--align-content-flex-end{align-content:flex-end}.inovua-react-toolkit-flex-v3--align-content-flex-start,.inovua-react-toolkit-flex-v3--align-content-start{align-content:flex-start}.inovua-react-toolkit-flex-v3--justify-content-flex-start,.inovua-react-toolkit-flex-v3--justify-content-start{justify-content:flex-start}.inovua-react-toolkit-flex-v3--justify-content-end,.inovua-react-toolkit-flex-v3--justify-content-flex-end{justify-content:flex-end}.inovua-react-toolkit-flex-v3--justify-content-center{justify-content:center}.inovua-react-toolkit-flex-v3--justify-content-space-around{justify-content:space-around}.inovua-react-toolkit-flex-v3--justify-content-space-between{justify-content:space-between}.inovua-react-toolkit-flex-v3--wrap{flex-wrap:wrap}.inovua-react-toolkit-flex-v3--column{flex-direction:column}.inovua-react-toolkit-flex-v3--column-reverse{flex-direction:column-reverse}.inovua-react-toolkit-flex-v3--row{flex-direction:row}.inovua-react-toolkit-flex-v3--row-reverse{flex-direction:row-reverse}.inovua-react-toolkit-flex-v3--flex-basis-auto{flex-basis:auto}.inovua-react-toolkit-flex-v3--flex-basis-0,.inovua-react-toolkit-flex-v3--flex-basis-none{flex-basis:0}.inovua-react-toolkit-flex-v3--flex-basis-fill{flex-basis:fill}.inovua-react-toolkit-flex-v3--flex-basis-content{flex-basis:content}.inovua-react-toolkit-flex-v3--flex-basis-fit-content{flex-basis:fit-content}.inovua-react-toolkit-flex-v3--flex-basis-min-content{flex-basis:min-content}.inovua-react-toolkit-flex-v3--flex-basis-max-content{flex-basis:max-content}.inovua-react-toolkit-flex-v3--flex-0,.inovua-react-toolkit-flex-v3--flex-none{flex:none}.inovua-react-toolkit-flex-v3--flex-1{flex:1}.inovua-react-toolkit-flex-v3--flex-2{flex:2}.inovua-react-toolkit-flex-v3--flex-3{flex:3}.inovua-react-toolkit-flex-v3--flex-4{flex:4}.inovua-react-toolkit-flex-v3--flex-5{flex:5}.inovua-react-toolkit-flex-v3--flex-6{flex:6}.inovua-react-toolkit-flex-v3--flex-7{flex:7}.inovua-react-toolkit-flex-v3--flex-8{flex:8}.inovua-react-toolkit-flex-v3--flex-9{flex:9}.inovua-react-toolkit-flex-v3--flex-10{flex:10}.inovua-react-toolkit-flex-v3--flex-11{flex:11}.inovua-react-toolkit-flex-v3--flex-12{flex:12}.inovua-react-toolkit-flex-v3--flex-13{flex:13}.inovua-react-toolkit-flex-v3--flex-14{flex:14}.inovua-react-toolkit-flex-v3--flex-15{flex:15}.inovua-react-toolkit-flex-v3--flex-16{flex:16}.inovua-react-toolkit-flex-v3--flex-17{flex:17}.inovua-react-toolkit-flex-v3--flex-18{flex:18}.inovua-react-toolkit-flex-v3--flex-19{flex:19}.inovua-react-toolkit-flex-v3--flex-20{flex:20}.inovua-react-toolkit-flex-v3--flex-21{flex:21}.inovua-react-toolkit-flex-v3--flex-22{flex:22}.inovua-react-toolkit-flex-v3--flex-23{flex:23}.inovua-react-toolkit-flex-v3--flex-24{flex:24}.inovua-react-toolkit-flex-v3--flex-25{flex:25}.inovua-react-toolkit-flex-v3--flex-26{flex:26}.inovua-react-toolkit-flex-v3--flex-27{flex:27}.inovua-react-toolkit-flex-v3--flex-28{flex:28}.inovua-react-toolkit-flex-v3--flex-29{flex:29}.inovua-react-toolkit-flex-v3--flex-30{flex:30}.inovua-react-toolkit-flex-v3--flex-31{flex:31}.inovua-react-toolkit-flex-v3--flex-32{flex:32}.inovua-react-toolkit-flex-v3--flex-33{flex:33}.inovua-react-toolkit-flex-v3--flex-34{flex:34}.inovua-react-toolkit-flex-v3--flex-35{flex:35}.inovua-react-toolkit-flex-v3--flex-36{flex:36}.inovua-react-toolkit-flex-v3--flex-37{flex:37}.inovua-react-toolkit-flex-v3--flex-38{flex:38}.inovua-react-toolkit-flex-v3--flex-39{flex:39}.inovua-react-toolkit-flex-v3--flex-40{flex:40}.inovua-react-toolkit-flex-v3--flex-41{flex:41}.inovua-react-toolkit-flex-v3--flex-42{flex:42}.inovua-react-toolkit-flex-v3--flex-43{flex:43}.inovua-react-toolkit-flex-v3--flex-44{flex:44}.inovua-react-toolkit-flex-v3--flex-45{flex:45}.inovua-react-toolkit-flex-v3--flex-46{flex:46}.inovua-react-toolkit-flex-v3--flex-47{flex:47}.inovua-react-toolkit-flex-v3--flex-48{flex:48}.inovua-react-toolkit-flex-v3--flex-49{flex:49}.inovua-react-toolkit-flex-v3--flex-50{flex:50}.inovua-react-toolkit-flex-v3--flex-51{flex:51}.inovua-react-toolkit-flex-v3--flex-52{flex:52}.inovua-react-toolkit-flex-v3--flex-53{flex:53}.inovua-react-toolkit-flex-v3--flex-54{flex:54}.inovua-react-toolkit-flex-v3--flex-55{flex:55}.inovua-react-toolkit-flex-v3--flex-56{flex:56}.inovua-react-toolkit-flex-v3--flex-57{flex:57}.inovua-react-toolkit-flex-v3--flex-58{flex:58}.inovua-react-toolkit-flex-v3--flex-59{flex:59}.inovua-react-toolkit-flex-v3--flex-60{flex:60}.inovua-react-toolkit-flex-v3--flex-61{flex:61}.inovua-react-toolkit-flex-v3--flex-62{flex:62}.inovua-react-toolkit-flex-v3--flex-63{flex:63}.inovua-react-toolkit-flex-v3--flex-64{flex:64}.inovua-react-toolkit-flex-v3--flex-65{flex:65}.inovua-react-toolkit-flex-v3--flex-66{flex:66}.inovua-react-toolkit-flex-v3--flex-67{flex:67}.inovua-react-toolkit-flex-v3--flex-68{flex:68}.inovua-react-toolkit-flex-v3--flex-69{flex:69}.inovua-react-toolkit-flex-v3--flex-70{flex:70}.inovua-react-toolkit-flex-v3--flex-71{flex:71}.inovua-react-toolkit-flex-v3--flex-72{flex:72}.inovua-react-toolkit-flex-v3--flex-73{flex:73}.inovua-react-toolkit-flex-v3--flex-74{flex:74}.inovua-react-toolkit-flex-v3--flex-75{flex:75}.inovua-react-toolkit-flex-v3--flex-76{flex:76}.inovua-react-toolkit-flex-v3--flex-77{flex:77}.inovua-react-toolkit-flex-v3--flex-78{flex:78}.inovua-react-toolkit-flex-v3--flex-79{flex:79}.inovua-react-toolkit-flex-v3--flex-80{flex:80}.inovua-react-toolkit-flex-v3--flex-81{flex:81}.inovua-react-toolkit-flex-v3--flex-82{flex:82}.inovua-react-toolkit-flex-v3--flex-83{flex:83}.inovua-react-toolkit-flex-v3--flex-84{flex:84}.inovua-react-toolkit-flex-v3--flex-85{flex:85}.inovua-react-toolkit-flex-v3--flex-86{flex:86}.inovua-react-toolkit-flex-v3--flex-87{flex:87}.inovua-react-toolkit-flex-v3--flex-88{flex:88}.inovua-react-toolkit-flex-v3--flex-89{flex:89}.inovua-react-toolkit-flex-v3--flex-90{flex:90}.inovua-react-toolkit-flex-v3--flex-91{flex:91}.inovua-react-toolkit-flex-v3--flex-92{flex:92}.inovua-react-toolkit-flex-v3--flex-93{flex:93}.inovua-react-toolkit-flex-v3--flex-94{flex:94}.inovua-react-toolkit-flex-v3--flex-95{flex:95}.inovua-react-toolkit-flex-v3--flex-96{flex:96}.inovua-react-toolkit-flex-v3--flex-97{flex:97}.inovua-react-toolkit-flex-v3--flex-98{flex:98}.inovua-react-toolkit-flex-v3--flex-99{flex:99}.inovua-react-toolkit-flex-v3--flex-100{flex:100}.inovua-react-toolkit-flex-v3--flex-grow-0{flex-grow:0}.inovua-react-toolkit-flex-v3--flex-grow-1{flex-grow:1}.inovua-react-toolkit-flex-v3--flex-grow-2{flex-grow:2}.inovua-react-toolkit-flex-v3--flex-grow-3{flex-grow:3}.inovua-react-toolkit-flex-v3--flex-grow-4{flex-grow:4}.inovua-react-toolkit-flex-v3--flex-grow-5{flex-grow:5}.inovua-react-toolkit-flex-v3--flex-grow-6{flex-grow:6}.inovua-react-toolkit-flex-v3--flex-grow-7{flex-grow:7}.inovua-react-toolkit-flex-v3--flex-grow-8{flex-grow:8}.inovua-react-toolkit-flex-v3--flex-grow-9{flex-grow:9}.inovua-react-toolkit-flex-v3--flex-grow-10{flex-grow:10}.inovua-react-toolkit-flex-v3--flex-grow-11{flex-grow:11}.inovua-react-toolkit-flex-v3--flex-grow-12{flex-grow:12}.inovua-react-toolkit-flex-v3--flex-grow-13{flex-grow:13}.inovua-react-toolkit-flex-v3--flex-grow-14{flex-grow:14}.inovua-react-toolkit-flex-v3--flex-grow-15{flex-grow:15}.inovua-react-toolkit-flex-v3--flex-grow-16{flex-grow:16}.inovua-react-toolkit-flex-v3--flex-grow-17{flex-grow:17}.inovua-react-toolkit-flex-v3--flex-grow-18{flex-grow:18}.inovua-react-toolkit-flex-v3--flex-grow-19{flex-grow:19}.inovua-react-toolkit-flex-v3--flex-grow-20{flex-grow:20}.inovua-react-toolkit-flex-v3--flex-grow-21{flex-grow:21}.inovua-react-toolkit-flex-v3--flex-grow-22{flex-grow:22}.inovua-react-toolkit-flex-v3--flex-grow-23{flex-grow:23}.inovua-react-toolkit-flex-v3--flex-grow-24{flex-grow:24}.inovua-react-toolkit-flex-v3--flex-grow-25{flex-grow:25}.inovua-react-toolkit-flex-v3--flex-grow-26{flex-grow:26}.inovua-react-toolkit-flex-v3--flex-grow-27{flex-grow:27}.inovua-react-toolkit-flex-v3--flex-grow-28{flex-grow:28}.inovua-react-toolkit-flex-v3--flex-grow-29{flex-grow:29}.inovua-react-toolkit-flex-v3--flex-grow-30{flex-grow:30}.inovua-react-toolkit-flex-v3--flex-grow-31{flex-grow:31}.inovua-react-toolkit-flex-v3--flex-grow-32{flex-grow:32}.inovua-react-toolkit-flex-v3--flex-grow-33{flex-grow:33}.inovua-react-toolkit-flex-v3--flex-grow-34{flex-grow:34}.inovua-react-toolkit-flex-v3--flex-grow-35{flex-grow:35}.inovua-react-toolkit-flex-v3--flex-grow-36{flex-grow:36}.inovua-react-toolkit-flex-v3--flex-grow-37{flex-grow:37}.inovua-react-toolkit-flex-v3--flex-grow-38{flex-grow:38}.inovua-react-toolkit-flex-v3--flex-grow-39{flex-grow:39}.inovua-react-toolkit-flex-v3--flex-grow-40{flex-grow:40}.inovua-react-toolkit-flex-v3--flex-grow-41{flex-grow:41}.inovua-react-toolkit-flex-v3--flex-grow-42{flex-grow:42}.inovua-react-toolkit-flex-v3--flex-grow-43{flex-grow:43}.inovua-react-toolkit-flex-v3--flex-grow-44{flex-grow:44}.inovua-react-toolkit-flex-v3--flex-grow-45{flex-grow:45}.inovua-react-toolkit-flex-v3--flex-grow-46{flex-grow:46}.inovua-react-toolkit-flex-v3--flex-grow-47{flex-grow:47}.inovua-react-toolkit-flex-v3--flex-grow-48{flex-grow:48}.inovua-react-toolkit-flex-v3--flex-grow-49{flex-grow:49}.inovua-react-toolkit-flex-v3--flex-grow-50{flex-grow:50}.inovua-react-toolkit-flex-v3--flex-grow-51{flex-grow:51}.inovua-react-toolkit-flex-v3--flex-grow-52{flex-grow:52}.inovua-react-toolkit-flex-v3--flex-grow-53{flex-grow:53}.inovua-react-toolkit-flex-v3--flex-grow-54{flex-grow:54}.inovua-react-toolkit-flex-v3--flex-grow-55{flex-grow:55}.inovua-react-toolkit-flex-v3--flex-grow-56{flex-grow:56}.inovua-react-toolkit-flex-v3--flex-grow-57{flex-grow:57}.inovua-react-toolkit-flex-v3--flex-grow-58{flex-grow:58}.inovua-react-toolkit-flex-v3--flex-grow-59{flex-grow:59}.inovua-react-toolkit-flex-v3--flex-grow-60{flex-grow:60}.inovua-react-toolkit-flex-v3--flex-grow-61{flex-grow:61}.inovua-react-toolkit-flex-v3--flex-grow-62{flex-grow:62}.inovua-react-toolkit-flex-v3--flex-grow-63{flex-grow:63}.inovua-react-toolkit-flex-v3--flex-grow-64{flex-grow:64}.inovua-react-toolkit-flex-v3--flex-grow-65{flex-grow:65}.inovua-react-toolkit-flex-v3--flex-grow-66{flex-grow:66}.inovua-react-toolkit-flex-v3--flex-grow-67{flex-grow:67}.inovua-react-toolkit-flex-v3--flex-grow-68{flex-grow:68}.inovua-react-toolkit-flex-v3--flex-grow-69{flex-grow:69}.inovua-react-toolkit-flex-v3--flex-grow-70{flex-grow:70}.inovua-react-toolkit-flex-v3--flex-grow-71{flex-grow:71}.inovua-react-toolkit-flex-v3--flex-grow-72{flex-grow:72}.inovua-react-toolkit-flex-v3--flex-grow-73{flex-grow:73}.inovua-react-toolkit-flex-v3--flex-grow-74{flex-grow:74}.inovua-react-toolkit-flex-v3--flex-grow-75{flex-grow:75}.inovua-react-toolkit-flex-v3--flex-grow-76{flex-grow:76}.inovua-react-toolkit-flex-v3--flex-grow-77{flex-grow:77}.inovua-react-toolkit-flex-v3--flex-grow-78{flex-grow:78}.inovua-react-toolkit-flex-v3--flex-grow-79{flex-grow:79}.inovua-react-toolkit-flex-v3--flex-grow-80{flex-grow:80}.inovua-react-toolkit-flex-v3--flex-grow-81{flex-grow:81}.inovua-react-toolkit-flex-v3--flex-grow-82{flex-grow:82}.inovua-react-toolkit-flex-v3--flex-grow-83{flex-grow:83}.inovua-react-toolkit-flex-v3--flex-grow-84{flex-grow:84}.inovua-react-toolkit-flex-v3--flex-grow-85{flex-grow:85}.inovua-react-toolkit-flex-v3--flex-grow-86{flex-grow:86}.inovua-react-toolkit-flex-v3--flex-grow-87{flex-grow:87}.inovua-react-toolkit-flex-v3--flex-grow-88{flex-grow:88}.inovua-react-toolkit-flex-v3--flex-grow-89{flex-grow:89}.inovua-react-toolkit-flex-v3--flex-grow-90{flex-grow:90}.inovua-react-toolkit-flex-v3--flex-grow-91{flex-grow:91}.inovua-react-toolkit-flex-v3--flex-grow-92{flex-grow:92}.inovua-react-toolkit-flex-v3--flex-grow-93{flex-grow:93}.inovua-react-toolkit-flex-v3--flex-grow-94{flex-grow:94}.inovua-react-toolkit-flex-v3--flex-grow-95{flex-grow:95}.inovua-react-toolkit-flex-v3--flex-grow-96{flex-grow:96}.inovua-react-toolkit-flex-v3--flex-grow-97{flex-grow:97}.inovua-react-toolkit-flex-v3--flex-grow-98{flex-grow:98}.inovua-react-toolkit-flex-v3--flex-grow-99{flex-grow:99}.inovua-react-toolkit-flex-v3--flex-grow-100{flex-grow:100}.inovua-react-toolkit-flex-v3--flex-shrink-0{flex-shrink:0}.inovua-react-toolkit-flex-v3--flex-shrink-1{flex-shrink:1}.inovua-react-toolkit-flex-v3--flex-shrink-2{flex-shrink:2}.inovua-react-toolkit-flex-v3--flex-shrink-3{flex-shrink:3}.inovua-react-toolkit-flex-v3--flex-shrink-4{flex-shrink:4}.inovua-react-toolkit-flex-v3--flex-shrink-5{flex-shrink:5}.inovua-react-toolkit-flex-v3--flex-shrink-6{flex-shrink:6}.inovua-react-toolkit-flex-v3--flex-shrink-7{flex-shrink:7}.inovua-react-toolkit-flex-v3--flex-shrink-8{flex-shrink:8}.inovua-react-toolkit-flex-v3--flex-shrink-9{flex-shrink:9}.inovua-react-toolkit-flex-v3--flex-shrink-10{flex-shrink:10}.inovua-react-toolkit-flex-v3--flex-shrink-11{flex-shrink:11}.inovua-react-toolkit-flex-v3--flex-shrink-12{flex-shrink:12}.inovua-react-toolkit-flex-v3--flex-shrink-13{flex-shrink:13}.inovua-react-toolkit-flex-v3--flex-shrink-14{flex-shrink:14}.inovua-react-toolkit-flex-v3--flex-shrink-15{flex-shrink:15}.inovua-react-toolkit-flex-v3--flex-shrink-16{flex-shrink:16}.inovua-react-toolkit-flex-v3--flex-shrink-17{flex-shrink:17}.inovua-react-toolkit-flex-v3--flex-shrink-18{flex-shrink:18}.inovua-react-toolkit-flex-v3--flex-shrink-19{flex-shrink:19}.inovua-react-toolkit-flex-v3--flex-shrink-20{flex-shrink:20}.inovua-react-toolkit-flex-v3--flex-shrink-21{flex-shrink:21}.inovua-react-toolkit-flex-v3--flex-shrink-22{flex-shrink:22}.inovua-react-toolkit-flex-v3--flex-shrink-23{flex-shrink:23}.inovua-react-toolkit-flex-v3--flex-shrink-24{flex-shrink:24}.inovua-react-toolkit-flex-v3--flex-shrink-25{flex-shrink:25}.inovua-react-toolkit-flex-v3--flex-shrink-26{flex-shrink:26}.inovua-react-toolkit-flex-v3--flex-shrink-27{flex-shrink:27}.inovua-react-toolkit-flex-v3--flex-shrink-28{flex-shrink:28}.inovua-react-toolkit-flex-v3--flex-shrink-29{flex-shrink:29}.inovua-react-toolkit-flex-v3--flex-shrink-30{flex-shrink:30}.inovua-react-toolkit-flex-v3--flex-shrink-31{flex-shrink:31}.inovua-react-toolkit-flex-v3--flex-shrink-32{flex-shrink:32}.inovua-react-toolkit-flex-v3--flex-shrink-33{flex-shrink:33}.inovua-react-toolkit-flex-v3--flex-shrink-34{flex-shrink:34}.inovua-react-toolkit-flex-v3--flex-shrink-35{flex-shrink:35}.inovua-react-toolkit-flex-v3--flex-shrink-36{flex-shrink:36}.inovua-react-toolkit-flex-v3--flex-shrink-37{flex-shrink:37}.inovua-react-toolkit-flex-v3--flex-shrink-38{flex-shrink:38}.inovua-react-toolkit-flex-v3--flex-shrink-39{flex-shrink:39}.inovua-react-toolkit-flex-v3--flex-shrink-40{flex-shrink:40}.inovua-react-toolkit-flex-v3--flex-shrink-41{flex-shrink:41}.inovua-react-toolkit-flex-v3--flex-shrink-42{flex-shrink:42}.inovua-react-toolkit-flex-v3--flex-shrink-43{flex-shrink:43}.inovua-react-toolkit-flex-v3--flex-shrink-44{flex-shrink:44}.inovua-react-toolkit-flex-v3--flex-shrink-45{flex-shrink:45}.inovua-react-toolkit-flex-v3--flex-shrink-46{flex-shrink:46}.inovua-react-toolkit-flex-v3--flex-shrink-47{flex-shrink:47}.inovua-react-toolkit-flex-v3--flex-shrink-48{flex-shrink:48}.inovua-react-toolkit-flex-v3--flex-shrink-49{flex-shrink:49}.inovua-react-toolkit-flex-v3--flex-shrink-50{flex-shrink:50}.inovua-react-toolkit-flex-v3--flex-shrink-51{flex-shrink:51}.inovua-react-toolkit-flex-v3--flex-shrink-52{flex-shrink:52}.inovua-react-toolkit-flex-v3--flex-shrink-53{flex-shrink:53}.inovua-react-toolkit-flex-v3--flex-shrink-54{flex-shrink:54}.inovua-react-toolkit-flex-v3--flex-shrink-55{flex-shrink:55}.inovua-react-toolkit-flex-v3--flex-shrink-56{flex-shrink:56}.inovua-react-toolkit-flex-v3--flex-shrink-57{flex-shrink:57}.inovua-react-toolkit-flex-v3--flex-shrink-58{flex-shrink:58}.inovua-react-toolkit-flex-v3--flex-shrink-59{flex-shrink:59}.inovua-react-toolkit-flex-v3--flex-shrink-60{flex-shrink:60}.inovua-react-toolkit-flex-v3--flex-shrink-61{flex-shrink:61}.inovua-react-toolkit-flex-v3--flex-shrink-62{flex-shrink:62}.inovua-react-toolkit-flex-v3--flex-shrink-63{flex-shrink:63}.inovua-react-toolkit-flex-v3--flex-shrink-64{flex-shrink:64}.inovua-react-toolkit-flex-v3--flex-shrink-65{flex-shrink:65}.inovua-react-toolkit-flex-v3--flex-shrink-66{flex-shrink:66}.inovua-react-toolkit-flex-v3--flex-shrink-67{flex-shrink:67}.inovua-react-toolkit-flex-v3--flex-shrink-68{flex-shrink:68}.inovua-react-toolkit-flex-v3--flex-shrink-69{flex-shrink:69}.inovua-react-toolkit-flex-v3--flex-shrink-70{flex-shrink:70}.inovua-react-toolkit-flex-v3--flex-shrink-71{flex-shrink:71}.inovua-react-toolkit-flex-v3--flex-shrink-72{flex-shrink:72}.inovua-react-toolkit-flex-v3--flex-shrink-73{flex-shrink:73}.inovua-react-toolkit-flex-v3--flex-shrink-74{flex-shrink:74}.inovua-react-toolkit-flex-v3--flex-shrink-75{flex-shrink:75}.inovua-react-toolkit-flex-v3--flex-shrink-76{flex-shrink:76}.inovua-react-toolkit-flex-v3--flex-shrink-77{flex-shrink:77}.inovua-react-toolkit-flex-v3--flex-shrink-78{flex-shrink:78}.inovua-react-toolkit-flex-v3--flex-shrink-79{flex-shrink:79}.inovua-react-toolkit-flex-v3--flex-shrink-80{flex-shrink:80}.inovua-react-toolkit-flex-v3--flex-shrink-81{flex-shrink:81}.inovua-react-toolkit-flex-v3--flex-shrink-82{flex-shrink:82}.inovua-react-toolkit-flex-v3--flex-shrink-83{flex-shrink:83}.inovua-react-toolkit-flex-v3--flex-shrink-84{flex-shrink:84}.inovua-react-toolkit-flex-v3--flex-shrink-85{flex-shrink:85}.inovua-react-toolkit-flex-v3--flex-shrink-86{flex-shrink:86}.inovua-react-toolkit-flex-v3--flex-shrink-87{flex-shrink:87}.inovua-react-toolkit-flex-v3--flex-shrink-88{flex-shrink:88}.inovua-react-toolkit-flex-v3--flex-shrink-89{flex-shrink:89}.inovua-react-toolkit-flex-v3--flex-shrink-90{flex-shrink:90}.inovua-react-toolkit-flex-v3--flex-shrink-91{flex-shrink:91}.inovua-react-toolkit-flex-v3--flex-shrink-92{flex-shrink:92}.inovua-react-toolkit-flex-v3--flex-shrink-93{flex-shrink:93}.inovua-react-toolkit-flex-v3--flex-shrink-94{flex-shrink:94}.inovua-react-toolkit-flex-v3--flex-shrink-95{flex-shrink:95}.inovua-react-toolkit-flex-v3--flex-shrink-96{flex-shrink:96}.inovua-react-toolkit-flex-v3--flex-shrink-97{flex-shrink:97}.inovua-react-toolkit-flex-v3--flex-shrink-98{flex-shrink:98}.inovua-react-toolkit-flex-v3--flex-shrink-99{flex-shrink:99}.inovua-react-toolkit-flex-v3--flex-shrink-100{flex-shrink:100}.inovua-react-scroll-container{overflow:hidden;position:relative;flex-flow:column;flex:1 1 0}.inovua-react-scroll-container--block{display:flex}.inovua-react-scroll-container--inline-block{display:inline-flex}.inovua-react-scroll-container__wrapper{display:flex;flex:1 1 auto}.inovua-react-scroll-container__scroller{overflow:scroll;flex:1;position:relative;box-sizing:border-box;align-items:flex-start;justify-content:flex-start;flex-flow:column;display:flex}.inovua-react-scroll-container__scroller.inovua-react-scroll-container__scroller--direction-rtl{display:block;display:grid}.inovua-react-scroll-container__scroller--avoid-repaint{backface-visibility:hidden}.inovua-react-scroll-container__scroller--hide-native-scrollbar-if-possible::-webkit-scrollbar{display:none}.inovua-react-scroll-container__view{flex:1 0 auto;position:relative;box-sizing:border-box}@media (-ms-high-contrast:none),screen and (-ms-high-contrast:active){.inovua-react-scroll-container__view{max-width:100%}}.inovua-react-scroll-container__view--zero-width-scrollbar{flex:1 0 100%}.inovua-react-scroll-container__scrollbar{pointer-events:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;opacity:1;transition-property:opacity;transition-duration:.1s;overflow:visible;z-index:1}.inovua-react-scroll-container__scrollbar--hidden{opacity:0;transition-duration:.3s}.inovua-react-scroll-container__scrollbar--direction-rtl{direction:rtl}.inovua-react-scroll-container__track{pointer-events:none;position:relative;transition-property:background-color;transition-duration:.1s;cursor:auto}.inovua-react-scroll-container__track--drag-to-scroll{pointer-events:all}.inovua-react-scroll-container__track--orientation-vertical{height:100%}.inovua-react-scroll-container__track--direction-rtl{transform:rotateY(180deg)}.inovua-react-scroll-container__track--visible{cursor:pointer}.inovua-react-scroll-container__thumb{-webkit-user-select:none;-moz-user-select:none;user-select:none;display:block;cursor:auto;will-change:transform;position:absolute}.inovua-react-scroll-container__thumb--orientation-vertical{top:0;right:0;transition-property:width}.inovua-react-scroll-container__thumb--orientation-horizontal{bottom:0;transition-property:height}.inovua-react-scroll-container__thumb--orientation-horizontal.inovua-react-scroll-container__thumb--direction-ltr{left:0}.inovua-react-scroll-container__thumb--orientation-horizontal.inovua-react-scroll-container__thumb--direction-rtl{right:0}.inovua--hide-native-scroll-if-possible::-webkit-scrollbar{display:none}.inovua-react-toolkit-arrow-scroller,.inovua-react-toolkit-toolbar{max-width:100%;position:relative;overflow:hidden;align-items:start;direction:ltr}.inovua-react-toolkit-arrow-scroller--rtl,.inovua-react-toolkit-toolbar--rtl{direction:rtl}.inovua-react-toolkit-arrow-scroller--rtl .inovua-react-toolkit-arrow-scroller__scroll-container>.inovua-react-scroll-container__wrapper,.inovua-react-toolkit-arrow-scroller--rtl .inovua-react-toolkit-toolbar__scroll-container>.inovua-react-scroll-container__wrapper,.inovua-react-toolkit-toolbar--rtl .inovua-react-toolkit-arrow-scroller__scroll-container>.inovua-react-scroll-container__wrapper,.inovua-react-toolkit-toolbar--rtl .inovua-react-toolkit-toolbar__scroll-container>.inovua-react-scroll-container__wrapper{max-width:100%}.inovua-react-toolkit-arrow-scroller--native-scroll,.inovua-react-toolkit-toolbar--native-scroll{transform:translateZ(0)}.inovua-react-toolkit-arrow-scroller__inner-wrapper,.inovua-react-toolkit-toolbar__inner-wrapper{display:flex;flex:1 0 auto;align-items:stretch;position:relative;transition:top .35s ease-out}.inovua-react-toolkit-arrow-scroller__inner-wrapper--direction-column,.inovua-react-toolkit-toolbar__inner-wrapper--direction-column{flex-direction:column}.inovua-react-toolkit-arrow-scroller--direction-horizontal,.inovua-react-toolkit-toolbar--direction-horizontal{display:flex}.inovua-react-toolkit-arrow-scroller--direction-vertical,.inovua-react-toolkit-toolbar--direction-vertical{max-height:100%}.inovua-react-toolkit-arrow-scroller__arrow--visible,.inovua-react-toolkit-toolbar__arrow--visible{display:flex;align-items:center}.inovua-react-toolkit-arrow-scroller__arrow--native-scroll,.inovua-react-toolkit-toolbar__arrow--native-scroll{position:fixed}.inovua-react-toolkit-arrow-scroller__arrow--direction-down,.inovua-react-toolkit-arrow-scroller__arrow--direction-up,.inovua-react-toolkit-toolbar__arrow--direction-down,.inovua-react-toolkit-toolbar__arrow--direction-up{width:100%;flex-flow:column}.inovua-react-toolkit-arrow-scroller__arrow--auto,.inovua-react-toolkit-toolbar__arrow--auto{position:absolute;text-align:center}.inovua-react-toolkit-arrow-scroller__arrow--auto.inovua-react-toolkit-arrow-scroller__arrow--native-scroll,.inovua-react-toolkit-arrow-scroller__arrow--auto.inovua-react-toolkit-toolbar__arrow--native-scroll,.inovua-react-toolkit-toolbar__arrow--auto.inovua-react-toolkit-arrow-scroller__arrow--native-scroll,.inovua-react-toolkit-toolbar__arrow--auto.inovua-react-toolkit-toolbar__arrow--native-scroll{position:fixed}.inovua-react-toolkit-arrow-scroller__arrow--direction-left,.inovua-react-toolkit-arrow-scroller__arrow--direction-right,.inovua-react-toolkit-toolbar__arrow--direction-left,.inovua-react-toolkit-toolbar__arrow--direction-right{top:0;bottom:0}.inovua-react-toolkit-arrow-scroller__arrow,.inovua-react-toolkit-toolbar__arrow{cursor:pointer}.inovua-react-toolkit-arrow-scroller__arrow--direction-down,.inovua-react-toolkit-arrow-scroller__arrow--direction-up,.inovua-react-toolkit-toolbar__arrow--direction-down,.inovua-react-toolkit-toolbar__arrow--direction-up{left:0;right:0}.inovua-react-toolkit-arrow-scroller__arrow--direction-left,.inovua-react-toolkit-toolbar__arrow--direction-left{left:0;z-index:200}.inovua-react-toolkit-arrow-scroller__arrow--direction-right,.inovua-react-toolkit-toolbar__arrow--direction-right{right:0}.inovua-react-toolkit-arrow-scroller__arrow--direction-up,.inovua-react-toolkit-toolbar__arrow--direction-up{top:0;z-index:200}.inovua-react-toolkit-arrow-scroller__arrow--direction-down,.inovua-react-toolkit-toolbar__arrow--direction-down{bottom:0}.inovua-react-toolkit-arrow-scroller__arrow--disabled,.inovua-react-toolkit-toolbar__arrow--disabled{opacity:.5}.inovua-react-toolkit-arrow-scroller__arrow--hidden,.inovua-react-toolkit-toolbar__arrow--hidden{display:none}.inovua-react-toolkit-radio-button--disabled{outline:none}.inovua-react-toolkit-radio-button{-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;display:flex;align-items:center;outline:none;vertical-align:middle}.inovua-react-toolkit-radio-button--inline-block{display:inline-flex}.inovua-react-toolkit-radio-button__icon-wrapper{display:flex}.inovua-react-toolkit-radio-button__icon-wrapper svg{display:block}.inovua-react-toolkit-radio-button--children-position-start{flex-flow:row-reverse}.inovua-react-toolkit-radio-button--rtl{direction:rtl}.inovua-react-toolkit-radio-button--ltr.inovua-react-toolkit-radio-button--children-position-end .inovua-react-toolkit-radio-button__icon-wrapper,.inovua-react-toolkit-radio-button--rtl.inovua-react-toolkit-radio-button--children-position-start .inovua-react-toolkit-radio-button__icon-wrapper{margin-right:5px}.inovua-react-toolkit-radio-button--ltr.inovua-react-toolkit-radio-button--children-position-start .inovua-react-toolkit-radio-button__icon-wrapper,.inovua-react-toolkit-radio-button--rtl.inovua-react-toolkit-radio-button--children-position-end .inovua-react-toolkit-radio-button__icon-wrapper{margin-left:5px}.inovua-react-toolkit-radio-button--read-only{cursor:auto}.inovua-react-toolkit-radio-button--disabled{cursor:auto;pointer-events:none}.inovua-react-toolkit-radio-button--browser-native{padding:0;margin:0;display:inline-block}.inovua-react-toolkit-menu{box-sizing:border-box;display:inline-flex;position:relative}.inovua-react-toolkit-menu *,.inovua-react-toolkit-menu :after,.inovua-react-toolkit-menu :before{box-sizing:border-box}.inovua-react-toolkit-menu__arrow{position:absolute;background:none;padding:0;border:0;left:50%;transform:translateX(-50%);z-index:1}.inovua-react-toolkit-menu__arrow svg{height:13px}.inovua-react-toolkit-menu__arrow:focus{outline:none}.inovua-react-toolkit-menu__cell{white-space:nowrap;background:none}.inovua-react-toolkit-menu__cell>button{display:block}.inovua-react-toolkit-menu__expander{vertical-align:middle}.inovua-react-toolkit-menu__submenu-wrapper{position:absolute;z-index:500}.inovua-react-toolkit-menu__menu-separator{cursor:auto;height:1px}.inovua-react-toolkit-menu:focus{outline:none}.inovua-react-toolkit-menu--absolute{position:absolute}.inovua-react-toolkit-menu__row--disabled{pointer-events:none}.inovua-react-toolkit-menu--no-display{position:absolute}.inovua-react-toolkit-menu--hidden{visibility:hidden}.inovua-react-toolkit-menu--rtl .inovua-react-toolkit-menu__table{direction:rtl}.inovua-react-toolkit-menu__scroll-container{width:100%}.inovua-react-toolkit-menu__table{direction:ltr;width:100%;text-align:start;border-spacing:0;border-collapse:initial}.inovua-react-toolkit-menu__row{cursor:pointer;-webkit-user-select:none;-moz-user-select:none;user-select:none}.inovua-react-toolkit-menu__arrow-up{top:0}.inovua-react-toolkit-menu__arrow-down{bottom:0}.inovua-react-toolkit-menu--animation-enabled{transform:scale(0)}.inovua-react-toolkit-menu--transition-start{transform-origin:left top;transition:transform .15s ease}.inovua-react-toolkit-menu--transition-start.inovua-react-toolkit-menu--position-down{transform-origin:left bottom}.inovua-react-toolkit-menu--transition-start .inovua-react-toolkit-menu__row{transform:scaleY(0);transition:transform .15s ease}.inovua-react-toolkit-menu--transition-end,.inovua-react-toolkit-menu--transition-end .inovua-react-toolkit-menu__row{transform:scale(1)}.inovua-react-toolkit-dropdown-button{position:relative;display:inline-flex;vertical-align:middle}.inovua-react-toolkit-dropdown-button .inovua-react-toolkit-button__icon-wrap,.inovua-react-toolkit-dropdown-button .inovua-react-toolkit-dropdown-button__arrow{align-self:stretch;display:flex;align-items:center}.inovua-react-toolkit-dropdown-button .inovua-react-toolkit-dropdown-button__menu{z-index:1000;position:fixed;backface-visibility:hidden}.inovua-react-toolkit-dropdown-button__arrow svg{vertical-align:middle;display:inline-block}.inovua-react-toolkit-toolbar{display:flex;align-items:center;flex-wrap:nowrap;text-align:start;direction:ltr;width:100%;overflow:visible}.inovua-react-toolkit-toolbar:not(.inovua-react-toolkit-toolbar--native-scroll){overflow:hidden}.inovua-react-toolkit-toolbar,.inovua-react-toolkit-toolbar ::-ms-backdrop{overflow:hidden}.inovua-react-toolkit-toolbar *,.inovua-react-toolkit-toolbar :after,.inovua-react-toolkit-toolbar :before{box-sizing:border-box}.inovua-react-toolkit-toolbar .inovua-react-toolkit-menu.inovua-react-toolkit-menu{position:fixed;z-index:10000}.inovua-react-toolkit-toolbar--dropdown{overflow:visible}.inovua-react-toolkit-toolbar__separator{width:1px;margin:6px 4px;align-self:stretch}.inovua-react-toolkit-toolbar__arrow--visible{display:flex;align-items:center}.inovua-react-toolkit-toolbar__arrow--direction-down,.inovua-react-toolkit-toolbar__arrow--direction-up{width:100%;flex-flow:column}.inovua-react-toolkit-toolbar--rtl{display:flex;justify-content:flex-end}.inovua-react-toolkit-toolbar--rtl .inovua-react-toolkit-toolbar__inner-wrapper{direction:rtl}.inovua-react-toolkit-numeric-input,.inovua-react-toolkit-numeric-input *{box-sizing:border-box}.inovua-react-toolkit-numeric-input{display:inline-flex;overflow:hidden;background:#fff;align-items:center}.inovua-react-toolkit-numeric-input.inovua-react-toolkit-numeric-input--ltr{padding:0 0 0 8px}.inovua-react-toolkit-numeric-input.inovua-react-toolkit-numeric-input--rtl{padding:0 8px 0 0}.inovua-react-toolkit-numeric-input__number-input{flex:1}.inovua-react-toolkit-numeric-input__input{border:none;outline:none;background:none;width:100%;height:100%}.inovua-react-toolkit-numeric-input__input::-ms-clear{display:none}.inovua-react-toolkit-numeric-input__spinner-wrapper-hidden{visibility:hidden}.inovua-react-toolkit-numeric-input__clear-button-wrapper,.inovua-react-toolkit-numeric-input__spinner-wrapper{display:flex;flex-flow:column}.inovua-react-toolkit-numeric-input__clear-button-wrapper{visibility:visible;opacity:1;transition:opacity .2s;transform:translateZ(0)}.inovua-react-toolkit-numeric-input__clear-button-wrapper--hidden{visibility:hidden;opacity:0;display:none}.inovua-react-toolkit-numeric-input__clear-button{cursor:pointer;flex:auto;display:flex;align-items:center;justify-content:center;background:none;border:none;padding:0;outline:none;top:0;right:1px;bottom:0}.inovua-react-toolkit-numeric-input__clear-button:active{margin-top:1px}.inovua-react-toolkit-numeric-input__clear-button svg{width:20px;height:20px}.inovua-react-toolkit-numeric-input__spinner-arrow{position:relative;cursor:pointer;flex:1;display:flex;align-items:center;justify-content:center}.inovua-react-toolkit-numeric-input__spinner-arrow svg{width:14px;height:14px}.inovua-react-toolkit-date-input__overlay{position:absolute;visibility:hidden;opacity:0;pointer-events:none}.inovua-react-toolkit-date-input__overlay,.inovua-react-toolkit-date-input__overlay *{box-sizing:border-box}.inovua-react-toolkit-date-input__overlay--position-fixed{position:fixed}.inovua-react-toolkit-date-input__overlay--visible{visibility:visible;pointer-events:inherit;opacity:1}.inovua-react-toolkit-date-input__overlay--has-transition.inovua-react-toolkit-date-input__overlay--transition-enter{opacity:0;visibility:visible}.inovua-react-toolkit-date-input__overlay--has-transition.inovua-react-toolkit-date-input__overlay--transition-enter-active{transition:opacity 1s ease;opacity:1}.inovua-react-toolkit-date-input__overlay--has-transition.inovua-react-toolkit-date-input__overlay--transition-leave{visibility:visible;opacity:1}.inovua-react-toolkit-date-input__overlay--has-transition.inovua-react-toolkit-date-input__overlay--transition-leave-active{transition:opacity 1s ease;opacity:0}.inovua-react-toolkit-date-input__overlay__content{position:relative;z-index:1}.inovua-react-toolkit-date-input__overlay__arrow-wrapper{position:absolute;overflow:hidden}.inovua-react-toolkit-date-input__overlay__arrow-wrapper--bottom,.inovua-react-toolkit-date-input__overlay__arrow-wrapper--top{transform:translateX(-50%)}.inovua-react-toolkit-date-input__overlay__arrow-wrapper--left,.inovua-react-toolkit-date-input__overlay__arrow-wrapper--right{transform:translateY(-50%)}.inovua-react-toolkit-date-input__overlay__arrow{position:absolute;transform-origin:center}.inovua-react-toolkit-date-input__overlay__arrow--top{left:50%;top:0}.inovua-react-toolkit-date-input__overlay__arrow--left,.inovua-react-toolkit-date-input__overlay__arrow--top{transform:translateX(-50%) translateY(-50%) rotate(45deg)}.inovua-react-toolkit-date-input__overlay__arrow--left{top:50%;left:0}.inovua-react-toolkit-date-input__overlay__arrow--right{right:0;top:50%;transform:translateX(50%) translateY(-50%) rotate(45deg)}.inovua-react-toolkit-date-input__overlay__arrow--bottom{left:50%;bottom:0;transform:translateX(-50%) translateY(50%) rotate(45deg)}.inovua-react-toolkit-combo-box{display:flex;align-self:center;position:relative;box-sizing:border-box;text-align:start;direction:ltr;outline:0;width:140px;vertical-align:middle}.inovua-react-toolkit-combo-box *,.inovua-react-toolkit-combo-box :after,.inovua-react-toolkit-combo-box :before{box-sizing:border-box}.inovua-react-toolkit-combo-box--rtl{direction:rtl}.inovua-react-toolkit-combo-box--inlineFlex{display:inline-flex}.inovua-react-toolkit-combo-box__list{z-index:100;min-height:28px}.inovua-react-toolkit-combo-box__list:not(.inovua-react-toolkit-combo-box__list--relative-to-viewport){left:-1px;right:-1px;min-width:100%;position:absolute}.inovua-react-toolkit-combo-box__list--position-top:not(.inovua-react-toolkit-combo-box__list--relative-to-viewport){bottom:100%}.inovua-react-toolkit-combo-box__list--position-bottom:not(.inovua-react-toolkit-combo-box__list--relative-to-viewport){top:100%}.inovua-react-toolkit-combo-box__list__virtual-list{outline:none;overflow:auto;max-height:300px}.inovua-react-toolkit-combo-box__list__item{cursor:pointer;-webkit-user-select:none;-moz-user-select:none;user-select:none;width:100%}.inovua-react-toolkit-combo-box__list__item--rtl{direction:rtl}.inovua-react-toolkit-combo-box__list__item--ellipsis{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.inovua-react-toolkit-combo-box__list__empty-text,.inovua-react-toolkit-combo-box__list__loading-text,.inovua-react-toolkit-combo-box__list__new-custom-tag-text{padding:9px;text-align:center}.inovua-react-toolkit-combo-box__list__loading-text{position:absolute;left:0;top:0;right:0;bottom:0;z-index:100;display:flex;align-items:center;justify-content:center}.inovua-react-toolkit-combo-box__input__wrapper{display:flex;max-width:100%;margin-bottom:2px}.inovua-react-toolkit-combo-box__input__wrapper--invisible{position:absolute;left:-20000px}.inovua-react-toolkit-combo-box__input{border:0;outline:none;max-width:100%;min-width:3px;font-family:inherit;font-size:inherit;background:none}.inovua-react-toolkit-combo-box__input::-ms-clear{display:none}.inovua-react-toolkit-combo-box__input__placeholder{color:#bbb}.inovua-react-toolkit-combo-box__value{display:flex;flex:1;flex-wrap:wrap;align-items:center;padding:0 2px}.inovua-react-toolkit-combo-box__value--no-wrap{flex-wrap:nowrap;overflow:hidden}.inovua-react-toolkit-combo-box__tools{position:unset;display:flex;margin-bottom:1px}.inovua-react-toolkit-combo-box__value__tag{display:flex;cursor:pointer;max-width:calc(100% - 5px)}.inovua-react-toolkit-combo-box__value__display-value{display:inline-block;align-self:center;margin-bottom:2px;max-width:calc(100% - 5px)}.inovua-react-toolkit-combo-box__value__display-value,.inovua-react-toolkit-combo-box__value__tag--ellipsis .inovua-react-toolkit-combo-box__value__tag__label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.inovua-react-toolkit-combo-box__value__tag__label{flex:1}.inovua-react-toolkit-combo-box__toggle-icon,.inovua-react-toolkit-combo-box__value__tag__clear-icon{display:flex;align-items:center;cursor:pointer}.inovua-react-toolkit-combo-box__toggle-icon{position:relative}.react-scroll-container__scroller,.react-virtual-scroll-container__scroll-container{outline:none}.inovua-react-toolkit-button{-webkit-appearance:none;-moz-appearance:none;appearance:none;border-radius:0;font-family:inherit;-webkit-user-select:none;-moz-user-select:none;user-select:none;text-align:start;vertical-align:middle;cursor:pointer;display:inline-flex;flex-direction:row;border:none;align-items:center}.inovua-react-toolkit-button,.inovua-react-toolkit-button *,.inovua-react-toolkit-button:after,.inovua-react-toolkit-button :after,.inovua-react-toolkit-button:before,.inovua-react-toolkit-button :before{box-sizing:border-box}.inovua-react-toolkit-button:focus{outline:0}button.inovua-react-toolkit-button{padding:0}.inovua-react-toolkit-button__text{flex:1 0 0%}@media (-ms-high-contrast:none),screen and (-ms-high-contrast:active){.inovua-react-toolkit-button__text{flex:1 0 auto}}.inovua-react-toolkit-button__icon-wrap{display:flex;flex-flow:row}.inovua-react-toolkit-button--disabled{cursor:default}.inovua-react-toolkit-button--overflow-visible{overflow:visible}.inovua-react-toolkit-button--overflow-hidden{overflow:hidden}.inovua-react-toolkit-button--ellipsis,.inovua-react-toolkit-button--ellipsis.inovua-react-toolkit-button--wrap,.inovua-react-toolkit-button--ellipsis.inovua-react-toolkit-button--wrap .inovua-react-toolkit-button__text,.inovua-react-toolkit-button--ellipsis .inovua-react-toolkit-button__text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.inovua-react-toolkit-button--nowrap,.inovua-react-toolkit-button--nowrap .inovua-react-toolkit-button__text{white-space:nowrap}.inovua-react-toolkit-button--wrap,.inovua-react-toolkit-button--wrap .inovua-react-toolkit-button__text{white-space:normal}.inovua-react-toolkit-button--rtl{direction:rtl}.inovua-react-toolkit-button--align-center{justify-content:center}.inovua-react-toolkit-button--align-center .inovua-react-toolkit-button__text{text-align:center}.inovua-react-toolkit-button--align-start:not(.inovua-react-toolkit-button--icon-position-top):not(.inovua-react-toolkit-button--icon-position-bottom){justify-content:flex-start}.inovua-react-toolkit-button--align-start:not(.inovua-react-toolkit-button--icon-position-top):not(.inovua-react-toolkit-button--icon-position-bottom) .inovua-react-toolkit-button__text{text-align:start}.inovua-react-toolkit-button--align-start.inovua-react-toolkit-button--icon-position-bottom,.inovua-react-toolkit-button--align-start.inovua-react-toolkit-button--icon-position-top{align-items:flex-start}.inovua-react-toolkit-button--align-start.inovua-react-toolkit-button--icon-position-bottom .inovua-react-toolkit-button__text,.inovua-react-toolkit-button--align-start.inovua-react-toolkit-button--icon-position-top .inovua-react-toolkit-button__text{text-align:start}.inovua-react-toolkit-button--align-end:not(.inovua-react-toolkit-button--icon-position-top):not(.inovua-react-toolkit-button--icon-position-bottom){justify-content:flex-end}.inovua-react-toolkit-button--align-end:not(.inovua-react-toolkit-button--icon-position-top):not(.inovua-react-toolkit-button--icon-position-bottom) .inovua-react-toolkit-button__text{text-align:end}.inovua-react-toolkit-button--align-end.inovua-react-toolkit-button--icon-position-bottom,.inovua-react-toolkit-button--align-end.inovua-react-toolkit-button--icon-position-top{align-items:flex-end}.inovua-react-toolkit-button--align-end.inovua-react-toolkit-button--icon-position-bottom .inovua-react-toolkit-button__text,.inovua-react-toolkit-button--align-end.inovua-react-toolkit-button--icon-position-top .inovua-react-toolkit-button__text{text-align:end}.inovua-react-toolkit-button--align-left{justify-content:flex-start}.inovua-react-toolkit-button--align-left .inovua-react-toolkit-button__text{text-align:left}.inovua-react-toolkit-button--align-right{justify-content:flex-end}.inovua-react-toolkit-button--align-right .inovua-react-toolkit-button__text{text-align:right}.inovua-react-toolkit-button--vertical-align-center:not(.inovua-react-toolkit-button--icon-position-top):not(.inovua-react-toolkit-button--icon-position-bottom),.inovua-react-toolkit-button--vertical-align-middle:not(.inovua-react-toolkit-button--icon-position-top):not(.inovua-react-toolkit-button--icon-position-bottom){align-items:center}.inovua-react-toolkit-button--vertical-align-center.inovua-react-toolkit-button--icon-position-bottom,.inovua-react-toolkit-button--vertical-align-center.inovua-react-toolkit-button--icon-position-top,.inovua-react-toolkit-button--vertical-align-middle.inovua-react-toolkit-button--icon-position-bottom,.inovua-react-toolkit-button--vertical-align-middle.inovua-react-toolkit-button--icon-position-top{justify-content:center}.inovua-react-toolkit-button--vertical-align-top:not(.inovua-react-toolkit-button--icon-position-top):not(.inovua-react-toolkit-button--icon-position-bottom){align-items:flex-start}.inovua-react-toolkit-button--vertical-align-top.inovua-react-toolkit-button--icon-position-bottom,.inovua-react-toolkit-button--vertical-align-top.inovua-react-toolkit-button--icon-position-top{justify-content:flex-start}.inovua-react-toolkit-button--vertical-align-bottom:not(.inovua-react-toolkit-button--icon-position-top):not(.inovua-react-toolkit-button--icon-position-bottom){align-items:flex-end}.inovua-react-toolkit-button--vertical-align-bottom.inovua-react-toolkit-button--icon-position-bottom,.inovua-react-toolkit-button--vertical-align-bottom.inovua-react-toolkit-button--icon-position-top{justify-content:flex-end}.inovua-react-toolkit-button--icon-position-bottom,.inovua-react-toolkit-button--icon-position-top{display:inline-flex;flex-direction:column}.inovua-react-toolkit-button--icon-position-bottom .inovua-react-toolkit-button__text,.inovua-react-toolkit-button--icon-position-top .inovua-react-toolkit-button__text{flex:none}.inovua-react-pagination-toolbar{box-sizing:border-box;align-items:center}.inovua-react-pagination-toolbar *,.inovua-react-pagination-toolbar :after,.inovua-react-pagination-toolbar :before{box-sizing:border-box}.inovua-react-pagination-toolbar__region{display:flex;align-items:center}.inovua-react-pagination-toolbar__spacer{flex:1}.inovua-react-pagination-toolbar__region{white-space:nowrap}.inovua-react-pagination-toolbar__current-page{margin:0 8px}.inovua-react-pagination-toolbar__page-size-combo{margin-right:2px;margin-left:8px}.inovua-react-pagination-toolbar--ltr .inovua-react-pagination-toolbar__page-text{margin-left:8px}.inovua-react-pagination-toolbar--rtl .inovua-react-pagination-toolbar__page-text{margin-right:8px}.inovua-react-pagination-toolbar__page-count-text{display:inline-block;text-align:end}.inovua-react-pagination-toolbar--ltr .inovua-react-pagination-toolbar__page-count-text{margin-right:8px}.inovua-react-pagination-toolbar--rtl .inovua-react-pagination-toolbar__page-count-text{margin-left:8px}.inovua-react-pagination-toolbar__page-size-combo{display:inline-flex}.inovua-react-pagination-toolbar__current-page{align-self:stretch}.inovua-react-pagination-toolbar__icon{vertical-align:middle;fill:grey;outline:none}@keyframes inovua-react-toolkit-load-mask-animation__loader-fade{0%{opacity:1}to{opacity:.25}}.inovua-react-toolkit-load-mask{position:absolute;width:100%;height:100%;display:none;top:0;left:0}.inovua-react-toolkit-load-mask--visible{display:flex;flex-flow:column;align-items:center;justify-content:center}.inovua-react-toolkit-load-mask__loader{position:relative}.inovua-react-toolkit-load-mask__background-layer{position:absolute;width:100%;height:100%;top:0;left:0}.inovua-react-toolkit-load-mask__loader-loadbar{animation:inovua-react-toolkit-load-mask-animation__loader-fade 1s linear infinite;position:absolute;background:#000;left:44.5%;top:37%;width:12%;height:26%;opacity:0}.inovua-react-toolkit-load-mask__loader-container{display:flex;flex-direction:column;align-items:center}.inovua-react-toolkit-load-mask__loader-loadbar--1{transform:rotate(0deg) translateY(-142%);animation-delay:0s}.inovua-react-toolkit-load-mask__loader-loadbar--2{transform:rotate(30deg) translateY(-142%);animation-delay:-.9167s}.inovua-react-toolkit-load-mask__loader-loadbar--3{transform:rotate(60deg) translateY(-142%);animation-delay:-1.8333s}.inovua-react-toolkit-load-mask__loader-loadbar--4{transform:rotate(90deg) translateY(-142%);animation-delay:-2.75s}.inovua-react-toolkit-load-mask__loader-loadbar--5{transform:rotate(120deg) translateY(-142%);animation-delay:-3.6667s}.inovua-react-toolkit-load-mask__loader-loadbar--6{transform:rotate(150deg) translateY(-142%);animation-delay:-4.5833s}.inovua-react-toolkit-load-mask__loader-loadbar--7{transform:rotate(180deg) translateY(-142%);animation-delay:-5.5s}.inovua-react-toolkit-load-mask__loader-loadbar--8{transform:rotate(210deg) translateY(-142%);animation-delay:-6.4167s}.inovua-react-toolkit-load-mask__loader-loadbar--9{transform:rotate(240deg) translateY(-142%);animation-delay:-7.3333s}.inovua-react-toolkit-load-mask__loader-loadbar--10{transform:rotate(270deg) translateY(-142%);animation-delay:-8.25s}.inovua-react-toolkit-load-mask__loader-loadbar--11{transform:rotate(300deg) translateY(-142%);animation-delay:-9.1667s}.inovua-react-toolkit-load-mask__loader-loadbar--12{transform:rotate(330deg) translateY(-142%);animation-delay:-10.0833s}.InovuaReactDataGrid__column-layout--has-flex .inovua-react-virtual-list__row-container,.InovuaReactDataGrid__column-layout--has-flex .inovua-react-virtual-list__virtual-scroller{min-width:100%}.InovuaReactDataGrid__unlocked-wrapper{display:inline-flex;flex-flow:row;flex:1}.InovuaReactDataGrid__group-toolbar-insert-arrow{display:inline-block;vertical-align:middle;width:3px}.InovuaReactDataGrid__nest-block{display:inline-block;height:100%}.react-scroll-container__scrollbar{z-index:10}.InovuaReactDataGrid__header-group{display:flex;flex-flow:column;position:relative}.InovuaReactDataGrid__header-group__title--align-start{text-align:start}.InovuaReactDataGrid__header-group__title--align-left{text-align:left}.InovuaReactDataGrid__header-group__title--align-center{text-align:center}.InovuaReactDataGrid__header-group__title--align-end{text-align:end}.InovuaReactDataGrid__header-group__title--align-right{text-align:right}.InovuaReactDataGrid__header-group-cells{display:flex;flex-flow:row;flex-wrap:nowrap;flex:1;-ms-flex:1 1 auto}.InovuaReactDataGrid__empty-wrapper{position:absolute;top:0;left:0;right:0;bottom:0}.InovuaReactDataGrid__empty-wrapper,.InovuaReactDataGrid__loading-wrapper{overflow:auto;z-index:10000;display:flex;flex-flow:column;align-items:center;justify-content:center}.InovuaReactDataGrid__empty-wrapper{z-index:1}.InovuaReactDataGrid__cell--transition,.InovuaReactDataGrid__column-header--transition{transition-property:width,min-width,max-width,transform,padding-left,padding-right,border-width}.InovuaReactDataGrid__locked-end-wrapper--transition,.InovuaReactDataGrid__locked-start-wrapper--transition{transition-property:width,min-width,transform}.InovuaReactDataGrid__header-group--transition{transition-property:width}.InovuaReactDataGrid--virtualize-columns .InovuaReactDataGrid__cell--transition.InovuaReactDataGrid__cell--showing:not(.InovuaReactDataGrid__cell--group-cell){transition-property:transform,padding-left,padding-right,border-width}.InovuaReactDataGrid__cell__node-tool--loading{animation:InovuaReactDataGrid__cell__node-tool-rotate 1.4s linear infinite;transform:translateZ(0);margin-left:2px}@keyframes InovuaReactDataGrid__cell__node-tool-rotate{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}.InovuaReactDataGrid__footer-row,.InovuaReactDataGrid__footer-row-group,.InovuaReactDataGrid__locked-row,.InovuaReactDataGrid__locked-row-group{display:flex;flex-flow:row}.InovuaReactDataGrid__locked-row-group--locked-end{position:absolute;left:0}.InovuaReactDataGrid__footer-row-group--locked-end{position:absolute;left:0;height:100%;top:0}.InovuaReactDataGrid__footer-row{position:relative;overflow:visible}.InovuaReactDataGrid__footer-row--rtl,.InovuaReactDataGrid__footer-row-group--rtl{flex-flow:row-reverse}.InovuaReactDataGrid__footer-row-cell,.InovuaReactDataGrid__locked-row-cell{position:relative}.InovuaReactDataGrid__portal-host{position:absolute;top:0;left:0}.InovuaReactDataGrid__portal-host .inovua-react-toolkit-date-input__overlay{z-index:20000}.InovuaReactDataGrid__row-drag-proxy{cursor:grabbing;position:absolute;z-index:11000;flex-flow:row;align-items:center;justify-content:flex-start;white-space:nowrap;flex-wrap:nowrap;-webkit-user-select:none;-moz-user-select:none;user-select:none;min-width:150px;padding:8px;border-radius:2px;opacity:.85;display:inline-flex;pointer-events:none}.InovuaReactDataGrid__row-drag-proxy--visible{display:inline-flex}.InovuaReactDataGrid__row-drag-proxy--hidden{display:none}.InovuaReactDataGrid__cell__editor--date>.inovua-react-toolkit-date-input,.InovuaReactDataGrid__cell__editor--number>.inovua-react-toolkit-numeric-input{height:100%;width:100%}.InovuaReactDataGrid__cell__editor--select>.inovua-react-toolkit-combo-box{display:flex;flex-flow:row;position:absolute;width:100%;height:100%;top:0;left:0}.inovua-react-toolkit-checkbox.inovua-react-toolkit-checkbox--theme-default-light{outline:none;color:#555e68;font-size:14px}.inovua-react-toolkit-checkbox.inovua-react-toolkit-checkbox--theme-default-light.inovua-react-toolkit-checkbox--ltr .inovua-react-toolkit-checkbox__inner-content-wrapper{margin-left:8px}.inovua-react-toolkit-checkbox.inovua-react-toolkit-checkbox--theme-default-light.inovua-react-toolkit-checkbox--rtl .inovua-react-toolkit-checkbox__inner-content-wrapper{margin-right:8px}.inovua-react-toolkit-checkbox.inovua-react-toolkit-checkbox--theme-default-light.inovua-react-toolkit-checkbox--checked .inovua-react-toolkit-checkbox__icon-wrapper{fill:#7986cb;stroke:#e8e8e8}.inovua-react-toolkit-checkbox.inovua-react-toolkit-checkbox--theme-default-light.inovua-react-toolkit-checkbox--unchecked .inovua-react-toolkit-checkbox__icon-wrapper{stroke:#99a1aa}.inovua-react-toolkit-checkbox.inovua-react-toolkit-checkbox--theme-default-light.inovua-react-toolkit-checkbox--indeterminate .inovua-react-toolkit-checkbox__icon-wrapper{fill:#e8e8e8}.inovua-react-toolkit-checkbox.inovua-react-toolkit-checkbox--theme-default-light.inovua-react-toolkit-checkbox--indeterminate .inovua-react-toolkit-checkbox__icon-wrapper svg{border-radius:2px;background:#7986cb}.inovua-react-toolkit-checkbox.inovua-react-toolkit-checkbox--theme-default-light.inovua-react-toolkit-checkbox--browser-native{margin-left:5px;margin-right:5px}.inovua-react-toolkit-checkbox.inovua-react-toolkit-checkbox--theme-default-light.inovua-react-toolkit-checkbox--disabled{color:rgba(85,94,104,.5)}.inovua-react-toolkit-checkbox.inovua-react-toolkit-checkbox--theme-default-light.inovua-react-toolkit-checkbox--disabled.inovua-react-toolkit-checkbox--checked .inovua-react-toolkit-checkbox__icon-wrapper{fill:rgba(121,134,203,.5);stroke:hsla(0,0%,91%,.5)}.inovua-react-toolkit-checkbox.inovua-react-toolkit-checkbox--theme-default-light.inovua-react-toolkit-checkbox--disabled.inovua-react-toolkit-checkbox--unchecked .inovua-react-toolkit-checkbox__icon-wrapper{stroke:rgba(153,161,170,.5)}.inovua-react-toolkit-checkbox.inovua-react-toolkit-checkbox--theme-default-light.inovua-react-toolkit-checkbox--disabled.inovua-react-toolkit-checkbox--indeterminate .inovua-react-toolkit-checkbox__icon-wrapper{fill:hsla(0,0%,91%,.5)}.inovua-react-toolkit-checkbox.inovua-react-toolkit-checkbox--theme-default-light.inovua-react-toolkit-checkbox--disabled.inovua-react-toolkit-checkbox--indeterminate .inovua-react-toolkit-checkbox__icon-wrapper svg{border-radius:2px;background:rgba(121,134,203,.5)}.inovua-react-toolkit-checkbox.inovua-react-toolkit-checkbox--theme-default-light.inovua-react-toolkit-checkbox--focused .inovua-react-toolkit-checkbox__icon-wrapper{box-shadow:0 0 0 3px rgba(121,134,203,.5);border-radius:2px}.inovua-react-toolkit-arrow-scroller.inovua-react-toolkit-arrow-scroller--theme-default-light .inovua-react-toolkit-arrow-scroller__arrow{background:#fff;fill:#99a1aa}.inovua-react-toolkit-arrow-scroller.inovua-react-toolkit-arrow-scroller--theme-default-light .inovua-react-toolkit-arrow-scroller__arrow:before{content:\"\";position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;background:transparent}.inovua-react-toolkit-arrow-scroller.inovua-react-toolkit-arrow-scroller--theme-default-light .inovua-react-toolkit-arrow-scroller__arrow:hover{fill:#e8e8e8}.inovua-react-toolkit-arrow-scroller.inovua-react-toolkit-arrow-scroller--theme-default-light .inovua-react-toolkit-arrow-scroller__arrow:hover:before{background:rgba(121,134,203,.15)}.inovua-react-toolkit-arrow-scroller.inovua-react-toolkit-arrow-scroller--theme-default-light .inovua-react-toolkit-arrow-scroller__arrow--direction-right{border-left:1px solid #e4e3e2}.inovua-react-toolkit-arrow-scroller.inovua-react-toolkit-arrow-scroller--theme-default-light .inovua-react-toolkit-arrow-scroller__arrow--direction-left{border-right:1px solid #e4e3e2}.inovua-react-toolkit-arrow-scroller.inovua-react-toolkit-arrow-scroller--theme-default-light .inovua-react-toolkit-arrow-scroller__arrow--direction-down{border-top:1px solid #e4e3e2}.inovua-react-toolkit-arrow-scroller.inovua-react-toolkit-arrow-scroller--theme-default-light .inovua-react-toolkit-arrow-scroller__arrow--direction-up{border-bottom:1px solid #e4e3e2}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light.inovua-react-toolkit-menu--mobile .inovua-react-toolkit-arrow-scroller__arrow{height:20px}.inovua-react-toolkit-date-input--theme-default-light{border:1px solid #cdcecd;border-radius:1px;transition:border .2s;background:#fff;min-height:28px}.inovua-react-toolkit-date-input--theme-default-light:hover{border:1px solid #7986cb}.inovua-react-toolkit-date-input--theme-default-light.inovua-react-toolkit-date-input--disabled{border:1px solid #cdcecd}.inovua-react-toolkit-date-input--theme-default-light.inovua-react-toolkit-date-input--disabled:not(.inovua-react-toolkit-date-input__calendar-icon--disabled){opacity:.5}.inovua-react-toolkit-date-input--theme-default-light .inovua-react-toolkit-date-input__input{padding:0 8px;min-height:28px;height:28px;color:#555e68;font-size:14px}.inovua-react-toolkit-date-input--theme-default-light .inovua-react-toolkit-date-input__input::-ms-clear{display:none}.inovua-react-toolkit-date-input--theme-default-light .inovua-react-toolkit-date-input__input:not(.inovua-react-toolkit-date-input__input--disabled){background:#fff;color:#555e68}.inovua-react-toolkit-date-input--theme-default-light .inovua-react-toolkit-date-input__input:not(.inovua-react-toolkit-date-input__input--disabled)::-ms-clear{display:none}.inovua-react-toolkit-date-input--theme-default-light .inovua-react-toolkit-date-input__input::-moz-placeholder{color:rgba(85,94,104,.7)}.inovua-react-toolkit-date-input--theme-default-light .inovua-react-toolkit-date-input__input::placeholder{color:rgba(85,94,104,.7)}.inovua-react-toolkit-date-input--theme-default-light .inovua-react-toolkit-date-input__input-placeholder{color:rgba(85,94,104,.7)}.inovua-react-toolkit-date-input--theme-default-light.inovua-react-toolkit-date-input--focused{border:1px solid #7986cb;box-shadow:0 0 0 2px rgba(121,134,203,.4)}.inovua-react-toolkit-date-input--theme-default-light>.inovua-react-toolkit-date-input__picker{box-shadow:0 2px 12px rgba(0,0,0,.34375)}.inovua-react-toolkit-date-input--theme-default-light.inovua-react-toolkit-date-input--rtl .inovua-react-toolkit-date-input__calendar-icon{margin-left:8px}.inovua-react-toolkit-date-input--theme-default-light.inovua-react-toolkit-date-input--ltr .inovua-react-toolkit-date-input__calendar-icon{margin-right:8px}.inovua-react-toolkit-date-input--theme-default-light .inovua-react-toolkit-date-input__calendar-icon{cursor:pointer;display:flex;align-items:center;justify-content:center;fill:#99a1aa}.inovua-react-toolkit-date-input--theme-default-light .inovua-react-toolkit-date-input__calendar-icon:hover:not(.inovua-react-toolkit-date-input__calendar-icon--disabled){fill:#99a1aa}.inovua-react-toolkit-date-input--theme-default-light .inovua-react-toolkit-date-input__calendar-icon:active:not(.inovua-react-toolkit-date-input__calendar-icon--disabled){margin-top:1px}.inovua-react-toolkit-date-input--theme-default-light .inovua-react-toolkit-date-input__clear-icon{color:#99a1aa;fill:#99a1aa;margin-right:8px;flex:1 0 auto;transform:translateY(0)}.inovua-react-toolkit-date-input--theme-default-light .inovua-react-toolkit-date-input__clear-icon:active{transform:translateY(1px)}.inovua-react-toolkit-date-input--theme-default-light .inovua-react-toolkit-date-input__clear-icon--disabled{display:flex}.inovua-react-toolkit-date-input--theme-default-light .inovua-react-toolkit-date-input__clear-icon--animation{animation:inovua-react-toolkit-date-input-animation-fade-in .2s}@keyframes inovua-react-toolkit-date-input-animation-fade-in{0%{opacity:0}to{opacity:1}}.inovua-react-toolkit-date-input--theme-default-light .inovua-react-toolkit-date-input__clear-icon--hidden{visibility:hidden;margin-right:4px}.inovua-react-toolkit-date-input--theme-default-light .inovua-react-toolkit-date-input__clear-icon{transition:fill .25s ease-in-out}.inovua-react-toolkit-date-input--theme-default-light.inovua-react-toolkit-date-input--focused .inovua-react-toolkit-date-input__clear-icon,.inovua-react-toolkit-date-input--theme-default-light .inovua-react-toolkit-date-input__clear-icon:hover{color:#99a1aa;fill:#99a1aa}.inovua-react-toolkit-calendar__clock--theme-default-light .inovua-react-toolkit-calendar__clock-center{background:#e8f2ff}.inovua-react-toolkit-calendar__clock--theme-default-light .inovua-react-toolkit-calendar__clock-overlay{background:#fff;border-style:solid;border-color:#99a1aa}.inovua-react-toolkit-calendar__clock--theme-default-light .inovua-react-toolkit-calendar__clock-hand,.inovua-react-toolkit-calendar__clock--theme-default-light .inovua-react-toolkit-calendar__clock-tick{background:#99a1aa}.inovua-react-toolkit-calendar__clock--theme-default-light .inovua-react-toolkit-calendar__clock-hand-second{background:red}.inovua-react-toolkit-calendar__footer--theme-default-light{padding:4px 12px 6px;display:flex;flex:1}.inovua-react-toolkit-calendar__footer--theme-default-light .inovua-react-toolkit-calendar__footer-button{min-width:70px}.inovua-react-toolkit-calendar__footer--theme-default-light .inovua-react-toolkit-calendar__footer-button.inovua-react-toolkit-calendar__footer-button-cancel.inovua-react-toolkit-calendar__footer-button-cancel.inovua-react-toolkit-calendar__footer-button-cancel{border:1px solid #a5afba;color:#555e68;max-height:28px;border-radius:1px}.inovua-react-toolkit-calendar__footer--theme-default-light .inovua-react-toolkit-calendar__footer-button.inovua-react-toolkit-calendar__footer-button-today.inovua-react-toolkit-calendar__footer-button-today.inovua-react-toolkit-calendar__footer-button-today{max-height:28px;border-radius:1px}.inovua-react-toolkit-calendar__footer--theme-default-light .inovua-react-toolkit-calendar__footer-button.inovua-react-toolkit-calendar__footer-button-today.inovua-react-toolkit-calendar__footer-button-today.inovua-react-toolkit-calendar__footer-button-today:hover{color:#555e68}.inovua-react-toolkit-calendar__footer--theme-default-light .inovua-react-toolkit-calendar__footer-button+.inovua-react-toolkit-calendar__footer-button{margin-left:16px}.inovua-react-toolkit-calendar__date-format-spinner--theme-default-light{border:1px solid grey}.inovua-react-toolkit-calendar__date-format-spinner--theme-default-light input{padding:5px;border:none;outline:none}.inovua-react-toolkit-calendar__date-format-spinner--theme-default-light:not([disabled]).inovua-react-toolkit-calendar__date-format-spinner--focused{border:1px solid #fff}.inovua-react-toolkit-calendar__date-format-spinner--theme-default-light:not([disabled]) .inovua-react-toolkit-calendar__date-format-spinner-arrow{transform:translateY(0);cursor:pointer}.inovua-react-toolkit-calendar__date-format-spinner--theme-default-light:not([disabled]) .inovua-react-toolkit-calendar__date-format-spinner-arrow:active{fill:#fff;transform:translateY(1px)}.inovua-react-toolkit-calendar__year-view--theme-default-light{padding:2px;display:flex;align-items:center}.inovua-react-toolkit-calendar__year-view--theme-default-light .inovua-react-toolkit-calendar__year-view-row{min-height:36px;min-width:144px}.inovua-react-toolkit-calendar__year-view--theme-default-light .inovua-react-toolkit-calendar__year-view-month{padding:5px;cursor:pointer;display:flex;align-items:center;justify-content:center;min-height:24px;max-height:24px;min-width:40px;max-width:40px;height:24px;border-radius:1px;margin:1px}.inovua-react-toolkit-calendar__year-view--theme-default-light .inovua-react-toolkit-calendar__year-view-month:hover{background:rgba(121,134,203,.15);color:#555e68}.inovua-react-toolkit-calendar__year-view--theme-default-light .inovua-react-toolkit-calendar__year-view-month--disabled{color:rgba(85,94,104,.5)}.inovua-react-toolkit-calendar__year-view--theme-default-light .inovua-react-toolkit-calendar__year-view-month--value{color:#555e68;background:rgba(121,134,203,.25) padding-box}.inovua-react-toolkit-calendar__year-view--theme-default-light .inovua-react-toolkit-calendar__year-view-month--active.inovua-react-toolkit-calendar__date-format-spinner__year-view-month--value{background:#fff padding-box}.inovua-react-toolkit-calendar__decade-view--theme-default-light{padding:2px 0;min-height:92px;min-width:238px}.inovua-react-toolkit-calendar__decade-view--theme-default-light .inovua-react-toolkit-calendar__decade-view-row{min-width:190px;min-height:46px;justify-content:center}.inovua-react-toolkit-calendar__decade-view--theme-default-light .inovua-react-toolkit-calendar__decade-view-arrow{cursor:pointer;position:relative;fill:#99a1aa;-webkit-user-select:none;-moz-user-select:none;user-select:none;width:20px;height:20px;display:flex;align-items:center;justify-content:center;border-radius:1px;transition:background .3s,fill .3s}.inovua-react-toolkit-calendar__decade-view--theme-default-light .inovua-react-toolkit-calendar__decade-view-arrow:hover{fill:#99a1aa;background:rgba(121,134,203,.15)}.inovua-react-toolkit-calendar__decade-view--theme-default-light .inovua-react-toolkit-calendar__decade-view-arrow--disabled{fill:rgba(82,82,82,.5)}.inovua-react-toolkit-calendar__decade-view--theme-default-light .inovua-react-toolkit-calendar__decade-view-arrow--prev:not(.inovua-react-toolkit-calendar__decade-view-arrow--disabled):active{right:1px}.inovua-react-toolkit-calendar__decade-view--theme-default-light .inovua-react-toolkit-calendar__decade-view-arrow--next:not(.inovua-react-toolkit-calendar__decade-view-arrow--disabled):active{left:1px}.inovua-react-toolkit-calendar__decade-view--theme-default-light .inovua-react-toolkit-calendar__decade-view-year{margin:5px 1px;cursor:pointer;display:flex;align-items:center;justify-content:center;min-height:24px;max-height:24px;min-width:44px;max-width:44px;height:24px;border-radius:1px}.inovua-react-toolkit-calendar__decade-view--theme-default-light .inovua-react-toolkit-calendar__decade-view-year:hover{background:rgba(121,134,203,.15);color:#555e68}.inovua-react-toolkit-calendar__decade-view--theme-default-light .inovua-react-toolkit-calendar__decade-view-year--disabled{color:rgba(85,94,104,.5)}.inovua-react-toolkit-calendar__decade-view--theme-default-light .inovua-react-toolkit-calendar__decade-view-year--value{color:#555e68;background:rgba(121,134,203,.25) padding-box}.inovua-react-toolkit-calendar__month-decade-view--theme-default-light{padding:2px;background:#fff}.inovua-react-toolkit-calendar__month-decade-view--theme-default-light .inovua-react-toolkit-calendar__month-decade-view__separator{width:100%;height:1px;background:#e4e3e2;margin:5px auto}.inovua-react-toolkit-calendar__month-decade-view--theme-default-light .inovua-react-toolkit-calendar__decade-view--theme-default-light,.inovua-react-toolkit-calendar__month-decade-view--theme-default-light .inovua-react-toolkit-calendar__year-view--theme-default-light{border:none;min-height:110px;display:flex;align-items:center;width:100%}.inovua-react-toolkit-calendar__nav-bar .inovua-react-toolkit-calendar__month-decade-view--theme-default-light{font-size:14px;color:#555e68}.inovua-react-toolkit-calendar__nav-bar--theme-default-light{padding:0 2px;font-size:14px;background:#fff;color:#555e68;border-radius:1px;fill:#99a1aa}.inovua-react-toolkit-calendar__nav-bar--theme-default-light.inovua-react-toolkit-calendar__nav-bar-month-decade-view-modal{background:rgba(121,134,203,.5)}.inovua-react-toolkit-calendar__nav-bar--theme-default-light .inovua-react-toolkit-calendar__nav-bar-arrows-pos{min-height:32px;min-width:32px;display:flex;align-items:center;justify-content:center;transition:background .2s;border-radius:1px}.inovua-react-toolkit-calendar__nav-bar--theme-default-light .inovua-react-toolkit-calendar__nav-bar-arrows-pos:hover{fill:#99a1aa;background:rgba(121,134,203,.15)}.inovua-react-toolkit-calendar__nav-bar--theme-default-light .inovua-react-toolkit-calendar__nav-bar-date{min-height:32px;height:32px;padding:2px 0;display:flex;align-items:center;justify-content:center}.inovua-react-toolkit-calendar__nav-bar--theme-default-light .inovua-react-toolkit-calendar__nav-bar-arrows-div{display:inline-flex}.inovua-react-toolkit-calendar__nav-bar--theme-default-light .inovua-react-toolkit-calendar__nav-bar-month-decade-view{background:#fff;display:flex;align-items:center}.inovua-react-toolkit-calendar__nav-bar--theme-default-light.inovua-react-toolkit-calendar__nav-bar--with-month-decade-view .inovua-react-toolkit-calendar__nav-bar-date{cursor:pointer}.inovua-react-toolkit-calendar__nav-bar--theme-default-light.inovua-react-toolkit-calendar__nav-bar--with-month-decade-view .inovua-react-toolkit-calendar__nav-bar-date-disabled{cursor:auto}.inovua-react-toolkit-calendar__nav-bar--theme-default-light .inovua-react-toolkit-calendar__nav-bar-arrow{fill:#99a1aa;display:flex;align-items:center;justify-content:center;padding:2px 0;transform:translateY(0)}.inovua-react-toolkit-calendar__nav-bar--theme-default-light .inovua-react-toolkit-calendar__nav-bar-arrow--disabled{fill:rgba(82,82,82,.5)}.inovua-react-toolkit-calendar__nav-bar--theme-default-light .inovua-react-toolkit-calendar__nav-bar-arrow:not(.inovua-react-toolkit-calendar__nav-bar-arrows-pos--disabled):active{transform:translateY(1px)}.inovua-react-toolkit-calendar__calendar--theme-default-light.inovua-react-toolkit-date-input__picker{box-shadow:0 0 8px 0 hsla(0,0%,43.9%,.5)}.inovua-react-toolkit-calendar__calendar--theme-default-light .inovua-react-toolkit-calendar__calendar--theme-default-light{border:none}.inovua-react-toolkit-calendar__calendar--theme-default-light .inovua-react-toolkit-calendar__clock{margin:8px 14px 32px 8px}.inovua-react-toolkit-calendar__calendar--theme-default-light .inovua-react-toolkit-calendar__clock-input{margin-left:4px}.inovua-react-toolkit-calendar__calendar--theme-default-light .inovua-react-toolkit-calendar__clock-input-spinner{border:1px solid #fff;margin-right:14px;border-radius:1px;background:#fff;cursor:pointer}.inovua-react-toolkit-calendar__calendar--theme-default-light .inovua-react-toolkit-calendar__clock-input-spinner:hover{margin-right:14px}.inovua-react-toolkit-calendar__calendar--theme-default-light .inovua-react-toolkit-calendar__clock-input-spinner--focused{border:1px solid #7986cb;background:#fff;box-shadow:0 0 0 2px rgba(121,134,203,.4);margin-right:14px;border-radius:1px}.inovua-react-toolkit-calendar__calendar--theme-default-light .inovua-react-toolkit-calendar__clock-input-spinner-arrow-wrapper{display:flex;flex-direction:column;justify-content:center;cursor:pointer}.inovua-react-toolkit-calendar__calendar--theme-default-light .inovua-react-toolkit-calendar__clock-input-spinner-arrow-wrapper .inovua-react-toolkit-calendar__clock-input-spinner-arrow{fill:#99a1aa;display:flex;align-items:center;justify-content:center;height:15px;width:24px;position:relative}.inovua-react-toolkit-calendar__calendar--theme-default-light .inovua-react-toolkit-calendar__clock-input-spinner-arrow-wrapper .inovua-react-toolkit-calendar__clock-input-spinner-arrow:before{content:\"\";position:absolute;top:0;left:0;height:15px;width:24px}.inovua-react-toolkit-calendar__calendar--theme-default-light .inovua-react-toolkit-calendar__clock-input-spinner-arrow-wrapper .inovua-react-toolkit-calendar__clock-input-spinner-arrow--disabled{fill:#e1e1e1}.inovua-react-toolkit-calendar__calendar--theme-default-light .inovua-react-toolkit-calendar__clock-input-spinner-arrow-wrapper .inovua-react-toolkit-calendar__clock-input-spinner-arrow:hover{fill:#99a1aa}.inovua-react-toolkit-calendar__calendar--theme-default-light .inovua-react-toolkit-calendar__clock-input-spinner-arrow-wrapper .inovua-react-toolkit-calendar__clock-input-spinner-arrow:hover:before{background:rgba(121,134,203,.15)}.inovua-react-toolkit-calendar__calendar--theme-default-light .inovua-react-toolkit-calendar__clock-input-spinner-arrow-wrapper .inovua-react-toolkit-calendar__clock-input-spinner-arrow:active{fill:#99a1aa}.inovua-react-toolkit-calendar__calendar--theme-default-light .inovua-react-toolkit-calendar__clock-input-spinner-arrow-wrapper .inovua-react-toolkit-calendar__clock-input-spinner-arrow:active:before{background:rgba(121,134,203,.25)}.inovua-react-toolkit-calendar__input--theme-default-light{border:none;outline:none;padding-left:8px;min-height:28px;color:#555e68;font-size:14px;background:#fff}.inovua-react-toolkit-calendar__input--theme-default-light.inovua-react-toolkit-calendar__input--disabled{background:#fff;color:#abb3bc}.inovua-react-toolkit-calendar__calendar--theme-default-light,.inovua-react-toolkit-calendar__date-input--theme-default-light,.inovua-react-toolkit-calendar__month-view--theme-default-light,.inovua-react-toolkit-calendar__transition-month-view--theme-default-light{font-size:14px}.inovua-react-toolkit-calendar__transition-month-view--theme-default-light{border:1px solid transparent}.inovua-react-toolkit-calendar__transition-month-view--theme-default-light .inovua-react-toolkit-calendar__calendar--theme-default-light,.inovua-react-toolkit-calendar__transition-month-view--theme-default-light .inovua-react-toolkit-calendar__month-view--theme-default-light,.inovua-react-toolkit-calendar__transition-month-view--theme-default-light .inovua-react-toolkit-calendar__multi-month-view--theme-default-light{border:none}.inovua-react-toolkit-calendar__navigation-view--theme-default-light{border:1px solid transparent}.inovua-react-toolkit-calendar__navigation-view--theme-default-light .inovua-react-toolkit-calendar__month-view,.inovua-react-toolkit-calendar__navigation-view--theme-default-light .inovua-react-toolkit-calendar__multi-month-view{border:none}.inovua-react-toolkit-calendar__month-view--theme-default-light{background:#fff;border:1px solid transparent;border-radius:1px}.inovua-react-toolkit-calendar__month-view--theme-default-light.inovua-react-toolkit-calendar__month-view-relative{position:relative}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-row{padding:0 4px}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-row.inovua-react-toolkit-calendar__month-view-row:last-child{margin-bottom:4px}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-week-day-names{color:#99a1aa;font-size:14px}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-week-number{color:#5b6570;font-size:12px}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-week-number.inovua-react-toolkit-calendar__month-view-cell{flex:none}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-cell{min-width:32px;min-height:32px;margin:1px}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day{z-index:10;color:#555e68;border-radius:1px;border:2px solid transparent;position:relative}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day .inovua-react-toolkit-calendar__month-view-day-text{cursor:pointer;text-align:center;outline:none;width:100%;height:100%;min-width:32px;min-height:32px;display:flex;align-items:center;justify-content:center;border-radius:1px}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day:not(.inovua-react-toolkit-calendar__month-view-day--today-highlight):hover{background:rgba(121,134,203,.15)}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--in-hover-range,.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--in-range{overflow:hidden}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--in-hover-range .inovua-react-toolkit-calendar__month-view-day-text,.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--in-range .inovua-react-toolkit-calendar__month-view-day-text{position:relative}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--in-hover-range .inovua-react-toolkit-calendar__month-view-day-text:after,.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--in-hover-range .inovua-react-toolkit-calendar__month-view-day-text:before,.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--in-range .inovua-react-toolkit-calendar__month-view-day-text:after,.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--in-range .inovua-react-toolkit-calendar__month-view-day-text:before{position:absolute;height:100%;top:0;bottom:0;width:500%;z-index:-1;content:\"\"}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--in-hover-range .inovua-react-toolkit-calendar__month-view-day-text:before,.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--in-range .inovua-react-toolkit-calendar__month-view-day-text:before{right:50%}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--in-hover-range .inovua-react-toolkit-calendar__month-view-day-text:after,.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--in-range .inovua-react-toolkit-calendar__month-view-day-text:after{left:50%}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--in-hover-range.inovua-react-toolkit-calendar__month-view-day--hover-range-end .inovua-react-toolkit-calendar__month-view-day-text:after,.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--in-hover-range.inovua-react-toolkit-calendar__month-view-day--hover-range-start .inovua-react-toolkit-calendar__month-view-day-text:before,.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--in-hover-range.inovua-react-toolkit-calendar__month-view-day--range-end:not(.inovua-react-toolkit-calendar__month-view-day--in-hover-range) .inovua-react-toolkit-calendar__month-view-day-text:after,.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--in-hover-range.inovua-react-toolkit-calendar__month-view-day--range-start:not(.inovua-react-toolkit-calendar__month-view-day--in-hover-range) .inovua-react-toolkit-calendar__month-view-day-text:before,.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--in-range.inovua-react-toolkit-calendar__month-view-day--hover-range-end .inovua-react-toolkit-calendar__month-view-day-text:after,.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--in-range.inovua-react-toolkit-calendar__month-view-day--hover-range-start .inovua-react-toolkit-calendar__month-view-day-text:before,.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--in-range.inovua-react-toolkit-calendar__month-view-day--range-end:not(.inovua-react-toolkit-calendar__month-view-day--in-hover-range) .inovua-react-toolkit-calendar__month-view-day-text:after,.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--in-range.inovua-react-toolkit-calendar__month-view-day--range-start:not(.inovua-react-toolkit-calendar__month-view-day--in-hover-range) .inovua-react-toolkit-calendar__month-view-day-text:before{display:none}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--in-hover-range.inovua-react-toolkit-calendar__month-view-day--hover-range-end:not(.inovua-react-toolkit-calendar__month-view-day--hover-range-start) .inovua-react-toolkit-calendar__month-view-day-text:before,.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--in-hover-range.inovua-react-toolkit-calendar__month-view-day--hover-range-start:not(.inovua-react-toolkit-calendar__month-view-day--hover-range-end) .inovua-react-toolkit-calendar__month-view-day-text:after,.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--in-range.inovua-react-toolkit-calendar__month-view-day--hover-range-end:not(.inovua-react-toolkit-calendar__month-view-day--hover-range-start) .inovua-react-toolkit-calendar__month-view-day-text:before,.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--in-range.inovua-react-toolkit-calendar__month-view-day--hover-range-start:not(.inovua-react-toolkit-calendar__month-view-day--hover-range-end) .inovua-react-toolkit-calendar__month-view-day-text:after{display:inherit}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--in-range{background:rgba(121,134,203,.25);color:#555e68;border-radius:0}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--in-range.inovua-react-toolkit-calendar__month-view-day--active{background:rgba(121,134,203,.25)}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--in-range:hover{background:rgba(121,134,203,.15);border:2px solid transparent}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--range-start{border-radius:1px 0 0 1px}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--range-end{border-radius:0 1px 1px 0}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--today-highlight{background:#7986cb;color:#fff}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--today-highlight:before{content:\"\";position:absolute;top:0;left:0;width:100%;height:100%}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--today-highlight:hover{border:2px solid rgba(0,0,0,.15)}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--today-highlight:hover:before{background:rgba(0,0,0,.15)}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--today-highlight.inovua-react-toolkit-calendar__month-view-day--active{color:#fff}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--today-highlight.inovua-react-toolkit-calendar__month-view-day--active .inovua-react-toolkit-calendar__month-view-day-text{background:#7986cb;border:2px solid #fff}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--active{background:#fff;border:2px solid #7986cb;color:#555e68}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--active:hover{border:2px solid #7986cb}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--next-month,.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--prev-month{color:#5b6570;font-size:14px}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--weekend-highlight,.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--weekend-highlight:hover{color:#e57373}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--weekend-highlight.inovua-react-toolkit-calendar__month-view-day--next-month,.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--weekend-highlight.inovua-react-toolkit-calendar__month-view-day--prev-month{color:rgba(229,115,115,.6)}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--disabled{color:rgba(85,94,104,.5)}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--disabled .inovua-react-toolkit-calendar__month-view-day-text{cursor:default}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--disabled .inovua-react-toolkit-calendar__month-view-day-text:hover{background:none;color:rgba(85,94,104,.5)}.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--disabled.inovua-react-toolkit-calendar__month-view-day--next-month,.inovua-react-toolkit-calendar__month-view--theme-default-light .inovua-react-toolkit-calendar__month-view-day--disabled.inovua-react-toolkit-calendar__month-view-day--prev-month{color:rgba(85,94,104,.5)}.inovua-react-toolkit-calendar__multi-month-view{border:1px solid transparent;position:relative}.inovua-react-toolkit-calendar__multi-month-view .inovua-react-toolkit-calendar__month-view{border:none}.inovua-react-toolkit-text-input.inovua-react-toolkit-text-input--theme-default-light{font-size:14px;fill:#99a1aa;border:1px solid #cdcecd;border-radius:1px;background:#fff;color:#555e68;min-height:32px;height:32px;transition:all .2s}.inovua-react-toolkit-text-input.inovua-react-toolkit-text-input--theme-default-light input.inovua-react-toolkit-text-input__input{font-size:inherit;color:inherit}.inovua-react-toolkit-text-input.inovua-react-toolkit-text-input--theme-default-light input.inovua-react-toolkit-text-input__input::-moz-placeholder{color:rgba(85,94,104,.5)}.inovua-react-toolkit-text-input.inovua-react-toolkit-text-input--theme-default-light input.inovua-react-toolkit-text-input__input::placeholder{color:rgba(85,94,104,.5)}.inovua-react-toolkit-text-input.inovua-react-toolkit-text-input--theme-default-light:hover{border:1px solid #7986cb}.inovua-react-toolkit-text-input.inovua-react-toolkit-text-input--theme-default-light.inovua-react-toolkit-text-input--disabled{fill:rgba(153,161,170,.7);opacity:.5}.inovua-react-toolkit-text-input.inovua-react-toolkit-text-input--theme-default-light.inovua-react-toolkit-text-input--disabled:hover{border:1px solid #cdcecd}.inovua-react-toolkit-text-input.inovua-react-toolkit-text-input--theme-default-light.inovua-react-toolkit-text-input--focused{border:1px solid #7986cb;box-shadow:0 0 0 2px rgba(121,134,203,.4)}.inovua-react-toolkit-text-input.inovua-react-toolkit-text-input--theme-default-light .inovua-react-toolkit-text-input__spinner-wrapper{margin:4px 6px 4px 0}.inovua-react-toolkit-text-input.inovua-react-toolkit-text-input--theme-default-light .inovua-react-toolkit-text-input__clear-button{stroke:#99a1aa;transition:stroke .25s ease-in-out}.inovua-react-toolkit-text-input.inovua-react-toolkit-text-input--theme-default-light .inovua-react-toolkit-text-input__clear-button:hover{stroke:#99a1aa}.inovua-react-toolkit-radio-button.inovua-react-toolkit-radio-button--theme-default-light{outline:none;color:#555e68;font-size:14px}.inovua-react-toolkit-radio-button.inovua-react-toolkit-radio-button--theme-default-light.inovua-react-toolkit-radio-button--ltr .inovua-react-toolkit-radio-button__inner-content-wrapper{margin-left:8px}.inovua-react-toolkit-radio-button.inovua-react-toolkit-radio-button--theme-default-light.inovua-react-toolkit-radio-button--rtl .inovua-react-toolkit-radio-button__inner-content-wrapper{margin-right:8px}.inovua-react-toolkit-radio-button.inovua-react-toolkit-radio-button--theme-default-light.inovua-react-toolkit-radio-button--checked .inovua-react-toolkit-radio-button__icon-wrapper{fill:#7986cb;stroke:#e8e8e8}.inovua-react-toolkit-radio-button.inovua-react-toolkit-radio-button--theme-default-light.inovua-react-toolkit-radio-button--unchecked .inovua-react-toolkit-radio-button__icon-wrapper{stroke:#99a1aa}.inovua-react-toolkit-radio-button.inovua-react-toolkit-radio-button--theme-default-light.inovua-react-toolkit-radio-button--indeterminate .inovua-react-toolkit-radio-button__icon-wrapper{fill:#e8e8e8}.inovua-react-toolkit-radio-button.inovua-react-toolkit-radio-button--theme-default-light.inovua-react-toolkit-radio-button--indeterminate .inovua-react-toolkit-radio-button__icon-wrapper svg{border-radius:2px;background:#7986cb}.inovua-react-toolkit-radio-button.inovua-react-toolkit-radio-button--theme-default-light.inovua-react-toolkit-radio-button--browser-native{margin-left:5px;margin-right:5px}.inovua-react-toolkit-radio-button.inovua-react-toolkit-radio-button--theme-default-light.inovua-react-toolkit-radio-button--disabled{color:rgba(85,94,104,.5)}.inovua-react-toolkit-radio-button.inovua-react-toolkit-radio-button--theme-default-light.inovua-react-toolkit-radio-button--disabled.inovua-react-toolkit-radio-button--checked .inovua-react-toolkit-radio-button__icon-wrapper{fill:rgba(121,134,203,.5);stroke:hsla(0,0%,91%,.5)}.inovua-react-toolkit-radio-button.inovua-react-toolkit-radio-button--theme-default-light.inovua-react-toolkit-radio-button--disabled.inovua-react-toolkit-radio-button--unchecked .inovua-react-toolkit-radio-button__icon-wrapper{stroke:rgba(153,161,170,.5)}.inovua-react-toolkit-radio-button.inovua-react-toolkit-radio-button--theme-default-light.inovua-react-toolkit-radio-button--disabled.inovua-react-toolkit-radio-button--indeterminate .inovua-react-toolkit-radio-button__icon-wrapper{fill:hsla(0,0%,91%,.5)}.inovua-react-toolkit-radio-button.inovua-react-toolkit-radio-button--theme-default-light.inovua-react-toolkit-radio-button--disabled.inovua-react-toolkit-radio-button--indeterminate .inovua-react-toolkit-radio-button__icon-wrapper svg{border-radius:2px;background:rgba(121,134,203,.5)}.inovua-react-toolkit-radio-button.inovua-react-toolkit-radio-button--theme-default-light.inovua-react-toolkit-radio-button--focused .inovua-react-toolkit-radio-button__icon-wrapper{box-shadow:0 0 0 3px rgba(121,134,203,.5);border-radius:2px}.inovua-react-toolkit-radio-button--theme-default-light.inovua-react-toolkit-radio-button .inovua-react-toolkit-radio-button__inner-content-wrapper{color:#555e68}.inovua-react-toolkit-radio-button--theme-default-light.inovua-react-toolkit-radio-button--checked svg{fill:#7986cb;stroke:#7986cb}.inovua-react-toolkit-radio-button--theme-default-light.inovua-react-toolkit-radio-button--checked .inovua-react-toolkit-radio-button__inner-content-wrapper{color:#555e68}.inovua-react-toolkit-radio-button--theme-default-light.inovua-react-toolkit-radio-button--unchecked{stroke:#a8acb0}.inovua-react-toolkit-radio-button--theme-default-light.inovua-react-toolkit-radio-button--disabled{fill:#e1e1e1;stroke:#e1e1e1}.inovua-react-toolkit-radio-button--theme-default-light.inovua-react-toolkit-radio-button--disabled .inovua-react-toolkit-radio-button__inner-content-wrapper{color:#abb3bc}.inovua-react-toolkit-radio-button-group.inovua-react-toolkit-radio-button-group--theme-default-light{outline:none}.inovua-react-toolkit-radio-button-group.inovua-react-toolkit-radio-button-group--theme-default-light.inovua-react-toolkit-radio-button-group--focused .inovua-react-toolkit-radio-button--checked .inovua-react-toolkit-radio-button__icon-wrapper{border-radius:10px;box-shadow:0 0 0 3px rgba(121,134,203,.3)}.inovua-react-toolkit-radio-button-group.inovua-react-toolkit-radio-button-group--theme-default-light.inovua-react-toolkit-radio-button-group--orientation-vertical .inovua-react-toolkit-radio-button{margin-bottom:8px}.inovua-react-toolkit-radio-button-group.inovua-react-toolkit-radio-button-group--theme-default-light.inovua-react-toolkit-radio-button-group--orientation-horizontal{display:flex}.inovua-react-toolkit-radio-button-group.inovua-react-toolkit-radio-button-group--theme-default-light.inovua-react-toolkit-radio-button-group--orientation-horizontal.inovua-react-toolkit-radio-button-group--rtl>:not(:first-child){margin-right:8px}.inovua-react-toolkit-radio-button-group.inovua-react-toolkit-radio-button-group--theme-default-light.inovua-react-toolkit-radio-button-group--orientation-horizontal.inovua-react-toolkit-radio-button-group--ltr>:not(:first-child){margin-left:8px}.inovua-react-scroll-container--theme-default-light .inovua-react-scroll-container__track--visible{background-color:rgba(168,172,176,.4)}.inovua-react-scroll-container--theme-default-light .inovua-react-scroll-container__thumb{background-color:rgba(168,172,176,.8)}.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-toolbar__arrow{fill:#99a1aa}.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-toolbar__arrow:before{content:\"\";position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;background:transparent}.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-toolbar__arrow:hover{fill:#e8e8e8}.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-toolbar__arrow:hover:before{background:rgba(121,134,203,.15)}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light{font-size:14px;background-color:#fff;border:none;color:#555e68;fill:#555e68}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light.inovua-react-toolkit-menu--rtl,.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light.inovua-react-toolkit-menu--shadow{box-shadow:0 0 4px 0 rgba(0,0,0,.4)}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light.inovua-react-toolkit-menu--depth-1,.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light.inovua-react-toolkit-menu--depth-2,.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light.inovua-react-toolkit-menu--depth-3{background-color:#fff}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__table{padding:8px 0}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__row .inovua-react-toolkit-menu__cell--has-expander .inovua-react-toolkit-menu__expander-wrapper{display:flex;justify-content:flex-end}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__row .inovua-react-toolkit-menu__cell--has-expander .inovua-react-toolkit-menu__expander-wrapper .inovua-react-toolkit-menu__expander-icon{border-radius:1px;width:24px;height:24px;display:flex;align-items:center;justify-content:center;padding-right:14px}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__row--focused.inovua-react-toolkit-menu__row--over{position:relative}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__cell--radio .inovua-react-toolkit-radio-button--ltr.inovua-react-toolkit-radio-button--children-position-end .inovua-react-toolkit-radio-button__icon-wrapper,.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__cell--radio .inovua-react-toolkit-radio-button--rtl.inovua-react-toolkit-radio-button--children-position-start .inovua-react-toolkit-radio-button__icon-wrapper{margin-right:0}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__cell--radio .inovua-react-toolkit-radio-button--ltr.inovua-react-toolkit-radio-button--children-position-start .inovua-react-toolkit-radio-button__icon-wrapper,.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__cell--radio .inovua-react-toolkit-radio-button--rtl.inovua-react-toolkit-radio-button--children-position-end .inovua-react-toolkit-radio-button__icon-wrapper{margin-left:0}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__row--focused{position:relative}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__row--focused.inovua-react-toolkit-menu__row--checked .inovua-react-toolkit-menu__cell--radio .inovua-react-toolkit-radio-button__icon-wrapper{border-radius:10px;box-shadow:0 0 0 3px rgba(121,134,203,.3)}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__row--focused .inovua-react-toolkit-menu__cell{position:relative}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__row--focused .inovua-react-toolkit-menu__cell:before{position:absolute;content:\" \";top:0;bottom:0;left:0;right:0;border-top:2px solid #7986cb;border-bottom:2px solid #7986cb}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__row--focused .inovua-react-toolkit-menu__cell:first-child:before{left:0;border-left:2px solid #7986cb}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__row--focused .inovua-react-toolkit-menu__cell:last-child:before{right:0;border-right:2px solid #7986cb}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light.inovua-react-toolkit-menu--rtl .inovua-react-toolkit-menu__row--focused.inovua-react-toolkit-menu__row--over .inovua-react-toolkit-menu__cell:before{position:absolute;content:\" \";top:1px;bottom:1px;left:0;right:0;border-top:2px solid #7986cb;border-bottom:2px solid #7986cb}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light.inovua-react-toolkit-menu--rtl .inovua-react-toolkit-menu__row--focused.inovua-react-toolkit-menu__row--over .inovua-react-toolkit-menu__cell:first-child:before{right:1px;border-right:2px solid #7986cb}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light.inovua-react-toolkit-menu--rtl .inovua-react-toolkit-menu__row--focused.inovua-react-toolkit-menu__row--over .inovua-react-toolkit-menu__cell:last-child:before{left:1px;border-left:2px solid #7986cb}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light.inovua-react-toolkit-menu--rtl .inovua-react-toolkit-menu__row--focused .inovua-react-toolkit-menu__cell:before{right:-1px;left:-1px;border-top:2px solid #7986cb;border-bottom:2px solid #7986cb}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light.inovua-react-toolkit-menu--rtl .inovua-react-toolkit-menu__row--focused .inovua-react-toolkit-menu__cell:first-child:before,.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light.inovua-react-toolkit-menu--rtl .inovua-react-toolkit-menu__row--focused .inovua-react-toolkit-menu__cell:last-child:before{right:0;left:0}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light.inovua-react-toolkit-menu--rtl .inovua-react-toolkit-menu__row--focused .inovua-react-toolkit-menu__cell:first-child:before{border-left:0;border-right:2px solid #7986cb}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light.inovua-react-toolkit-menu--rtl .inovua-react-toolkit-menu__row--focused .inovua-react-toolkit-menu__cell:last-child:before{border-right:0;border-left:2px solid #7986cb}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__row--over{color:#555e68;fill:#555e68;background-color:rgba(121,134,203,.15)}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__row--over .inovua-react-toolkit-menu__cell{background-color:rgba(121,134,203,.15)}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__row--over .inovua-react-toolkit-menu__cell--has-expander .inovua-react-toolkit-menu__expander{fill:#e8e8e8}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__row--active{color:#555e68;fill:#555e68;background-color:rgba(121,134,203,.25)}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__row--active .inovua-react-toolkit-menu__cell{background-color:rgba(121,134,203,.15)}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__row--disabled{color:#abb3bc;fill:#abb3bc;cursor:not-allowed}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__row--disabled .inovua-react-toolkit-menu__cell--icon{fill:#abb3bc}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__row--disabled .inovua-react-toolkit-menu__cell--secondaryLabel{color:#abb3bc}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__row--disabled .inovua-react-toolkit-menu__cell--has-expander .inovua-react-toolkit-menu__expander{fill:#abb3bc}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__cell{padding:0 12px 0 8px;height:32px;vertical-align:middle}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__cell:first-child{padding:0 12px}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__cell.inovua-react-toolkit-menu__cell--ltr:last-child{padding-right:12px}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__cell.inovua-react-toolkit-menu__cell--rtl:last-child{padding-left:12px}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__cell--has-input{line-height:16px}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__cell--has-input.inovua-react-toolkit-menu__cell--ltr{padding-right:0;padding-left:12px}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__cell--has-input.inovua-react-toolkit-menu__cell--rtl{padding-left:0;padding-right:12px}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__cell--checkbox,.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__cell--radio{fill:#9ba7b4}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__cell--checkbox .inovua-react-toolkit-menu__cell__input,.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__cell--radio .inovua-react-toolkit-menu__cell__input{position:relative;top:0}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__cell--checkbox .inovua-react-toolkit-menu__cell__input--browser-native,.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__cell--radio .inovua-react-toolkit-menu__cell__input--browser-native{top:0}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__cell--secondaryLabel{color:#7d8690;padding-right:6px;text-align:end}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__cell--secondaryLabel.inovua-react-toolkit-menu__cell--ltr{padding-right:6px}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__cell--secondaryLabel.inovua-react-toolkit-menu__cell--rtl{padding-left:6px}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__cell.inovua-react-toolkit-menu__cell--icon.inovua-react-toolkit-menu__cell--ltr{padding-right:3px}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__cell.inovua-react-toolkit-menu__cell--icon.inovua-react-toolkit-menu__cell--rtl{padding-left:3px}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__cell.inovua-react-toolkit-menu__cell--icon svg{vertical-align:middle}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light.inovua-react-toolkit-menu--rtl .inovua-react-toolkit-menu__cell.inovua-react-toolkit-menu__cell--icon{padding-right:12px;padding-left:3px}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__cell.inovua-react-toolkit-menu__cell--has-expander{text-align:right;text-align:end;fill:#99a1aa}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__cell.inovua-react-toolkit-menu__cell--has-expander.inovua-react-toolkit-menu__cell--ltr{padding-right:0}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__cell.inovua-react-toolkit-menu__cell--has-expander.inovua-react-toolkit-menu__cell--rtl{padding-left:0}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__menu-separator td{padding:8px 0}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__menu-separator td .inovua-react-toolkit-menu__menu-separator__tool{background-color:#e4e3e2}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__menu-separator__tool{background:transparent;height:1px}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__row--title{font-weight:600;cursor:auto}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light.inovua-react-toolkit-menu--mobile .inovua-react-toolkit-toolbar__arrow{height:20px}@media (-ms-high-contrast:none),screen and (-ms-high-contrast:active){.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__row--focused{color:#555e68;fill:#555e68;background-color:#e8f2ff;border:1px dotted #7986cb}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__row--focused .inovua-react-toolkit-menu__cell{background-color:#e8f2ff}.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__row--focused .inovua-react-toolkit-menu__cell:before,.inovua-react-toolkit-menu.inovua-react-toolkit-menu--theme-default-light .inovua-react-toolkit-menu__row--focused.inovua-react-toolkit-menu__row--over .inovua-react-toolkit-menu__cell:before{content:none}}.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default{color:#e9ecf0;fill:#e9ecf0;font-size:14px;min-height:32px;overflow:hidden;border:1px solid transparent}.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default:not(.inovua-react-toolkit-split-button--disabled) .inovua-react-toolkit-split-button__icon-wrap:hover{background:#526a95}.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default.inovua-react-toolkit-split-button--focused{border:1px dotted #3c5c99}.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default .inovua-react-toolkit-split-button__button{padding:4px 8px;color:#e9ecf0;font-size:14px;background:#495e85}.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default .inovua-react-toolkit-split-button__button:not(.inovua-react-toolkit-button--disabled):active,.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default .inovua-react-toolkit-split-button__button:not(.inovua-react-toolkit-button--disabled):hover,.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default:not(.inovua-react-toolkit-split-button--disabled) .inovua-react-toolkit-dropdown-button__button:hover{background:#526a95}.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default .inovua-react-toolkit-dropdown-button__button{overflow:hidden;background:#495e85;fill:#e9ecf0}.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default.inovua-react-toolkit-split-button--expanded .inovua-react-toolkit-dropdown-button__button{background:#526a95}.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default .inovua-react-toolkit-split-button__button.inovua-react-toolkit-button--ltr.inovua-react-toolkit-button--icon-first .inovua-react-toolkit-button__icon-wrap{margin-right:6px}.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default .inovua-react-toolkit-split-button__button.inovua-react-toolkit-button--ltr.inovua-react-toolkit-button--icon-last .inovua-react-toolkit-button__icon-wrap{margin-left:6px}.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default .inovua-react-toolkit-dropdown-button__button:not(.inovua-react-toolkit-button--disabled) .inovua-react-toolkit-button__icon-wrap:hover:not(.inovua-react-toolkit-button__icon-wrap--disabled){background:#526a95}.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default:not(.inovua-react-toolkit-split-button--disabled) .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--ltr.inovua-react-toolkit-button--icon-last .inovua-react-toolkit-button__icon-wrap{border-left:1px solid #e9ecf0}.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default:not(.inovua-react-toolkit-split-button--disabled) .inovua-react-toolkit-dropdown-button--expanded .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--ltr.inovua-react-toolkit-button--icon-last .inovua-react-toolkit-button__icon-wrap,.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default:not(.inovua-react-toolkit-split-button--disabled):active .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--ltr.inovua-react-toolkit-button--icon-last .inovua-react-toolkit-button__icon-wrap,.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default:not(.inovua-react-toolkit-split-button--disabled):hover .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--ltr.inovua-react-toolkit-button--icon-last .inovua-react-toolkit-button__icon-wrap{border-left:1px solid #fff}.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--ltr.inovua-react-toolkit-button--icon-first .inovua-react-toolkit-button__icon-wrap{border-right:1px solid #e9ecf0}.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--ltr.inovua-react-toolkit-button--icon-first .inovua-react-toolkit-button__icon-wrap:hover:not(.inovua-react-toolkit-button__icon-wrap--disabled),.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default:not(.inovua-react-toolkit-split-button--disabled) .inovua-react-toolkit-dropdown-button--expanded .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--ltr.inovua-react-toolkit-button--icon-first .inovua-react-toolkit-button__icon-wrap,.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default:not(.inovua-react-toolkit-split-button--disabled):active .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--ltr.inovua-react-toolkit-button--icon-first .inovua-react-toolkit-button__icon-wrap,.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default:not(.inovua-react-toolkit-split-button--disabled):hover .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--ltr.inovua-react-toolkit-button--icon-first .inovua-react-toolkit-button__icon-wrap{border-right:1px solid #fff}.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--rtl.inovua-react-toolkit-button--icon-last .inovua-react-toolkit-button__icon-wrap{border-right:1px solid #e9ecf0}.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--rtl.inovua-react-toolkit-button--icon-last .inovua-react-toolkit-button__icon-wrap:hover:not(.inovua-react-toolkit-button__icon-wrap--disabled),.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default:not(.inovua-react-toolkit-split-button--disabled) .inovua-react-toolkit-dropdown-button--expanded .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--rtl.inovua-react-toolkit-button--icon-last .inovua-react-toolkit-button__icon-wrap,.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default:not(.inovua-react-toolkit-split-button--disabled):active .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--rtl.inovua-react-toolkit-button--icon-last .inovua-react-toolkit-button__icon-wrap,.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default:not(.inovua-react-toolkit-split-button--disabled):hover .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--rtl.inovua-react-toolkit-button--icon-last .inovua-react-toolkit-button__icon-wrap{border-right:1px solid #fff}.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--rtl.inovua-react-toolkit-button--icon-first .inovua-react-toolkit-button__icon-wrap{border-left:1px solid #e9ecf0}.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--rtl.inovua-react-toolkit-button--icon-first .inovua-react-toolkit-button__icon-wrap:hover:not(.inovua-react-toolkit-button__icon-wrap--disabled),.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default:not(.inovua-react-toolkit-split-button--disabled) .inovua-react-toolkit-dropdown-button--expanded .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--rtl.inovua-react-toolkit-button--icon-first .inovua-react-toolkit-button__icon-wrap,.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default:not(.inovua-react-toolkit-split-button--disabled):active .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--rtl.inovua-react-toolkit-button--icon-first .inovua-react-toolkit-button__icon-wrap,.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default:not(.inovua-react-toolkit-split-button--disabled):hover .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--rtl.inovua-react-toolkit-button--icon-first .inovua-react-toolkit-button__icon-wrap{border-left:1px solid #fff}.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default .inovua-react-toolkit-split-button__button.inovua-react-toolkit-button--rtl.inovua-react-toolkit-button--icon-first .inovua-react-toolkit-button__icon-wrap{margin-left:6px}.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default .inovua-react-toolkit-split-button__button.inovua-react-toolkit-button--rtl.inovua-react-toolkit-button--icon-last .inovua-react-toolkit-button__icon-wrap{margin-right:6px}.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default .inovua-react-toolkit-dropdown-button__arrow{padding-left:2px;padding-right:2px}.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default .inovua-react-dropdown-button__button.inovua-react-toolkit-button--ltr.inovua-react-toolkit-button--icon-first .inovua-react-toolkit-button__text{padding-left:0}.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default .inovua-react-dropdown-button__button.inovua-react-toolkit-button--ltr.inovua-react-toolkit-button--icon-first .inovua-react-toolkit-dropdown-button__arrow{margin-right:6px;padding-left:8px}.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default .inovua-react-dropdown-button__button.inovua-react-toolkit-button--ltr.inovua-react-toolkit-button--icon-last .inovua-react-toolkit-button__text{padding-right:0}.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default .inovua-react-dropdown-button__button.inovua-react-toolkit-button--ltr.inovua-react-toolkit-button--icon-last .inovua-react-toolkit-dropdown-button__arrow{margin-left:6px;padding-right:8px}.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default .inovua-react-dropdown-button__button.inovua-react-toolkit-button--rtl.inovua-react-toolkit-button--icon-first .inovua-react-toolkit-button__text{padding-right:0}.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default .inovua-react-dropdown-button__button.inovua-react-toolkit-button--rtl.inovua-react-toolkit-button--icon-first .inovua-react-toolkit-dropdown-button__arrow{margin-left:6px;padding-right:8px}.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default .inovua-react-dropdown-button__button.inovua-react-toolkit-button--rtl.inovua-react-toolkit-button--icon-last .inovua-react-toolkit-button__text{padding-left:0}.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default .inovua-react-dropdown-button__button.inovua-react-toolkit-button--rtl.inovua-react-toolkit-button--icon-last .inovua-react-toolkit-dropdown-button__arrow{margin-right:6px;padding-left:8px}.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light{border:1px solid #e4e3e2;padding:2px;background:#fff;color:#99a1aa;fill:#9ba7b4;font-size:14px}.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-button--theme-default:not(.inovua-react-toolkit-split-button__button):not(.inovua-react-toolkit-dropdown-button__button),.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-split-button--theme-default .inovua-react-toolkit-split-button__button{padding:4px 8px}.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-numeric-input,.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light input:not(.inovua-react-toolkit-combo-box__input):not(.inovua-react-toolkit-text-input__input):not(.inovua-react-toolkit-date-input__input):not(.inovua-react-toolkit-numeric-input__input){border:1px solid #e4e3e2;outline:none}.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-numeric-input.inovua-react-toolkit-numeric-input--focused,.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light input:not(.inovua-react-toolkit-combo-box__input):not(.inovua-react-toolkit-text-input__input):not(.inovua-react-toolkit-date-input__input):not(.inovua-react-toolkit-numeric-input__input):focus{border:1px solid #7986cb}.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-split-button>.inovua-react-toolkit-dropdown-button .inovua-react-toolkit-dropdown-button__button{padding:0}.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default:not(.inovua-react-toolkit-split-button--disabled) .inovua-react-toolkit-dropdown-button--expanded .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--ltr.inovua-react-toolkit-button--icon-last .inovua-react-toolkit-button__icon-wrap,.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default:not(.inovua-react-toolkit-split-button--disabled) .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--ltr.inovua-react-toolkit-button--icon-last .inovua-react-toolkit-button__icon-wrap,.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default:not(.inovua-react-toolkit-split-button--disabled):active .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--ltr.inovua-react-toolkit-button--icon-last .inovua-react-toolkit-button__icon-wrap,.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default:not(.inovua-react-toolkit-split-button--disabled):hover .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--ltr.inovua-react-toolkit-button--icon-last .inovua-react-toolkit-button__icon-wrap{border-left:1px solid #e4e3e2}.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--ltr.inovua-react-toolkit-button--icon-first .inovua-react-toolkit-button__icon-wrap,.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--ltr.inovua-react-toolkit-button--icon-first .inovua-react-toolkit-button__icon-wrap:hover:not(.inovua-react-toolkit-button__icon-wrap--disabled),.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--rtl.inovua-react-toolkit-button--icon-last .inovua-react-toolkit-button__icon-wrap,.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--rtl.inovua-react-toolkit-button--icon-last .inovua-react-toolkit-button__icon-wrap:hover:not(.inovua-react-toolkit-button__icon-wrap--disabled),.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default:not(.inovua-react-toolkit-split-button--disabled) .inovua-react-toolkit-dropdown-button--expanded .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--ltr.inovua-react-toolkit-button--icon-first .inovua-react-toolkit-button__icon-wrap,.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default:not(.inovua-react-toolkit-split-button--disabled) .inovua-react-toolkit-dropdown-button--expanded .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--rtl.inovua-react-toolkit-button--icon-last .inovua-react-toolkit-button__icon-wrap,.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default:not(.inovua-react-toolkit-split-button--disabled):active .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--ltr.inovua-react-toolkit-button--icon-first .inovua-react-toolkit-button__icon-wrap,.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default:not(.inovua-react-toolkit-split-button--disabled):active .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--rtl.inovua-react-toolkit-button--icon-last .inovua-react-toolkit-button__icon-wrap,.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default:not(.inovua-react-toolkit-split-button--disabled):hover .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--ltr.inovua-react-toolkit-button--icon-first .inovua-react-toolkit-button__icon-wrap,.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default:not(.inovua-react-toolkit-split-button--disabled):hover .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--rtl.inovua-react-toolkit-button--icon-last .inovua-react-toolkit-button__icon-wrap{border-right:1px solid #e4e3e2}.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--rtl.inovua-react-toolkit-button--icon-first .inovua-react-toolkit-button__icon-wrap,.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--rtl.inovua-react-toolkit-button--icon-first .inovua-react-toolkit-button__icon-wrap:hover:not(.inovua-react-toolkit-button__icon-wrap--disabled),.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default:not(.inovua-react-toolkit-split-button--disabled) .inovua-react-toolkit-dropdown-button--expanded .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--rtl.inovua-react-toolkit-button--icon-first .inovua-react-toolkit-button__icon-wrap,.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default:not(.inovua-react-toolkit-split-button--disabled):active .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--rtl.inovua-react-toolkit-button--icon-first .inovua-react-toolkit-button__icon-wrap,.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-split-button.inovua-react-toolkit-split-button--theme-default:not(.inovua-react-toolkit-split-button--disabled):hover .inovua-react-toolkit-dropdown-button__button.inovua-react-toolkit-button--rtl.inovua-react-toolkit-button--icon-first .inovua-react-toolkit-button__icon-wrap{border-left:1px solid #e4e3e2}.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light.inovua-react-toolkit-toolbar--change-button-styles .inovua-react-toolkit-button.inovua-react-toolkit-button.inovua-react-toolkit-button,.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light.inovua-react-toolkit-toolbar--change-button-styles .inovua-react-toolkit-dropdown-button.inovua-react-toolkit-dropdown-button.inovua-react-toolkit-dropdown-button,.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light.inovua-react-toolkit-toolbar--change-button-styles .inovua-react-toolkit-split-button.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button{transition:background-color .2s;font-size:14px;color:#99a1aa;fill:#99a1aa}.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light.inovua-react-toolkit-toolbar--change-button-styles .inovua-react-toolkit-button.inovua-react-toolkit-button.inovua-react-toolkit-button:not(:hover),.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light.inovua-react-toolkit-toolbar--change-button-styles .inovua-react-toolkit-dropdown-button.inovua-react-toolkit-dropdown-button.inovua-react-toolkit-dropdown-button:not(:hover),.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light.inovua-react-toolkit-toolbar--change-button-styles .inovua-react-toolkit-split-button.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button:not(:hover){background-color:initial}.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light.inovua-react-toolkit-toolbar--change-button-styles .inovua-react-toolkit-button.inovua-react-toolkit-button.inovua-react-toolkit-button:hover,.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light.inovua-react-toolkit-toolbar--change-button-styles .inovua-react-toolkit-dropdown-button.inovua-react-toolkit-dropdown-button.inovua-react-toolkit-dropdown-button:hover,.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light.inovua-react-toolkit-toolbar--change-button-styles .inovua-react-toolkit-split-button.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button:hover{background-color:#fff}.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light.inovua-react-toolkit-toolbar--change-button-styles .inovua-react-toolkit-button.inovua-react-toolkit-button.inovua-react-toolkit-button.inovua-react-toolkit-button--disabled,.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light.inovua-react-toolkit-toolbar--change-button-styles .inovua-react-toolkit-dropdown-button.inovua-react-toolkit-dropdown-button.inovua-react-toolkit-dropdown-button.inovua-react-toolkit-button--disabled,.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light.inovua-react-toolkit-toolbar--change-button-styles .inovua-react-toolkit-split-button.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button.inovua-react-toolkit-button--disabled{opacity:.5;background-color:initial}.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light.inovua-react-toolkit-toolbar--change-button-styles .inovua-react-toolkit-button.inovua-react-toolkit-button.inovua-react-toolkit-button:not(.inovua-react-toolkit-button--disabled):hover,.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light.inovua-react-toolkit-toolbar--change-button-styles .inovua-react-toolkit-dropdown-button.inovua-react-toolkit-dropdown-button.inovua-react-toolkit-dropdown-button:not(.inovua-react-toolkit-button--disabled):hover,.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light.inovua-react-toolkit-toolbar--change-button-styles .inovua-react-toolkit-split-button.inovua-react-toolkit-split-button.inovua-react-toolkit-split-button:not(.inovua-react-toolkit-button--disabled):hover{background-color:#fff}.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-toolbar__separator{background:#e4e3e2}.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-toolbar__arrow,.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-toolbar__arrow:hover{background:#fff}.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-toolbar__arrow--direction-right{border-left:1px solid #e4e3e2}.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-toolbar__arrow--direction-left{border-right:1px solid #e4e3e2}.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-toolbar__arrow--direction-down{border-top:1px solid #e4e3e2}.inovua-react-toolkit-toolbar.inovua-react-toolkit-toolbar--theme-default-light .inovua-react-toolkit-toolbar__arrow--direction-up{border-bottom:1px solid #e4e3e2}.inovua-react-toolkit-numeric-input.inovua-react-toolkit-numeric-input--theme-default-light{font-size:14px;fill:#99a1aa;border:1px solid #cdcecd;background:#fff;min-height:26px;border-radius:1px;transition:all .2s;position:relative}.inovua-react-toolkit-numeric-input.inovua-react-toolkit-numeric-input--theme-default-light:hover{border:1px solid #7986cb}.inovua-react-toolkit-numeric-input.inovua-react-toolkit-numeric-input--theme-default-light .inovua-react-toolkit-numeric-input__input{color:#555e68;font-size:14px}.inovua-react-toolkit-numeric-input.inovua-react-toolkit-numeric-input--theme-default-light .inovua-react-toolkit-numeric-input__input::-moz-placeholder{color:rgba(85,94,104,.7)}.inovua-react-toolkit-numeric-input.inovua-react-toolkit-numeric-input--theme-default-light .inovua-react-toolkit-numeric-input__input::placeholder{color:rgba(85,94,104,.7)}.inovua-react-toolkit-numeric-input.inovua-react-toolkit-numeric-input--theme-default-light.inovua-react-toolkit-numeric-input--disabled{fill:rgba(153,161,170,.7);opacity:.5}.inovua-react-toolkit-numeric-input.inovua-react-toolkit-numeric-input--theme-default-light.inovua-react-toolkit-numeric-input--focused{border:1px solid #7986cb;box-shadow:0 0 0 2px rgba(121,134,203,.4)}.inovua-react-toolkit-numeric-input.inovua-react-toolkit-numeric-input--theme-default-light .inovua-react-toolkit-numeric-input__clear-button-wrapper{margin-left:6px}.inovua-react-toolkit-numeric-input.inovua-react-toolkit-numeric-input--theme-default-light .inovua-react-toolkit-numeric-input__clear-button-wrapper .inovua-react-toolkit-numeric-input__clear-button,.inovua-react-toolkit-numeric-input.inovua-react-toolkit-numeric-input--theme-default-light .inovua-react-toolkit-numeric-input__clear-button-wrapper .inovua-react-toolkit-numeric-input__clear-button:hover{stroke:#99a1aa}.inovua-react-toolkit-numeric-input.inovua-react-toolkit-numeric-input--theme-default-light .inovua-react-toolkit-numeric-input__clear-button-wrapper .inovua-react-toolkit-numeric-input__clear-button:focus{outline:1px solid #7986cb}.inovua-react-toolkit-numeric-input.inovua-react-toolkit-numeric-input--theme-default-light .inovua-react-toolkit-numeric-input__spinner-wrapper{width:24px;height:30px;min-height:20px}.inovua-react-toolkit-numeric-input.inovua-react-toolkit-numeric-input--theme-default-light .inovua-react-toolkit-numeric-input__spinner-wrapper.inovua-react-toolkit-numeric-input__spinner-wrapper--ltr{margin:0}.inovua-react-toolkit-numeric-input.inovua-react-toolkit-numeric-input--theme-default-light .inovua-react-toolkit-numeric-input__spinner-wrapper.inovua-react-toolkit-numeric-input__spinner-wrapper--rtl{margin:4px 0 4px 6px}.inovua-react-toolkit-numeric-input.inovua-react-toolkit-numeric-input--theme-default-light .inovua-react-toolkit-numeric-input__spinner-wrapper-hidden.inovua-react-toolkit-numeric-input__spinner-wrapper-hidden--ltr{margin:0 6px 0 0}.inovua-react-toolkit-numeric-input.inovua-react-toolkit-numeric-input--theme-default-light .inovua-react-toolkit-numeric-input__spinner-wrapper-hidden.inovua-react-toolkit-numeric-input__spinner-wrapper-hidden--rtl{margin:0 0 0 6px}.inovua-react-toolkit-numeric-input.inovua-react-toolkit-numeric-input--theme-default-light .inovua-react-toolkit-numeric-input__input{min-height:26px;margin:2px 0}.inovua-react-toolkit-numeric-input.inovua-react-toolkit-numeric-input--theme-default-light .inovua-react-toolkit-numeric-input__spinner-arrow{padding:0 6px}.inovua-react-toolkit-numeric-input.inovua-react-toolkit-numeric-input--theme-default-light .inovua-react-toolkit-numeric-input__spinner-arrow svg{transform:translateY(0);pointer-events:none}.inovua-react-toolkit-numeric-input.inovua-react-toolkit-numeric-input--theme-default-light .inovua-react-toolkit-numeric-input__spinner-arrow--down:hover,.inovua-react-toolkit-numeric-input.inovua-react-toolkit-numeric-input--theme-default-light .inovua-react-toolkit-numeric-input__spinner-arrow--up:hover{background:rgba(121,134,203,.15);fill:#99a1aa}.inovua-react-toolkit-numeric-input.inovua-react-toolkit-numeric-input--theme-default-light .inovua-react-toolkit-numeric-input__spinner-arrow--down:active,.inovua-react-toolkit-numeric-input.inovua-react-toolkit-numeric-input--theme-default-light .inovua-react-toolkit-numeric-input__spinner-arrow--up:active{background:rgba(121,134,203,.25);fill:#99a1aa}.inovua-react-toolkit-numeric-input.inovua-react-toolkit-numeric-input--theme-default-light .inovua-react-toolkit-numeric-input__spinner-arrow--down:active svg,.inovua-react-toolkit-numeric-input.inovua-react-toolkit-numeric-input--theme-default-light .inovua-react-toolkit-numeric-input__spinner-arrow--up:active svg{transform:translateY(0)}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light{font-size:14px;border:1px solid #cdcecd;border-radius:1px;background:#fff;fill:#99a1aa;stroke:#99a1aa;padding-top:2px;min-width:100px;box-shadow:none;transition:all .2s;position:relative}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light:hover:not(.inovua-react-toolkit-combo-box--disabled){border:1px solid #7986cb}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light,.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light input{color:#555e68}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light input{padding:0}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light .inovua-react-toolkit-combo-box__input__placeholder{color:rgba(85,94,104,.7);white-space:nowrap}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light.inovua-react-toolkit-combo-box--focus{background:#fff;border:1px solid #7986cb;box-shadow:0 0 2px 0 rgba(121,134,203,.5)}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light.inovua-react-toolkit-combo-box--ltr{padding-right:3px}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light.inovua-react-toolkit-combo-box--ltr .inovua-react-toolkit-combo-box__input__wrapper,.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light.inovua-react-toolkit-combo-box--ltr .inovua-react-toolkit-combo-box__value__display-value{padding-left:8px}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light.inovua-react-toolkit-combo-box--rtl{padding-left:3px}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light.inovua-react-toolkit-combo-box--rtl .inovua-react-toolkit-combo-box__input__wrapper,.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light.inovua-react-toolkit-combo-box--rtl .inovua-react-toolkit-combo-box__value__display-value{padding-right:8px}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light.inovua-react-toolkit-combo-box--disabled{fill:#99a1aa;opacity:.5}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light.inovua-react-toolkit-combo-box--shadow .inovua-react-toolkit-combo-box__list{box-shadow:0 0 8px 0 hsla(0,0%,43.9%,.5)}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light .inovua-react-toolkit-combo-box__list__loading-text{background:hsla(0,0%,100%,.4);color:#858585}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light .inovua-react-toolkit-combo-box__loading-spinner{width:17px;display:flex;align-items:center}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light .inovua-react-toolkit-combo-box__loading-spinner svg{animation:react-toolkit-combo-box-loading-animation-default 1.4s linear infinite;transform:translateZ(0)}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light .inovua-react-toolkit-combo-box__clear-icon{cursor:pointer;display:flex;align-items:center;margin:0 8px 0 6px;transform:translateY(0);transition:stroke .25s ease-in-out}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light .inovua-react-toolkit-combo-box__clear-icon:active{transform:translateY(1px)}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light .inovua-react-toolkit-combo-box__clear-icon:hover svg{stroke:#99a1aa}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light .inovua-react-toolkit-combo-box__tools,.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light .inovua-react-toolkit-combo-box__value{min-height:27px}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light .inovua-react-toolkit-combo-box__tools .inovua-react-toolkit-combo-box__toggle-icon:hover{fill:#99a1aa;stroke:#99a1aa}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light .inovua-react-toolkit-combo-box__tools .inovua-react-toolkit-combo-box__toggle-icon:hover:before{background:rgba(121,134,203,.15)}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light .inovua-react-toolkit-combo-box__tools .inovua-react-toolkit-combo-box__toggle-icon:active:before{background:rgba(121,134,203,.25)}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light .inovua-react-toolkit-combo-box__tools .inovua-react-toolkit-combo-box__toggle-icon:before{content:\"\";position:absolute;top:-2px;right:-6px;width:22px;height:calc(100% + 3px);background:transparent}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light .inovua-react-toolkit-combo-box__value__tag{background:#fff;border:1px solid #e4e3e2;border-radius:1px;padding:3px 8px}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light .inovua-react-toolkit-combo-box__value__tag--active{border:1px solid #7986cb}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light .inovua-react-toolkit-combo-box__value__tag--active.inovua-react-toolkit-combo-box__value__tag--selected{background:#fff}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light .inovua-react-toolkit-combo-box__value__tag__clear-icon{transform:translateY(0)}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light .inovua-react-toolkit-combo-box__value__tag__clear-icon:active{transform:translateY(1px)}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light.inovua-react-toolkit-combo-box--ltr .inovua-react-toolkit-combo-box__value__tag__clear-icon{margin-left:12px}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light.inovua-react-toolkit-combo-box--ltr .inovua-react-toolkit-combo-box__value__tag{margin-right:2px;margin-bottom:2px}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light.inovua-react-toolkit-combo-box--rtl .inovua-react-toolkit-combo-box__value__tag__clear-icon{margin-right:12px}.inovua-react-toolkit-combo-box.inovua-react-toolkit-combo-box--theme-default-light.inovua-react-toolkit-combo-box--rtl .inovua-react-toolkit-combo-box__value__tag{margin-left:2px;margin-bottom:2px}@keyframes react-toolkit-combo-box-loading-animation-default{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}.inovua-react-toolkit-combo-box__list--theme-default-light{background:#fff;border-radius:1px;border:none;box-shadow:0 0 4px 0 rgba(0,0,0,.4)}.inovua-react-toolkit-combo-box__list--theme-default-light .inovua-react-toolkit-combo-box__list__item{padding:5px 8px;border:1px solid transparent}.inovua-react-toolkit-combo-box__list--theme-default-light .inovua-react-toolkit-combo-box__list__item:not(.inovua-react-toolkit-combo-box__list__item--disabled):hover{background:rgba(121,134,203,.15)}.inovua-react-toolkit-combo-box__list--theme-default-light .inovua-react-toolkit-combo-box__list__item--selected{background:rgba(121,134,203,.25)}.inovua-react-toolkit-combo-box__list--theme-default-light .inovua-react-toolkit-combo-box__list__item--active{border:1px solid transparent}.inovua-react-toolkit-combo-box__list--theme-default-light .inovua-react-toolkit-combo-box__list__item--disabled{color:#555e68;cursor:default}.inovua-react-toolkit-combo-box__list--theme-default-light .inovua-react-toolkit-combo-box__list__item__highlight{background:#f0f;font-weight:700}.inovua-react-toolkit-combo-box__list--theme-default-light .inovua-react-toolkit-combo-box__list__group{padding:5px 3px;font-weight:700}.inovua-react-toolkit-combo-box__list--theme-default-light .inovua-react-toolkit-combo-box__list__virtual-list{background:#fff}.inovua-react-toolkit-combo-box__list--theme-default-light .inovua-react-toolkit-combo-box__list__virtual-list::-webkit-scrollbar{width:8px}.inovua-react-toolkit-combo-box__list--theme-default-light .inovua-react-toolkit-combo-box__list__virtual-list::-webkit-scrollbar-track{background-color:rgba(168,172,176,.4);border-radius:2px}.inovua-react-toolkit-combo-box__list--theme-default-light .inovua-react-toolkit-combo-box__list__virtual-list::-webkit-scrollbar-thumb{background:rgba(168,172,176,.4);border-radius:2px}.inovua-react-toolkit-combo-box__list--theme-default-light .inovua-react-toolkit-combo-box__list__virtual-list::-webkit-scrollbar-button{display:none}.inovua-react-toolkit-button.inovua-react-toolkit-button--theme-default-light{color:#7986cb;fill:#7986cb;font-size:14px;border-radius:1px;transition:background .2s,transform .2s}.inovua-react-toolkit-button.inovua-react-toolkit-button--theme-default-light:not(.inovua-react-toolkit-dropdown-button__button):not(.inovua-react-toolkit-split-button__button){background:#fff padding-box;transform:translateY(0);border:1px solid #7986cb;min-height:28px;padding:4px 8px}.inovua-react-toolkit-button.inovua-react-toolkit-button--theme-default-light:not(.inovua-react-toolkit-dropdown-button__button):not(.inovua-react-toolkit-split-button__button):not(.inovua-react-toolkit-button--disabled):active{transform:translateY(1px)}.inovua-react-toolkit-button.inovua-react-toolkit-button--theme-default-light:not(.inovua-react-toolkit-dropdown-button__button):not(.inovua-react-toolkit-split-button__button):not(.inovua-react-toolkit-button--disabled):hover{background:rgba(121,134,203,.15) padding-box}.inovua-react-toolkit-button.inovua-react-toolkit-button--theme-default-light:not(.inovua-react-toolkit-dropdown-button__button):not(.inovua-react-toolkit-split-button__button):not(.inovua-react-toolkit-button--disabled).inovua-react-toolkit-button--pressed{background:rgba(121,134,203,.25) padding-box}.inovua-react-toolkit-button.inovua-react-toolkit-button--theme-default-light:not(.inovua-react-toolkit-dropdown-button__button):not(.inovua-react-toolkit-split-button__button):not(.inovua-react-toolkit-button--disabled).inovua-react-toolkit-button--pressed:hover{background:rgba(147,157,213,.25) padding-box}.inovua-react-toolkit-button.inovua-react-toolkit-button--theme-default-light:not(.inovua-react-toolkit-dropdown-button__button):not(.inovua-react-toolkit-split-button__button).inovua-react-toolkit-button--focused{border:1px solid #7986cb;box-shadow:0 0 0 3px rgba(121,134,203,.4);transition:border .2s}.inovua-react-toolkit-button.inovua-react-toolkit-button--theme-default-light.inovua-react-toolkit-button--disabled{color:#7986cb;fill:#7986cb;opacity:.5}.inovua-react-toolkit-button.inovua-react-toolkit-button--theme-default-light.inovua-react-toolkit-button--has-icon:not(.inovua-react-toolkit-button--no-children):not(.inovua-react-toolkit-dropdown-button__button):not(.inovua-react-toolkit-split-button__button).inovua-react-toolkit-button--ltr.inovua-react-toolkit-button--icon-first .inovua-react-toolkit-button__icon-wrap{margin-right:6px}.inovua-react-toolkit-button.inovua-react-toolkit-button--theme-default-light.inovua-react-toolkit-button--has-icon:not(.inovua-react-toolkit-button--no-children):not(.inovua-react-toolkit-dropdown-button__button):not(.inovua-react-toolkit-split-button__button).inovua-react-toolkit-button--ltr.inovua-react-toolkit-button--icon-last .inovua-react-toolkit-button__icon-wrap,.inovua-react-toolkit-button.inovua-react-toolkit-button--theme-default-light.inovua-react-toolkit-button--has-icon:not(.inovua-react-toolkit-button--no-children):not(.inovua-react-toolkit-dropdown-button__button):not(.inovua-react-toolkit-split-button__button).inovua-react-toolkit-button--rtl.inovua-react-toolkit-button--icon-first .inovua-react-toolkit-button__icon-wrap{margin-left:6px}.inovua-react-toolkit-button.inovua-react-toolkit-button--theme-default-light.inovua-react-toolkit-button--has-icon:not(.inovua-react-toolkit-button--no-children):not(.inovua-react-toolkit-dropdown-button__button):not(.inovua-react-toolkit-split-button__button).inovua-react-toolkit-button--rtl.inovua-react-toolkit-button--icon-last .inovua-react-toolkit-button__icon-wrap{margin-right:6px}.inovua-react-pagination-toolbar.inovua-react-pagination-toolbar--theme-default-light{padding:2px 4px;background:#fff;fill:#99a1aa}.inovua-react-pagination-toolbar.inovua-react-pagination-toolbar--theme-default-light,.inovua-react-pagination-toolbar.inovua-react-pagination-toolbar--theme-default-light input{color:#555e68;font-size:14px}.inovua-react-pagination-toolbar.inovua-react-pagination-toolbar--theme-default-light.inovua-react-pagination-toolbar--bordered{border:1px solid #e4e3e2}.inovua-react-pagination-toolbar.inovua-react-pagination-toolbar--theme-default-light .inovua-react-pagination-toolbar__per-page-text{margin-left:8px}.inovua-react-pagination-toolbar.inovua-react-pagination-toolbar--theme-default-light .inovua-react-toolkit-button:not(.inovua-react-toolkit-dropdown-button__button):not(.inovua-react-toolkit-split-button__button){padding:2px;border-radius:1px;border:1px solid transparent}.inovua-react-pagination-toolbar.inovua-react-pagination-toolbar--theme-default-light .inovua-react-toolkit-combo-box--theme-default-light,.inovua-react-pagination-toolbar.inovua-react-pagination-toolbar--theme-default-light .inovua-react-toolkit-combo-box--theme-default-light .inovua-react-toolkit-combo-box__list,.inovua-react-pagination-toolbar.inovua-react-pagination-toolbar--theme-default-light .inovua-react-toolkit-numeric-input--theme-default-light,.inovua-react-pagination-toolbar.inovua-react-pagination-toolbar--theme-default-light input:not(.inovua-react-toolkit-numeric-input__input){border:1px solid #e4e3e2;outline:none}.inovua-react-pagination-toolbar.inovua-react-pagination-toolbar--theme-default-light .inovua-react-toolkit-combo-box--focus.inovua-react-toolkit-combo-box--theme-default-light,.inovua-react-pagination-toolbar.inovua-react-pagination-toolbar--theme-default-light .inovua-react-toolkit-numeric-input.inovua-react-toolkit-numeric-input--focused,.inovua-react-pagination-toolbar.inovua-react-pagination-toolbar--theme-default-light input:not(.inovua-react-toolkit-numeric-input__input):focus{border:1px solid #7986cb}.inovua-react-pagination-toolbar.inovua-react-pagination-toolbar--theme-default-light .inovua-react-toolkit-toolbar__separator{background:#e4e3e2;margin:7px 8px}.inovua-react-pagination-toolbar.inovua-react-pagination-toolbar--theme-default-light .inovua-react-pagination-toolbar__page-size-combo{background:#fff;margin-right:8px}.inovua-react-pagination-toolbar.inovua-react-pagination-toolbar--theme-default-light .inovua-react-pagination-toolbar__region{padding-top:2px;padding-bottom:2px}.inovua-react-pagination-toolbar.inovua-react-pagination-toolbar--theme-default-light .inovua-react-pagination-toolbar__region .inovua-react-pagination-toolbar__icon{-webkit-user-select:none;-moz-user-select:none;user-select:none;fill:#99a1aa}.inovua-react-pagination-toolbar.inovua-react-pagination-toolbar--theme-default-light .inovua-react-pagination-toolbar__region .inovua-react-pagination-toolbar__icon.inovua-react-toolkit-button--over:not(.inovua-react-pagination-toolbar__icon--disabled).inovua-react-toolkit-button,.inovua-react-pagination-toolbar.inovua-react-pagination-toolbar--theme-default-light .inovua-react-pagination-toolbar__region .inovua-react-pagination-toolbar__icon.inovua-react-toolkit-button--over:not(.inovua-react-pagination-toolbar__icon--disabled).inovua-react-toolkit-button:hover{background:rgba(121,134,203,.15)}.inovua-react-pagination-toolbar.inovua-react-pagination-toolbar--theme-default-light .inovua-react-pagination-toolbar__region .inovua-react-pagination-toolbar__icon--focused{background:rgba(121,134,203,.25)}.inovua-react-pagination-toolbar.inovua-react-pagination-toolbar--theme-default-light .inovua-react-pagination-toolbar__region .inovua-react-pagination-toolbar__icon--named--FIRST_PAGE{margin-left:4px;margin-right:3px}.inovua-react-pagination-toolbar.inovua-react-pagination-toolbar--theme-default-light .inovua-react-pagination-toolbar__region .inovua-react-pagination-toolbar__icon--named--NEXT_PAGE{margin-right:3px}.inovua-react-pagination-toolbar.inovua-react-pagination-toolbar--theme-default-light .inovua-react-pagination-toolbar__region .inovua-react-pagination-toolbar__icon--named--REFRESH{margin-right:8px}.inovua-react-toolkit-load-mask.inovua-react-toolkit-load-mask--theme-default-light{fill:transparent}.inovua-react-toolkit-load-mask.inovua-react-toolkit-load-mask--theme-default-light .inovua-react-toolkit-load-mask__background-layer{background:rgba(0,0,0,.1)}.inovua-react-toolkit-load-mask.inovua-react-toolkit-load-mask--theme-default-light .inovua-react-toolkit-load-mask__loader--svg{position:relative;animation:inovua-react-toolkit-loadmask-spin 1.5s linear infinite}.inovua-react-toolkit-load-mask.inovua-react-toolkit-load-mask--theme-default-light .inovua-react-toolkit-load-mask__loader--svg .inovua-react-toolkit-load-mask__loader-spinner{border-radius:50%;background-image:conic-gradient(from 90deg,#e3e3e3,#7986cb .99turn,#e3e3e3);-o-object-fit:contain;object-fit:contain;z-index:9000}.inovua-react-toolkit-load-mask.inovua-react-toolkit-load-mask--theme-default-light .inovua-react-toolkit-load-mask__loader--svg:after{content:\"\";position:absolute;top:4px;left:4px;width:32px;height:32px;border-radius:50%;z-index:10000;background:transparent}.inovua-react-toolkit-load-mask.inovua-react-toolkit-load-mask--theme-default-light .inovua-react-toolkit-load-mask__loader--svg:before{content:\"\";position:absolute;top:4px;left:4px;width:32px;height:32px;border-radius:50%;background:#fafafa;z-index:10000}@keyframes inovua-react-toolkit-loadmask-spin{to{transform:rotate(1turn)}}.inovua-react-toolkit-load-mask.inovua-react-toolkit-load-mask--theme-default-light .inovua-react-toolkit-load-mask__loader-loadbar{border-radius:50px;box-shadow:0 0 3px rgba(121,134,203,.2)}.InovuaReactDataGrid--theme-default-light .inovua-react-toolkit-load-mask__loader-container .InovuaReactDataGrid__loading-wrapper{margin-top:16px}.InovuaReactDataGrid--theme-default-light .inovua-react-toolkit-load-mask__loader-container .InovuaReactDataGrid__loading-wrapper .InovuaReactDataGrid__loading-text{font-weight:500;color:#555e68}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__load-mask--live-pagination{background:none}.InovuaReactDataGrid--theme-default-light .inovua-react-pagination-toolbar{flex:none}.InovuaReactDataGrid--theme-default-light .inovua-react-pagination-toolbar.inovua-react-pagination-toolbar--theme-default-light{border:none;border-top:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .inovua-react-toolkit-radio-button{margin-bottom:0}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__checkbox{margin:3px}.InovuaReactDataGrid--theme-default-light{border:1px solid #e4e3e2;background:#fff;color:#555e68;fill:#99a1aa;font-size:14px}.InovuaReactDataGrid--theme-default-light:focus{outline:none}.inovua-react-panel--theme-THEME_NAME .InovuaReactDataGrid--theme-default-light,.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--paginated:not(.InovuaReactDataGrid--live-pagination){border:1px solid #a1b6d3}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__footer-rows-container{border-top:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-row--show-border-bottom:not(:last-child){border-bottom:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-rows-container--position-start .InovuaReactDataGrid__locked-row--last-in-section{border-bottom:3px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-rows-container--position-end .InovuaReactDataGrid__locked-row--first-in-section{border-top:3px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row-resize-indicator--hovered{background:#7986cb}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row-resize-indicator--active,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row-resize-indicator--active.InovuaReactDataGrid__row-resize-indicator--mobile{background:rgba(121,134,203,.5)}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row-resize-indicator--constrained,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row-resize-indicator--constrained.InovuaReactDataGrid__row-resize-indicator--mobile{background:rgba(232,64,54,.5)}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row-index-column{background:#f8f8f8}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row-resize-handle:after{position:absolute;bottom:0;left:0;right:0;content:\"\"}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row-details-border{border-left:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row-drag-proxy{background:#fff;border:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row-reorder-arrow{pointer-events:none;position:absolute;height:3px;width:40px;z-index:99}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row-reorder-arrow--valid{background:#7986cb}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row-reorder-arrow--invalid{background:#f54}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row-drag-scrolling-region{position:absolute;left:0;width:100%;height:40px;z-index:100;display:none}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row--scrolling{pointer-events:none}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row .InovuaReactDataGrid__row-details{background:#fff}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row .InovuaReactDataGrid__row-details.InovuaReactDataGrid__row-details--details-grid{padding:8px 0}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row .InovuaReactDataGrid__row-details>.InovuaReactDataGrid{margin:0 8px;width:auto}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row .InovuaReactDataGrid__row-details.InovuaReactDataGrid__row-details--show-border-bottom+.InovuaReactDataGrid__row-details-special-bottom-border{border-bottom:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row .InovuaReactDataGrid__row-details--min-viewport-width+.InovuaReactDataGrid__row-details-special-top-border,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row .InovuaReactDataGrid__row-details--viewport-width+.InovuaReactDataGrid__row-details-special-top-border{position:absolute;width:100%;top:-1px;left:0;border-top:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row:not(.InovuaReactDataGrid__row--show-vertical-borders) .InovuaReactDataGrid__row-details{border-top:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row:not(.InovuaReactDataGrid__row--show-horizontal-borders) .InovuaReactDataGrid__row-details+.InovuaReactDataGrid__row-details-special-top-border{display:none}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row.InovuaReactDataGrid__row--show-horizontal-borders .InovuaReactDataGrid__row-details{border-top:0}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row.InovuaReactDataGrid__row--show-horizontal-borders .InovuaReactDataGrid__row-details.InovuaReactDataGrid__row-details--show-border-bottom .InovuaReactDataGrid__row-details-special-bottom-border{border-bottom:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row.InovuaReactDataGrid__row--selected{background:rgba(121,134,203,.25)}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row--even,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row--no-zebra{background:#fff}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row--even.InovuaReactDataGrid__row--selected,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row--even.InovuaReactDataGrid__row--selected .InovuaReactDataGrid__row-index-column,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row--no-zebra.InovuaReactDataGrid__row--selected,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row--no-zebra.InovuaReactDataGrid__row--selected .InovuaReactDataGrid__row-index-column{background:#dee1f2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row--odd{background:#f8f8f8}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row--odd.InovuaReactDataGrid__row--selected,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row--odd.InovuaReactDataGrid__row--selected .InovuaReactDataGrid__row-index-column{background:#dee1f2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row--active .InovuaReactDataGrid__row-active-borders{position:absolute;right:0;bottom:0;top:0;left:0;pointer-events:none;z-index:12000}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row--active .InovuaReactDataGrid__row-active-borders:before{border:2px solid transparent;content:\"\";position:absolute;left:2px;right:2px;top:1px;bottom:1px;pointer-events:none}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row--active .InovuaReactDataGrid__row-active-borders.InovuaReactDataGrid__row-active-borders--has-border-top:before{top:2px}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row--active .InovuaReactDataGrid__row-active-borders.InovuaReactDataGrid__row-active-borders--has-border-bottom:before{bottom:2px}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row--active .InovuaReactDataGrid__cell:not(.InovuaReactDataGrid__cell--no-background),.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row--active.InovuaReactDataGrid__row--even .InovuaReactDataGrid__cell:not(.InovuaReactDataGrid__cell--no-background),.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row--active.InovuaReactDataGrid__row--odd .InovuaReactDataGrid__cell:not(.InovuaReactDataGrid__cell--no-background){color:#555e68}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row--selected{background:rgba(121,134,203,.25);color:#555e68}.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-hover-rows .InovuaReactDataGrid__locked-row:hover .InovuaReactDataGrid__locked-row-cell{background:#ebedf7}.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-hover-rows .InovuaReactDataGrid__row--even:not(.InovuaReactDataGrid__row--scrolling):not(.InovuaReactDataGrid__row--empty) .InovuaReactDataGrid__row-hover-target:hover{background:#ebedf7;color:#555e68}.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-hover-rows .InovuaReactDataGrid__row--even:not(.InovuaReactDataGrid__row--scrolling):not(.InovuaReactDataGrid__row--empty) .InovuaReactDataGrid__row-hover-target:hover .InovuaReactDataGrid__row-index-column{background:#ebedf7}.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-hover-rows .InovuaReactDataGrid__row--even:not(.InovuaReactDataGrid__row--scrolling):not(.InovuaReactDataGrid__row--empty) .InovuaReactDataGrid__row-hover-target:hover .InovuaReactDataGrid__cell--over{background:#d7dbef;color:#555e68}.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-hover-rows .InovuaReactDataGrid__row--even:not(.InovuaReactDataGrid__row--scrolling):not(.InovuaReactDataGrid__row--empty).InovuaReactDataGrid__row--selected .InovuaReactDataGrid__row-hover-target:hover{background:#d0d5ed;color:#555e68}.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-hover-rows .InovuaReactDataGrid__row--even:not(.InovuaReactDataGrid__row--scrolling):not(.InovuaReactDataGrid__row--empty).InovuaReactDataGrid__row--selected .InovuaReactDataGrid__row-hover-target:hover .InovuaReactDataGrid__row-index-column{background:#d0d5ed}.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-hover-rows .InovuaReactDataGrid__row--even:not(.InovuaReactDataGrid__row--scrolling):not(.InovuaReactDataGrid__row--empty).InovuaReactDataGrid__row--selected .InovuaReactDataGrid__row-hover-target:hover .InovuaReactDataGrid__cell--over{background:#d7dbef;color:#555e68}.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-hover-rows .InovuaReactDataGrid__row--no-zebra:not(.InovuaReactDataGrid__row--scrolling):not(.InovuaReactDataGrid__row--empty) .InovuaReactDataGrid__row-hover-target:hover,.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-hover-rows .InovuaReactDataGrid__row--odd:not(.InovuaReactDataGrid__row--scrolling):not(.InovuaReactDataGrid__row--empty) .InovuaReactDataGrid__row-hover-target:hover{background:#ebedf7;color:#555e68}.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-hover-rows .InovuaReactDataGrid__row--no-zebra:not(.InovuaReactDataGrid__row--scrolling):not(.InovuaReactDataGrid__row--empty) .InovuaReactDataGrid__row-hover-target:hover .InovuaReactDataGrid__row-index-column,.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-hover-rows .InovuaReactDataGrid__row--odd:not(.InovuaReactDataGrid__row--scrolling):not(.InovuaReactDataGrid__row--empty) .InovuaReactDataGrid__row-hover-target:hover .InovuaReactDataGrid__row-index-column{background:#ebedf7}.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-hover-rows .InovuaReactDataGrid__row--no-zebra:not(.InovuaReactDataGrid__row--scrolling):not(.InovuaReactDataGrid__row--empty) .InovuaReactDataGrid__row-hover-target:hover .InovuaReactDataGrid__cell--over,.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-hover-rows .InovuaReactDataGrid__row--odd:not(.InovuaReactDataGrid__row--scrolling):not(.InovuaReactDataGrid__row--empty) .InovuaReactDataGrid__row-hover-target:hover .InovuaReactDataGrid__cell--over{background:#d7dbef;color:#555e68}.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-hover-rows .InovuaReactDataGrid__row--no-zebra:not(.InovuaReactDataGrid__row--scrolling):not(.InovuaReactDataGrid__row--empty).InovuaReactDataGrid__row--selected .InovuaReactDataGrid__row-hover-target:hover,.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-hover-rows .InovuaReactDataGrid__row--odd:not(.InovuaReactDataGrid__row--scrolling):not(.InovuaReactDataGrid__row--empty).InovuaReactDataGrid__row--selected .InovuaReactDataGrid__row-hover-target:hover{background:#d0d5ed;color:#555e68}.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-hover-rows .InovuaReactDataGrid__row--no-zebra:not(.InovuaReactDataGrid__row--scrolling):not(.InovuaReactDataGrid__row--empty).InovuaReactDataGrid__row--selected .InovuaReactDataGrid__row-hover-target:hover .InovuaReactDataGrid__row-index-column,.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-hover-rows .InovuaReactDataGrid__row--odd:not(.InovuaReactDataGrid__row--scrolling):not(.InovuaReactDataGrid__row--empty).InovuaReactDataGrid__row--selected .InovuaReactDataGrid__row-hover-target:hover .InovuaReactDataGrid__row-index-column{background:#d0d5ed}.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-hover-rows .InovuaReactDataGrid__row--no-zebra:not(.InovuaReactDataGrid__row--scrolling):not(.InovuaReactDataGrid__row--empty).InovuaReactDataGrid__row--selected .InovuaReactDataGrid__row-hover-target:hover .InovuaReactDataGrid__cell--over,.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-hover-rows .InovuaReactDataGrid__row--odd:not(.InovuaReactDataGrid__row--scrolling):not(.InovuaReactDataGrid__row--empty).InovuaReactDataGrid__row--selected .InovuaReactDataGrid__row-hover-target:hover .InovuaReactDataGrid__cell--over{background:#d7dbef;color:#555e68}.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--focused .InovuaReactDataGrid__row--active>.InovuaReactDataGrid__row-active-borders-wrapper>.InovuaReactDataGrid__row-active-borders:before,.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--focused .InovuaReactDataGrid__row--active>.InovuaReactDataGrid__row-active-borders:before{border:2px solid #7986cb;z-index:10}.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--focused .InovuaReactDataGrid__row--active>.InovuaReactDataGrid__row-active-borders-wrapper{z-index:11000}.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--focused .InovuaReactDataGrid__row--active.InovuaReactDataGrid__row--no-locked-start:before{border-left:2px solid #7986cb;z-index:1}.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--focused .InovuaReactDataGrid__row--active.InovuaReactDataGrid__row--no-locked-end:before{border-right:2px solid #7986cb;z-index:1}.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--focused .InovuaReactDataGrid__row--active.InovuaReactDataGrid__row--group-row.InovuaReactDataGrid__row--has-locked-end>.InovuaReactDataGrid__row-active-borders,.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--focused .InovuaReactDataGrid__row--active.InovuaReactDataGrid__row--group-row.InovuaReactDataGrid__row--has-locked-end>.InovuaReactDataGrid__row-active-borders-wrapper>.InovuaReactDataGrid__row-active-borders,.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--focused .InovuaReactDataGrid__row--active.InovuaReactDataGrid__row--group-row.InovuaReactDataGrid__row--has-locked-start>.InovuaReactDataGrid__row-active-borders,.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--focused .InovuaReactDataGrid__row--active.InovuaReactDataGrid__row--group-row.InovuaReactDataGrid__row--has-locked-start>.InovuaReactDataGrid__row-active-borders-wrapper>.InovuaReactDataGrid__row-active-borders{background:inherit;z-index:11000}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row-reorder-icon svg{fill:#495e85}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__header,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__header-wrapper__fill{border-bottom:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__header,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__header-group{font-weight:inherit}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__header-rtl-scroll-spacer{border-left:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__header{background:#fff}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-end-wrapper,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-start-wrapper{background:inherit;transition:background}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__header-group__title{border-bottom:1px solid #e4e3e2;-moz-user-select:none;user-select:none;-webkit-user-select:none}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__header-group__title.InovuaReactDataGrid__header-group__title--empty{border-bottom:1px solid transparent}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__content{font-weight:700}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell:not(.InovuaReactDataGrid__cell--no-padding),.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__content,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__footer-row-cell,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__header-group__title,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-row-cell,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__nested-cell,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__nested-group-cell{padding:8px}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__footer-row-group,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-row-group{background:#fff}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__footer-row-cell{font-weight:inherit;border-color:#e4e3e2!important}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__content .InovuaReactDataGrid__sort-icon-wrapper,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__group-toolbar-item .InovuaReactDataGrid__sort-icon-wrapper{display:inline-flex;flex-direction:column;vertical-align:middle}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__content .InovuaReactDataGrid__sort-icon-wrapper .InovuaReactDataGrid__sort-icon,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__group-toolbar-item .InovuaReactDataGrid__sort-icon-wrapper .InovuaReactDataGrid__sort-icon{margin-left:8px;margin-right:8px;fill:#e1e1e1}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__content .InovuaReactDataGrid__sort-icon-wrapper .InovuaReactDataGrid__sort-icon.InovuaReactDataGrid__sort-icon--asc,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__group-toolbar-item .InovuaReactDataGrid__sort-icon-wrapper .InovuaReactDataGrid__sort-icon.InovuaReactDataGrid__sort-icon--asc{margin-bottom:4px}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__content .InovuaReactDataGrid__sort-icon-wrapper .InovuaReactDataGrid__sort-icon.InovuaReactDataGrid__sort-icon--active,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__group-toolbar-item .InovuaReactDataGrid__sort-icon-wrapper .InovuaReactDataGrid__sort-icon.InovuaReactDataGrid__sort-icon--active{fill:#99a1aa}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-resizer{-moz-user-select:none;user-select:none;-webkit-user-select:none;height:inherit;bottom:0}.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--filterable .InovuaReactDataGrid__column-resizer{bottom:41px}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-resize-handle,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__header-group-resize-handle{background:#7986cb}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__resize-proxy{width:4px;background:rgba(121,134,203,.5)}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__resize-proxy--constrained{background:rgba(232,64,54,.5)}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header--locked-start.InovuaReactDataGrid__column-header--last-in-section+.InovuaReactDataGrid__column-resizer .InovuaReactDataGrid__column-resize-handle{right:-1px;z-index:100}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__header-group,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__header-wrapper{line-height:1.6}.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--direction-rtl .InovuaReactDataGrid__drag-proxy{direction:rtl}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__drag-proxy{opacity:.7}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__drag-proxy .InovuaReactDataGrid__drag-proxy{opacity:1}.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--direction-ltr .InovuaReactDataGrid__header-group--dragging{border-top:1px solid #e4e3e2;border-right:1px solid #e4e3e2;border-bottom:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--direction-rtl .InovuaReactDataGrid__header-group--dragging{border-top:1px solid #e4e3e2;border-left:1px solid #e4e3e2;border-bottom:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header--dragging .InovuaReactDataGrid__column-header__menu-tool{display:none}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header--dragging.InovuaReactDataGrid__column-header--dragging{border:1px solid #cdcecd;cursor:grabbing}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__resize-wrapper--show-border-left .InovuaReactDataGrid__column-header--dragging.InovuaReactDataGrid__column-header--dragging{border-left:none}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header--show-border-left,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__resize-wrapper--show-border-left,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__header-group__title--show-border-left{border-left:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header--direction-ltr.InovuaReactDataGrid__column-header--unresizable.InovuaReactDataGrid__column-header--locked-start.InovuaReactDataGrid__column-header--last-in-section:after,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__resize-wrapper--direction-ltr.InovuaReactDataGrid__column-header__resize-wrapper--locked-start.InovuaReactDataGrid__column-header__resize-wrapper--last-in-section:after{content:\"\";position:absolute;right:-3px;left:unset;top:0;bottom:0;width:3px;border-left:1px solid #e4e3e2;border-right:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header--direction-ltr.InovuaReactDataGrid__column-header--unresizable.InovuaReactDataGrid__column-header--locked-start.InovuaReactDataGrid__column-header--last-in-section.InovuaReactDataGrid__column-header--dragging:after,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header--direction-ltr.InovuaReactDataGrid__column-header--unresizable.InovuaReactDataGrid__column-header--locked-start.InovuaReactDataGrid__column-header--last-in-section.InovuaReactDataGrid__column-header__resize-wrapper--dragging:after,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__resize-wrapper--direction-ltr.InovuaReactDataGrid__column-header__resize-wrapper--locked-start.InovuaReactDataGrid__column-header__resize-wrapper--last-in-section.InovuaReactDataGrid__column-header--dragging:after,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__resize-wrapper--direction-ltr.InovuaReactDataGrid__column-header__resize-wrapper--locked-start.InovuaReactDataGrid__column-header__resize-wrapper--last-in-section.InovuaReactDataGrid__column-header__resize-wrapper--dragging:after{display:none}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header--direction-rtl.InovuaReactDataGrid__column-header--unresizable.InovuaReactDataGrid__column-header--locked-start.InovuaReactDataGrid__column-header--last-in-section:after,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__resize-wrapper--direction-rtl.InovuaReactDataGrid__column-header__resize-wrapper--locked-start.InovuaReactDataGrid__column-header__resize-wrapper--last-in-section:after{content:\"\";position:absolute;left:-3px;right:unset;top:0;bottom:0;width:3px;border-left:1px solid #e4e3e2;border-right:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header--direction-rtl.InovuaReactDataGrid__column-header--unresizable.InovuaReactDataGrid__column-header--locked-start.InovuaReactDataGrid__column-header--last-in-section.InovuaReactDataGrid__column-header--dragging:after,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header--direction-rtl.InovuaReactDataGrid__column-header--unresizable.InovuaReactDataGrid__column-header--locked-start.InovuaReactDataGrid__column-header--last-in-section.InovuaReactDataGrid__column-header__resize-wrapper--dragging:after,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__resize-wrapper--direction-rtl.InovuaReactDataGrid__column-header__resize-wrapper--locked-start.InovuaReactDataGrid__column-header__resize-wrapper--last-in-section.InovuaReactDataGrid__column-header--dragging:after,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__resize-wrapper--direction-rtl.InovuaReactDataGrid__column-header__resize-wrapper--locked-start.InovuaReactDataGrid__column-header__resize-wrapper--last-in-section.InovuaReactDataGrid__column-header__resize-wrapper--dragging:after{display:none}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__drag-proxy .InovuaReactDataGrid__column-header--show-border-left,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__drag-proxy .InovuaReactDataGrid__column-header__resize-wrapper--show-border-left,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__drag-proxy .InovuaReactDataGrid__header-group__title--show-border-left{z-index:10}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__header-group__title{border-right:1px solid transparent;font-weight:700}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__header-group__title--show-border-right{border-right:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__header-group__title--direction-ltr.InovuaReactDataGrid__header-group__title--show-border-right.InovuaReactDataGrid__header-group__title--locked-start{border-right:none;margin-right:3px}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__header-group__title--direction-ltr.InovuaReactDataGrid__header-group__title--show-border-right.InovuaReactDataGrid__header-group__title--locked-start:after{content:\"\";position:absolute;right:0;top:0;bottom:0;width:3px;border-left:1px solid #e4e3e2;border-right:1px solid #e4e3e2;background:#e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__header-group__title--direction-ltr.InovuaReactDataGrid__header-group__title--show-border-left.InovuaReactDataGrid__header-group__title--locked-end.InovuaReactDataGrid__header-group__title--first-in-section{margin-left:3px;border-left:none}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__header-group__title--direction-ltr.InovuaReactDataGrid__header-group__title--show-border-left.InovuaReactDataGrid__header-group__title--locked-end.InovuaReactDataGrid__header-group__title--first-in-section:after{content:\"\";position:absolute;left:0;top:0;bottom:0;width:3px;border-left:1px solid #e4e3e2;border-right:1px solid #e4e3e2;background:#e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__header-group__title--direction-rtl.InovuaReactDataGrid__header-group__title--show-border-left.InovuaReactDataGrid__header-group__title--locked-start{border-left:none;margin-left:3px}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__header-group__title--direction-rtl.InovuaReactDataGrid__header-group__title--show-border-left.InovuaReactDataGrid__header-group__title--locked-start:after{content:\"\";position:absolute;left:0;top:0;bottom:0;width:3px;border-left:1px solid #e4e3e2;border-right:1px solid #e4e3e2;background:#e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__header-group__title--direction-rtl.InovuaReactDataGrid__header-group__title--show-border-right.InovuaReactDataGrid__header-group__title--locked-end.InovuaReactDataGrid__header-group__title--first-in-section{margin-right:3px;border-right:none}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__header-group__title--direction-rtl.InovuaReactDataGrid__header-group__title--show-border-right.InovuaReactDataGrid__header-group__title--locked-end.InovuaReactDataGrid__header-group__title--first-in-section:after{content:\"\";position:absolute;right:0;top:0;bottom:0;width:3px;border-left:1px solid #e4e3e2;border-right:1px solid #e4e3e2;background:#e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__drag-proxy .InovuaReactDataGrid__column-header--first-in-section,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__drag-proxy.InovuaReactDataGrid__header-group .InovuaReactDataGrid__header-group__title--show-border-left.InovuaReactDataGrid__header-group__title--locked-end.InovuaReactDataGrid__header-group__title--first-in-section,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__drag-proxy .InovuaReactDataGrid__header-group__title--first-in-section,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__drag-proxy .InovuaReactDataGrid__header-group__title--show-border-left.InovuaReactDataGrid__header-group__title--locked-end.InovuaReactDataGrid__header-group__title--first-in-section{border-left:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__drag-proxy.InovuaReactDataGrid__header-group .InovuaReactDataGrid__column-header__resize-wrapper,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__drag-proxy.InovuaReactDataGrid__header-group .InovuaReactDataGrid__header-group__title{margin-right:0;margin-left:0}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__drag-proxy.InovuaReactDataGrid__header-group .InovuaReactDataGrid__column-header__resize-wrapper:after,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__drag-proxy.InovuaReactDataGrid__header-group .InovuaReactDataGrid__header-group__title:after{display:none}.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-header-border-right.InovuaReactDataGrid--direction-ltr .InovuaReactDataGrid__header-group__title--last:not(.InovuaReactDataGrid__header-group__title--dragging){border-right:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-header-border-right.InovuaReactDataGrid--direction-ltr .InovuaReactDataGrid__column-header__resize-wrapper--show-border-right>.InovuaReactDataGrid__column-header--last:not(.InovuaReactDataGrid__column-header--hidden):not(.InovuaReactDataGrid__drag-proxy){border-right:0}.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-header-border-right.InovuaReactDataGrid--direction-rtl .InovuaReactDataGrid__header-group__title--last:not(.InovuaReactDataGrid__header-group__title--dragging){border-left:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-header-border-right.InovuaReactDataGrid--direction-rtl .InovuaReactDataGrid__column-header__resize-wrapper--show-border-right>.InovuaReactDataGrid__column-header--last:not(.InovuaReactDataGrid__column-header--hidden):not(.InovuaReactDataGrid__drag-proxy){border-left:0}.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-header-border-right.InovuaReactDataGrid--direction-rtl .InovuaReactDataGrid__column-header.InovuaReactDataGrid__drag-proxy{border-left:1px solid #e4e3e2;border-right:0}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header--show-border-right,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__resize-wrapper--show-border-right{border-right:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header.InovuaReactDataGrid__column-header--virtualize-columns.InovuaReactDataGrid__column-header--show-border--left{border-left:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-start-wrapper--direction-ltr .InovuaReactDataGrid__column-header--show-border-right:last-child,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-start-wrapper--direction-ltr .InovuaReactDataGrid__column-header__resize-wrapper--show-border-right:last-child,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-start-wrapper--direction-ltr .InovuaReactDataGrid__column-header__resize-wrapper:last-child{border-right:3px solid transparent}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-start-wrapper--direction-ltr .InovuaReactDataGrid__column-header--show-border-right:last-child.InovuaReactDataGrid__column-header--show-border-right:last-child,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-start-wrapper--direction-ltr .InovuaReactDataGrid__column-header__resize-wrapper--show-border-right:last-child.InovuaReactDataGrid__column-header--show-border-right:last-child,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-start-wrapper--direction-ltr .InovuaReactDataGrid__column-header__resize-wrapper:last-child.InovuaReactDataGrid__column-header--show-border-right:last-child{padding-right:2px}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-start-wrapper--direction-ltr .InovuaReactDataGrid__column-header--show-border-right:last-child>.InovuaReactDataGrid__column-header--show-border-right:after,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-start-wrapper--direction-ltr .InovuaReactDataGrid__column-header__resize-wrapper--show-border-right:last-child>.InovuaReactDataGrid__column-header--show-border-right:after,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-start-wrapper--direction-ltr .InovuaReactDataGrid__column-header__resize-wrapper:last-child>.InovuaReactDataGrid__column-header--show-border-right:after{content:\"\";position:absolute;right:-1px;z-index:1;top:-1px;bottom:-1px;width:3px}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-start-wrapper--direction-rtl .InovuaReactDataGrid__column-header--show-border-left:last-child,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-start-wrapper--direction-rtl .InovuaReactDataGrid__column-header__resize-wrapper--show-border-left:last-child,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-start-wrapper--direction-rtl .InovuaReactDataGrid__column-header__resize-wrapper:last-child{border-left:3px solid transparent}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-start-wrapper--direction-rtl .InovuaReactDataGrid__column-header--show-border-left:last-child.InovuaReactDataGrid__column-header--show-border-left:last-child,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-start-wrapper--direction-rtl .InovuaReactDataGrid__column-header__resize-wrapper--show-border-left:last-child.InovuaReactDataGrid__column-header--show-border-left:last-child,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-start-wrapper--direction-rtl .InovuaReactDataGrid__column-header__resize-wrapper:last-child.InovuaReactDataGrid__column-header--show-border-left:last-child{padding-left:2px}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-start-wrapper--direction-rtl .InovuaReactDataGrid__column-header--show-border-left:last-child>.InovuaReactDataGrid__column-header--show-border-right:after,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-start-wrapper--direction-rtl .InovuaReactDataGrid__column-header__resize-wrapper--show-border-left:last-child>.InovuaReactDataGrid__column-header--show-border-right:after,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-start-wrapper--direction-rtl .InovuaReactDataGrid__column-header__resize-wrapper:last-child>.InovuaReactDataGrid__column-header--show-border-right:after{content:\"\";position:absolute;right:-1px;z-index:1;top:-1px;bottom:-1px;width:3px}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-end-wrapper--direction-ltr .InovuaReactDataGrid__column-header--show-border-left.InovuaReactDataGrid__column-header--locked-end.InovuaReactDataGrid__column-header--first-in-section,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-end-wrapper--direction-ltr .InovuaReactDataGrid__column-header__resize-wrapper--show-border-left.InovuaReactDataGrid__column-header__resize-wrapper--locked-end.InovuaReactDataGrid__column-header__resize-wrapper--first-in-section{border-left:3px solid transparent}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-end-wrapper--direction-ltr .InovuaReactDataGrid__column-header--show-border-left.InovuaReactDataGrid__column-header--locked-end.InovuaReactDataGrid__column-header--first-in-section.InovuaReactDataGrid__column-header__resize-wrapper--dragging,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-end-wrapper--direction-ltr .InovuaReactDataGrid__column-header__resize-wrapper--show-border-left.InovuaReactDataGrid__column-header__resize-wrapper--locked-end.InovuaReactDataGrid__column-header__resize-wrapper--first-in-section.InovuaReactDataGrid__column-header__resize-wrapper--dragging{border-left:0}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-end-wrapper--direction-ltr .InovuaReactDataGrid__column-header--show-border-left.InovuaReactDataGrid__column-header--locked-end.InovuaReactDataGrid__column-header--first-in-section:after,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-end-wrapper--direction-ltr .InovuaReactDataGrid__column-header__resize-wrapper--show-border-left.InovuaReactDataGrid__column-header__resize-wrapper--locked-end.InovuaReactDataGrid__column-header__resize-wrapper--first-in-section:after{content:\"\";position:absolute;left:-3px;z-index:1;top:0;bottom:0;width:3px;border-left:1px solid #e4e3e2;border-right:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-end-wrapper--direction-rtl .InovuaReactDataGrid__column-header--show-border-right.InovuaReactDataGrid__column-header--locked-end.InovuaReactDataGrid__column-header--first-in-section,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-end-wrapper--direction-rtl .InovuaReactDataGrid__column-header__resize-wrapper--show-border-right.InovuaReactDataGrid__column-header__resize-wrapper--locked-end.InovuaReactDataGrid__column-header__resize-wrapper--first-in-section{border-right:2px solid transparent}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-end-wrapper--direction-rtl .InovuaReactDataGrid__column-header--show-border-right.InovuaReactDataGrid__column-header--locked-end.InovuaReactDataGrid__column-header--first-in-section.InovuaReactDataGrid__column-header__resize-wrapper--dragging,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-end-wrapper--direction-rtl .InovuaReactDataGrid__column-header__resize-wrapper--show-border-right.InovuaReactDataGrid__column-header__resize-wrapper--locked-end.InovuaReactDataGrid__column-header__resize-wrapper--first-in-section.InovuaReactDataGrid__column-header__resize-wrapper--dragging{border-left:0}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-end-wrapper--direction-rtl .InovuaReactDataGrid__column-header--show-border-right.InovuaReactDataGrid__column-header--locked-end.InovuaReactDataGrid__column-header--first-in-section:after,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-end-wrapper--direction-rtl .InovuaReactDataGrid__column-header__resize-wrapper--show-border-right.InovuaReactDataGrid__column-header__resize-wrapper--locked-end.InovuaReactDataGrid__column-header__resize-wrapper--first-in-section:after{content:\"\";position:absolute;right:-2px;z-index:1;top:0;bottom:0;width:3px;border-left:1px solid #e4e3e2;border-right:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__resize-wrapper--dragging.InovuaReactDataGrid__drag-proxy.InovuaReactDataGrid__column-header__resize-wrapper--first-in-section.InovuaReactDataGrid__column-header__resize-wrapper--locked-end{border-left:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__resize-wrapper--dragging.InovuaReactDataGrid__drag-proxy:after{display:none}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header--sortable{-moz-user-select:none;user-select:none;-webkit-user-select:none;cursor:pointer}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-reorder-placeholder .InovuaReactDataGrid__column-header,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-reorder-placeholder .InovuaReactDataGrid__header-group__title{background:hsla(0,0%,100%,.6)}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-reorder-placeholder .InovuaReactDataGrid__column-header--dragging{background:hsla(0,0%,100%,.8);z-index:1000;border-right:1px solid #e4e3e2;border-left:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-reorder-placeholder .InovuaReactDataGrid__column-header--should-group{border-top:1px solid #e4e3e2;border-bottom:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-reorder-arrow-fill{background:#7986cb;position:absolute;width:auto;height:auto;top:1px;bottom:2px}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-reorder-arrow-fill--direction-ltr{left:2px;right:-2px}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-reorder-arrow-fill--direction-rtl{right:2px;left:-2px}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-reorder-arrow-fill--target-group{top:0;bottom:1px}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header--last-in-section.InovuaReactDataGrid__column-header--locked-start .InovuaReactDataGrid__column-header__content{padding-right:13px}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__resize-wrapper--locked:after{background:#e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row--first .InovuaReactDataGrid__cell{border-top:1px solid transparent!important}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row--collapsed .InovuaReactDataGrid__cell:not(.InovuaReactDataGrid__cell--show-border-bottom){border-bottom:1px solid transparent}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__footer-rows-container--show-border-right{border-right:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--show-border-top{border-top:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--show-border-bottom,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__footer-row-cell--show-border-bottom,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-row-cell--show-border-bottom{border-bottom:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--show-border-left,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__footer-row-cell--show-border-left,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-row-cell--show-border-left{border-left:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--show-border-left.InovuaReactDataGrid__cell--direction-ltr.InovuaReactDataGrid__cell--locked-end:first-child:after,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__footer-row-cell--show-border-left.InovuaReactDataGrid__footer-row-cell--direction-ltr.InovuaReactDataGrid__footer-row-cell--locked-end:first-child:after,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-row-cell--show-border-left.InovuaReactDataGrid__locked-row-cell--direction-ltr.InovuaReactDataGrid__locked-row-cell--locked-end:first-child:after{content:\"\";position:absolute;left:-1px;top:-1px;bottom:-1px;width:3px;border-left:1px solid #e4e3e2;border-right:1px solid #e4e3e2;background:#e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--show-border-right.InovuaReactDataGrid__cell--direction-rtl.InovuaReactDataGrid__cell--last,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--show-border-right:not(.InovuaReactDataGrid__cell--last),.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__footer-row-cell--show-border-right:not(.InovuaReactDataGrid__footer-row-cell--last),.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-row-cell--show-border-right:not(.InovuaReactDataGrid__locked-row-cell--last){border-right:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--show-border-right.InovuaReactDataGrid__cell--direction-rtl.InovuaReactDataGrid__cell--locked-end.InovuaReactDataGrid__cell--first-in-section,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--show-border-right.InovuaReactDataGrid__cell--direction-rtl.InovuaReactDataGrid__cell--locked-end.InovuaReactDataGrid__footer-row-cell--first-in-section,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--show-border-right.InovuaReactDataGrid__cell--direction-rtl.InovuaReactDataGrid__cell--locked-end.InovuaReactDataGrid__locked-row-cell--first-in-section,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__footer-row-cell--show-border-right.InovuaReactDataGrid__footer-row-cell--direction-rtl.InovuaReactDataGrid__footer-row-cell--locked-end.InovuaReactDataGrid__cell--first-in-section,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__footer-row-cell--show-border-right.InovuaReactDataGrid__footer-row-cell--direction-rtl.InovuaReactDataGrid__footer-row-cell--locked-end.InovuaReactDataGrid__footer-row-cell--first-in-section,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__footer-row-cell--show-border-right.InovuaReactDataGrid__footer-row-cell--direction-rtl.InovuaReactDataGrid__footer-row-cell--locked-end.InovuaReactDataGrid__locked-row-cell--first-in-section,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-row-cell--show-border-right.InovuaReactDataGrid__locked-row-cell--direction-rtl.InovuaReactDataGrid__locked-row-cell--locked-end.InovuaReactDataGrid__cell--first-in-section,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-row-cell--show-border-right.InovuaReactDataGrid__locked-row-cell--direction-rtl.InovuaReactDataGrid__locked-row-cell--locked-end.InovuaReactDataGrid__footer-row-cell--first-in-section,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-row-cell--show-border-right.InovuaReactDataGrid__locked-row-cell--direction-rtl.InovuaReactDataGrid__locked-row-cell--locked-end.InovuaReactDataGrid__locked-row-cell--first-in-section{border-right:none}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--show-border-right.InovuaReactDataGrid__cell--direction-rtl.InovuaReactDataGrid__cell--locked-end.InovuaReactDataGrid__cell--last-in-section:not(.InovuaReactDataGrid__cell--first-in-section),.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--show-border-right.InovuaReactDataGrid__cell--direction-rtl.InovuaReactDataGrid__cell--locked-end.InovuaReactDataGrid__footer-row-cell--last-in-section:not(.InovuaReactDataGrid__footer-row-cell--first-in-section),.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--show-border-right.InovuaReactDataGrid__cell--direction-rtl.InovuaReactDataGrid__cell--locked-end.InovuaReactDataGrid__locked-row-cell--last-in-section:not(.InovuaReactDataGrid__locked-row-cell--first-in-section),.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__footer-row-cell--show-border-right.InovuaReactDataGrid__footer-row-cell--direction-rtl.InovuaReactDataGrid__footer-row-cell--locked-end.InovuaReactDataGrid__cell--last-in-section:not(.InovuaReactDataGrid__cell--first-in-section),.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__footer-row-cell--show-border-right.InovuaReactDataGrid__footer-row-cell--direction-rtl.InovuaReactDataGrid__footer-row-cell--locked-end.InovuaReactDataGrid__footer-row-cell--last-in-section:not(.InovuaReactDataGrid__footer-row-cell--first-in-section),.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__footer-row-cell--show-border-right.InovuaReactDataGrid__footer-row-cell--direction-rtl.InovuaReactDataGrid__footer-row-cell--locked-end.InovuaReactDataGrid__locked-row-cell--last-in-section:not(.InovuaReactDataGrid__locked-row-cell--first-in-section),.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-row-cell--show-border-right.InovuaReactDataGrid__locked-row-cell--direction-rtl.InovuaReactDataGrid__locked-row-cell--locked-end.InovuaReactDataGrid__cell--last-in-section:not(.InovuaReactDataGrid__cell--first-in-section),.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-row-cell--show-border-right.InovuaReactDataGrid__locked-row-cell--direction-rtl.InovuaReactDataGrid__locked-row-cell--locked-end.InovuaReactDataGrid__footer-row-cell--last-in-section:not(.InovuaReactDataGrid__footer-row-cell--first-in-section),.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-row-cell--show-border-right.InovuaReactDataGrid__locked-row-cell--direction-rtl.InovuaReactDataGrid__locked-row-cell--locked-end.InovuaReactDataGrid__locked-row-cell--last-in-section:not(.InovuaReactDataGrid__locked-row-cell--first-in-section){border-right:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--show-border-right.InovuaReactDataGrid__cell--direction-rtl.InovuaReactDataGrid__cell--locked-end:first-child:after,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__footer-row-cell--show-border-right.InovuaReactDataGrid__footer-row-cell--direction-rtl.InovuaReactDataGrid__footer-row-cell--locked-end:first-child:after,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-row-cell--show-border-right.InovuaReactDataGrid__locked-row-cell--direction-rtl.InovuaReactDataGrid__locked-row-cell--locked-end:first-child:after{content:\"\";position:absolute;right:0;top:-1px;bottom:-1px;width:3px;border-left:1px solid #e4e3e2;border-right:1px solid #e4e3e2;background:#e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--direction-ltr.InovuaReactDataGrid__cell--show-border-right.InovuaReactDataGrid__cell--locked-start.InovuaReactDataGrid__cell--last-in-section:not(.InovuaReactDataGrid__cell--last):after,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__footer-row-cell--direction-ltr.InovuaReactDataGrid__footer-row-cell--show-border-right.InovuaReactDataGrid__footer-row-cell--locked-start.InovuaReactDataGrid__footer-row-cell--last-in-section:not(.InovuaReactDataGrid__footer-row-cell--last):after,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-row-cell--direction-ltr.InovuaReactDataGrid__locked-row-cell--show-border-right.InovuaReactDataGrid__locked-row-cell--locked-start.InovuaReactDataGrid__locked-row-cell--last-in-section:not(.InovuaReactDataGrid__locked-row-cell--last):after{content:\"\";position:absolute;right:-1px;top:-1px;bottom:-1px;width:3px;border-left:1px solid #e4e3e2;border-right:1px solid #e4e3e2;background:#e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--direction-rtl.InovuaReactDataGrid__cell--show-border-left.InovuaReactDataGrid__cell--locked-start.InovuaReactDataGrid__cell--last-in-section:not(.InovuaReactDataGrid__cell--last):after,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__footer-row-cell--direction-rtl.InovuaReactDataGrid__footer-row-cell--show-border-left.InovuaReactDataGrid__footer-row-cell--locked-start.InovuaReactDataGrid__footer-row-cell--last-in-section:not(.InovuaReactDataGrid__footer-row-cell--last):after,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-row-cell--direction-rtl.InovuaReactDataGrid__locked-row-cell--show-border-left.InovuaReactDataGrid__locked-row-cell--locked-start.InovuaReactDataGrid__locked-row-cell--last-in-section:not(.InovuaReactDataGrid__locked-row-cell--last):after{content:\"\";position:absolute;left:-1px;top:-1px;bottom:-1px;width:3px;border-left:1px solid #e4e3e2;border-right:1px solid #e4e3e2;background:#e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--show-border-right.InovuaReactDataGrid__cell--last-in-section.InovuaReactDataGrid__cell--locked-start,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__footer-row-cell--show-border-right.InovuaReactDataGrid__footer-row-cell--last-in-section.InovuaReactDataGrid__footer-row-cell--locked-start,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-row-cell--show-border-right.InovuaReactDataGrid__locked-row-cell--last-in-section.InovuaReactDataGrid__locked-row-cell--locked-start{padding-right:13px}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--direction-ltr.InovuaReactDataGrid__cell--show-border-left.InovuaReactDataGrid__cell--first-in-section.InovuaReactDataGrid__cell--locked-end,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__footer-row-cell--direction-ltr.InovuaReactDataGrid__footer-row-cell--show-border-left.InovuaReactDataGrid__footer-row-cell--first-in-section.InovuaReactDataGrid__footer-row-cell--locked-end,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-row-cell--direction-ltr.InovuaReactDataGrid__locked-row-cell--show-border-left.InovuaReactDataGrid__locked-row-cell--first-in-section.InovuaReactDataGrid__locked-row-cell--locked-end{padding-left:13px}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--direction-rtl.InovuaReactDataGrid__cell--show-border-left.InovuaReactDataGrid__cell--first-in-section.InovuaReactDataGrid__cell--locked-end,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__footer-row-cell--direction-rtl.InovuaReactDataGrid__footer-row-cell--show-border-right.InovuaReactDataGrid__footer-row-cell--first-in-section.InovuaReactDataGrid__footer-row-cell--locked-end,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__locked-row-cell--direction-rtl.InovuaReactDataGrid__locked-row-cell--show-border-right.InovuaReactDataGrid__locked-row-cell--first-in-section.InovuaReactDataGrid__locked-row-cell--locked-end{padding-right:13px}.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-border-right.InovuaReactDataGrid--direction-ltr .InovuaReactDataGrid__cell--last:not(.InovuaReactDataGrid__cell--hidden),.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-border-right.InovuaReactDataGrid--direction-ltr .InovuaReactDataGrid__footer-row-cell--last:not(.InovuaReactDataGrid__cell--hidden),.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-border-right.InovuaReactDataGrid--direction-ltr .InovuaReactDataGrid__locked-row-cell--last:not(.InovuaReactDataGrid__cell--hidden),.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-border-right.InovuaReactDataGrid--direction-ltr .InovuaReactDataGrid__row-details.InovuaReactDataGrid__row-details--show-border-right:not(.InovuaReactDataGrid__row-details--min-viewport-width){border-right:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-border-right.InovuaReactDataGrid--direction-rtl .InovuaReactDataGrid__cell--last:not(.InovuaReactDataGrid__cell--hidden),.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-border-right.InovuaReactDataGrid--direction-rtl .InovuaReactDataGrid__footer-row-cell--last:not(.InovuaReactDataGrid__cell--hidden),.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-border-right.InovuaReactDataGrid--direction-rtl .InovuaReactDataGrid__locked-row-cell--last:not(.InovuaReactDataGrid__cell--hidden),.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--show-border-right.InovuaReactDataGrid--direction-rtl .InovuaReactDataGrid__row-details.InovuaReactDataGrid__row-details--show-border-right:not(.InovuaReactDataGrid__row-details--min-viewport-width){border-left:1px solid #e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--hidden{border-right:0;border-left:0}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row--first .InovuaReactDataGrid__cell.InovuaReactDataGrid__cell,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row--first .InovuaReactDataGrid__nested-block,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row--first .InovuaReactDataGrid__nested-cell,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row--first .InovuaReactDataGrid__nested-group-cell{border-top:0}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--no-background.InovuaReactDataGrid__cell--no-background{background:#fff}.InovuaReactDataGrid--theme-default-light.InovuaReactDataGrid--grouped .InovuaReactDataGrid__cell--first-in-column-group{padding:0;flex:1}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--group-cell:not(.InovuaReactDataGrid__cell--pivot-enabled){background:#fff;font-weight:700}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--group-expand-cell.InovuaReactDataGrid__cell--group-expand-cell{padding:0}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__nested-cell,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__nested-group-cell{height:auto}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell.InovuaReactDataGrid__cell--locked:after{background:#e4e3e2}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__virtual-list-sticky-rows-container .InovuaReactDataGrid__row-cell-wrap .InovuaReactDataGrid__cell.InovuaReactDataGrid__cell--show-border-top{border-top:1px solid transparent}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__header .InovuaReactDataGrid__column-header--over,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row--even:not(.InovuaReactDataGrid__row--scrolling):not(.InovuaReactDataGrid__row--empty) .InovuaReactDataGrid__cell--over,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row--no-zebra:not(.InovuaReactDataGrid__row--scrolling):not(.InovuaReactDataGrid__row--empty) .InovuaReactDataGrid__cell--over,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row--odd:not(.InovuaReactDataGrid__row--scrolling):not(.InovuaReactDataGrid__row--empty) .InovuaReactDataGrid__cell--over{background:#ebedf7;color:#555e68}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--last-in-section.InovuaReactDataGrid__cell--locked-start .InovuaReactDataGrid__cell__selection{right:3px}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--last-in-section.InovuaReactDataGrid__cell--locked-start .InovuaReactDataGrid__cell__selection-dragger{right:1px}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--last-in-section.InovuaReactDataGrid__cell--unlocked .InovuaReactDataGrid__cell__selection{right:0}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--first-in-section.InovuaReactDataGrid__cell--locked-end .InovuaReactDataGrid__cell__selection{left:3px}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--first-in-section.InovuaReactDataGrid__cell--locked-end .InovuaReactDataGrid__cell__selection-dragger{right:1px}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--first-in-section.InovuaReactDataGrid__cell--locked-end .InovuaReactDataGrid__cell__selection-dragger--direction-rtl{left:1px;right:unset}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--last-in-section .InovuaReactDataGrid__cell__selection-dragger{right:1px}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--last-in-section .InovuaReactDataGrid__cell__selection-dragger--direction-rtl{left:1px;right:unset}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--cell-active .InovuaReactDataGrid__cell__selection:after{border:2px solid #7986cb}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--cell-selected .InovuaReactDataGrid__cell__selection:after{background:rgba(121,134,203,.15)}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--cell-active.InovuaReactDataGrid__cell--cell-selected{color:#555e68}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--cell-active.InovuaReactDataGrid__cell--cell-selected .InovuaReactDataGrid__cell__selection:after{border:2px solid #7986cb}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell__selection:not(.InovuaReactDataGrid__cell__selection__bulk-update-mouse-down){background:rgba(121,134,203,.05)}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell__selection:not(.InovuaReactDataGrid__cell__selection__bulk-update-mouse-down):after{border:1px solid #7986cb}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell--cell-selected:not(.InovuaReactDataGrid__cell--cell-active).InovuaReactDataGrid__cell--cell-bulk-update-mouse-down .InovuaReactDataGrid__cell__selection:after{border-style:dashed;border-color:#7986cb}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__cell__selection-dragger{border-top:none;border-left:none;width:6px;height:6px;background:#7986cb}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__filter-wrapper{border:0;background:#fff;border-top:1px solid #e4e3e2;padding:4px}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__filter-wrapper--disabled,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__filter-wrapper--read-only{opacity:.6}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__filter-wrapper .InovuaReactDataGrid__column-header__filter{min-height:32px;max-height:32px}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__filter__binary_operator_separator{width:4px}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__filter-settings{margin-left:8px;margin-right:4px}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__filter-settings svg{pointer-events:none;transform:translateY(0);transition:transform .2s}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__filter-settings:active svg{transform:translateY(1px)}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__filter-settings .InovuaReactDataGrid__column-header__filter-settings-icon{fill:#99a1aa}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__filter-settings:hover .InovuaReactDataGrid__column-header__filter-settings-icon{fill:#e8e8e8}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__header-wrapper__fill__filters{min-height:41px;border-top:1px solid #e4e3e2;background:#fff}.InovuaReactDataGrid__group-toolbar--theme-default-light{padding:4px;border-bottom:1px solid #e4e3e2;background:#fff;fill:#99a1aa;min-height:40px}.InovuaReactDataGrid__group-toolbar--theme-default-light .InovuaReactDataGrid__group-toolbar-insert-arrow{background:#7d8389;margin:0 3px}.InovuaReactDataGrid__group-toolbar--theme-default-light .InovuaReactDataGrid__group-toolbar-insert-arrow:first-child{margin-left:0}.InovuaReactDataGrid__group-toolbar-item--theme-default-light{padding:8px 9px;-webkit-user-select:none;-moz-user-select:none;user-select:none;border:1px solid #e4e3e2;background:#fff;cursor:move;cursor:grabbing}.InovuaReactDataGrid__group-toolbar-item--theme-default-light.InovuaReactDataGrid__group-toolbar-item--sortable{cursor:pointer}.InovuaReactDataGrid__group-toolbar-item--theme-default-light.InovuaReactDataGrid__group-toolbar-item--dragging{opacity:.8;cursor:move;cursor:grabbing}.InovuaReactDataGrid__group-toolbar-item--theme-default-light:not(.InovuaReactDataGrid__group-toolbar-item--dragging){transition:left .2s}.InovuaReactDataGrid__group-toolbar-item--theme-default-light.InovuaReactDataGrid__group-toolbar-item--placeholder{border:1px solid transparent;opacity:.9}.InovuaReactDataGrid__group-toolbar-item--theme-default-light .InovuaReactDataGrid__group-toolbar-item__clear-icon{vertical-align:middle;cursor:pointer;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none}.InovuaReactDataGrid__group-toolbar-item--theme-default-light .InovuaReactDataGrid__group-toolbar-item__clear-icon svg{margin-bottom:2px;transform:translateY(0);transition:transform .2s;pointer-events:none;stroke:#99a1aa}.InovuaReactDataGrid__group-toolbar-item--theme-default-light .InovuaReactDataGrid__group-toolbar-item__clear-icon:active svg{transform:translateY(1px)}.InovuaReactDataGrid__group-toolbar--direction-ltr .InovuaReactDataGrid__group-toolbar-item--theme-default-light+.InovuaReactDataGrid__group-toolbar-item--theme-default-light{margin-left:2px}.InovuaReactDataGrid__group-toolbar--direction-rtl .InovuaReactDataGrid__group-toolbar-item--theme-default-light+.InovuaReactDataGrid__group-toolbar-item--theme-default-light{margin-right:2px}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row-active-borders-inner{border:2px solid #7986cb;position:absolute;left:0;right:0;top:0;bottom:0;pointer-events:none}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row-active-borders{position:absolute;right:0;bottom:0;top:0;left:0;pointer-events:none}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row-active-borders--has-border-top .InovuaReactDataGrid__row-active-borders-inner{top:0}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__row-active-borders--has-border-bottom .InovuaReactDataGrid__row-active-borders-inner{bottom:0}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__menu-tool{border-left:none;border-right:none;padding:2px 10px 2px 2px;transition:opacity 0ms ease-in-out .25s}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__menu-tool svg{transform:translateY(0);pointer-events:none;transition:transform .2s}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__menu-tool svg:active{transform:translateY(1px)}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header__menu-tool:hover svg{fill:#e8e8e8}.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header--align-end.InovuaReactDataGrid__column-header--direction-ltr>.InovuaReactDataGrid__column-header__menu-tool,.InovuaReactDataGrid--theme-default-light .InovuaReactDataGrid__column-header--align-start.InovuaReactDataGrid__column-header--direction-rtl>.InovuaReactDataGrid__column-header__menu-tool{border-left:none;border-right:none;margin-left:8px}", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-vendor/dist/css-vendor.esm.js":
/*!********************************************************!*\
  !*** ./node_modules/css-vendor/dist/css-vendor.esm.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   prefix: () => (/* binding */ prefix),
/* harmony export */   supportedKeyframes: () => (/* binding */ supportedKeyframes),
/* harmony export */   supportedProperty: () => (/* binding */ supportedProperty),
/* harmony export */   supportedValue: () => (/* binding */ supportedValue)
/* harmony export */ });
/* harmony import */ var is_in_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! is-in-browser */ "./node_modules/is-in-browser/dist/module.js");
/* harmony import */ var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/toConsumableArray */ "./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js");



// Export javascript style and css style vendor prefixes.
var js = '';
var css = '';
var vendor = '';
var browser = '';
var isTouch = is_in_browser__WEBPACK_IMPORTED_MODULE_0__["default"] && 'ontouchstart' in document.documentElement; // We should not do anything if required serverside.

if (is_in_browser__WEBPACK_IMPORTED_MODULE_0__["default"]) {
  // Order matters. We need to check Webkit the last one because
  // other vendors use to add Webkit prefixes to some properties
  var jsCssMap = {
    Moz: '-moz-',
    ms: '-ms-',
    O: '-o-',
    Webkit: '-webkit-'
  };

  var _document$createEleme = document.createElement('p'),
      style = _document$createEleme.style;

  var testProp = 'Transform';

  for (var key in jsCssMap) {
    if (key + testProp in style) {
      js = key;
      css = jsCssMap[key];
      break;
    }
  } // Correctly detect the Edge browser.


  if (js === 'Webkit' && 'msHyphens' in style) {
    js = 'ms';
    css = jsCssMap.ms;
    browser = 'edge';
  } // Correctly detect the Safari browser.


  if (js === 'Webkit' && '-apple-trailing-word' in style) {
    vendor = 'apple';
  }
}
/**
 * Vendor prefix string for the current browser.
 *
 * @type {{js: String, css: String, vendor: String, browser: String}}
 * @api public
 */


var prefix = {
  js: js,
  css: css,
  vendor: vendor,
  browser: browser,
  isTouch: isTouch
};

/**
 * Test if a keyframe at-rule should be prefixed or not
 *
 * @param {String} vendor prefix string for the current browser.
 * @return {String}
 * @api public
 */

function supportedKeyframes(key) {
  // Keyframes is already prefixed. e.g. key = '@-webkit-keyframes a'
  if (key[1] === '-') return key; // No need to prefix IE/Edge. Older browsers will ignore unsupported rules.
  // https://caniuse.com/#search=keyframes

  if (prefix.js === 'ms') return key;
  return "@" + prefix.css + "keyframes" + key.substr(10);
}

// https://caniuse.com/#search=appearance

var appearence = {
  noPrefill: ['appearance'],
  supportedProperty: function supportedProperty(prop) {
    if (prop !== 'appearance') return false;
    if (prefix.js === 'ms') return "-webkit-" + prop;
    return prefix.css + prop;
  }
};

// https://caniuse.com/#search=color-adjust

var colorAdjust = {
  noPrefill: ['color-adjust'],
  supportedProperty: function supportedProperty(prop) {
    if (prop !== 'color-adjust') return false;
    if (prefix.js === 'Webkit') return prefix.css + "print-" + prop;
    return prop;
  }
};

var regExp = /[-\s]+(.)?/g;
/**
 * Replaces the letter with the capital letter
 *
 * @param {String} match
 * @param {String} c
 * @return {String}
 * @api private
 */

function toUpper(match, c) {
  return c ? c.toUpperCase() : '';
}
/**
 * Convert dash separated strings to camel-cased.
 *
 * @param {String} str
 * @return {String}
 * @api private
 */


function camelize(str) {
  return str.replace(regExp, toUpper);
}

/**
 * Convert dash separated strings to pascal cased.
 *
 * @param {String} str
 * @return {String}
 * @api private
 */

function pascalize(str) {
  return camelize("-" + str);
}

// but we can use a longhand property instead.
// https://caniuse.com/#search=mask

var mask = {
  noPrefill: ['mask'],
  supportedProperty: function supportedProperty(prop, style) {
    if (!/^mask/.test(prop)) return false;

    if (prefix.js === 'Webkit') {
      var longhand = 'mask-image';

      if (camelize(longhand) in style) {
        return prop;
      }

      if (prefix.js + pascalize(longhand) in style) {
        return prefix.css + prop;
      }
    }

    return prop;
  }
};

// https://caniuse.com/#search=text-orientation

var textOrientation = {
  noPrefill: ['text-orientation'],
  supportedProperty: function supportedProperty(prop) {
    if (prop !== 'text-orientation') return false;

    if (prefix.vendor === 'apple' && !prefix.isTouch) {
      return prefix.css + prop;
    }

    return prop;
  }
};

// https://caniuse.com/#search=transform

var transform = {
  noPrefill: ['transform'],
  supportedProperty: function supportedProperty(prop, style, options) {
    if (prop !== 'transform') return false;

    if (options.transform) {
      return prop;
    }

    return prefix.css + prop;
  }
};

// https://caniuse.com/#search=transition

var transition = {
  noPrefill: ['transition'],
  supportedProperty: function supportedProperty(prop, style, options) {
    if (prop !== 'transition') return false;

    if (options.transition) {
      return prop;
    }

    return prefix.css + prop;
  }
};

// https://caniuse.com/#search=writing-mode

var writingMode = {
  noPrefill: ['writing-mode'],
  supportedProperty: function supportedProperty(prop) {
    if (prop !== 'writing-mode') return false;

    if (prefix.js === 'Webkit' || prefix.js === 'ms' && prefix.browser !== 'edge') {
      return prefix.css + prop;
    }

    return prop;
  }
};

// https://caniuse.com/#search=user-select

var userSelect = {
  noPrefill: ['user-select'],
  supportedProperty: function supportedProperty(prop) {
    if (prop !== 'user-select') return false;

    if (prefix.js === 'Moz' || prefix.js === 'ms' || prefix.vendor === 'apple') {
      return prefix.css + prop;
    }

    return prop;
  }
};

// https://caniuse.com/#search=multicolumn
// https://github.com/postcss/autoprefixer/issues/491
// https://github.com/postcss/autoprefixer/issues/177

var breakPropsOld = {
  supportedProperty: function supportedProperty(prop, style) {
    if (!/^break-/.test(prop)) return false;

    if (prefix.js === 'Webkit') {
      var jsProp = "WebkitColumn" + pascalize(prop);
      return jsProp in style ? prefix.css + "column-" + prop : false;
    }

    if (prefix.js === 'Moz') {
      var _jsProp = "page" + pascalize(prop);

      return _jsProp in style ? "page-" + prop : false;
    }

    return false;
  }
};

// See https://github.com/postcss/autoprefixer/issues/324.

var inlineLogicalOld = {
  supportedProperty: function supportedProperty(prop, style) {
    if (!/^(border|margin|padding)-inline/.test(prop)) return false;
    if (prefix.js === 'Moz') return prop;
    var newProp = prop.replace('-inline', '');
    return prefix.js + pascalize(newProp) in style ? prefix.css + newProp : false;
  }
};

// Camelization is required because we can't test using.
// CSS syntax for e.g. in FF.

var unprefixed = {
  supportedProperty: function supportedProperty(prop, style) {
    return camelize(prop) in style ? prop : false;
  }
};

var prefixed = {
  supportedProperty: function supportedProperty(prop, style) {
    var pascalized = pascalize(prop); // Return custom CSS variable without prefixing.

    if (prop[0] === '-') return prop; // Return already prefixed value without prefixing.

    if (prop[0] === '-' && prop[1] === '-') return prop;
    if (prefix.js + pascalized in style) return prefix.css + prop; // Try webkit fallback.

    if (prefix.js !== 'Webkit' && "Webkit" + pascalized in style) return "-webkit-" + prop;
    return false;
  }
};

// https://caniuse.com/#search=scroll-snap

var scrollSnap = {
  supportedProperty: function supportedProperty(prop) {
    if (prop.substring(0, 11) !== 'scroll-snap') return false;

    if (prefix.js === 'ms') {
      return "" + prefix.css + prop;
    }

    return prop;
  }
};

// https://caniuse.com/#search=overscroll-behavior

var overscrollBehavior = {
  supportedProperty: function supportedProperty(prop) {
    if (prop !== 'overscroll-behavior') return false;

    if (prefix.js === 'ms') {
      return prefix.css + "scroll-chaining";
    }

    return prop;
  }
};

var propMap = {
  'flex-grow': 'flex-positive',
  'flex-shrink': 'flex-negative',
  'flex-basis': 'flex-preferred-size',
  'justify-content': 'flex-pack',
  order: 'flex-order',
  'align-items': 'flex-align',
  'align-content': 'flex-line-pack' // 'align-self' is handled by 'align-self' plugin.

}; // Support old flex spec from 2012.

var flex2012 = {
  supportedProperty: function supportedProperty(prop, style) {
    var newProp = propMap[prop];
    if (!newProp) return false;
    return prefix.js + pascalize(newProp) in style ? prefix.css + newProp : false;
  }
};

var propMap$1 = {
  flex: 'box-flex',
  'flex-grow': 'box-flex',
  'flex-direction': ['box-orient', 'box-direction'],
  order: 'box-ordinal-group',
  'align-items': 'box-align',
  'flex-flow': ['box-orient', 'box-direction'],
  'justify-content': 'box-pack'
};
var propKeys = Object.keys(propMap$1);

var prefixCss = function prefixCss(p) {
  return prefix.css + p;
}; // Support old flex spec from 2009.


var flex2009 = {
  supportedProperty: function supportedProperty(prop, style, _ref) {
    var multiple = _ref.multiple;

    if (propKeys.indexOf(prop) > -1) {
      var newProp = propMap$1[prop];

      if (!Array.isArray(newProp)) {
        return prefix.js + pascalize(newProp) in style ? prefix.css + newProp : false;
      }

      if (!multiple) return false;

      for (var i = 0; i < newProp.length; i++) {
        if (!(prefix.js + pascalize(newProp[0]) in style)) {
          return false;
        }
      }

      return newProp.map(prefixCss);
    }

    return false;
  }
};

// plugins = [
//   ...plugins,
//    breakPropsOld,
//    inlineLogicalOld,
//    unprefixed,
//    prefixed,
//    scrollSnap,
//    flex2012,
//    flex2009
// ]
// Plugins without 'noPrefill' value, going last.
// 'flex-*' plugins should be at the bottom.
// 'flex2009' going after 'flex2012'.
// 'prefixed' going after 'unprefixed'

var plugins = [appearence, colorAdjust, mask, textOrientation, transform, transition, writingMode, userSelect, breakPropsOld, inlineLogicalOld, unprefixed, prefixed, scrollSnap, overscrollBehavior, flex2012, flex2009];
var propertyDetectors = plugins.filter(function (p) {
  return p.supportedProperty;
}).map(function (p) {
  return p.supportedProperty;
});
var noPrefill = plugins.filter(function (p) {
  return p.noPrefill;
}).reduce(function (a, p) {
  a.push.apply(a, (0,_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__["default"])(p.noPrefill));
  return a;
}, []);

var el;
var cache = {};

if (is_in_browser__WEBPACK_IMPORTED_MODULE_0__["default"]) {
  el = document.createElement('p'); // We test every property on vendor prefix requirement.
  // Once tested, result is cached. It gives us up to 70% perf boost.
  // http://jsperf.com/element-style-object-access-vs-plain-object
  //
  // Prefill cache with known css properties to reduce amount of
  // properties we need to feature test at runtime.
  // http://davidwalsh.name/vendor-prefix

  var computed = window.getComputedStyle(document.documentElement, '');

  for (var key$1 in computed) {
    // eslint-disable-next-line no-restricted-globals
    if (!isNaN(key$1)) cache[computed[key$1]] = computed[key$1];
  } // Properties that cannot be correctly detected using the
  // cache prefill method.


  noPrefill.forEach(function (x) {
    return delete cache[x];
  });
}
/**
 * Test if a property is supported, returns supported property with vendor
 * prefix if required. Returns `false` if not supported.
 *
 * @param {String} prop dash separated
 * @param {Object} [options]
 * @return {String|Boolean}
 * @api public
 */


function supportedProperty(prop, options) {
  if (options === void 0) {
    options = {};
  }

  // For server-side rendering.
  if (!el) return prop; // Remove cache for benchmark tests or return property from the cache.

  if ( true && cache[prop] != null) {
    return cache[prop];
  } // Check if 'transition' or 'transform' natively supported in browser.


  if (prop === 'transition' || prop === 'transform') {
    options[prop] = prop in el.style;
  } // Find a plugin for current prefix property.


  for (var i = 0; i < propertyDetectors.length; i++) {
    cache[prop] = propertyDetectors[i](prop, el.style, options); // Break loop, if value found.

    if (cache[prop]) break;
  } // Reset styles for current property.
  // Firefox can even throw an error for invalid properties, e.g., "0".


  try {
    el.style[prop] = '';
  } catch (err) {
    return false;
  }

  return cache[prop];
}

var cache$1 = {};
var transitionProperties = {
  transition: 1,
  'transition-property': 1,
  '-webkit-transition': 1,
  '-webkit-transition-property': 1
};
var transPropsRegExp = /(^\s*[\w-]+)|, (\s*[\w-]+)(?![^()]*\))/g;
var el$1;
/**
 * Returns prefixed value transition/transform if needed.
 *
 * @param {String} match
 * @param {String} p1
 * @param {String} p2
 * @return {String}
 * @api private
 */

function prefixTransitionCallback(match, p1, p2) {
  if (p1 === 'var') return 'var';
  if (p1 === 'all') return 'all';
  if (p2 === 'all') return ', all';
  var prefixedValue = p1 ? supportedProperty(p1) : ", " + supportedProperty(p2);
  if (!prefixedValue) return p1 || p2;
  return prefixedValue;
}

if (is_in_browser__WEBPACK_IMPORTED_MODULE_0__["default"]) el$1 = document.createElement('p');
/**
 * Returns prefixed value if needed. Returns `false` if value is not supported.
 *
 * @param {String} property
 * @param {String} value
 * @return {String|Boolean}
 * @api public
 */

function supportedValue(property, value) {
  // For server-side rendering.
  var prefixedValue = value;
  if (!el$1 || property === 'content') return value; // It is a string or a number as a string like '1'.
  // We want only prefixable values here.
  // eslint-disable-next-line no-restricted-globals

  if (typeof prefixedValue !== 'string' || !isNaN(parseInt(prefixedValue, 10))) {
    return prefixedValue;
  } // Create cache key for current value.


  var cacheKey = property + prefixedValue; // Remove cache for benchmark tests or return value from cache.

  if ( true && cache$1[cacheKey] != null) {
    return cache$1[cacheKey];
  } // IE can even throw an error in some cases, for e.g. style.content = 'bar'.


  try {
    // Test value as it is.
    el$1.style[property] = prefixedValue;
  } catch (err) {
    // Return false if value not supported.
    cache$1[cacheKey] = false;
    return false;
  } // If 'transition' or 'transition-property' property.


  if (transitionProperties[property]) {
    prefixedValue = prefixedValue.replace(transPropsRegExp, prefixTransitionCallback);
  } else if (el$1.style[property] === '') {
    // Value with a vendor prefix.
    prefixedValue = prefix.css + prefixedValue; // Hardcode test to convert "flex" to "-ms-flexbox" for IE10.

    if (prefixedValue === '-ms-flex') el$1.style[property] = '-ms-flexbox'; // Test prefixed value.

    el$1.style[property] = prefixedValue; // Return false if value not supported.

    if (el$1.style[property] === '') {
      cache$1[cacheKey] = false;
      return false;
    }
  } // Reset styles for current property.


  el$1.style[property] = ''; // Write current value to cache.

  cache$1[cacheKey] = prefixedValue;
  return cache$1[cacheKey];
}




/***/ }),

/***/ "./node_modules/eventemitter3/index.js":
/*!*********************************************!*\
  !*** ./node_modules/eventemitter3/index.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";


var has = Object.prototype.hasOwnProperty
  , prefix = '~';

/**
 * Constructor to create a storage for our `EE` objects.
 * An `Events` instance is a plain object whose properties are event names.
 *
 * @constructor
 * @private
 */
function Events() {}

//
// We try to not inherit from `Object.prototype`. In some engines creating an
// instance in this way is faster than calling `Object.create(null)` directly.
// If `Object.create(null)` is not supported we prefix the event names with a
// character to make sure that the built-in object properties are not
// overridden or used as an attack vector.
//
if (Object.create) {
  Events.prototype = Object.create(null);

  //
  // This hack is needed because the `__proto__` property is still inherited in
  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.
  //
  if (!new Events().__proto__) prefix = false;
}

/**
 * Representation of a single event listener.
 *
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} [once=false] Specify if the listener is a one-time listener.
 * @constructor
 * @private
 */
function EE(fn, context, once) {
  this.fn = fn;
  this.context = context;
  this.once = once || false;
}

/**
 * Add a listener for a given event.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} once Specify if the listener is a one-time listener.
 * @returns {EventEmitter}
 * @private
 */
function addListener(emitter, event, fn, context, once) {
  if (typeof fn !== 'function') {
    throw new TypeError('The listener must be a function');
  }

  var listener = new EE(fn, context || emitter, once)
    , evt = prefix ? prefix + event : event;

  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;
  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);
  else emitter._events[evt] = [emitter._events[evt], listener];

  return emitter;
}

/**
 * Clear event by name.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} evt The Event name.
 * @private
 */
function clearEvent(emitter, evt) {
  if (--emitter._eventsCount === 0) emitter._events = new Events();
  else delete emitter._events[evt];
}

/**
 * Minimal `EventEmitter` interface that is molded against the Node.js
 * `EventEmitter` interface.
 *
 * @constructor
 * @public
 */
function EventEmitter() {
  this._events = new Events();
  this._eventsCount = 0;
}

/**
 * Return an array listing the events for which the emitter has registered
 * listeners.
 *
 * @returns {Array}
 * @public
 */
EventEmitter.prototype.eventNames = function eventNames() {
  var names = []
    , events
    , name;

  if (this._eventsCount === 0) return names;

  for (name in (events = this._events)) {
    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);
  }

  if (Object.getOwnPropertySymbols) {
    return names.concat(Object.getOwnPropertySymbols(events));
  }

  return names;
};

/**
 * Return the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Array} The registered listeners.
 * @public
 */
EventEmitter.prototype.listeners = function listeners(event) {
  var evt = prefix ? prefix + event : event
    , handlers = this._events[evt];

  if (!handlers) return [];
  if (handlers.fn) return [handlers.fn];

  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {
    ee[i] = handlers[i].fn;
  }

  return ee;
};

/**
 * Return the number of listeners listening to a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Number} The number of listeners.
 * @public
 */
EventEmitter.prototype.listenerCount = function listenerCount(event) {
  var evt = prefix ? prefix + event : event
    , listeners = this._events[evt];

  if (!listeners) return 0;
  if (listeners.fn) return 1;
  return listeners.length;
};

/**
 * Calls each of the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Boolean} `true` if the event had listeners, else `false`.
 * @public
 */
EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
  var evt = prefix ? prefix + event : event;

  if (!this._events[evt]) return false;

  var listeners = this._events[evt]
    , len = arguments.length
    , args
    , i;

  if (listeners.fn) {
    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);

    switch (len) {
      case 1: return listeners.fn.call(listeners.context), true;
      case 2: return listeners.fn.call(listeners.context, a1), true;
      case 3: return listeners.fn.call(listeners.context, a1, a2), true;
      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;
      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
    }

    for (i = 1, args = new Array(len -1); i < len; i++) {
      args[i - 1] = arguments[i];
    }

    listeners.fn.apply(listeners.context, args);
  } else {
    var length = listeners.length
      , j;

    for (i = 0; i < length; i++) {
      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);

      switch (len) {
        case 1: listeners[i].fn.call(listeners[i].context); break;
        case 2: listeners[i].fn.call(listeners[i].context, a1); break;
        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;
        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;
        default:
          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {
            args[j - 1] = arguments[j];
          }

          listeners[i].fn.apply(listeners[i].context, args);
      }
    }
  }

  return true;
};

/**
 * Add a listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.on = function on(event, fn, context) {
  return addListener(this, event, fn, context, false);
};

/**
 * Add a one-time listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.once = function once(event, fn, context) {
  return addListener(this, event, fn, context, true);
};

/**
 * Remove the listeners of a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn Only remove the listeners that match this function.
 * @param {*} context Only remove the listeners that have this context.
 * @param {Boolean} once Only remove one-time listeners.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {
  var evt = prefix ? prefix + event : event;

  if (!this._events[evt]) return this;
  if (!fn) {
    clearEvent(this, evt);
    return this;
  }

  var listeners = this._events[evt];

  if (listeners.fn) {
    if (
      listeners.fn === fn &&
      (!once || listeners.once) &&
      (!context || listeners.context === context)
    ) {
      clearEvent(this, evt);
    }
  } else {
    for (var i = 0, events = [], length = listeners.length; i < length; i++) {
      if (
        listeners[i].fn !== fn ||
        (once && !listeners[i].once) ||
        (context && listeners[i].context !== context)
      ) {
        events.push(listeners[i]);
      }
    }

    //
    // Reset the array, or remove it completely if we have no more listeners.
    //
    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;
    else clearEvent(this, evt);
  }

  return this;
};

/**
 * Remove all listeners, or those of the specified event.
 *
 * @param {(String|Symbol)} [event] The event name.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
  var evt;

  if (event) {
    evt = prefix ? prefix + event : event;
    if (this._events[evt]) clearEvent(this, evt);
  } else {
    this._events = new Events();
    this._eventsCount = 0;
  }

  return this;
};

//
// Alias methods names because people roll like that.
//
EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
EventEmitter.prototype.addListener = EventEmitter.prototype.on;

//
// Expose the prefix.
//
EventEmitter.prefixed = prefix;

//
// Allow `EventEmitter` to be imported as module namespace.
//
EventEmitter.EventEmitter = EventEmitter;

//
// Expose the module.
//
if (true) {
  module.exports = EventEmitter;
}


/***/ }),

/***/ "./node_modules/fast-deep-equal/index.js":
/*!***********************************************!*\
  !*** ./node_modules/fast-deep-equal/index.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";


// do not edit .js files directly - edit src/index.jst



module.exports = function equal(a, b) {
  if (a === b) return true;

  if (a && b && typeof a == 'object' && typeof b == 'object') {
    if (a.constructor !== b.constructor) return false;

    var length, i, keys;
    if (Array.isArray(a)) {
      length = a.length;
      if (length != b.length) return false;
      for (i = length; i-- !== 0;)
        if (!equal(a[i], b[i])) return false;
      return true;
    }



    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;
    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();
    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();

    keys = Object.keys(a);
    length = keys.length;
    if (length !== Object.keys(b).length) return false;

    for (i = length; i-- !== 0;)
      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;

    for (i = length; i-- !== 0;) {
      var key = keys[i];

      if (!equal(a[key], b[key])) return false;
    }

    return true;
  }

  // true if both NaN, false otherwise
  return a!==a && b!==b;
};


/***/ }),

/***/ "./node_modules/hyphenate-style-name/index.js":
/*!****************************************************!*\
  !*** ./node_modules/hyphenate-style-name/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* eslint-disable no-var, prefer-template */
var uppercasePattern = /[A-Z]/g
var msPattern = /^ms-/
var cache = {}

function toHyphenLower(match) {
  return '-' + match.toLowerCase()
}

function hyphenateStyleName(name) {
  if (cache.hasOwnProperty(name)) {
    return cache[name]
  }

  var hName = name.replace(uppercasePattern, toHyphenLower)
  return (cache[name] = msPattern.test(hName) ? '-' + hName : hName)
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (hyphenateStyleName);


/***/ }),

/***/ "./node_modules/is-in-browser/dist/module.js":
/*!***************************************************!*\
  !*** ./node_modules/is-in-browser/dist/module.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   isBrowser: () => (/* binding */ isBrowser)
/* harmony export */ });
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var isBrowser = (typeof window === "undefined" ? "undefined" : _typeof(window)) === "object" && (typeof document === "undefined" ? "undefined" : _typeof(document)) === 'object' && document.nodeType === 9;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isBrowser);


/***/ }),

/***/ "./node_modules/jss-plugin-camel-case/dist/jss-plugin-camel-case.esm.js":
/*!******************************************************************************!*\
  !*** ./node_modules/jss-plugin-camel-case/dist/jss-plugin-camel-case.esm.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var hyphenate_style_name__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! hyphenate-style-name */ "./node_modules/hyphenate-style-name/index.js");


/**
 * Convert camel cased property names to dash separated.
 */

function convertCase(style) {
  var converted = {};

  for (var prop in style) {
    var key = prop.indexOf('--') === 0 ? prop : (0,hyphenate_style_name__WEBPACK_IMPORTED_MODULE_0__["default"])(prop);
    converted[key] = style[prop];
  }

  if (style.fallbacks) {
    if (Array.isArray(style.fallbacks)) converted.fallbacks = style.fallbacks.map(convertCase);else converted.fallbacks = convertCase(style.fallbacks);
  }

  return converted;
}
/**
 * Allow camel cased property names by converting them back to dasherized.
 */


function camelCase() {
  function onProcessStyle(style) {
    if (Array.isArray(style)) {
      // Handle rules like @font-face, which can have multiple styles in an array
      for (var index = 0; index < style.length; index++) {
        style[index] = convertCase(style[index]);
      }

      return style;
    }

    return convertCase(style);
  }

  function onChangeValue(value, prop, rule) {
    if (prop.indexOf('--') === 0) {
      return value;
    }

    var hyphenatedProp = (0,hyphenate_style_name__WEBPACK_IMPORTED_MODULE_0__["default"])(prop); // There was no camel case in place

    if (prop === hyphenatedProp) return value;
    rule.prop(hyphenatedProp, value); // Core will ignore that property value we set the proper one above.

    return null;
  }

  return {
    onProcessStyle: onProcessStyle,
    onChangeValue: onChangeValue
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (camelCase);


/***/ }),

/***/ "./node_modules/jss-plugin-default-unit/dist/jss-plugin-default-unit.esm.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/jss-plugin-default-unit/dist/jss-plugin-default-unit.esm.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jss */ "./node_modules/jss/dist/jss.esm.js");


var px = jss__WEBPACK_IMPORTED_MODULE_0__.hasCSSTOMSupport && CSS ? CSS.px : 'px';
var ms = jss__WEBPACK_IMPORTED_MODULE_0__.hasCSSTOMSupport && CSS ? CSS.ms : 'ms';
var percent = jss__WEBPACK_IMPORTED_MODULE_0__.hasCSSTOMSupport && CSS ? CSS.percent : '%';
/**
 * Generated jss-plugin-default-unit CSS property units
 */

var defaultUnits = {
  // Animation properties
  'animation-delay': ms,
  'animation-duration': ms,
  // Background properties
  'background-position': px,
  'background-position-x': px,
  'background-position-y': px,
  'background-size': px,
  // Border Properties
  border: px,
  'border-bottom': px,
  'border-bottom-left-radius': px,
  'border-bottom-right-radius': px,
  'border-bottom-width': px,
  'border-left': px,
  'border-left-width': px,
  'border-radius': px,
  'border-right': px,
  'border-right-width': px,
  'border-top': px,
  'border-top-left-radius': px,
  'border-top-right-radius': px,
  'border-top-width': px,
  'border-width': px,
  'border-block': px,
  'border-block-end': px,
  'border-block-end-width': px,
  'border-block-start': px,
  'border-block-start-width': px,
  'border-block-width': px,
  'border-inline': px,
  'border-inline-end': px,
  'border-inline-end-width': px,
  'border-inline-start': px,
  'border-inline-start-width': px,
  'border-inline-width': px,
  'border-start-start-radius': px,
  'border-start-end-radius': px,
  'border-end-start-radius': px,
  'border-end-end-radius': px,
  // Margin properties
  margin: px,
  'margin-bottom': px,
  'margin-left': px,
  'margin-right': px,
  'margin-top': px,
  'margin-block': px,
  'margin-block-end': px,
  'margin-block-start': px,
  'margin-inline': px,
  'margin-inline-end': px,
  'margin-inline-start': px,
  // Padding properties
  padding: px,
  'padding-bottom': px,
  'padding-left': px,
  'padding-right': px,
  'padding-top': px,
  'padding-block': px,
  'padding-block-end': px,
  'padding-block-start': px,
  'padding-inline': px,
  'padding-inline-end': px,
  'padding-inline-start': px,
  // Mask properties
  'mask-position-x': px,
  'mask-position-y': px,
  'mask-size': px,
  // Width and height properties
  height: px,
  width: px,
  'min-height': px,
  'max-height': px,
  'min-width': px,
  'max-width': px,
  // Position properties
  bottom: px,
  left: px,
  top: px,
  right: px,
  inset: px,
  'inset-block': px,
  'inset-block-end': px,
  'inset-block-start': px,
  'inset-inline': px,
  'inset-inline-end': px,
  'inset-inline-start': px,
  // Shadow properties
  'box-shadow': px,
  'text-shadow': px,
  // Column properties
  'column-gap': px,
  'column-rule': px,
  'column-rule-width': px,
  'column-width': px,
  // Font and text properties
  'font-size': px,
  'font-size-delta': px,
  'letter-spacing': px,
  'text-decoration-thickness': px,
  'text-indent': px,
  'text-stroke': px,
  'text-stroke-width': px,
  'word-spacing': px,
  // Motion properties
  motion: px,
  'motion-offset': px,
  // Outline properties
  outline: px,
  'outline-offset': px,
  'outline-width': px,
  // Perspective properties
  perspective: px,
  'perspective-origin-x': percent,
  'perspective-origin-y': percent,
  // Transform properties
  'transform-origin': percent,
  'transform-origin-x': percent,
  'transform-origin-y': percent,
  'transform-origin-z': percent,
  // Transition properties
  'transition-delay': ms,
  'transition-duration': ms,
  // Alignment properties
  'vertical-align': px,
  'flex-basis': px,
  // Some random properties
  'shape-margin': px,
  size: px,
  gap: px,
  // Grid properties
  grid: px,
  'grid-gap': px,
  'row-gap': px,
  'grid-row-gap': px,
  'grid-column-gap': px,
  'grid-template-rows': px,
  'grid-template-columns': px,
  'grid-auto-rows': px,
  'grid-auto-columns': px,
  // Not existing properties.
  // Used to avoid issues with jss-plugin-expand integration.
  'box-shadow-x': px,
  'box-shadow-y': px,
  'box-shadow-blur': px,
  'box-shadow-spread': px,
  'font-line-height': px,
  'text-shadow-x': px,
  'text-shadow-y': px,
  'text-shadow-blur': px
};

/**
 * Clones the object and adds a camel cased property version.
 */

function addCamelCasedVersion(obj) {
  var regExp = /(-[a-z])/g;

  var replace = function replace(str) {
    return str[1].toUpperCase();
  };

  var newObj = {};

  for (var key in obj) {
    newObj[key] = obj[key];
    newObj[key.replace(regExp, replace)] = obj[key];
  }

  return newObj;
}

var units = addCamelCasedVersion(defaultUnits);
/**
 * Recursive deep style passing function
 */

function iterate(prop, value, options) {
  if (value == null) return value;

  if (Array.isArray(value)) {
    for (var i = 0; i < value.length; i++) {
      value[i] = iterate(prop, value[i], options);
    }
  } else if (typeof value === 'object') {
    if (prop === 'fallbacks') {
      for (var innerProp in value) {
        value[innerProp] = iterate(innerProp, value[innerProp], options);
      }
    } else {
      for (var _innerProp in value) {
        value[_innerProp] = iterate(prop + "-" + _innerProp, value[_innerProp], options);
      }
    } // eslint-disable-next-line no-restricted-globals

  } else if (typeof value === 'number' && isNaN(value) === false) {
    var unit = options[prop] || units[prop]; // Add the unit if available, except for the special case of 0px.

    if (unit && !(value === 0 && unit === px)) {
      return typeof unit === 'function' ? unit(value).toString() : "" + value + unit;
    }

    return value.toString();
  }

  return value;
}
/**
 * Add unit to numeric values.
 */


function defaultUnit(options) {
  if (options === void 0) {
    options = {};
  }

  var camelCasedOptions = addCamelCasedVersion(options);

  function onProcessStyle(style, rule) {
    if (rule.type !== 'style') return style;

    for (var prop in style) {
      style[prop] = iterate(prop, style[prop], camelCasedOptions);
    }

    return style;
  }

  function onChangeValue(value, prop) {
    return iterate(prop, value, camelCasedOptions);
  }

  return {
    onProcessStyle: onProcessStyle,
    onChangeValue: onChangeValue
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (defaultUnit);


/***/ }),

/***/ "./node_modules/jss-plugin-global/dist/jss-plugin-global.esm.js":
/*!**********************************************************************!*\
  !*** ./node_modules/jss-plugin-global/dist/jss-plugin-global.esm.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var jss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jss */ "./node_modules/jss/dist/jss.esm.js");



var at = '@global';
var atPrefix = '@global ';

var GlobalContainerRule =
/*#__PURE__*/
function () {
  function GlobalContainerRule(key, styles, options) {
    this.type = 'global';
    this.at = at;
    this.isProcessed = false;
    this.key = key;
    this.options = options;
    this.rules = new jss__WEBPACK_IMPORTED_MODULE_1__.RuleList((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
      parent: this
    }));

    for (var selector in styles) {
      this.rules.add(selector, styles[selector]);
    }

    this.rules.process();
  }
  /**
   * Get a rule.
   */


  var _proto = GlobalContainerRule.prototype;

  _proto.getRule = function getRule(name) {
    return this.rules.get(name);
  }
  /**
   * Create and register rule, run plugins.
   */
  ;

  _proto.addRule = function addRule(name, style, options) {
    var rule = this.rules.add(name, style, options);
    if (rule) this.options.jss.plugins.onProcessRule(rule);
    return rule;
  }
  /**
   * Replace rule, run plugins.
   */
  ;

  _proto.replaceRule = function replaceRule(name, style, options) {
    var newRule = this.rules.replace(name, style, options);
    if (newRule) this.options.jss.plugins.onProcessRule(newRule);
    return newRule;
  }
  /**
   * Get index of a rule.
   */
  ;

  _proto.indexOf = function indexOf(rule) {
    return this.rules.indexOf(rule);
  }
  /**
   * Generates a CSS string.
   */
  ;

  _proto.toString = function toString(options) {
    return this.rules.toString(options);
  };

  return GlobalContainerRule;
}();

var GlobalPrefixedRule =
/*#__PURE__*/
function () {
  function GlobalPrefixedRule(key, style, options) {
    this.type = 'global';
    this.at = at;
    this.isProcessed = false;
    this.key = key;
    this.options = options;
    var selector = key.substr(atPrefix.length);
    this.rule = options.jss.createRule(selector, style, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
      parent: this
    }));
  }

  var _proto2 = GlobalPrefixedRule.prototype;

  _proto2.toString = function toString(options) {
    return this.rule ? this.rule.toString(options) : '';
  };

  return GlobalPrefixedRule;
}();

var separatorRegExp = /\s*,\s*/g;

function addScope(selector, scope) {
  var parts = selector.split(separatorRegExp);
  var scoped = '';

  for (var i = 0; i < parts.length; i++) {
    scoped += scope + " " + parts[i].trim();
    if (parts[i + 1]) scoped += ', ';
  }

  return scoped;
}

function handleNestedGlobalContainerRule(rule, sheet) {
  var options = rule.options,
      style = rule.style;
  var rules = style ? style[at] : null;
  if (!rules) return;

  for (var name in rules) {
    sheet.addRule(name, rules[name], (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
      selector: addScope(name, rule.selector)
    }));
  }

  delete style[at];
}

function handlePrefixedGlobalRule(rule, sheet) {
  var options = rule.options,
      style = rule.style;

  for (var prop in style) {
    if (prop[0] !== '@' || prop.substr(0, at.length) !== at) continue;
    var selector = addScope(prop.substr(at.length), rule.selector);
    sheet.addRule(selector, style[prop], (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
      selector: selector
    }));
    delete style[prop];
  }
}
/**
 * Convert nested rules to separate, remove them from original styles.
 */


function jssGlobal() {
  function onCreateRule(name, styles, options) {
    if (!name) return null;

    if (name === at) {
      return new GlobalContainerRule(name, styles, options);
    }

    if (name[0] === '@' && name.substr(0, atPrefix.length) === atPrefix) {
      return new GlobalPrefixedRule(name, styles, options);
    }

    var parent = options.parent;

    if (parent) {
      if (parent.type === 'global' || parent.options.parent && parent.options.parent.type === 'global') {
        options.scoped = false;
      }
    }

    if (!options.selector && options.scoped === false) {
      options.selector = name;
    }

    return null;
  }

  function onProcessRule(rule, sheet) {
    if (rule.type !== 'style' || !sheet) return;
    handleNestedGlobalContainerRule(rule, sheet);
    handlePrefixedGlobalRule(rule, sheet);
  }

  return {
    onCreateRule: onCreateRule,
    onProcessRule: onProcessRule
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (jssGlobal);


/***/ }),

/***/ "./node_modules/jss-plugin-nested/dist/jss-plugin-nested.esm.js":
/*!**********************************************************************!*\
  !*** ./node_modules/jss-plugin-nested/dist/jss-plugin-nested.esm.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var tiny_warning__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tiny-warning */ "./node_modules/tiny-warning/dist/tiny-warning.esm.js");



var separatorRegExp = /\s*,\s*/g;
var parentRegExp = /&/g;
var refRegExp = /\$([\w-]+)/g;
/**
 * Convert nested rules to separate, remove them from original styles.
 */

function jssNested() {
  // Get a function to be used for $ref replacement.
  function getReplaceRef(container, sheet) {
    return function (match, key) {
      var rule = container.getRule(key) || sheet && sheet.getRule(key);

      if (rule) {
        return rule.selector;
      }

       true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_1__["default"])(false, "[JSS] Could not find the referenced rule \"" + key + "\" in \"" + (container.options.meta || container.toString()) + "\".") : 0;
      return key;
    };
  }

  function replaceParentRefs(nestedProp, parentProp) {
    var parentSelectors = parentProp.split(separatorRegExp);
    var nestedSelectors = nestedProp.split(separatorRegExp);
    var result = '';

    for (var i = 0; i < parentSelectors.length; i++) {
      var parent = parentSelectors[i];

      for (var j = 0; j < nestedSelectors.length; j++) {
        var nested = nestedSelectors[j];
        if (result) result += ', '; // Replace all & by the parent or prefix & with the parent.

        result += nested.indexOf('&') !== -1 ? nested.replace(parentRegExp, parent) : parent + " " + nested;
      }
    }

    return result;
  }

  function getOptions(rule, container, prevOptions) {
    // Options has been already created, now we only increase index.
    if (prevOptions) return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, prevOptions, {
      index: prevOptions.index + 1
    });
    var nestingLevel = rule.options.nestingLevel;
    nestingLevel = nestingLevel === undefined ? 1 : nestingLevel + 1;

    var options = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, rule.options, {
      nestingLevel: nestingLevel,
      index: container.indexOf(rule) + 1 // We don't need the parent name to be set options for chlid.

    });

    delete options.name;
    return options;
  }

  function onProcessStyle(style, rule, sheet) {
    if (rule.type !== 'style') return style;
    var styleRule = rule;
    var container = styleRule.options.parent;
    var options;
    var replaceRef;

    for (var prop in style) {
      var isNested = prop.indexOf('&') !== -1;
      var isNestedConditional = prop[0] === '@';
      if (!isNested && !isNestedConditional) continue;
      options = getOptions(styleRule, container, options);

      if (isNested) {
        var selector = replaceParentRefs(prop, styleRule.selector); // Lazily create the ref replacer function just once for
        // all nested rules within the sheet.

        if (!replaceRef) replaceRef = getReplaceRef(container, sheet); // Replace all $refs.

        selector = selector.replace(refRegExp, replaceRef);
        var name = styleRule.key + "-" + prop;

        if ('replaceRule' in container) {
          // for backward compatibility
          container.replaceRule(name, style[prop], (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
            selector: selector
          }));
        } else {
          container.addRule(name, style[prop], (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
            selector: selector
          }));
        }
      } else if (isNestedConditional) {
        // Place conditional right after the parent rule to ensure right ordering.
        container.addRule(prop, {}, options).addRule(styleRule.key, style[prop], {
          selector: styleRule.selector
        });
      }

      delete style[prop];
    }

    return style;
  }

  return {
    onProcessStyle: onProcessStyle
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (jssNested);


/***/ }),

/***/ "./node_modules/jss-plugin-props-sort/dist/jss-plugin-props-sort.esm.js":
/*!******************************************************************************!*\
  !*** ./node_modules/jss-plugin-props-sort/dist/jss-plugin-props-sort.esm.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Sort props by length.
 */
function jssPropsSort() {
  var sort = function sort(prop0, prop1) {
    if (prop0.length === prop1.length) {
      return prop0 > prop1 ? 1 : -1;
    }

    return prop0.length - prop1.length;
  };

  return {
    onProcessStyle: function onProcessStyle(style, rule) {
      if (rule.type !== 'style') return style;
      var newStyle = {};
      var props = Object.keys(style).sort(sort);

      for (var i = 0; i < props.length; i++) {
        newStyle[props[i]] = style[props[i]];
      }

      return newStyle;
    }
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (jssPropsSort);


/***/ }),

/***/ "./node_modules/jss-plugin-rule-value-function/dist/jss-plugin-rule-value-function.esm.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/jss-plugin-rule-value-function/dist/jss-plugin-rule-value-function.esm.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var tiny_warning__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tiny-warning */ "./node_modules/tiny-warning/dist/tiny-warning.esm.js");
/* harmony import */ var jss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jss */ "./node_modules/jss/dist/jss.esm.js");



var now = Date.now();
var fnValuesNs = "fnValues" + now;
var fnRuleNs = "fnStyle" + ++now;

var functionPlugin = function functionPlugin() {
  return {
    onCreateRule: function onCreateRule(name, decl, options) {
      if (typeof decl !== 'function') return null;
      var rule = (0,jss__WEBPACK_IMPORTED_MODULE_0__.createRule)(name, {}, options);
      rule[fnRuleNs] = decl;
      return rule;
    },
    onProcessStyle: function onProcessStyle(style, rule) {
      // We need to extract function values from the declaration, so that we can keep core unaware of them.
      // We need to do that only once.
      // We don't need to extract functions on each style update, since this can happen only once.
      // We don't support function values inside of function rules.
      if (fnValuesNs in rule || fnRuleNs in rule) return style;
      var fnValues = {};

      for (var prop in style) {
        var value = style[prop];
        if (typeof value !== 'function') continue;
        delete style[prop];
        fnValues[prop] = value;
      }

      rule[fnValuesNs] = fnValues;
      return style;
    },
    onUpdate: function onUpdate(data, rule, sheet, options) {
      var styleRule = rule;
      var fnRule = styleRule[fnRuleNs]; // If we have a style function, the entire rule is dynamic and style object
      // will be returned from that function.

      if (fnRule) {
        // Empty object will remove all currently defined props
        // in case function rule returns a falsy value.
        styleRule.style = fnRule(data) || {};

        if (true) {
          for (var prop in styleRule.style) {
            if (typeof styleRule.style[prop] === 'function') {
               true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_1__["default"])(false, '[JSS] Function values inside function rules are not supported.') : 0;
              break;
            }
          }
        }
      }

      var fnValues = styleRule[fnValuesNs]; // If we have a fn values map, it is a rule with function values.

      if (fnValues) {
        for (var _prop in fnValues) {
          styleRule.prop(_prop, fnValues[_prop](data), options);
        }
      }
    }
  };
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (functionPlugin);


/***/ }),

/***/ "./node_modules/jss-plugin-vendor-prefixer/dist/jss-plugin-vendor-prefixer.esm.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/jss-plugin-vendor-prefixer/dist/jss-plugin-vendor-prefixer.esm.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var css_vendor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! css-vendor */ "./node_modules/css-vendor/dist/css-vendor.esm.js");
/* harmony import */ var jss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jss */ "./node_modules/jss/dist/jss.esm.js");



/**
 * Add vendor prefix to a property name when needed.
 */

function jssVendorPrefixer() {
  function onProcessRule(rule) {
    if (rule.type === 'keyframes') {
      var atRule = rule;
      atRule.at = (0,css_vendor__WEBPACK_IMPORTED_MODULE_0__.supportedKeyframes)(atRule.at);
    }
  }

  function prefixStyle(style) {
    for (var prop in style) {
      var value = style[prop];

      if (prop === 'fallbacks' && Array.isArray(value)) {
        style[prop] = value.map(prefixStyle);
        continue;
      }

      var changeProp = false;
      var supportedProp = (0,css_vendor__WEBPACK_IMPORTED_MODULE_0__.supportedProperty)(prop);
      if (supportedProp && supportedProp !== prop) changeProp = true;
      var changeValue = false;
      var supportedValue$1 = (0,css_vendor__WEBPACK_IMPORTED_MODULE_0__.supportedValue)(supportedProp, (0,jss__WEBPACK_IMPORTED_MODULE_1__.toCssValue)(value));
      if (supportedValue$1 && supportedValue$1 !== value) changeValue = true;

      if (changeProp || changeValue) {
        if (changeProp) delete style[prop];
        style[supportedProp || prop] = supportedValue$1 || value;
      }
    }

    return style;
  }

  function onProcessStyle(style, rule) {
    if (rule.type !== 'style') return style;
    return prefixStyle(style);
  }

  function onChangeValue(value, prop) {
    return (0,css_vendor__WEBPACK_IMPORTED_MODULE_0__.supportedValue)(prop, (0,jss__WEBPACK_IMPORTED_MODULE_1__.toCssValue)(value)) || value;
  }

  return {
    onProcessRule: onProcessRule,
    onProcessStyle: onProcessStyle,
    onChangeValue: onChangeValue
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (jssVendorPrefixer);


/***/ }),

/***/ "./node_modules/jss/dist/jss.esm.js":
/*!******************************************!*\
  !*** ./node_modules/jss/dist/jss.esm.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RuleList: () => (/* binding */ RuleList),
/* harmony export */   SheetsManager: () => (/* binding */ SheetsManager),
/* harmony export */   SheetsRegistry: () => (/* binding */ SheetsRegistry),
/* harmony export */   create: () => (/* binding */ createJss),
/* harmony export */   createGenerateId: () => (/* binding */ createGenerateId),
/* harmony export */   createRule: () => (/* binding */ createRule),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   getDynamicStyles: () => (/* binding */ getDynamicStyles),
/* harmony export */   hasCSSTOMSupport: () => (/* binding */ hasCSSTOMSupport),
/* harmony export */   sheets: () => (/* binding */ sheets),
/* harmony export */   toCssValue: () => (/* binding */ toCssValue)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var is_in_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! is-in-browser */ "./node_modules/is-in-browser/dist/module.js");
/* harmony import */ var tiny_warning__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tiny-warning */ "./node_modules/tiny-warning/dist/tiny-warning.esm.js");
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ "./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js");
/* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/esm/assertThisInitialized */ "./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js");
/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");








var plainObjectConstrurctor = {}.constructor;
function cloneStyle(style) {
  if (style == null || typeof style !== 'object') return style;
  if (Array.isArray(style)) return style.map(cloneStyle);
  if (style.constructor !== plainObjectConstrurctor) return style;
  var newStyle = {};

  for (var name in style) {
    newStyle[name] = cloneStyle(style[name]);
  }

  return newStyle;
}

/**
 * Create a rule instance.
 */

function createRule(name, decl, options) {
  if (name === void 0) {
    name = 'unnamed';
  }

  var jss = options.jss;
  var declCopy = cloneStyle(decl);
  var rule = jss.plugins.onCreateRule(name, declCopy, options);
  if (rule) return rule; // It is an at-rule and it has no instance.

  if (name[0] === '@') {
     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_6__["default"])(false, "[JSS] Unknown rule " + name) : 0;
  }

  return null;
}

var join = function join(value, by) {
  var result = '';

  for (var i = 0; i < value.length; i++) {
    // Remove !important from the value, it will be readded later.
    if (value[i] === '!important') break;
    if (result) result += by;
    result += value[i];
  }

  return result;
};
/**
 * Converts JSS array value to a CSS string.
 *
 * `margin: [['5px', '10px']]` > `margin: 5px 10px;`
 * `border: ['1px', '2px']` > `border: 1px, 2px;`
 * `margin: [['5px', '10px'], '!important']` > `margin: 5px 10px !important;`
 * `color: ['red', !important]` > `color: red !important;`
 */


var toCssValue = function toCssValue(value) {
  if (!Array.isArray(value)) return value;
  var cssValue = ''; // Support space separated values via `[['5px', '10px']]`.

  if (Array.isArray(value[0])) {
    for (var i = 0; i < value.length; i++) {
      if (value[i] === '!important') break;
      if (cssValue) cssValue += ', ';
      cssValue += join(value[i], ' ');
    }
  } else cssValue = join(value, ', '); // Add !important, because it was ignored.


  if (value[value.length - 1] === '!important') {
    cssValue += ' !important';
  }

  return cssValue;
};

function getWhitespaceSymbols(options) {
  if (options && options.format === false) {
    return {
      linebreak: '',
      space: ''
    };
  }

  return {
    linebreak: '\n',
    space: ' '
  };
}

/**
 * Indent a string.
 * http://jsperf.com/array-join-vs-for
 */

function indentStr(str, indent) {
  var result = '';

  for (var index = 0; index < indent; index++) {
    result += '  ';
  }

  return result + str;
}
/**
 * Converts a Rule to CSS string.
 */


function toCss(selector, style, options) {
  if (options === void 0) {
    options = {};
  }

  var result = '';
  if (!style) return result;
  var _options = options,
      _options$indent = _options.indent,
      indent = _options$indent === void 0 ? 0 : _options$indent;
  var fallbacks = style.fallbacks;

  if (options.format === false) {
    indent = -Infinity;
  }

  var _getWhitespaceSymbols = getWhitespaceSymbols(options),
      linebreak = _getWhitespaceSymbols.linebreak,
      space = _getWhitespaceSymbols.space;

  if (selector) indent++; // Apply fallbacks first.

  if (fallbacks) {
    // Array syntax {fallbacks: [{prop: value}]}
    if (Array.isArray(fallbacks)) {
      for (var index = 0; index < fallbacks.length; index++) {
        var fallback = fallbacks[index];

        for (var prop in fallback) {
          var value = fallback[prop];

          if (value != null) {
            if (result) result += linebreak;
            result += indentStr(prop + ":" + space + toCssValue(value) + ";", indent);
          }
        }
      }
    } else {
      // Object syntax {fallbacks: {prop: value}}
      for (var _prop in fallbacks) {
        var _value = fallbacks[_prop];

        if (_value != null) {
          if (result) result += linebreak;
          result += indentStr(_prop + ":" + space + toCssValue(_value) + ";", indent);
        }
      }
    }
  }

  for (var _prop2 in style) {
    var _value2 = style[_prop2];

    if (_value2 != null && _prop2 !== 'fallbacks') {
      if (result) result += linebreak;
      result += indentStr(_prop2 + ":" + space + toCssValue(_value2) + ";", indent);
    }
  } // Allow empty style in this case, because properties will be added dynamically.


  if (!result && !options.allowEmpty) return result; // When rule is being stringified before selector was defined.

  if (!selector) return result;
  indent--;
  if (result) result = "" + linebreak + result + linebreak;
  return indentStr("" + selector + space + "{" + result, indent) + indentStr('}', indent);
}

var escapeRegex = /([[\].#*$><+~=|^:(),"'`\s])/g;
var nativeEscape = typeof CSS !== 'undefined' && CSS.escape;
var escape = (function (str) {
  return nativeEscape ? nativeEscape(str) : str.replace(escapeRegex, '\\$1');
});

var BaseStyleRule =
/*#__PURE__*/
function () {
  function BaseStyleRule(key, style, options) {
    this.type = 'style';
    this.isProcessed = false;
    var sheet = options.sheet,
        Renderer = options.Renderer;
    this.key = key;
    this.options = options;
    this.style = style;
    if (sheet) this.renderer = sheet.renderer;else if (Renderer) this.renderer = new Renderer();
  }
  /**
   * Get or set a style property.
   */


  var _proto = BaseStyleRule.prototype;

  _proto.prop = function prop(name, value, options) {
    // It's a getter.
    if (value === undefined) return this.style[name]; // Don't do anything if the value has not changed.

    var force = options ? options.force : false;
    if (!force && this.style[name] === value) return this;
    var newValue = value;

    if (!options || options.process !== false) {
      newValue = this.options.jss.plugins.onChangeValue(value, name, this);
    }

    var isEmpty = newValue == null || newValue === false;
    var isDefined = name in this.style; // Value is empty and wasn't defined before.

    if (isEmpty && !isDefined && !force) return this; // We are going to remove this value.

    var remove = isEmpty && isDefined;
    if (remove) delete this.style[name];else this.style[name] = newValue; // Renderable is defined if StyleSheet option `link` is true.

    if (this.renderable && this.renderer) {
      if (remove) this.renderer.removeProperty(this.renderable, name);else this.renderer.setProperty(this.renderable, name, newValue);
      return this;
    }

    var sheet = this.options.sheet;

    if (sheet && sheet.attached) {
       true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_6__["default"])(false, '[JSS] Rule is not linked. Missing sheet option "link: true".') : 0;
    }

    return this;
  };

  return BaseStyleRule;
}();
var StyleRule =
/*#__PURE__*/
function (_BaseStyleRule) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_3__["default"])(StyleRule, _BaseStyleRule);

  function StyleRule(key, style, options) {
    var _this;

    _this = _BaseStyleRule.call(this, key, style, options) || this;
    var selector = options.selector,
        scoped = options.scoped,
        sheet = options.sheet,
        generateId = options.generateId;

    if (selector) {
      _this.selectorText = selector;
    } else if (scoped !== false) {
      _this.id = generateId((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__["default"])((0,_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__["default"])(_this)), sheet);
      _this.selectorText = "." + escape(_this.id);
    }

    return _this;
  }
  /**
   * Set selector string.
   * Attention: use this with caution. Most browsers didn't implement
   * selectorText setter, so this may result in rerendering of entire Style Sheet.
   */


  var _proto2 = StyleRule.prototype;

  /**
   * Apply rule to an element inline.
   */
  _proto2.applyTo = function applyTo(renderable) {
    var renderer = this.renderer;

    if (renderer) {
      var json = this.toJSON();

      for (var prop in json) {
        renderer.setProperty(renderable, prop, json[prop]);
      }
    }

    return this;
  }
  /**
   * Returns JSON representation of the rule.
   * Fallbacks are not supported.
   * Useful for inline styles.
   */
  ;

  _proto2.toJSON = function toJSON() {
    var json = {};

    for (var prop in this.style) {
      var value = this.style[prop];
      if (typeof value !== 'object') json[prop] = value;else if (Array.isArray(value)) json[prop] = toCssValue(value);
    }

    return json;
  }
  /**
   * Generates a CSS string.
   */
  ;

  _proto2.toString = function toString(options) {
    var sheet = this.options.sheet;
    var link = sheet ? sheet.options.link : false;
    var opts = link ? (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
      allowEmpty: true
    }) : options;
    return toCss(this.selectorText, this.style, opts);
  };

  (0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(StyleRule, [{
    key: "selector",
    set: function set(selector) {
      if (selector === this.selectorText) return;
      this.selectorText = selector;
      var renderer = this.renderer,
          renderable = this.renderable;
      if (!renderable || !renderer) return;
      var hasChanged = renderer.setSelector(renderable, selector); // If selector setter is not implemented, rerender the rule.

      if (!hasChanged) {
        renderer.replaceRule(renderable, this);
      }
    }
    /**
     * Get selector string.
     */
    ,
    get: function get() {
      return this.selectorText;
    }
  }]);

  return StyleRule;
}(BaseStyleRule);
var pluginStyleRule = {
  onCreateRule: function onCreateRule(key, style, options) {
    if (key[0] === '@' || options.parent && options.parent.type === 'keyframes') {
      return null;
    }

    return new StyleRule(key, style, options);
  }
};

var defaultToStringOptions = {
  indent: 1,
  children: true
};
var atRegExp = /@([\w-]+)/;
/**
 * Conditional rule for @media, @supports
 */

var ConditionalRule =
/*#__PURE__*/
function () {
  function ConditionalRule(key, styles, options) {
    this.type = 'conditional';
    this.isProcessed = false;
    this.key = key;
    var atMatch = key.match(atRegExp);
    this.at = atMatch ? atMatch[1] : 'unknown'; // Key might contain a unique suffix in case the `name` passed by user was duplicate.

    this.query = options.name || "@" + this.at;
    this.options = options;
    this.rules = new RuleList((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
      parent: this
    }));

    for (var name in styles) {
      this.rules.add(name, styles[name]);
    }

    this.rules.process();
  }
  /**
   * Get a rule.
   */


  var _proto = ConditionalRule.prototype;

  _proto.getRule = function getRule(name) {
    return this.rules.get(name);
  }
  /**
   * Get index of a rule.
   */
  ;

  _proto.indexOf = function indexOf(rule) {
    return this.rules.indexOf(rule);
  }
  /**
   * Create and register rule, run plugins.
   */
  ;

  _proto.addRule = function addRule(name, style, options) {
    var rule = this.rules.add(name, style, options);
    if (!rule) return null;
    this.options.jss.plugins.onProcessRule(rule);
    return rule;
  }
  /**
   * Replace rule, run plugins.
   */
  ;

  _proto.replaceRule = function replaceRule(name, style, options) {
    var newRule = this.rules.replace(name, style, options);
    if (newRule) this.options.jss.plugins.onProcessRule(newRule);
    return newRule;
  }
  /**
   * Generates a CSS string.
   */
  ;

  _proto.toString = function toString(options) {
    if (options === void 0) {
      options = defaultToStringOptions;
    }

    var _getWhitespaceSymbols = getWhitespaceSymbols(options),
        linebreak = _getWhitespaceSymbols.linebreak;

    if (options.indent == null) options.indent = defaultToStringOptions.indent;
    if (options.children == null) options.children = defaultToStringOptions.children;

    if (options.children === false) {
      return this.query + " {}";
    }

    var children = this.rules.toString(options);
    return children ? this.query + " {" + linebreak + children + linebreak + "}" : '';
  };

  return ConditionalRule;
}();
var keyRegExp = /@container|@media|@supports\s+/;
var pluginConditionalRule = {
  onCreateRule: function onCreateRule(key, styles, options) {
    return keyRegExp.test(key) ? new ConditionalRule(key, styles, options) : null;
  }
};

var defaultToStringOptions$1 = {
  indent: 1,
  children: true
};
var nameRegExp = /@keyframes\s+([\w-]+)/;
/**
 * Rule for @keyframes
 */

var KeyframesRule =
/*#__PURE__*/
function () {
  function KeyframesRule(key, frames, options) {
    this.type = 'keyframes';
    this.at = '@keyframes';
    this.isProcessed = false;
    var nameMatch = key.match(nameRegExp);

    if (nameMatch && nameMatch[1]) {
      this.name = nameMatch[1];
    } else {
      this.name = 'noname';
       true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_6__["default"])(false, "[JSS] Bad keyframes name " + key) : 0;
    }

    this.key = this.type + "-" + this.name;
    this.options = options;
    var scoped = options.scoped,
        sheet = options.sheet,
        generateId = options.generateId;
    this.id = scoped === false ? this.name : escape(generateId(this, sheet));
    this.rules = new RuleList((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
      parent: this
    }));

    for (var name in frames) {
      this.rules.add(name, frames[name], (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
        parent: this
      }));
    }

    this.rules.process();
  }
  /**
   * Generates a CSS string.
   */


  var _proto = KeyframesRule.prototype;

  _proto.toString = function toString(options) {
    if (options === void 0) {
      options = defaultToStringOptions$1;
    }

    var _getWhitespaceSymbols = getWhitespaceSymbols(options),
        linebreak = _getWhitespaceSymbols.linebreak;

    if (options.indent == null) options.indent = defaultToStringOptions$1.indent;
    if (options.children == null) options.children = defaultToStringOptions$1.children;

    if (options.children === false) {
      return this.at + " " + this.id + " {}";
    }

    var children = this.rules.toString(options);
    if (children) children = "" + linebreak + children + linebreak;
    return this.at + " " + this.id + " {" + children + "}";
  };

  return KeyframesRule;
}();
var keyRegExp$1 = /@keyframes\s+/;
var refRegExp = /\$([\w-]+)/g;

var findReferencedKeyframe = function findReferencedKeyframe(val, keyframes) {
  if (typeof val === 'string') {
    return val.replace(refRegExp, function (match, name) {
      if (name in keyframes) {
        return keyframes[name];
      }

       true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_6__["default"])(false, "[JSS] Referenced keyframes rule \"" + name + "\" is not defined.") : 0;
      return match;
    });
  }

  return val;
};
/**
 * Replace the reference for a animation name.
 */


var replaceRef = function replaceRef(style, prop, keyframes) {
  var value = style[prop];
  var refKeyframe = findReferencedKeyframe(value, keyframes);

  if (refKeyframe !== value) {
    style[prop] = refKeyframe;
  }
};

var pluginKeyframesRule = {
  onCreateRule: function onCreateRule(key, frames, options) {
    return typeof key === 'string' && keyRegExp$1.test(key) ? new KeyframesRule(key, frames, options) : null;
  },
  // Animation name ref replacer.
  onProcessStyle: function onProcessStyle(style, rule, sheet) {
    if (rule.type !== 'style' || !sheet) return style;
    if ('animation-name' in style) replaceRef(style, 'animation-name', sheet.keyframes);
    if ('animation' in style) replaceRef(style, 'animation', sheet.keyframes);
    return style;
  },
  onChangeValue: function onChangeValue(val, prop, rule) {
    var sheet = rule.options.sheet;

    if (!sheet) {
      return val;
    }

    switch (prop) {
      case 'animation':
        return findReferencedKeyframe(val, sheet.keyframes);

      case 'animation-name':
        return findReferencedKeyframe(val, sheet.keyframes);

      default:
        return val;
    }
  }
};

var KeyframeRule =
/*#__PURE__*/
function (_BaseStyleRule) {
  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_3__["default"])(KeyframeRule, _BaseStyleRule);

  function KeyframeRule() {
    return _BaseStyleRule.apply(this, arguments) || this;
  }

  var _proto = KeyframeRule.prototype;

  /**
   * Generates a CSS string.
   */
  _proto.toString = function toString(options) {
    var sheet = this.options.sheet;
    var link = sheet ? sheet.options.link : false;
    var opts = link ? (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
      allowEmpty: true
    }) : options;
    return toCss(this.key, this.style, opts);
  };

  return KeyframeRule;
}(BaseStyleRule);
var pluginKeyframeRule = {
  onCreateRule: function onCreateRule(key, style, options) {
    if (options.parent && options.parent.type === 'keyframes') {
      return new KeyframeRule(key, style, options);
    }

    return null;
  }
};

var FontFaceRule =
/*#__PURE__*/
function () {
  function FontFaceRule(key, style, options) {
    this.type = 'font-face';
    this.at = '@font-face';
    this.isProcessed = false;
    this.key = key;
    this.style = style;
    this.options = options;
  }
  /**
   * Generates a CSS string.
   */


  var _proto = FontFaceRule.prototype;

  _proto.toString = function toString(options) {
    var _getWhitespaceSymbols = getWhitespaceSymbols(options),
        linebreak = _getWhitespaceSymbols.linebreak;

    if (Array.isArray(this.style)) {
      var str = '';

      for (var index = 0; index < this.style.length; index++) {
        str += toCss(this.at, this.style[index]);
        if (this.style[index + 1]) str += linebreak;
      }

      return str;
    }

    return toCss(this.at, this.style, options);
  };

  return FontFaceRule;
}();
var keyRegExp$2 = /@font-face/;
var pluginFontFaceRule = {
  onCreateRule: function onCreateRule(key, style, options) {
    return keyRegExp$2.test(key) ? new FontFaceRule(key, style, options) : null;
  }
};

var ViewportRule =
/*#__PURE__*/
function () {
  function ViewportRule(key, style, options) {
    this.type = 'viewport';
    this.at = '@viewport';
    this.isProcessed = false;
    this.key = key;
    this.style = style;
    this.options = options;
  }
  /**
   * Generates a CSS string.
   */


  var _proto = ViewportRule.prototype;

  _proto.toString = function toString(options) {
    return toCss(this.key, this.style, options);
  };

  return ViewportRule;
}();
var pluginViewportRule = {
  onCreateRule: function onCreateRule(key, style, options) {
    return key === '@viewport' || key === '@-ms-viewport' ? new ViewportRule(key, style, options) : null;
  }
};

var SimpleRule =
/*#__PURE__*/
function () {
  function SimpleRule(key, value, options) {
    this.type = 'simple';
    this.isProcessed = false;
    this.key = key;
    this.value = value;
    this.options = options;
  }
  /**
   * Generates a CSS string.
   */
  // eslint-disable-next-line no-unused-vars


  var _proto = SimpleRule.prototype;

  _proto.toString = function toString(options) {
    if (Array.isArray(this.value)) {
      var str = '';

      for (var index = 0; index < this.value.length; index++) {
        str += this.key + " " + this.value[index] + ";";
        if (this.value[index + 1]) str += '\n';
      }

      return str;
    }

    return this.key + " " + this.value + ";";
  };

  return SimpleRule;
}();
var keysMap = {
  '@charset': true,
  '@import': true,
  '@namespace': true
};
var pluginSimpleRule = {
  onCreateRule: function onCreateRule(key, value, options) {
    return key in keysMap ? new SimpleRule(key, value, options) : null;
  }
};

var plugins = [pluginStyleRule, pluginConditionalRule, pluginKeyframesRule, pluginKeyframeRule, pluginFontFaceRule, pluginViewportRule, pluginSimpleRule];

var defaultUpdateOptions = {
  process: true
};
var forceUpdateOptions = {
  force: true,
  process: true
  /**
   * Contains rules objects and allows adding/removing etc.
   * Is used for e.g. by `StyleSheet` or `ConditionalRule`.
   */

};

var RuleList =
/*#__PURE__*/
function () {
  // Rules registry for access by .get() method.
  // It contains the same rule registered by name and by selector.
  // Original styles object.
  // Used to ensure correct rules order.
  function RuleList(options) {
    this.map = {};
    this.raw = {};
    this.index = [];
    this.counter = 0;
    this.options = options;
    this.classes = options.classes;
    this.keyframes = options.keyframes;
  }
  /**
   * Create and register rule.
   *
   * Will not render after Style Sheet was rendered the first time.
   */


  var _proto = RuleList.prototype;

  _proto.add = function add(name, decl, ruleOptions) {
    var _this$options = this.options,
        parent = _this$options.parent,
        sheet = _this$options.sheet,
        jss = _this$options.jss,
        Renderer = _this$options.Renderer,
        generateId = _this$options.generateId,
        scoped = _this$options.scoped;

    var options = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      classes: this.classes,
      parent: parent,
      sheet: sheet,
      jss: jss,
      Renderer: Renderer,
      generateId: generateId,
      scoped: scoped,
      name: name,
      keyframes: this.keyframes,
      selector: undefined
    }, ruleOptions); // When user uses .createStyleSheet(), duplicate names are not possible, but
    // `sheet.addRule()` opens the door for any duplicate rule name. When this happens
    // we need to make the key unique within this RuleList instance scope.


    var key = name;

    if (name in this.raw) {
      key = name + "-d" + this.counter++;
    } // We need to save the original decl before creating the rule
    // because cache plugin needs to use it as a key to return a cached rule.


    this.raw[key] = decl;

    if (key in this.classes) {
      // E.g. rules inside of @media container
      options.selector = "." + escape(this.classes[key]);
    }

    var rule = createRule(key, decl, options);
    if (!rule) return null;
    this.register(rule);
    var index = options.index === undefined ? this.index.length : options.index;
    this.index.splice(index, 0, rule);
    return rule;
  }
  /**
   * Replace rule.
   * Create a new rule and remove old one instead of overwriting
   * because we want to invoke onCreateRule hook to make plugins work.
   */
  ;

  _proto.replace = function replace(name, decl, ruleOptions) {
    var oldRule = this.get(name);
    var oldIndex = this.index.indexOf(oldRule);

    if (oldRule) {
      this.remove(oldRule);
    }

    var options = ruleOptions;
    if (oldIndex !== -1) options = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, ruleOptions, {
      index: oldIndex
    });
    return this.add(name, decl, options);
  }
  /**
   * Get a rule by name or selector.
   */
  ;

  _proto.get = function get(nameOrSelector) {
    return this.map[nameOrSelector];
  }
  /**
   * Delete a rule.
   */
  ;

  _proto.remove = function remove(rule) {
    this.unregister(rule);
    delete this.raw[rule.key];
    this.index.splice(this.index.indexOf(rule), 1);
  }
  /**
   * Get index of a rule.
   */
  ;

  _proto.indexOf = function indexOf(rule) {
    return this.index.indexOf(rule);
  }
  /**
   * Run `onProcessRule()` plugins on every rule.
   */
  ;

  _proto.process = function process() {
    var plugins = this.options.jss.plugins; // We need to clone array because if we modify the index somewhere else during a loop
    // we end up with very hard-to-track-down side effects.

    this.index.slice(0).forEach(plugins.onProcessRule, plugins);
  }
  /**
   * Register a rule in `.map`, `.classes` and `.keyframes` maps.
   */
  ;

  _proto.register = function register(rule) {
    this.map[rule.key] = rule;

    if (rule instanceof StyleRule) {
      this.map[rule.selector] = rule;
      if (rule.id) this.classes[rule.key] = rule.id;
    } else if (rule instanceof KeyframesRule && this.keyframes) {
      this.keyframes[rule.name] = rule.id;
    }
  }
  /**
   * Unregister a rule.
   */
  ;

  _proto.unregister = function unregister(rule) {
    delete this.map[rule.key];

    if (rule instanceof StyleRule) {
      delete this.map[rule.selector];
      delete this.classes[rule.key];
    } else if (rule instanceof KeyframesRule) {
      delete this.keyframes[rule.name];
    }
  }
  /**
   * Update the function values with a new data.
   */
  ;

  _proto.update = function update() {
    var name;
    var data;
    var options;

    if (typeof (arguments.length <= 0 ? undefined : arguments[0]) === 'string') {
      name = arguments.length <= 0 ? undefined : arguments[0];
      data = arguments.length <= 1 ? undefined : arguments[1];
      options = arguments.length <= 2 ? undefined : arguments[2];
    } else {
      data = arguments.length <= 0 ? undefined : arguments[0];
      options = arguments.length <= 1 ? undefined : arguments[1];
      name = null;
    }

    if (name) {
      this.updateOne(this.get(name), data, options);
    } else {
      for (var index = 0; index < this.index.length; index++) {
        this.updateOne(this.index[index], data, options);
      }
    }
  }
  /**
   * Execute plugins, update rule props.
   */
  ;

  _proto.updateOne = function updateOne(rule, data, options) {
    if (options === void 0) {
      options = defaultUpdateOptions;
    }

    var _this$options2 = this.options,
        plugins = _this$options2.jss.plugins,
        sheet = _this$options2.sheet; // It is a rules container like for e.g. ConditionalRule.

    if (rule.rules instanceof RuleList) {
      rule.rules.update(data, options);
      return;
    }

    var style = rule.style;
    plugins.onUpdate(data, rule, sheet, options); // We rely on a new `style` ref in case it was mutated during onUpdate hook.

    if (options.process && style && style !== rule.style) {
      // We need to run the plugins in case new `style` relies on syntax plugins.
      plugins.onProcessStyle(rule.style, rule, sheet); // Update and add props.

      for (var prop in rule.style) {
        var nextValue = rule.style[prop];
        var prevValue = style[prop]; // We need to use `force: true` because `rule.style` has been updated during onUpdate hook, so `rule.prop()` will not update the CSSOM rule.
        // We do this comparison to avoid unneeded `rule.prop()` calls, since we have the old `style` object here.

        if (nextValue !== prevValue) {
          rule.prop(prop, nextValue, forceUpdateOptions);
        }
      } // Remove props.


      for (var _prop in style) {
        var _nextValue = rule.style[_prop];
        var _prevValue = style[_prop]; // We need to use `force: true` because `rule.style` has been updated during onUpdate hook, so `rule.prop()` will not update the CSSOM rule.
        // We do this comparison to avoid unneeded `rule.prop()` calls, since we have the old `style` object here.

        if (_nextValue == null && _nextValue !== _prevValue) {
          rule.prop(_prop, null, forceUpdateOptions);
        }
      }
    }
  }
  /**
   * Convert rules to a CSS string.
   */
  ;

  _proto.toString = function toString(options) {
    var str = '';
    var sheet = this.options.sheet;
    var link = sheet ? sheet.options.link : false;

    var _getWhitespaceSymbols = getWhitespaceSymbols(options),
        linebreak = _getWhitespaceSymbols.linebreak;

    for (var index = 0; index < this.index.length; index++) {
      var rule = this.index[index];
      var css = rule.toString(options); // No need to render an empty rule.

      if (!css && !link) continue;
      if (str) str += linebreak;
      str += css;
    }

    return str;
  };

  return RuleList;
}();

var StyleSheet =
/*#__PURE__*/
function () {
  function StyleSheet(styles, options) {
    this.attached = false;
    this.deployed = false;
    this.classes = {};
    this.keyframes = {};
    this.options = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
      sheet: this,
      parent: this,
      classes: this.classes,
      keyframes: this.keyframes
    });

    if (options.Renderer) {
      this.renderer = new options.Renderer(this);
    }

    this.rules = new RuleList(this.options);

    for (var name in styles) {
      this.rules.add(name, styles[name]);
    }

    this.rules.process();
  }
  /**
   * Attach renderable to the render tree.
   */


  var _proto = StyleSheet.prototype;

  _proto.attach = function attach() {
    if (this.attached) return this;
    if (this.renderer) this.renderer.attach();
    this.attached = true; // Order is important, because we can't use insertRule API if style element is not attached.

    if (!this.deployed) this.deploy();
    return this;
  }
  /**
   * Remove renderable from render tree.
   */
  ;

  _proto.detach = function detach() {
    if (!this.attached) return this;
    if (this.renderer) this.renderer.detach();
    this.attached = false;
    return this;
  }
  /**
   * Add a rule to the current stylesheet.
   * Will insert a rule also after the stylesheet has been rendered first time.
   */
  ;

  _proto.addRule = function addRule(name, decl, options) {
    var queue = this.queue; // Plugins can create rules.
    // In order to preserve the right order, we need to queue all `.addRule` calls,
    // which happen after the first `rules.add()` call.

    if (this.attached && !queue) this.queue = [];
    var rule = this.rules.add(name, decl, options);
    if (!rule) return null;
    this.options.jss.plugins.onProcessRule(rule);

    if (this.attached) {
      if (!this.deployed) return rule; // Don't insert rule directly if there is no stringified version yet.
      // It will be inserted all together when .attach is called.

      if (queue) queue.push(rule);else {
        this.insertRule(rule);

        if (this.queue) {
          this.queue.forEach(this.insertRule, this);
          this.queue = undefined;
        }
      }
      return rule;
    } // We can't add rules to a detached style node.
    // We will redeploy the sheet once user will attach it.


    this.deployed = false;
    return rule;
  }
  /**
   * Replace a rule in the current stylesheet.
   */
  ;

  _proto.replaceRule = function replaceRule(nameOrSelector, decl, options) {
    var oldRule = this.rules.get(nameOrSelector);
    if (!oldRule) return this.addRule(nameOrSelector, decl, options);
    var newRule = this.rules.replace(nameOrSelector, decl, options);

    if (newRule) {
      this.options.jss.plugins.onProcessRule(newRule);
    }

    if (this.attached) {
      if (!this.deployed) return newRule; // Don't replace / delete rule directly if there is no stringified version yet.
      // It will be inserted all together when .attach is called.

      if (this.renderer) {
        if (!newRule) {
          this.renderer.deleteRule(oldRule);
        } else if (oldRule.renderable) {
          this.renderer.replaceRule(oldRule.renderable, newRule);
        }
      }

      return newRule;
    } // We can't replace rules to a detached style node.
    // We will redeploy the sheet once user will attach it.


    this.deployed = false;
    return newRule;
  }
  /**
   * Insert rule into the StyleSheet
   */
  ;

  _proto.insertRule = function insertRule(rule) {
    if (this.renderer) {
      this.renderer.insertRule(rule);
    }
  }
  /**
   * Create and add rules.
   * Will render also after Style Sheet was rendered the first time.
   */
  ;

  _proto.addRules = function addRules(styles, options) {
    var added = [];

    for (var name in styles) {
      var rule = this.addRule(name, styles[name], options);
      if (rule) added.push(rule);
    }

    return added;
  }
  /**
   * Get a rule by name or selector.
   */
  ;

  _proto.getRule = function getRule(nameOrSelector) {
    return this.rules.get(nameOrSelector);
  }
  /**
   * Delete a rule by name.
   * Returns `true`: if rule has been deleted from the DOM.
   */
  ;

  _proto.deleteRule = function deleteRule(name) {
    var rule = typeof name === 'object' ? name : this.rules.get(name);

    if (!rule || // Style sheet was created without link: true and attached, in this case we
    // won't be able to remove the CSS rule from the DOM.
    this.attached && !rule.renderable) {
      return false;
    }

    this.rules.remove(rule);

    if (this.attached && rule.renderable && this.renderer) {
      return this.renderer.deleteRule(rule.renderable);
    }

    return true;
  }
  /**
   * Get index of a rule.
   */
  ;

  _proto.indexOf = function indexOf(rule) {
    return this.rules.indexOf(rule);
  }
  /**
   * Deploy pure CSS string to a renderable.
   */
  ;

  _proto.deploy = function deploy() {
    if (this.renderer) this.renderer.deploy();
    this.deployed = true;
    return this;
  }
  /**
   * Update the function values with a new data.
   */
  ;

  _proto.update = function update() {
    var _this$rules;

    (_this$rules = this.rules).update.apply(_this$rules, arguments);

    return this;
  }
  /**
   * Updates a single rule.
   */
  ;

  _proto.updateOne = function updateOne(rule, data, options) {
    this.rules.updateOne(rule, data, options);
    return this;
  }
  /**
   * Convert rules to a CSS string.
   */
  ;

  _proto.toString = function toString(options) {
    return this.rules.toString(options);
  };

  return StyleSheet;
}();

var PluginsRegistry =
/*#__PURE__*/
function () {
  function PluginsRegistry() {
    this.plugins = {
      internal: [],
      external: []
    };
    this.registry = {};
  }

  var _proto = PluginsRegistry.prototype;

  /**
   * Call `onCreateRule` hooks and return an object if returned by a hook.
   */
  _proto.onCreateRule = function onCreateRule(name, decl, options) {
    for (var i = 0; i < this.registry.onCreateRule.length; i++) {
      var rule = this.registry.onCreateRule[i](name, decl, options);
      if (rule) return rule;
    }

    return null;
  }
  /**
   * Call `onProcessRule` hooks.
   */
  ;

  _proto.onProcessRule = function onProcessRule(rule) {
    if (rule.isProcessed) return;
    var sheet = rule.options.sheet;

    for (var i = 0; i < this.registry.onProcessRule.length; i++) {
      this.registry.onProcessRule[i](rule, sheet);
    }

    if (rule.style) this.onProcessStyle(rule.style, rule, sheet);
    rule.isProcessed = true;
  }
  /**
   * Call `onProcessStyle` hooks.
   */
  ;

  _proto.onProcessStyle = function onProcessStyle(style, rule, sheet) {
    for (var i = 0; i < this.registry.onProcessStyle.length; i++) {
      rule.style = this.registry.onProcessStyle[i](rule.style, rule, sheet);
    }
  }
  /**
   * Call `onProcessSheet` hooks.
   */
  ;

  _proto.onProcessSheet = function onProcessSheet(sheet) {
    for (var i = 0; i < this.registry.onProcessSheet.length; i++) {
      this.registry.onProcessSheet[i](sheet);
    }
  }
  /**
   * Call `onUpdate` hooks.
   */
  ;

  _proto.onUpdate = function onUpdate(data, rule, sheet, options) {
    for (var i = 0; i < this.registry.onUpdate.length; i++) {
      this.registry.onUpdate[i](data, rule, sheet, options);
    }
  }
  /**
   * Call `onChangeValue` hooks.
   */
  ;

  _proto.onChangeValue = function onChangeValue(value, prop, rule) {
    var processedValue = value;

    for (var i = 0; i < this.registry.onChangeValue.length; i++) {
      processedValue = this.registry.onChangeValue[i](processedValue, prop, rule);
    }

    return processedValue;
  }
  /**
   * Register a plugin.
   */
  ;

  _proto.use = function use(newPlugin, options) {
    if (options === void 0) {
      options = {
        queue: 'external'
      };
    }

    var plugins = this.plugins[options.queue]; // Avoids applying same plugin twice, at least based on ref.

    if (plugins.indexOf(newPlugin) !== -1) {
      return;
    }

    plugins.push(newPlugin);
    this.registry = [].concat(this.plugins.external, this.plugins.internal).reduce(function (registry, plugin) {
      for (var name in plugin) {
        if (name in registry) {
          registry[name].push(plugin[name]);
        } else {
           true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_6__["default"])(false, "[JSS] Unknown hook \"" + name + "\".") : 0;
        }
      }

      return registry;
    }, {
      onCreateRule: [],
      onProcessRule: [],
      onProcessStyle: [],
      onProcessSheet: [],
      onChangeValue: [],
      onUpdate: []
    });
  };

  return PluginsRegistry;
}();

/**
 * Sheets registry to access all instances in one place.
 */

var SheetsRegistry =
/*#__PURE__*/
function () {
  function SheetsRegistry() {
    this.registry = [];
  }

  var _proto = SheetsRegistry.prototype;

  /**
   * Register a Style Sheet.
   */
  _proto.add = function add(sheet) {
    var registry = this.registry;
    var index = sheet.options.index;
    if (registry.indexOf(sheet) !== -1) return;

    if (registry.length === 0 || index >= this.index) {
      registry.push(sheet);
      return;
    } // Find a position.


    for (var i = 0; i < registry.length; i++) {
      if (registry[i].options.index > index) {
        registry.splice(i, 0, sheet);
        return;
      }
    }
  }
  /**
   * Reset the registry.
   */
  ;

  _proto.reset = function reset() {
    this.registry = [];
  }
  /**
   * Remove a Style Sheet.
   */
  ;

  _proto.remove = function remove(sheet) {
    var index = this.registry.indexOf(sheet);
    this.registry.splice(index, 1);
  }
  /**
   * Convert all attached sheets to a CSS string.
   */
  ;

  _proto.toString = function toString(_temp) {
    var _ref = _temp === void 0 ? {} : _temp,
        attached = _ref.attached,
        options = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_5__["default"])(_ref, ["attached"]);

    var _getWhitespaceSymbols = getWhitespaceSymbols(options),
        linebreak = _getWhitespaceSymbols.linebreak;

    var css = '';

    for (var i = 0; i < this.registry.length; i++) {
      var sheet = this.registry[i];

      if (attached != null && sheet.attached !== attached) {
        continue;
      }

      if (css) css += linebreak;
      css += sheet.toString(options);
    }

    return css;
  };

  (0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(SheetsRegistry, [{
    key: "index",

    /**
     * Current highest index number.
     */
    get: function get() {
      return this.registry.length === 0 ? 0 : this.registry[this.registry.length - 1].options.index;
    }
  }]);

  return SheetsRegistry;
}();

/**
 * This is a global sheets registry. Only DomRenderer will add sheets to it.
 * On the server one should use an own SheetsRegistry instance and add the
 * sheets to it, because you need to make sure to create a new registry for
 * each request in order to not leak sheets across requests.
 */

var sheets = new SheetsRegistry();

/* eslint-disable */

/**
 * Now that `globalThis` is available on most platforms
 * (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis#browser_compatibility)
 * we check for `globalThis` first. `globalThis` is necessary for jss
 * to run in Agoric's secure version of JavaScript (SES). Under SES,
 * `globalThis` exists, but `window`, `self`, and `Function('return
 * this')()` are all undefined for security reasons.
 *
 * https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
 */
var globalThis$1 = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' && window.Math === Math ? window : typeof self !== 'undefined' && self.Math === Math ? self : Function('return this')();

var ns = '2f1acc6c3a606b082e5eef5e54414ffb';
if (globalThis$1[ns] == null) globalThis$1[ns] = 0; // Bundle may contain multiple JSS versions at the same time. In order to identify
// the current version with just one short number and use it for classes generation
// we use a counter. Also it is more accurate, because user can manually reevaluate
// the module.

var moduleId = globalThis$1[ns]++;

var maxRules = 1e10;
/**
 * Returns a function which generates unique class names based on counters.
 * When new generator function is created, rule counter is reseted.
 * We need to reset the rule counter for SSR for each request.
 */

var createGenerateId = function createGenerateId(options) {
  if (options === void 0) {
    options = {};
  }

  var ruleCounter = 0;

  var generateId = function generateId(rule, sheet) {
    ruleCounter += 1;

    if (ruleCounter > maxRules) {
       true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_6__["default"])(false, "[JSS] You might have a memory leak. Rule counter is at " + ruleCounter + ".") : 0;
    }

    var jssId = '';
    var prefix = '';

    if (sheet) {
      if (sheet.options.classNamePrefix) {
        prefix = sheet.options.classNamePrefix;
      }

      if (sheet.options.jss.id != null) {
        jssId = String(sheet.options.jss.id);
      }
    }

    if (options.minify) {
      // Using "c" because a number can't be the first char in a class name.
      return "" + (prefix || 'c') + moduleId + jssId + ruleCounter;
    }

    return prefix + rule.key + "-" + moduleId + (jssId ? "-" + jssId : '') + "-" + ruleCounter;
  };

  return generateId;
};

/**
 * Cache the value from the first time a function is called.
 */

var memoize = function memoize(fn) {
  var value;
  return function () {
    if (!value) value = fn();
    return value;
  };
};
/**
 * Get a style property value.
 */


var getPropertyValue = function getPropertyValue(cssRule, prop) {
  try {
    // Support CSSTOM.
    if (cssRule.attributeStyleMap) {
      return cssRule.attributeStyleMap.get(prop);
    }

    return cssRule.style.getPropertyValue(prop);
  } catch (err) {
    // IE may throw if property is unknown.
    return '';
  }
};
/**
 * Set a style property.
 */


var setProperty = function setProperty(cssRule, prop, value) {
  try {
    var cssValue = value;

    if (Array.isArray(value)) {
      cssValue = toCssValue(value);
    } // Support CSSTOM.


    if (cssRule.attributeStyleMap) {
      cssRule.attributeStyleMap.set(prop, cssValue);
    } else {
      var indexOfImportantFlag = cssValue ? cssValue.indexOf('!important') : -1;
      var cssValueWithoutImportantFlag = indexOfImportantFlag > -1 ? cssValue.substr(0, indexOfImportantFlag - 1) : cssValue;
      cssRule.style.setProperty(prop, cssValueWithoutImportantFlag, indexOfImportantFlag > -1 ? 'important' : '');
    }
  } catch (err) {
    // IE may throw if property is unknown.
    return false;
  }

  return true;
};
/**
 * Remove a style property.
 */


var removeProperty = function removeProperty(cssRule, prop) {
  try {
    // Support CSSTOM.
    if (cssRule.attributeStyleMap) {
      cssRule.attributeStyleMap.delete(prop);
    } else {
      cssRule.style.removeProperty(prop);
    }
  } catch (err) {
     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_6__["default"])(false, "[JSS] DOMException \"" + err.message + "\" was thrown. Tried to remove property \"" + prop + "\".") : 0;
  }
};
/**
 * Set the selector.
 */


var setSelector = function setSelector(cssRule, selectorText) {
  cssRule.selectorText = selectorText; // Return false if setter was not successful.
  // Currently works in chrome only.

  return cssRule.selectorText === selectorText;
};
/**
 * Gets the `head` element upon the first call and caches it.
 * We assume it can't be null.
 */


var getHead = memoize(function () {
  return document.querySelector('head');
});
/**
 * Find attached sheet with an index higher than the passed one.
 */

function findHigherSheet(registry, options) {
  for (var i = 0; i < registry.length; i++) {
    var sheet = registry[i];

    if (sheet.attached && sheet.options.index > options.index && sheet.options.insertionPoint === options.insertionPoint) {
      return sheet;
    }
  }

  return null;
}
/**
 * Find attached sheet with the highest index.
 */


function findHighestSheet(registry, options) {
  for (var i = registry.length - 1; i >= 0; i--) {
    var sheet = registry[i];

    if (sheet.attached && sheet.options.insertionPoint === options.insertionPoint) {
      return sheet;
    }
  }

  return null;
}
/**
 * Find a comment with "jss" inside.
 */


function findCommentNode(text) {
  var head = getHead();

  for (var i = 0; i < head.childNodes.length; i++) {
    var node = head.childNodes[i];

    if (node.nodeType === 8 && node.nodeValue.trim() === text) {
      return node;
    }
  }

  return null;
}
/**
 * Find a node before which we can insert the sheet.
 */


function findPrevNode(options) {
  var registry = sheets.registry;

  if (registry.length > 0) {
    // Try to insert before the next higher sheet.
    var sheet = findHigherSheet(registry, options);

    if (sheet && sheet.renderer) {
      return {
        parent: sheet.renderer.element.parentNode,
        node: sheet.renderer.element
      };
    } // Otherwise insert after the last attached.


    sheet = findHighestSheet(registry, options);

    if (sheet && sheet.renderer) {
      return {
        parent: sheet.renderer.element.parentNode,
        node: sheet.renderer.element.nextSibling
      };
    }
  } // Try to find a comment placeholder if registry is empty.


  var insertionPoint = options.insertionPoint;

  if (insertionPoint && typeof insertionPoint === 'string') {
    var comment = findCommentNode(insertionPoint);

    if (comment) {
      return {
        parent: comment.parentNode,
        node: comment.nextSibling
      };
    } // If user specifies an insertion point and it can't be found in the document -
    // bad specificity issues may appear.


     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_6__["default"])(false, "[JSS] Insertion point \"" + insertionPoint + "\" not found.") : 0;
  }

  return false;
}
/**
 * Insert style element into the DOM.
 */


function insertStyle(style, options) {
  var insertionPoint = options.insertionPoint;
  var nextNode = findPrevNode(options);

  if (nextNode !== false && nextNode.parent) {
    nextNode.parent.insertBefore(style, nextNode.node);
    return;
  } // Works with iframes and any node types.


  if (insertionPoint && typeof insertionPoint.nodeType === 'number') {
    var insertionPointElement = insertionPoint;
    var parentNode = insertionPointElement.parentNode;
    if (parentNode) parentNode.insertBefore(style, insertionPointElement.nextSibling);else  true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_6__["default"])(false, '[JSS] Insertion point is not in the DOM.') : 0;
    return;
  }

  getHead().appendChild(style);
}
/**
 * Read jss nonce setting from the page if the user has set it.
 */


var getNonce = memoize(function () {
  var node = document.querySelector('meta[property="csp-nonce"]');
  return node ? node.getAttribute('content') : null;
});

var _insertRule = function insertRule(container, rule, index) {
  try {
    if ('insertRule' in container) {
      container.insertRule(rule, index);
    } // Keyframes rule.
    else if ('appendRule' in container) {
        container.appendRule(rule);
      }
  } catch (err) {
     true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_6__["default"])(false, "[JSS] " + err.message) : 0;
    return false;
  }

  return container.cssRules[index];
};

var getValidRuleInsertionIndex = function getValidRuleInsertionIndex(container, index) {
  var maxIndex = container.cssRules.length; // In case previous insertion fails, passed index might be wrong

  if (index === undefined || index > maxIndex) {
    // eslint-disable-next-line no-param-reassign
    return maxIndex;
  }

  return index;
};

var createStyle = function createStyle() {
  var el = document.createElement('style'); // Without it, IE will have a broken source order specificity if we
  // insert rules after we insert the style tag.
  // It seems to kick-off the source order specificity algorithm.

  el.textContent = '\n';
  return el;
};

var DomRenderer =
/*#__PURE__*/
function () {
  // Will be empty if link: true option is not set, because
  // it is only for use together with insertRule API.
  function DomRenderer(sheet) {
    this.getPropertyValue = getPropertyValue;
    this.setProperty = setProperty;
    this.removeProperty = removeProperty;
    this.setSelector = setSelector;
    this.hasInsertedRules = false;
    this.cssRules = [];
    // There is no sheet when the renderer is used from a standalone StyleRule.
    if (sheet) sheets.add(sheet);
    this.sheet = sheet;

    var _ref = this.sheet ? this.sheet.options : {},
        media = _ref.media,
        meta = _ref.meta,
        element = _ref.element;

    this.element = element || createStyle();
    this.element.setAttribute('data-jss', '');
    if (media) this.element.setAttribute('media', media);
    if (meta) this.element.setAttribute('data-meta', meta);
    var nonce = getNonce();
    if (nonce) this.element.setAttribute('nonce', nonce);
  }
  /**
   * Insert style element into render tree.
   */


  var _proto = DomRenderer.prototype;

  _proto.attach = function attach() {
    // In the case the element node is external and it is already in the DOM.
    if (this.element.parentNode || !this.sheet) return;
    insertStyle(this.element, this.sheet.options); // When rules are inserted using `insertRule` API, after `sheet.detach().attach()`
    // most browsers create a new CSSStyleSheet, except of all IEs.

    var deployed = Boolean(this.sheet && this.sheet.deployed);

    if (this.hasInsertedRules && deployed) {
      this.hasInsertedRules = false;
      this.deploy();
    }
  }
  /**
   * Remove style element from render tree.
   */
  ;

  _proto.detach = function detach() {
    if (!this.sheet) return;
    var parentNode = this.element.parentNode;
    if (parentNode) parentNode.removeChild(this.element); // In the most browsers, rules inserted using insertRule() API will be lost when style element is removed.
    // Though IE will keep them and we need a consistent behavior.

    if (this.sheet.options.link) {
      this.cssRules = [];
      this.element.textContent = '\n';
    }
  }
  /**
   * Inject CSS string into element.
   */
  ;

  _proto.deploy = function deploy() {
    var sheet = this.sheet;
    if (!sheet) return;

    if (sheet.options.link) {
      this.insertRules(sheet.rules);
      return;
    }

    this.element.textContent = "\n" + sheet.toString() + "\n";
  }
  /**
   * Insert RuleList into an element.
   */
  ;

  _proto.insertRules = function insertRules(rules, nativeParent) {
    for (var i = 0; i < rules.index.length; i++) {
      this.insertRule(rules.index[i], i, nativeParent);
    }
  }
  /**
   * Insert a rule into element.
   */
  ;

  _proto.insertRule = function insertRule(rule, index, nativeParent) {
    if (nativeParent === void 0) {
      nativeParent = this.element.sheet;
    }

    if (rule.rules) {
      var parent = rule;
      var latestNativeParent = nativeParent;

      if (rule.type === 'conditional' || rule.type === 'keyframes') {
        var _insertionIndex = getValidRuleInsertionIndex(nativeParent, index); // We need to render the container without children first.


        latestNativeParent = _insertRule(nativeParent, parent.toString({
          children: false
        }), _insertionIndex);

        if (latestNativeParent === false) {
          return false;
        }

        this.refCssRule(rule, _insertionIndex, latestNativeParent);
      }

      this.insertRules(parent.rules, latestNativeParent);
      return latestNativeParent;
    }

    var ruleStr = rule.toString();
    if (!ruleStr) return false;
    var insertionIndex = getValidRuleInsertionIndex(nativeParent, index);

    var nativeRule = _insertRule(nativeParent, ruleStr, insertionIndex);

    if (nativeRule === false) {
      return false;
    }

    this.hasInsertedRules = true;
    this.refCssRule(rule, insertionIndex, nativeRule);
    return nativeRule;
  };

  _proto.refCssRule = function refCssRule(rule, index, cssRule) {
    rule.renderable = cssRule; // We only want to reference the top level rules, deleteRule API doesn't support removing nested rules
    // like rules inside media queries or keyframes

    if (rule.options.parent instanceof StyleSheet) {
      this.cssRules.splice(index, 0, cssRule);
    }
  }
  /**
   * Delete a rule.
   */
  ;

  _proto.deleteRule = function deleteRule(cssRule) {
    var sheet = this.element.sheet;
    var index = this.indexOf(cssRule);
    if (index === -1) return false;
    sheet.deleteRule(index);
    this.cssRules.splice(index, 1);
    return true;
  }
  /**
   * Get index of a CSS Rule.
   */
  ;

  _proto.indexOf = function indexOf(cssRule) {
    return this.cssRules.indexOf(cssRule);
  }
  /**
   * Generate a new CSS rule and replace the existing one.
   */
  ;

  _proto.replaceRule = function replaceRule(cssRule, rule) {
    var index = this.indexOf(cssRule);
    if (index === -1) return false;
    this.element.sheet.deleteRule(index);
    this.cssRules.splice(index, 1);
    return this.insertRule(rule, index);
  }
  /**
   * Get all rules elements.
   */
  ;

  _proto.getRules = function getRules() {
    return this.element.sheet.cssRules;
  };

  return DomRenderer;
}();

var instanceCounter = 0;

var Jss =
/*#__PURE__*/
function () {
  function Jss(options) {
    this.id = instanceCounter++;
    this.version = "10.10.0";
    this.plugins = new PluginsRegistry();
    this.options = {
      id: {
        minify: false
      },
      createGenerateId: createGenerateId,
      Renderer: is_in_browser__WEBPACK_IMPORTED_MODULE_1__["default"] ? DomRenderer : null,
      plugins: []
    };
    this.generateId = createGenerateId({
      minify: false
    });

    for (var i = 0; i < plugins.length; i++) {
      this.plugins.use(plugins[i], {
        queue: 'internal'
      });
    }

    this.setup(options);
  }
  /**
   * Prepares various options, applies plugins.
   * Should not be used twice on the same instance, because there is no plugins
   * deduplication logic.
   */


  var _proto = Jss.prototype;

  _proto.setup = function setup(options) {
    if (options === void 0) {
      options = {};
    }

    if (options.createGenerateId) {
      this.options.createGenerateId = options.createGenerateId;
    }

    if (options.id) {
      this.options.id = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, this.options.id, options.id);
    }

    if (options.createGenerateId || options.id) {
      this.generateId = this.options.createGenerateId(this.options.id);
    }

    if (options.insertionPoint != null) this.options.insertionPoint = options.insertionPoint;

    if ('Renderer' in options) {
      this.options.Renderer = options.Renderer;
    } // eslint-disable-next-line prefer-spread


    if (options.plugins) this.use.apply(this, options.plugins);
    return this;
  }
  /**
   * Create a Style Sheet.
   */
  ;

  _proto.createStyleSheet = function createStyleSheet(styles, options) {
    if (options === void 0) {
      options = {};
    }

    var _options = options,
        index = _options.index;

    if (typeof index !== 'number') {
      index = sheets.index === 0 ? 0 : sheets.index + 1;
    }

    var sheet = new StyleSheet(styles, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
      jss: this,
      generateId: options.generateId || this.generateId,
      insertionPoint: this.options.insertionPoint,
      Renderer: this.options.Renderer,
      index: index
    }));
    this.plugins.onProcessSheet(sheet);
    return sheet;
  }
  /**
   * Detach the Style Sheet and remove it from the registry.
   */
  ;

  _proto.removeStyleSheet = function removeStyleSheet(sheet) {
    sheet.detach();
    sheets.remove(sheet);
    return this;
  }
  /**
   * Create a rule without a Style Sheet.
   * [Deprecated] will be removed in the next major version.
   */
  ;

  _proto.createRule = function createRule$1(name, style, options) {
    if (style === void 0) {
      style = {};
    }

    if (options === void 0) {
      options = {};
    }

    // Enable rule without name for inline styles.
    if (typeof name === 'object') {
      return this.createRule(undefined, name, style);
    }

    var ruleOptions = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options, {
      name: name,
      jss: this,
      Renderer: this.options.Renderer
    });

    if (!ruleOptions.generateId) ruleOptions.generateId = this.generateId;
    if (!ruleOptions.classes) ruleOptions.classes = {};
    if (!ruleOptions.keyframes) ruleOptions.keyframes = {};

    var rule = createRule(name, style, ruleOptions);

    if (rule) this.plugins.onProcessRule(rule);
    return rule;
  }
  /**
   * Register plugin. Passed function will be invoked with a rule instance.
   */
  ;

  _proto.use = function use() {
    var _this = this;

    for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {
      plugins[_key] = arguments[_key];
    }

    plugins.forEach(function (plugin) {
      _this.plugins.use(plugin);
    });
    return this;
  };

  return Jss;
}();

var createJss = function createJss(options) {
  return new Jss(options);
};

/**
 * SheetsManager is like a WeakMap which is designed to count StyleSheet
 * instances and attach/detach automatically.
 * Used in react-jss.
 */

var SheetsManager =
/*#__PURE__*/
function () {
  function SheetsManager() {
    this.length = 0;
    this.sheets = new WeakMap();
  }

  var _proto = SheetsManager.prototype;

  _proto.get = function get(key) {
    var entry = this.sheets.get(key);
    return entry && entry.sheet;
  };

  _proto.add = function add(key, sheet) {
    if (this.sheets.has(key)) return;
    this.length++;
    this.sheets.set(key, {
      sheet: sheet,
      refs: 0
    });
  };

  _proto.manage = function manage(key) {
    var entry = this.sheets.get(key);

    if (entry) {
      if (entry.refs === 0) {
        entry.sheet.attach();
      }

      entry.refs++;
      return entry.sheet;
    }

    (0,tiny_warning__WEBPACK_IMPORTED_MODULE_6__["default"])(false, "[JSS] SheetsManager: can't find sheet to manage");
    return undefined;
  };

  _proto.unmanage = function unmanage(key) {
    var entry = this.sheets.get(key);

    if (entry) {
      if (entry.refs > 0) {
        entry.refs--;
        if (entry.refs === 0) entry.sheet.detach();
      }
    } else {
      (0,tiny_warning__WEBPACK_IMPORTED_MODULE_6__["default"])(false, "SheetsManager: can't find sheet to unmanage");
    }
  };

  (0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(SheetsManager, [{
    key: "size",
    get: function get() {
      return this.length;
    }
  }]);

  return SheetsManager;
}();

/**
* Export a constant indicating if this browser has CSSTOM support.
* https://developers.google.com/web/updates/2018/03/cssom
*/
var hasCSSTOMSupport = typeof CSS === 'object' && CSS != null && 'number' in CSS;

/**
 * Extracts a styles object with only props that contain function values.
 */
function getDynamicStyles(styles) {
  var to = null;

  for (var key in styles) {
    var value = styles[key];
    var type = typeof value;

    if (type === 'function') {
      if (!to) to = {};
      to[key] = value;
    } else if (type === 'object' && value !== null && !Array.isArray(value)) {
      var extracted = getDynamicStyles(value);

      if (extracted) {
        if (!to) to = {};
        to[key] = extracted;
      }
    }
  }

  return to;
}

/**
 * A better abstraction over CSS.
 *
 * @copyright Oleg Isonen (Slobodskoi) / Isonen 2014-present
 * @website https://github.com/cssinjs/jss
 * @license MIT
 */
var index = createJss();

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (index);



/***/ }),

/***/ "./node_modules/prism-react-renderer/dist/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/prism-react-renderer/dist/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Prism: () => (/* reexport safe */ _prism_index_js__WEBPACK_IMPORTED_MODULE_0__["default"]),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   defaultProps: () => (/* binding */ defaultProps)
/* harmony export */ });
/* harmony import */ var _prism_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../prism/index.js */ "./node_modules/prism-react-renderer/prism/index.js");
/* harmony import */ var _themes_duotoneDark__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../themes/duotoneDark */ "./node_modules/prism-react-renderer/themes/duotoneDark/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);





var defaultProps = {
  // $FlowFixMe
  Prism: _prism_index_js__WEBPACK_IMPORTED_MODULE_0__["default"],
  theme: _themes_duotoneDark__WEBPACK_IMPORTED_MODULE_2__["default"]
};

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var newlineRe = /\r\n|\r|\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }

var normalizeEmptyLines = function (line) {
  if (line.length === 0) {
    line.push({
      types: ["plain"],
      content: "\n",
      empty: true
    });
  } else if (line.length === 1 && line[0].content === "") {
    line[0].content = "\n";
    line[0].empty = true;
  }
};

var appendTypes = function (types, add) {
  var typesSize = types.length;

  if (typesSize > 0 && types[typesSize - 1] === add) {
    return types;
  }

  return types.concat(add);
}; // Takes an array of Prism's tokens and groups them by line, turning plain
// strings into tokens as well. Tokens can become recursive in some cases,
// which means that their types are concatenated. Plain-string tokens however
// are always of type "plain".
// This is not recursive to avoid exceeding the call-stack limit, since it's unclear
// how nested Prism's tokens can become


var normalizeTokens = function (tokens) {
  var typeArrStack = [[]];
  var tokenArrStack = [tokens];
  var tokenArrIndexStack = [0];
  var tokenArrSizeStack = [tokens.length];
  var i = 0;
  var stackIndex = 0;
  var currentLine = [];
  var acc = [currentLine];

  while (stackIndex > -1) {
    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {
      var content = void 0;
      var types = typeArrStack[stackIndex];
      var tokenArr = tokenArrStack[stackIndex];
      var token = tokenArr[i]; // Determine content and append type to types if necessary

      if (typeof token === "string") {
        types = stackIndex > 0 ? types : ["plain"];
        content = token;
      } else {
        types = appendTypes(types, token.type);

        if (token.alias) {
          types = appendTypes(types, token.alias);
        }

        content = token.content;
      } // If token.content is an array, increase the stack depth and repeat this while-loop


      if (typeof content !== "string") {
        stackIndex++;
        typeArrStack.push(types);
        tokenArrStack.push(content);
        tokenArrIndexStack.push(0);
        tokenArrSizeStack.push(content.length);
        continue;
      } // Split by newlines


      var splitByNewlines = content.split(newlineRe);
      var newlineCount = splitByNewlines.length;
      currentLine.push({
        types: types,
        content: splitByNewlines[0]
      }); // Create a new line for each string on a new line

      for (var i$1 = 1; i$1 < newlineCount; i$1++) {
        normalizeEmptyLines(currentLine);
        acc.push(currentLine = []);
        currentLine.push({
          types: types,
          content: splitByNewlines[i$1]
        });
      }
    } // Decreate the stack depth


    stackIndex--;
    typeArrStack.pop();
    tokenArrStack.pop();
    tokenArrIndexStack.pop();
    tokenArrSizeStack.pop();
  }

  normalizeEmptyLines(currentLine);
  return acc;
};

var themeToDict = function (theme, language) {
  var plain = theme.plain; // $FlowFixMe

  var base = Object.create(null);
  var themeDict = theme.styles.reduce(function (acc, themeEntry) {
    var languages = themeEntry.languages;
    var style = themeEntry.style;

    if (languages && !languages.includes(language)) {
      return acc;
    }

    themeEntry.types.forEach(function (type) {
      // $FlowFixMe
      var accStyle = _extends({}, acc[type], style);

      acc[type] = accStyle;
    });
    return acc;
  }, base); // $FlowFixMe

  themeDict.root = plain; // $FlowFixMe

  themeDict.plain = _extends({}, plain, {
    backgroundColor: null
  });
  return themeDict;
};

function objectWithoutProperties(obj, exclude) {
  var target = {};

  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];

  return target;
}

var Highlight = /*@__PURE__*/function (Component) {
  function Highlight() {
    var this$1 = this;
    var args = [],
        len = arguments.length;

    while (len--) args[len] = arguments[len];

    Component.apply(this, args);

    _defineProperty(this, "getThemeDict", function (props) {
      if (this$1.themeDict !== undefined && props.theme === this$1.prevTheme && props.language === this$1.prevLanguage) {
        return this$1.themeDict;
      }

      this$1.prevTheme = props.theme;
      this$1.prevLanguage = props.language;
      var themeDict = props.theme ? themeToDict(props.theme, props.language) : undefined;
      return this$1.themeDict = themeDict;
    });

    _defineProperty(this, "getLineProps", function (ref) {
      var key = ref.key;
      var className = ref.className;
      var style = ref.style;
      var rest$1 = objectWithoutProperties(ref, ["key", "className", "style", "line"]);
      var rest = rest$1;

      var output = _extends({}, rest, {
        className: "token-line",
        style: undefined,
        key: undefined
      });

      var themeDict = this$1.getThemeDict(this$1.props);

      if (themeDict !== undefined) {
        output.style = themeDict.plain;
      }

      if (style !== undefined) {
        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;
      }

      if (key !== undefined) {
        output.key = key;
      }

      if (className) {
        output.className += " " + className;
      }

      return output;
    });

    _defineProperty(this, "getStyleForToken", function (ref) {
      var types = ref.types;
      var empty = ref.empty;
      var typesSize = types.length;
      var themeDict = this$1.getThemeDict(this$1.props);

      if (themeDict === undefined) {
        return undefined;
      } else if (typesSize === 1 && types[0] === "plain") {
        return empty ? {
          display: "inline-block"
        } : undefined;
      } else if (typesSize === 1 && !empty) {
        return themeDict[types[0]];
      }

      var baseStyle = empty ? {
        display: "inline-block"
      } : {}; // $FlowFixMe

      var typeStyles = types.map(function (type) {
        return themeDict[type];
      });
      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));
    });

    _defineProperty(this, "getTokenProps", function (ref) {
      var key = ref.key;
      var className = ref.className;
      var style = ref.style;
      var token = ref.token;
      var rest$1 = objectWithoutProperties(ref, ["key", "className", "style", "token"]);
      var rest = rest$1;

      var output = _extends({}, rest, {
        className: "token " + token.types.join(" "),
        children: token.content,
        style: this$1.getStyleForToken(token),
        key: undefined
      });

      if (style !== undefined) {
        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;
      }

      if (key !== undefined) {
        output.key = key;
      }

      if (className) {
        output.className += " " + className;
      }

      return output;
    });

    _defineProperty(this, "tokenize", function (Prism, code, grammar, language) {
      var env = {
        code: code,
        grammar: grammar,
        language: language,
        tokens: []
      };
      Prism.hooks.run("before-tokenize", env);
      var tokens = env.tokens = Prism.tokenize(env.code, env.grammar, env.language);
      Prism.hooks.run("after-tokenize", env);
      return tokens;
    });
  }

  if (Component) Highlight.__proto__ = Component;
  Highlight.prototype = Object.create(Component && Component.prototype);
  Highlight.prototype.constructor = Highlight;

  Highlight.prototype.render = function render() {
    var ref = this.props;
    var Prism = ref.Prism;
    var language = ref.language;
    var code = ref.code;
    var children = ref.children;
    var themeDict = this.getThemeDict(this.props);
    var grammar = Prism.languages[language];
    var mixedTokens = grammar !== undefined ? this.tokenize(Prism, code, grammar, language) : [code];
    var tokens = normalizeTokens(mixedTokens);
    return children({
      tokens: tokens,
      className: "prism-code language-" + language,
      style: themeDict !== undefined ? themeDict.root : {},
      getLineProps: this.getLineProps,
      getTokenProps: this.getTokenProps
    });
  };

  return Highlight;
}(react__WEBPACK_IMPORTED_MODULE_1__.Component);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Highlight);



/***/ }),

/***/ "./node_modules/prism-react-renderer/prism/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/prism-react-renderer/prism/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Prism: Lightweight, robust, elegant syntax highlighting
 *
 * @license MIT <https://opensource.org/licenses/MIT>
 * @author Lea Verou <https://lea.verou.me>
 * @namespace
 * @public
 */
/**
 * prism-react-renderer:
 * This file has been modified to remove:
 * - globals and window dependency
 * - worker support
 * - highlightAll and other element dependent methods
 * - _.hooks helpers
 * - UMD/node-specific hacks
 * It has also been run through prettier
 */

 var Prism = (function () {

	// Private helper vars
	var lang = /(?:^|\s)lang(?:uage)?-([\w-]+)(?=\s|$)/i;
	var uniqueId = 0;

	// The grammar object for plaintext
	var plainTextGrammar = {};


	var _ = {
		/**
		 * A namespace for utility methods.
		 *
		 * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may
		 * change or disappear at any time.
		 *
		 * @namespace
		 * @memberof Prism
		 */
		util: {
			encode: function encode(tokens) {
				if (tokens instanceof Token) {
					return new Token(tokens.type, encode(tokens.content), tokens.alias);
				} else if (Array.isArray(tokens)) {
					return tokens.map(encode);
				} else {
					return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\u00a0/g, ' ');
				}
			},

			/**
			 * Returns the name of the type of the given value.
			 *
			 * @param {any} o
			 * @returns {string}
			 * @example
			 * type(null)      === 'Null'
			 * type(undefined) === 'Undefined'
			 * type(123)       === 'Number'
			 * type('foo')     === 'String'
			 * type(true)      === 'Boolean'
			 * type([1, 2])    === 'Array'
			 * type({})        === 'Object'
			 * type(String)    === 'Function'
			 * type(/abc+/)    === 'RegExp'
			 */
			type: function (o) {
				return Object.prototype.toString.call(o).slice(8, -1);
			},

			/**
			 * Returns a unique number for the given object. Later calls will still return the same number.
			 *
			 * @param {Object} obj
			 * @returns {number}
			 */
			objId: function (obj) {
				if (!obj['__id']) {
					Object.defineProperty(obj, '__id', { value: ++uniqueId });
				}
				return obj['__id'];
			},

			/**
			 * Creates a deep clone of the given object.
			 *
			 * The main intended use of this function is to clone language definitions.
			 *
			 * @param {T} o
			 * @param {Record<number, any>} [visited]
			 * @returns {T}
			 * @template T
			 */
			clone: function deepClone(o, visited) {
				visited = visited || {};

				var clone; var id;
				switch (_.util.type(o)) {
					case 'Object':
						id = _.util.objId(o);
						if (visited[id]) {
							return visited[id];
						}
						clone = /** @type {Record<string, any>} */ ({});
						visited[id] = clone;

						for (var key in o) {
							if (o.hasOwnProperty(key)) {
								clone[key] = deepClone(o[key], visited);
							}
						}

						return /** @type {any} */ (clone);

					case 'Array':
						id = _.util.objId(o);
						if (visited[id]) {
							return visited[id];
						}
						clone = [];
						visited[id] = clone;

						(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {
							clone[i] = deepClone(v, visited);
						});

						return /** @type {any} */ (clone);

					default:
						return o;
				}
			},

			/**
			 * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.
			 *
			 * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.
			 *
			 * @param {Element} element
			 * @returns {string}
			 */
			getLanguage: function (element) {
				while (element) {
					var m = lang.exec(element.className);
					if (m) {
						return m[1].toLowerCase();
					}
					element = element.parentElement;
				}
				return 'none';
			},

			/**
			 * Sets the Prism `language-xxxx` class of the given element.
			 *
			 * @param {Element} element
			 * @param {string} language
			 * @returns {void}
			 */
			setLanguage: function (element, language) {
				// remove all `language-xxxx` classes
				// (this might leave behind a leading space)
				element.className = element.className.replace(RegExp(lang, 'gi'), '');

				// add the new `language-xxxx` class
				// (using `classList` will automatically clean up spaces for us)
				element.classList.add('language-' + language);
			},

			/**
			 * Returns whether a given class is active for `element`.
			 *
			 * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated
			 * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the
			 * given class is just the given class with a `no-` prefix.
			 *
			 * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is
			 * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its
			 * ancestors have the given class or the negated version of it, then the default activation will be returned.
			 *
			 * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated
			 * version of it, the class is considered active.
			 *
			 * @param {Element} element
			 * @param {string} className
			 * @param {boolean} [defaultActivation=false]
			 * @returns {boolean}
			 */
			isActive: function (element, className, defaultActivation) {
				var no = 'no-' + className;

				while (element) {
					var classList = element.classList;
					if (classList.contains(className)) {
						return true;
					}
					if (classList.contains(no)) {
						return false;
					}
					element = element.parentElement;
				}
				return !!defaultActivation;
			}
		},

		/**
		 * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.
		 *
		 * @namespace
		 * @memberof Prism
		 * @public
		 */
		languages: {
			/**
			 * The grammar for plain, unformatted text.
			 */
			plain: plainTextGrammar,
			plaintext: plainTextGrammar,
			text: plainTextGrammar,
			txt: plainTextGrammar,

			/**
			 * Creates a deep copy of the language with the given id and appends the given tokens.
			 *
			 * If a token in `redef` also appears in the copied language, then the existing token in the copied language
			 * will be overwritten at its original position.
			 *
			 * ## Best practices
			 *
			 * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)
			 * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to
			 * understand the language definition because, normally, the order of tokens matters in Prism grammars.
			 *
			 * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.
			 * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.
			 *
			 * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.
			 * @param {Grammar} redef The new tokens to append.
			 * @returns {Grammar} The new language created.
			 * @public
			 * @example
			 * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {
			 *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token
			 *     // at its original position
			 *     'comment': { ... },
			 *     // CSS doesn't have a 'color' token, so this token will be appended
			 *     'color': /\b(?:red|green|blue)\b/
			 * });
			 */
			extend: function (id, redef) {
				var lang = _.util.clone(_.languages[id]);

				for (var key in redef) {
					lang[key] = redef[key];
				}

				return lang;
			},

			/**
			 * Inserts tokens _before_ another token in a language definition or any other grammar.
			 *
			 * ## Usage
			 *
			 * This helper method makes it easy to modify existing languages. For example, the CSS language definition
			 * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded
			 * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the
			 * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do
			 * this:
			 *
			 * ```js
			 * Prism.languages.markup.style = {
			 *     // token
			 * };
			 * ```
			 *
			 * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens
			 * before existing tokens. For the CSS example above, you would use it like this:
			 *
			 * ```js
			 * Prism.languages.insertBefore('markup', 'cdata', {
			 *     'style': {
			 *         // token
			 *     }
			 * });
			 * ```
			 *
			 * ## Special cases
			 *
			 * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar
			 * will be ignored.
			 *
			 * This behavior can be used to insert tokens after `before`:
			 *
			 * ```js
			 * Prism.languages.insertBefore('markup', 'comment', {
			 *     'comment': Prism.languages.markup.comment,
			 *     // tokens after 'comment'
			 * });
			 * ```
			 *
			 * ## Limitations
			 *
			 * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object
			 * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave
			 * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily
			 * deleting properties which is necessary to insert at arbitrary positions.
			 *
			 * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.
			 * Instead, it will create a new object and replace all references to the target object with the new one. This
			 * can be done without temporarily deleting properties, so the iteration order is well-defined.
			 *
			 * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if
			 * you hold the target object in a variable, then the value of the variable will not change.
			 *
			 * ```js
			 * var oldMarkup = Prism.languages.markup;
			 * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });
			 *
			 * assert(oldMarkup !== Prism.languages.markup);
			 * assert(newMarkup === Prism.languages.markup);
			 * ```
			 *
			 * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the
			 * object to be modified.
			 * @param {string} before The key to insert before.
			 * @param {Grammar} insert An object containing the key-value pairs to be inserted.
			 * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the
			 * object to be modified.
			 *
			 * Defaults to `Prism.languages`.
			 * @returns {Grammar} The new grammar object.
			 * @public
			 */
			insertBefore: function (inside, before, insert, root) {
				root = root || /** @type {any} */ (_.languages);
				var grammar = root[inside];
				/** @type {Grammar} */
				var ret = {};

				for (var token in grammar) {
					if (grammar.hasOwnProperty(token)) {

						if (token == before) {
							for (var newToken in insert) {
								if (insert.hasOwnProperty(newToken)) {
									ret[newToken] = insert[newToken];
								}
							}
						}

						// Do not insert token which also occur in insert. See #1525
						if (!insert.hasOwnProperty(token)) {
							ret[token] = grammar[token];
						}
					}
				}

				var old = root[inside];
				root[inside] = ret;

				// Update references in other language definitions
				_.languages.DFS(_.languages, function (key, value) {
					if (value === old && key != inside) {
						this[key] = ret;
					}
				});

				return ret;
			},

			// Traverse a language definition with Depth First Search
			DFS: function DFS(o, callback, type, visited) {
				visited = visited || {};

				var objId = _.util.objId;

				for (var i in o) {
					if (o.hasOwnProperty(i)) {
						callback.call(o, i, o[i], type || i);

						var property = o[i];
						var propertyType = _.util.type(property);

						if (propertyType === 'Object' && !visited[objId(property)]) {
							visited[objId(property)] = true;
							DFS(property, callback, null, visited);
						} else if (propertyType === 'Array' && !visited[objId(property)]) {
							visited[objId(property)] = true;
							DFS(property, callback, i, visited);
						}
					}
				}
			}
		},

		plugins: {},


		/**
		 * Low-level function, only use if you know what you’re doing. It accepts a string of text as input
		 * and the language definitions to use, and returns a string with the HTML produced.
		 *
		 * The following hooks will be run:
		 * 1. `before-tokenize`
		 * 2. `after-tokenize`
		 * 3. `wrap`: On each {@link Token}.
		 *
		 * @param {string} text A string with the code to be highlighted.
		 * @param {Grammar} grammar An object containing the tokens to use.
		 *
		 * Usually a language definition like `Prism.languages.markup`.
		 * @param {string} language The name of the language definition passed to `grammar`.
		 * @returns {string} The highlighted HTML.
		 * @memberof Prism
		 * @public
		 * @example
		 * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');
		 */
		highlight: function (text, grammar, language) {
			var env = {
				code: text,
				grammar: grammar,
				language: language
			};
			_.hooks.run('before-tokenize', env);
			env.tokens = _.tokenize(env.code, env.grammar);
			_.hooks.run('after-tokenize', env);
			return Token.stringify(_.util.encode(env.tokens), env.language);
		},

		/**
		 * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input
		 * and the language definitions to use, and returns an array with the tokenized code.
		 *
		 * When the language definition includes nested tokens, the function is called recursively on each of these tokens.
		 *
		 * This method could be useful in other contexts as well, as a very crude parser.
		 *
		 * @param {string} text A string with the code to be highlighted.
		 * @param {Grammar} grammar An object containing the tokens to use.
		 *
		 * Usually a language definition like `Prism.languages.markup`.
		 * @returns {TokenStream} An array of strings and tokens, a token stream.
		 * @memberof Prism
		 * @public
		 * @example
		 * let code = `var foo = 0;`;
		 * let tokens = Prism.tokenize(code, Prism.languages.javascript);
		 * tokens.forEach(token => {
		 *     if (token instanceof Prism.Token && token.type === 'number') {
		 *         console.log(`Found numeric literal: ${token.content}`);
		 *     }
		 * });
		 */
		tokenize: function (text, grammar) {
			var rest = grammar.rest;
			if (rest) {
				for (var token in rest) {
					grammar[token] = rest[token];
				}

				delete grammar.rest;
			}

			var tokenList = new LinkedList();
			addAfter(tokenList, tokenList.head, text);

			matchGrammar(text, tokenList, grammar, tokenList.head, 0);

			return toArray(tokenList);
		},

		/**
		 * @namespace
		 * @memberof Prism
		 * @public
		 */
		hooks: {
			all: {},

			/**
			 * Adds the given callback to the list of callbacks for the given hook.
			 *
			 * The callback will be invoked when the hook it is registered for is run.
			 * Hooks are usually directly run by a highlight function but you can also run hooks yourself.
			 *
			 * One callback function can be registered to multiple hooks and the same hook multiple times.
			 *
			 * @param {string} name The name of the hook.
			 * @param {HookCallback} callback The callback function which is given environment variables.
			 * @public
			 */
			add: function (name, callback) {
				var hooks = _.hooks.all;

				hooks[name] = hooks[name] || [];

				hooks[name].push(callback);
			},

			/**
			 * Runs a hook invoking all registered callbacks with the given environment variables.
			 *
			 * Callbacks will be invoked synchronously and in the order in which they were registered.
			 *
			 * @param {string} name The name of the hook.
			 * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.
			 * @public
			 */
			run: function (name, env) {
				var callbacks = _.hooks.all[name];

				if (!callbacks || !callbacks.length) {
					return;
				}

				for (var i = 0, callback; (callback = callbacks[i++]);) {
					callback(env);
				}
			}
		},

		Token: Token
	};


	// Typescript note:
	// The following can be used to import the Token type in JSDoc:
	//
	//   @typedef {InstanceType<import("./prism-core")["Token"]>} Token

	/**
	 * Creates a new token.
	 *
	 * @param {string} type See {@link Token#type type}
	 * @param {string | TokenStream} content See {@link Token#content content}
	 * @param {string|string[]} [alias] The alias(es) of the token.
	 * @param {string} [matchedStr=""] A copy of the full string this token was created from.
	 * @class
	 * @global
	 * @public
	 */
	function Token(type, content, alias, matchedStr) {
		/**
		 * The type of the token.
		 *
		 * This is usually the key of a pattern in a {@link Grammar}.
		 *
		 * @type {string}
		 * @see GrammarToken
		 * @public
		 */
		this.type = type;
		/**
		 * The strings or tokens contained by this token.
		 *
		 * This will be a token stream if the pattern matched also defined an `inside` grammar.
		 *
		 * @type {string | TokenStream}
		 * @public
		 */
		this.content = content;
		/**
		 * The alias(es) of the token.
		 *
		 * @type {string|string[]}
		 * @see GrammarToken
		 * @public
		 */
		this.alias = alias;
		// Copy of the full string this token was created from
		this.length = (matchedStr || '').length | 0;
	}

	/**
	 * A token stream is an array of strings and {@link Token Token} objects.
	 *
	 * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process
	 * them.
	 *
	 * 1. No adjacent strings.
	 * 2. No empty strings.
	 *
	 *    The only exception here is the token stream that only contains the empty string and nothing else.
	 *
	 * @typedef {Array<string | Token>} TokenStream
	 * @global
	 * @public
	 */

	/**
	 * Converts the given token or token stream to an HTML representation.
	 *
	 * The following hooks will be run:
	 * 1. `wrap`: On each {@link Token}.
	 *
	 * @param {string | Token | TokenStream} o The token or token stream to be converted.
	 * @param {string} language The name of current language.
	 * @returns {string} The HTML representation of the token or token stream.
	 * @memberof Token
	 * @static
	 */
	Token.stringify = function stringify(o, language) {
		if (typeof o == 'string') {
			return o;
		}
		if (Array.isArray(o)) {
			var s = '';
			o.forEach(function (e) {
				s += stringify(e, language);
			});
			return s;
		}

		var env = {
			type: o.type,
			content: stringify(o.content, language),
			tag: 'span',
			classes: ['token', o.type],
			attributes: {},
			language: language
		};

		var aliases = o.alias;
		if (aliases) {
			if (Array.isArray(aliases)) {
				Array.prototype.push.apply(env.classes, aliases);
			} else {
				env.classes.push(aliases);
			}
		}

		_.hooks.run('wrap', env);

		var attributes = '';
		for (var name in env.attributes) {
			attributes += ' ' + name + '="' + (env.attributes[name] || '').replace(/"/g, '&quot;') + '"';
		}

		return '<' + env.tag + ' class="' + env.classes.join(' ') + '"' + attributes + '>' + env.content + '</' + env.tag + '>';
	};

	/**
	 * @param {RegExp} pattern
	 * @param {number} pos
	 * @param {string} text
	 * @param {boolean} lookbehind
	 * @returns {RegExpExecArray | null}
	 */
	function matchPattern(pattern, pos, text, lookbehind) {
		pattern.lastIndex = pos;
		var match = pattern.exec(text);
		if (match && lookbehind && match[1]) {
			// change the match to remove the text matched by the Prism lookbehind group
			var lookbehindLength = match[1].length;
			match.index += lookbehindLength;
			match[0] = match[0].slice(lookbehindLength);
		}
		return match;
	}

	/**
	 * @param {string} text
	 * @param {LinkedList<string | Token>} tokenList
	 * @param {any} grammar
	 * @param {LinkedListNode<string | Token>} startNode
	 * @param {number} startPos
	 * @param {RematchOptions} [rematch]
	 * @returns {void}
	 * @private
	 *
	 * @typedef RematchOptions
	 * @property {string} cause
	 * @property {number} reach
	 */
	function matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {
		for (var token in grammar) {
			if (!grammar.hasOwnProperty(token) || !grammar[token]) {
				continue;
			}

			var patterns = grammar[token];
			patterns = Array.isArray(patterns) ? patterns : [patterns];

			for (var j = 0; j < patterns.length; ++j) {
				if (rematch && rematch.cause == token + ',' + j) {
					return;
				}

				var patternObj = patterns[j];
				var inside = patternObj.inside;
				var lookbehind = !!patternObj.lookbehind;
				var greedy = !!patternObj.greedy;
				var alias = patternObj.alias;

				if (greedy && !patternObj.pattern.global) {
					// Without the global flag, lastIndex won't work
					var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];
					patternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');
				}

				/** @type {RegExp} */
				var pattern = patternObj.pattern || patternObj;

				for ( // iterate the token list and keep track of the current token/string position
					var currentNode = startNode.next, pos = startPos;
					currentNode !== tokenList.tail;
					pos += currentNode.value.length, currentNode = currentNode.next
				) {

					if (rematch && pos >= rematch.reach) {
						break;
					}

					var str = currentNode.value;

					if (tokenList.length > text.length) {
						// Something went terribly wrong, ABORT, ABORT!
						return;
					}

					if (str instanceof Token) {
						continue;
					}

					var removeCount = 1; // this is the to parameter of removeBetween
					var match;

					if (greedy) {
						match = matchPattern(pattern, pos, text, lookbehind);
						if (!match || match.index >= text.length) {
							break;
						}

						var from = match.index;
						var to = match.index + match[0].length;
						var p = pos;

						// find the node that contains the match
						p += currentNode.value.length;
						while (from >= p) {
							currentNode = currentNode.next;
							p += currentNode.value.length;
						}
						// adjust pos (and p)
						p -= currentNode.value.length;
						pos = p;

						// the current node is a Token, then the match starts inside another Token, which is invalid
						if (currentNode.value instanceof Token) {
							continue;
						}

						// find the last node which is affected by this match
						for (
							var k = currentNode;
							k !== tokenList.tail && (p < to || typeof k.value === 'string');
							k = k.next
						) {
							removeCount++;
							p += k.value.length;
						}
						removeCount--;

						// replace with the new match
						str = text.slice(pos, p);
						match.index -= pos;
					} else {
						match = matchPattern(pattern, 0, str, lookbehind);
						if (!match) {
							continue;
						}
					}

					// eslint-disable-next-line no-redeclare
					var from = match.index;
					var matchStr = match[0];
					var before = str.slice(0, from);
					var after = str.slice(from + matchStr.length);

					var reach = pos + str.length;
					if (rematch && reach > rematch.reach) {
						rematch.reach = reach;
					}

					var removeFrom = currentNode.prev;

					if (before) {
						removeFrom = addAfter(tokenList, removeFrom, before);
						pos += before.length;
					}

					removeRange(tokenList, removeFrom, removeCount);

					var wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);
					currentNode = addAfter(tokenList, removeFrom, wrapped);

					if (after) {
						addAfter(tokenList, currentNode, after);
					}

					if (removeCount > 1) {
						// at least one Token object was removed, so we have to do some rematching
						// this can only happen if the current pattern is greedy

						/** @type {RematchOptions} */
						var nestedRematch = {
							cause: token + ',' + j,
							reach: reach
						};
						matchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);

						// the reach might have been extended because of the rematching
						if (rematch && nestedRematch.reach > rematch.reach) {
							rematch.reach = nestedRematch.reach;
						}
					}
				}
			}
		}
	}

	/**
	 * @typedef LinkedListNode
	 * @property {T} value
	 * @property {LinkedListNode<T> | null} prev The previous node.
	 * @property {LinkedListNode<T> | null} next The next node.
	 * @template T
	 * @private
	 */

	/**
	 * @template T
	 * @private
	 */
	function LinkedList() {
		/** @type {LinkedListNode<T>} */
		var head = { value: null, prev: null, next: null };
		/** @type {LinkedListNode<T>} */
		var tail = { value: null, prev: head, next: null };
		head.next = tail;

		/** @type {LinkedListNode<T>} */
		this.head = head;
		/** @type {LinkedListNode<T>} */
		this.tail = tail;
		this.length = 0;
	}

	/**
	 * Adds a new node with the given value to the list.
	 *
	 * @param {LinkedList<T>} list
	 * @param {LinkedListNode<T>} node
	 * @param {T} value
	 * @returns {LinkedListNode<T>} The added node.
	 * @template T
	 */
	function addAfter(list, node, value) {
		// assumes that node != list.tail && values.length >= 0
		var next = node.next;

		var newNode = { value: value, prev: node, next: next };
		node.next = newNode;
		next.prev = newNode;
		list.length++;

		return newNode;
	}
	/**
	 * Removes `count` nodes after the given node. The given node will not be removed.
	 *
	 * @param {LinkedList<T>} list
	 * @param {LinkedListNode<T>} node
	 * @param {number} count
	 * @template T
	 */
	function removeRange(list, node, count) {
		var next = node.next;
		for (var i = 0; i < count && next !== list.tail; i++) {
			next = next.next;
		}
		node.next = next;
		next.prev = node;
		list.length -= i;
	}
	/**
	 * @param {LinkedList<T>} list
	 * @returns {T[]}
	 * @template T
	 */
	function toArray(list) {
		var array = [];
		var node = list.head.next;
		while (node !== list.tail) {
			array.push(node.value);
			node = node.next;
		}
		return array;
	}

	return _;

}());

var prism = Prism;
Prism.default = Prism;

/* This content is auto-generated to include some prismjs language components: */

/* "prismjs/components/prism-markup" */

prism.languages.markup = {
  'comment': {
    pattern: /<!--(?:(?!<!--)[\s\S])*?-->/,
    greedy: true
  },
  'prolog': {
    pattern: /<\?[\s\S]+?\?>/,
    greedy: true
  },
  'doctype': {
    // https://www.w3.org/TR/xml/#NT-doctypedecl
    pattern: /<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,
    greedy: true,
    inside: {
      'internal-subset': {
        pattern: /(^[^\[]*\[)[\s\S]+(?=\]>$)/,
        lookbehind: true,
        greedy: true,
        inside: null // see below

      },
      'string': {
        pattern: /"[^"]*"|'[^']*'/,
        greedy: true
      },
      'punctuation': /^<!|>$|[[\]]/,
      'doctype-tag': /^DOCTYPE/i,
      'name': /[^\s<>'"]+/
    }
  },
  'cdata': {
    pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i,
    greedy: true
  },
  'tag': {
    pattern: /<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,
    greedy: true,
    inside: {
      'tag': {
        pattern: /^<\/?[^\s>\/]+/,
        inside: {
          'punctuation': /^<\/?/,
          'namespace': /^[^\s>\/:]+:/
        }
      },
      'special-attr': [],
      'attr-value': {
        pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,
        inside: {
          'punctuation': [{
            pattern: /^=/,
            alias: 'attr-equals'
          }, /"|'/]
        }
      },
      'punctuation': /\/?>/,
      'attr-name': {
        pattern: /[^\s>\/]+/,
        inside: {
          'namespace': /^[^\s>\/:]+:/
        }
      }
    }
  },
  'entity': [{
    pattern: /&[\da-z]{1,8};/i,
    alias: 'named-entity'
  }, /&#x?[\da-f]{1,8};/i]
};
prism.languages.markup['tag'].inside['attr-value'].inside['entity'] = prism.languages.markup['entity'];
prism.languages.markup['doctype'].inside['internal-subset'].inside = prism.languages.markup; // Plugin to make entity title show the real entity, idea by Roman Komarov

prism.hooks.add('wrap', function (env) {
  if (env.type === 'entity') {
    env.attributes['title'] = env.content.replace(/&amp;/, '&');
  }
});
Object.defineProperty(prism.languages.markup.tag, 'addInlined', {
  /**
   * Adds an inlined language to markup.
   *
   * An example of an inlined language is CSS with `<style>` tags.
   *
   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as
   * case insensitive.
   * @param {string} lang The language key.
   * @example
   * addInlined('style', 'css');
   */
  value: function addInlined(tagName, lang) {
    var includedCdataInside = {};
    includedCdataInside['language-' + lang] = {
      pattern: /(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,
      lookbehind: true,
      inside: prism.languages[lang]
    };
    includedCdataInside['cdata'] = /^<!\[CDATA\[|\]\]>$/i;
    var inside = {
      'included-cdata': {
        pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i,
        inside: includedCdataInside
      }
    };
    inside['language-' + lang] = {
      pattern: /[\s\S]+/,
      inside: prism.languages[lang]
    };
    var def = {};
    def[tagName] = {
      pattern: RegExp(/(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g, function () {
        return tagName;
      }), 'i'),
      lookbehind: true,
      greedy: true,
      inside: inside
    };
    prism.languages.insertBefore('markup', 'cdata', def);
  }
});
Object.defineProperty(prism.languages.markup.tag, 'addAttribute', {
  /**
   * Adds an pattern to highlight languages embedded in HTML attributes.
   *
   * An example of an inlined language is CSS with `style` attributes.
   *
   * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as
   * case insensitive.
   * @param {string} lang The language key.
   * @example
   * addAttribute('style', 'css');
   */
  value: function (attrName, lang) {
    prism.languages.markup.tag.inside['special-attr'].push({
      pattern: RegExp(/(^|["'\s])/.source + '(?:' + attrName + ')' + /\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/.source, 'i'),
      lookbehind: true,
      inside: {
        'attr-name': /^[^\s=]+/,
        'attr-value': {
          pattern: /=[\s\S]+/,
          inside: {
            'value': {
              pattern: /(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,
              lookbehind: true,
              alias: [lang, 'language-' + lang],
              inside: prism.languages[lang]
            },
            'punctuation': [{
              pattern: /^=/,
              alias: 'attr-equals'
            }, /"|'/]
          }
        }
      }
    });
  }
});
prism.languages.html = prism.languages.markup;
prism.languages.mathml = prism.languages.markup;
prism.languages.svg = prism.languages.markup;
prism.languages.xml = prism.languages.extend('markup', {});
prism.languages.ssml = prism.languages.xml;
prism.languages.atom = prism.languages.xml;
prism.languages.rss = prism.languages.xml;
/* "prismjs/components/prism-bash" */

(function (Prism) {
  // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\n' '|'
  // + LC_ALL, RANDOM, REPLY, SECONDS.
  // + make sure PS1..4 are here as they are not always set,
  // - some useless things.
  var envVars = '\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\b';
  var commandAfterHeredoc = {
    pattern: /(^(["']?)\w+\2)[ \t]+\S.*/,
    lookbehind: true,
    alias: 'punctuation',
    // this looks reasonably well in all themes
    inside: null // see below

  };
  var insideString = {
    'bash': commandAfterHeredoc,
    'environment': {
      pattern: RegExp('\\$' + envVars),
      alias: 'constant'
    },
    'variable': [// [0]: Arithmetic Environment
    {
      pattern: /\$?\(\([\s\S]+?\)\)/,
      greedy: true,
      inside: {
        // If there is a $ sign at the beginning highlight $(( and )) as variable
        'variable': [{
          pattern: /(^\$\(\([\s\S]+)\)\)/,
          lookbehind: true
        }, /^\$\(\(/],
        'number': /\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,
        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic
        'operator': /--|\+\+|\*\*=?|<<=?|>>=?|&&|\|\||[=!+\-*/%<>^&|]=?|[?~:]/,
        // If there is no $ sign at the beginning highlight (( and )) as punctuation
        'punctuation': /\(\(?|\)\)?|,|;/
      }
    }, // [1]: Command Substitution
    {
      pattern: /\$\((?:\([^)]+\)|[^()])+\)|`[^`]+`/,
      greedy: true,
      inside: {
        'variable': /^\$\(|^`|\)$|`$/
      }
    }, // [2]: Brace expansion
    {
      pattern: /\$\{[^}]+\}/,
      greedy: true,
      inside: {
        'operator': /:[-=?+]?|[!\/]|##?|%%?|\^\^?|,,?/,
        'punctuation': /[\[\]]/,
        'environment': {
          pattern: RegExp('(\\{)' + envVars),
          lookbehind: true,
          alias: 'constant'
        }
      }
    }, /\$(?:\w+|[#?*!@$])/],
    // Escape sequences from echo and printf's manuals, and escaped quotes.
    'entity': /\\(?:[abceEfnrtv\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/
  };
  Prism.languages.bash = {
    'shebang': {
      pattern: /^#!\s*\/.*/,
      alias: 'important'
    },
    'comment': {
      pattern: /(^|[^"{\\$])#.*/,
      lookbehind: true
    },
    'function-name': [// a) function foo {
    // b) foo() {
    // c) function foo() {
    // but not “foo {”
    {
      // a) and c)
      pattern: /(\bfunction\s+)[\w-]+(?=(?:\s*\(?:\s*\))?\s*\{)/,
      lookbehind: true,
      alias: 'function'
    }, {
      // b)
      pattern: /\b[\w-]+(?=\s*\(\s*\)\s*\{)/,
      alias: 'function'
    }],
    // Highlight variable names as variables in for and select beginnings.
    'for-or-select': {
      pattern: /(\b(?:for|select)\s+)\w+(?=\s+in\s)/,
      alias: 'variable',
      lookbehind: true
    },
    // Highlight variable names as variables in the left-hand part
    // of assignments (“=” and “+=”).
    'assign-left': {
      pattern: /(^|[\s;|&]|[<>]\()\w+(?=\+?=)/,
      inside: {
        'environment': {
          pattern: RegExp('(^|[\\s;|&]|[<>]\\()' + envVars),
          lookbehind: true,
          alias: 'constant'
        }
      },
      alias: 'variable',
      lookbehind: true
    },
    'string': [// Support for Here-documents https://en.wikipedia.org/wiki/Here_document
    {
      pattern: /((?:^|[^<])<<-?\s*)(\w+)\s[\s\S]*?(?:\r?\n|\r)\2/,
      lookbehind: true,
      greedy: true,
      inside: insideString
    }, // Here-document with quotes around the tag
    // → No expansion (so no “inside”).
    {
      pattern: /((?:^|[^<])<<-?\s*)(["'])(\w+)\2\s[\s\S]*?(?:\r?\n|\r)\3/,
      lookbehind: true,
      greedy: true,
      inside: {
        'bash': commandAfterHeredoc
      }
    }, // “Normal” string
    {
      // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html
      pattern: /(^|[^\\](?:\\\\)*)"(?:\\[\s\S]|\$\([^)]+\)|\$(?!\()|`[^`]+`|[^"\\`$])*"/,
      lookbehind: true,
      greedy: true,
      inside: insideString
    }, {
      // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html
      pattern: /(^|[^$\\])'[^']*'/,
      lookbehind: true,
      greedy: true
    }, {
      // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html
      pattern: /\$'(?:[^'\\]|\\[\s\S])*'/,
      greedy: true,
      inside: {
        'entity': insideString.entity
      }
    }],
    'environment': {
      pattern: RegExp('\\$?' + envVars),
      alias: 'constant'
    },
    'variable': insideString.variable,
    'function': {
      pattern: /(^|[\s;|&]|[<>]\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\s;|&])/,
      lookbehind: true
    },
    'keyword': {
      pattern: /(^|[\s;|&]|[<>]\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\s;|&])/,
      lookbehind: true
    },
    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html
    'builtin': {
      pattern: /(^|[\s;|&]|[<>]\()(?:\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\s;|&])/,
      lookbehind: true,
      // Alias added to make those easier to distinguish from strings.
      alias: 'class-name'
    },
    'boolean': {
      pattern: /(^|[\s;|&]|[<>]\()(?:false|true)(?=$|[)\s;|&])/,
      lookbehind: true
    },
    'file-descriptor': {
      pattern: /\B&\d\b/,
      alias: 'important'
    },
    'operator': {
      // Lots of redirections here, but not just that.
      pattern: /\d?<>|>\||\+=|=[=~]?|!=?|<<[<-]?|[&\d]?>>|\d[<>]&?|[<>][&=]?|&[>&]?|\|[&|]?/,
      inside: {
        'file-descriptor': {
          pattern: /^\d/,
          alias: 'important'
        }
      }
    },
    'punctuation': /\$?\(\(?|\)\)?|\.\.|[{}[\];\\]/,
    'number': {
      pattern: /(^|\s)(?:[1-9]\d*|0)(?:[.,]\d+)?\b/,
      lookbehind: true
    }
  };
  commandAfterHeredoc.inside = Prism.languages.bash;
  /* Patterns in command substitution. */

  var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];
  var inside = insideString.variable[1].inside;

  for (var i = 0; i < toBeCopied.length; i++) {
    inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];
  }

  Prism.languages.shell = Prism.languages.bash;
})(prism);
/* "prismjs/components/prism-clike" */


prism.languages.clike = {
  'comment': [{
    pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
    lookbehind: true,
    greedy: true
  }, {
    pattern: /(^|[^\\:])\/\/.*/,
    lookbehind: true,
    greedy: true
  }],
  'string': {
    pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
    greedy: true
  },
  'class-name': {
    pattern: /(\b(?:class|extends|implements|instanceof|interface|new|trait)\s+|\bcatch\s+\()[\w.\\]+/i,
    lookbehind: true,
    inside: {
      'punctuation': /[.\\]/
    }
  },
  'keyword': /\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,
  'boolean': /\b(?:false|true)\b/,
  'function': /\b\w+(?=\()/,
  'number': /\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,
  'operator': /[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,
  'punctuation': /[{}[\];(),.:]/
};
/* "prismjs/components/prism-c" */

prism.languages.c = prism.languages.extend('clike', {
  'comment': {
    pattern: /\/\/(?:[^\r\n\\]|\\(?:\r\n?|\n|(?![\r\n])))*|\/\*[\s\S]*?(?:\*\/|$)/,
    greedy: true
  },
  'string': {
    // https://en.cppreference.com/w/c/language/string_literal
    pattern: /"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,
    greedy: true
  },
  'class-name': {
    pattern: /(\b(?:enum|struct)\s+(?:__attribute__\s*\(\([\s\S]*?\)\)\s*)?)\w+|\b[a-z]\w*_t\b/,
    lookbehind: true
  },
  'keyword': /\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\b/,
  'function': /\b[a-z_]\w*(?=\s*\()/i,
  'number': /(?:\b0x(?:[\da-f]+(?:\.[\da-f]*)?|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[ful]{0,4}/i,
  'operator': />>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?/
});
prism.languages.insertBefore('c', 'string', {
  'char': {
    // https://en.cppreference.com/w/c/language/character_constant
    pattern: /'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n]){0,32}'/,
    greedy: true
  }
});
prism.languages.insertBefore('c', 'string', {
  'macro': {
    // allow for multiline macro definitions
    // spaces after the # character compile fine with gcc
    pattern: /(^[\t ]*)#\s*[a-z](?:[^\r\n\\/]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|\\(?:\r\n|[\s\S]))*/im,
    lookbehind: true,
    greedy: true,
    alias: 'property',
    inside: {
      'string': [{
        // highlight the path of the include statement as a string
        pattern: /^(#\s*include\s*)<[^>]+>/,
        lookbehind: true
      }, prism.languages.c['string']],
      'char': prism.languages.c['char'],
      'comment': prism.languages.c['comment'],
      'macro-name': [{
        pattern: /(^#\s*define\s+)\w+\b(?!\()/i,
        lookbehind: true
      }, {
        pattern: /(^#\s*define\s+)\w+\b(?=\()/i,
        lookbehind: true,
        alias: 'function'
      }],
      // highlight macro directives as keywords
      'directive': {
        pattern: /^(#\s*)[a-z]+/,
        lookbehind: true,
        alias: 'keyword'
      },
      'directive-hash': /^#/,
      'punctuation': /##|\\(?=[\r\n])/,
      'expression': {
        pattern: /\S[\s\S]*/,
        inside: prism.languages.c
      }
    }
  }
});
prism.languages.insertBefore('c', 'function', {
  // highlight predefined macros as constants
  'constant': /\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\b/
});
delete prism.languages.c['boolean'];
/* "prismjs/components/prism-cpp" */

(function (Prism) {
  var keyword = /\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\b/;
  var modName = /\b(?!<keyword>)\w+(?:\s*\.\s*\w+)*\b/.source.replace(/<keyword>/g, function () {
    return keyword.source;
  });
  Prism.languages.cpp = Prism.languages.extend('c', {
    'class-name': [{
      pattern: RegExp(/(\b(?:class|concept|enum|struct|typename)\s+)(?!<keyword>)\w+/.source.replace(/<keyword>/g, function () {
        return keyword.source;
      })),
      lookbehind: true
    }, // This is intended to capture the class name of method implementations like:
    //   void foo::bar() const {}
    // However! The `foo` in the above example could also be a namespace, so we only capture the class name if
    // it starts with an uppercase letter. This approximation should give decent results.
    /\b[A-Z]\w*(?=\s*::\s*\w+\s*\()/, // This will capture the class name before destructors like:
    //   Foo::~Foo() {}
    /\b[A-Z_]\w*(?=\s*::\s*~\w+\s*\()/i, // This also intends to capture the class name of method implementations but here the class has template
    // parameters, so it can't be a namespace (until C++ adds generic namespaces).
    /\b\w+(?=\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\s*::\s*\w+\s*\()/],
    'keyword': keyword,
    'number': {
      pattern: /(?:\b0b[01']+|\b0x(?:[\da-f']+(?:\.[\da-f']*)?|\.[\da-f']+)(?:p[+-]?[\d']+)?|(?:\b[\d']+(?:\.[\d']*)?|\B\.[\d']+)(?:e[+-]?[\d']+)?)[ful]{0,4}/i,
      greedy: true
    },
    'operator': />>=?|<<=?|->|--|\+\+|&&|\|\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/,
    'boolean': /\b(?:false|true)\b/
  });
  Prism.languages.insertBefore('cpp', 'string', {
    'module': {
      // https://en.cppreference.com/w/cpp/language/modules
      pattern: RegExp(/(\b(?:import|module)\s+)/.source + '(?:' + // header-name
      /"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|<[^<>\r\n]*>/.source + '|' + // module name or partition or both
      /<mod-name>(?:\s*:\s*<mod-name>)?|:\s*<mod-name>/.source.replace(/<mod-name>/g, function () {
        return modName;
      }) + ')'),
      lookbehind: true,
      greedy: true,
      inside: {
        'string': /^[<"][\s\S]+/,
        'operator': /:/,
        'punctuation': /\./
      }
    },
    'raw-string': {
      pattern: /R"([^()\\ ]{0,16})\([\s\S]*?\)\1"/,
      alias: 'string',
      greedy: true
    }
  });
  Prism.languages.insertBefore('cpp', 'keyword', {
    'generic-function': {
      pattern: /\b(?!operator\b)[a-z_]\w*\s*<(?:[^<>]|<[^<>]*>)*>(?=\s*\()/i,
      inside: {
        'function': /^\w+/,
        'generic': {
          pattern: /<[\s\S]+/,
          alias: 'class-name',
          inside: Prism.languages.cpp
        }
      }
    }
  });
  Prism.languages.insertBefore('cpp', 'operator', {
    'double-colon': {
      pattern: /::/,
      alias: 'punctuation'
    }
  });
  Prism.languages.insertBefore('cpp', 'class-name', {
    // the base clause is an optional list of parent classes
    // https://en.cppreference.com/w/cpp/language/class
    'base-clause': {
      pattern: /(\b(?:class|struct)\s+\w+\s*:\s*)[^;{}"'\s]+(?:\s+[^;{}"'\s]+)*(?=\s*[;{])/,
      lookbehind: true,
      greedy: true,
      inside: Prism.languages.extend('cpp', {})
    }
  });
  Prism.languages.insertBefore('inside', 'double-colon', {
    // All untokenized words that are not namespaces should be class names
    'class-name': /\b[a-z_]\w*\b(?!\s*::)/i
  }, Prism.languages.cpp['base-clause']);
})(prism);
/* "prismjs/components/prism-css" */


(function (Prism) {
  var string = /(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;
  Prism.languages.css = {
    'comment': /\/\*[\s\S]*?\*\//,
    'atrule': {
      pattern: /@[\w-](?:[^;{\s]|\s+(?![\s{]))*(?:;|(?=\s*\{))/,
      inside: {
        'rule': /^@[\w-]+/,
        'selector-function-argument': {
          pattern: /(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,
          lookbehind: true,
          alias: 'selector'
        },
        'keyword': {
          pattern: /(^|[^\w-])(?:and|not|only|or)(?![\w-])/,
          lookbehind: true
        } // See rest below

      }
    },
    'url': {
      // https://drafts.csswg.org/css-values-3/#urls
      pattern: RegExp('\\burl\\((?:' + string.source + '|' + /(?:[^\\\r\n()"']|\\[\s\S])*/.source + ')\\)', 'i'),
      greedy: true,
      inside: {
        'function': /^url/i,
        'punctuation': /^\(|\)$/,
        'string': {
          pattern: RegExp('^' + string.source + '$'),
          alias: 'url'
        }
      }
    },
    'selector': {
      pattern: RegExp('(^|[{}\\s])[^{}\\s](?:[^{};"\'\\s]|\\s+(?![\\s{])|' + string.source + ')*(?=\\s*\\{)'),
      lookbehind: true
    },
    'string': {
      pattern: string,
      greedy: true
    },
    'property': {
      pattern: /(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,
      lookbehind: true
    },
    'important': /!important\b/i,
    'function': {
      pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,
      lookbehind: true
    },
    'punctuation': /[(){};:,]/
  };
  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;
  var markup = Prism.languages.markup;

  if (markup) {
    markup.tag.addInlined('style', 'css');
    markup.tag.addAttribute('style', 'css');
  }
})(prism);
/* "prismjs/components/prism-css-extras" */


(function (Prism) {
  var string = /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/;
  var selectorInside;
  Prism.languages.css.selector = {
    pattern: Prism.languages.css.selector.pattern,
    lookbehind: true,
    inside: selectorInside = {
      'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\w]+/,
      'pseudo-class': /:[-\w]+/,
      'class': /\.[-\w]+/,
      'id': /#[-\w]+/,
      'attribute': {
        pattern: RegExp('\\[(?:[^[\\]"\']|' + string.source + ')*\\]'),
        greedy: true,
        inside: {
          'punctuation': /^\[|\]$/,
          'case-sensitivity': {
            pattern: /(\s)[si]$/i,
            lookbehind: true,
            alias: 'keyword'
          },
          'namespace': {
            pattern: /^(\s*)(?:(?!\s)[-*\w\xA0-\uFFFF])*\|(?!=)/,
            lookbehind: true,
            inside: {
              'punctuation': /\|$/
            }
          },
          'attr-name': {
            pattern: /^(\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+/,
            lookbehind: true
          },
          'attr-value': [string, {
            pattern: /(=\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+(?=\s*$)/,
            lookbehind: true
          }],
          'operator': /[|~*^$]?=/
        }
      },
      'n-th': [{
        pattern: /(\(\s*)[+-]?\d*[\dn](?:\s*[+-]\s*\d+)?(?=\s*\))/,
        lookbehind: true,
        inside: {
          'number': /[\dn]+/,
          'operator': /[+-]/
        }
      }, {
        pattern: /(\(\s*)(?:even|odd)(?=\s*\))/i,
        lookbehind: true
      }],
      'combinator': />|\+|~|\|\|/,
      // the `tag` token has been existed and removed.
      // because we can't find a perfect tokenize to match it.
      // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.
      'punctuation': /[(),]/
    }
  };
  Prism.languages.css['atrule'].inside['selector-function-argument'].inside = selectorInside;
  Prism.languages.insertBefore('css', 'property', {
    'variable': {
      pattern: /(^|[^-\w\xA0-\uFFFF])--(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*/i,
      lookbehind: true
    }
  });
  var unit = {
    pattern: /(\b\d+)(?:%|[a-z]+(?![\w-]))/,
    lookbehind: true
  }; // 123 -123 .123 -.123 12.3 -12.3

  var number = {
    pattern: /(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)/,
    lookbehind: true
  };
  Prism.languages.insertBefore('css', 'function', {
    'operator': {
      pattern: /(\s)[+\-*\/](?=\s)/,
      lookbehind: true
    },
    // CAREFUL!
    // Previewers and Inline color use hexcode and color.
    'hexcode': {
      pattern: /\B#[\da-f]{3,8}\b/i,
      alias: 'color'
    },
    'color': [{
      pattern: /(^|[^\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\w-])/i,
      lookbehind: true
    }, {
      pattern: /\b(?:hsl|rgb)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:hsl|rgb)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i,
      inside: {
        'unit': unit,
        'number': number,
        'function': /[\w-]+(?=\()/,
        'punctuation': /[(),]/
      }
    }],
    // it's important that there is no boundary assertion after the hex digits
    'entity': /\\[\da-f]{1,8}/i,
    'unit': unit,
    'number': number
  });
})(prism);
/* "prismjs/components/prism-javascript" */


prism.languages.javascript = prism.languages.extend('clike', {
  'class-name': [prism.languages.clike['class-name'], {
    pattern: /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,
    lookbehind: true
  }],
  'keyword': [{
    pattern: /((?:^|\})\s*)catch\b/,
    lookbehind: true
  }, {
    pattern: /(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,
    lookbehind: true
  }],
  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)
  'function': /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,
  'number': {
    pattern: RegExp(/(^|[^\w$])/.source + '(?:' + ( // constant
    /NaN|Infinity/.source + '|' + // binary integer
    /0[bB][01]+(?:_[01]+)*n?/.source + '|' + // octal integer
    /0[oO][0-7]+(?:_[0-7]+)*n?/.source + '|' + // hexadecimal integer
    /0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?/.source + '|' + // decimal bigint
    /\d+(?:_\d+)*n/.source + '|' + // decimal number (integer or float) but no bigint
    /(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?/.source) + ')' + /(?![\w$])/.source),
    lookbehind: true
  },
  'operator': /--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/
});
prism.languages.javascript['class-name'][0].pattern = /(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/;
prism.languages.insertBefore('javascript', 'keyword', {
  'regex': {
    // eslint-disable-next-line regexp/no-dupe-characters-character-class
    pattern: /((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)\/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/,
    lookbehind: true,
    greedy: true,
    inside: {
      'regex-source': {
        pattern: /^(\/)[\s\S]+(?=\/[a-z]*$)/,
        lookbehind: true,
        alias: 'language-regex',
        inside: prism.languages.regex
      },
      'regex-delimiter': /^\/|\/$/,
      'regex-flags': /^[a-z]+$/
    }
  },
  // This must be declared before keyword because we use "function" inside the look-forward
  'function-variable': {
    pattern: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,
    alias: 'function'
  },
  'parameter': [{
    pattern: /(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,
    lookbehind: true,
    inside: prism.languages.javascript
  }, {
    pattern: /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,
    lookbehind: true,
    inside: prism.languages.javascript
  }, {
    pattern: /(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,
    lookbehind: true,
    inside: prism.languages.javascript
  }, {
    pattern: /((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,
    lookbehind: true,
    inside: prism.languages.javascript
  }],
  'constant': /\b[A-Z](?:[A-Z_]|\dx?)*\b/
});
prism.languages.insertBefore('javascript', 'string', {
  'hashbang': {
    pattern: /^#!.*/,
    greedy: true,
    alias: 'comment'
  },
  'template-string': {
    pattern: /`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,
    greedy: true,
    inside: {
      'template-punctuation': {
        pattern: /^`|`$/,
        alias: 'string'
      },
      'interpolation': {
        pattern: /((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,
        lookbehind: true,
        inside: {
          'interpolation-punctuation': {
            pattern: /^\$\{|\}$/,
            alias: 'punctuation'
          },
          rest: prism.languages.javascript
        }
      },
      'string': /[\s\S]+/
    }
  },
  'string-property': {
    pattern: /((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,
    lookbehind: true,
    greedy: true,
    alias: 'property'
  }
});
prism.languages.insertBefore('javascript', 'operator', {
  'literal-property': {
    pattern: /((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,
    lookbehind: true,
    alias: 'property'
  }
});

if (prism.languages.markup) {
  prism.languages.markup.tag.addInlined('script', 'javascript'); // add attribute support for all DOM events.
  // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events

  prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, 'javascript');
}

prism.languages.js = prism.languages.javascript;
/* "prismjs/components/prism-coffeescript" */

(function (Prism) {
  // Ignore comments starting with { to privilege string interpolation highlighting
  var comment = /#(?!\{).+/;
  var interpolation = {
    pattern: /#\{[^}]+\}/,
    alias: 'variable'
  };
  Prism.languages.coffeescript = Prism.languages.extend('javascript', {
    'comment': comment,
    'string': [// Strings are multiline
    {
      pattern: /'(?:\\[\s\S]|[^\\'])*'/,
      greedy: true
    }, {
      // Strings are multiline
      pattern: /"(?:\\[\s\S]|[^\\"])*"/,
      greedy: true,
      inside: {
        'interpolation': interpolation
      }
    }],
    'keyword': /\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\b/,
    'class-member': {
      pattern: /@(?!\d)\w+/,
      alias: 'variable'
    }
  });
  Prism.languages.insertBefore('coffeescript', 'comment', {
    'multiline-comment': {
      pattern: /###[\s\S]+?###/,
      alias: 'comment'
    },
    // Block regexp can contain comments and interpolation
    'block-regex': {
      pattern: /\/{3}[\s\S]*?\/{3}/,
      alias: 'regex',
      inside: {
        'comment': comment,
        'interpolation': interpolation
      }
    }
  });
  Prism.languages.insertBefore('coffeescript', 'string', {
    'inline-javascript': {
      pattern: /`(?:\\[\s\S]|[^\\`])*`/,
      inside: {
        'delimiter': {
          pattern: /^`|`$/,
          alias: 'punctuation'
        },
        'script': {
          pattern: /[\s\S]+/,
          alias: 'language-javascript',
          inside: Prism.languages.javascript
        }
      }
    },
    // Block strings
    'multiline-string': [{
      pattern: /'''[\s\S]*?'''/,
      greedy: true,
      alias: 'string'
    }, {
      pattern: /"""[\s\S]*?"""/,
      greedy: true,
      alias: 'string',
      inside: {
        interpolation: interpolation
      }
    }]
  });
  Prism.languages.insertBefore('coffeescript', 'keyword', {
    // Object property
    'property': /(?!\d)\w+(?=\s*:(?!:))/
  });
  delete Prism.languages.coffeescript['template-string'];
  Prism.languages.coffee = Prism.languages.coffeescript;
})(prism);
/* "prismjs/components/prism-yaml" */


(function (Prism) {
  // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property
  // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node
  var anchorOrAlias = /[*&][^\s[\]{},]+/; // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property

  var tag = /!(?:<[\w\-%#;/?:@&=+$,.!~*'()[\]]+>|(?:[a-zA-Z\d-]*!)?[\w\-%#;/?:@&=+$.~*'()]+)?/; // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)

  var properties = '(?:' + tag.source + '(?:[ \t]+' + anchorOrAlias.source + ')?|' + anchorOrAlias.source + '(?:[ \t]+' + tag.source + ')?)'; // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)
  // This is a simplified version that doesn't support "#" and multiline keys
  // All these long scarry character classes are simplified versions of YAML's characters

  var plainKey = /(?:[^\s\x00-\x08\x0e-\x1f!"#%&'*,\-:>?@[\]`{|}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]|[?:-]<PLAIN>)(?:[ \t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function () {
    return /[^\s\x00-\x08\x0e-\x1f,[\]{}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]/.source;
  });
  var string = /"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'/.source;
  /**
   *
   * @param {string} value
   * @param {string} [flags]
   * @returns {RegExp}
   */

  function createValuePattern(value, flags) {
    flags = (flags || '').replace(/m/g, '') + 'm'; // add m flag

    var pattern = /([:\-,[{]\s*(?:\s<<prop>>[ \t]+)?)(?:<<value>>)(?=[ \t]*(?:$|,|\]|\}|(?:[\r\n]\s*)?#))/.source.replace(/<<prop>>/g, function () {
      return properties;
    }).replace(/<<value>>/g, function () {
      return value;
    });
    return RegExp(pattern, flags);
  }

  Prism.languages.yaml = {
    'scalar': {
      pattern: RegExp(/([\-:]\s*(?:\s<<prop>>[ \t]+)?[|>])[ \t]*(?:((?:\r?\n|\r)[ \t]+)\S[^\r\n]*(?:\2[^\r\n]+)*)/.source.replace(/<<prop>>/g, function () {
        return properties;
      })),
      lookbehind: true,
      alias: 'string'
    },
    'comment': /#.*/,
    'key': {
      pattern: RegExp(/((?:^|[:\-,[{\r\n?])[ \t]*(?:<<prop>>[ \t]+)?)<<key>>(?=\s*:\s)/.source.replace(/<<prop>>/g, function () {
        return properties;
      }).replace(/<<key>>/g, function () {
        return '(?:' + plainKey + '|' + string + ')';
      })),
      lookbehind: true,
      greedy: true,
      alias: 'atrule'
    },
    'directive': {
      pattern: /(^[ \t]*)%.+/m,
      lookbehind: true,
      alias: 'important'
    },
    'datetime': {
      pattern: createValuePattern(/\d{4}-\d\d?-\d\d?(?:[tT]|[ \t]+)\d\d?:\d{2}:\d{2}(?:\.\d*)?(?:[ \t]*(?:Z|[-+]\d\d?(?::\d{2})?))?|\d{4}-\d{2}-\d{2}|\d\d?:\d{2}(?::\d{2}(?:\.\d*)?)?/.source),
      lookbehind: true,
      alias: 'number'
    },
    'boolean': {
      pattern: createValuePattern(/false|true/.source, 'i'),
      lookbehind: true,
      alias: 'important'
    },
    'null': {
      pattern: createValuePattern(/null|~/.source, 'i'),
      lookbehind: true,
      alias: 'important'
    },
    'string': {
      pattern: createValuePattern(string),
      lookbehind: true,
      greedy: true
    },
    'number': {
      pattern: createValuePattern(/[+-]?(?:0x[\da-f]+|0o[0-7]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|\.inf|\.nan)/.source, 'i'),
      lookbehind: true
    },
    'tag': tag,
    'important': anchorOrAlias,
    'punctuation': /---|[:[\]{}\-,|>?]|\.\.\./
  };
  Prism.languages.yml = Prism.languages.yaml;
})(prism);
/* "prismjs/components/prism-markdown" */


(function (Prism) {
  // Allow only one line break
  var inner = /(?:\\.|[^\\\n\r]|(?:\n|\r\n?)(?![\r\n]))/.source;
  /**
   * This function is intended for the creation of the bold or italic pattern.
   *
   * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.
   *
   * _Note:_ Keep in mind that this adds a capturing group.
   *
   * @param {string} pattern
   * @returns {RegExp}
   */

  function createInline(pattern) {
    pattern = pattern.replace(/<inner>/g, function () {
      return inner;
    });
    return RegExp(/((?:^|[^\\])(?:\\{2})*)/.source + '(?:' + pattern + ')');
  }

  var tableCell = /(?:\\.|``(?:[^`\r\n]|`(?!`))+``|`[^`\r\n]+`|[^\\|\r\n`])+/.source;
  var tableRow = /\|?__(?:\|__)+\|?(?:(?:\n|\r\n?)|(?![\s\S]))/.source.replace(/__/g, function () {
    return tableCell;
  });
  var tableLine = /\|?[ \t]*:?-{3,}:?[ \t]*(?:\|[ \t]*:?-{3,}:?[ \t]*)+\|?(?:\n|\r\n?)/.source;
  Prism.languages.markdown = Prism.languages.extend('markup', {});
  Prism.languages.insertBefore('markdown', 'prolog', {
    'front-matter-block': {
      pattern: /(^(?:\s*[\r\n])?)---(?!.)[\s\S]*?[\r\n]---(?!.)/,
      lookbehind: true,
      greedy: true,
      inside: {
        'punctuation': /^---|---$/,
        'front-matter': {
          pattern: /\S+(?:\s+\S+)*/,
          alias: ['yaml', 'language-yaml'],
          inside: Prism.languages.yaml
        }
      }
    },
    'blockquote': {
      // > ...
      pattern: /^>(?:[\t ]*>)*/m,
      alias: 'punctuation'
    },
    'table': {
      pattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),
      inside: {
        'table-data-rows': {
          pattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),
          lookbehind: true,
          inside: {
            'table-data': {
              pattern: RegExp(tableCell),
              inside: Prism.languages.markdown
            },
            'punctuation': /\|/
          }
        },
        'table-line': {
          pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),
          lookbehind: true,
          inside: {
            'punctuation': /\||:?-{3,}:?/
          }
        },
        'table-header-row': {
          pattern: RegExp('^' + tableRow + '$'),
          inside: {
            'table-header': {
              pattern: RegExp(tableCell),
              alias: 'important',
              inside: Prism.languages.markdown
            },
            'punctuation': /\|/
          }
        }
      }
    },
    'code': [{
      // Prefixed by 4 spaces or 1 tab and preceded by an empty line
      pattern: /((?:^|\n)[ \t]*\n|(?:^|\r\n?)[ \t]*\r\n?)(?: {4}|\t).+(?:(?:\n|\r\n?)(?: {4}|\t).+)*/,
      lookbehind: true,
      alias: 'keyword'
    }, {
      // ```optional language
      // code block
      // ```
      pattern: /^```[\s\S]*?^```$/m,
      greedy: true,
      inside: {
        'code-block': {
          pattern: /^(```.*(?:\n|\r\n?))[\s\S]+?(?=(?:\n|\r\n?)^```$)/m,
          lookbehind: true
        },
        'code-language': {
          pattern: /^(```).+/,
          lookbehind: true
        },
        'punctuation': /```/
      }
    }],
    'title': [{
      // title 1
      // =======
      // title 2
      // -------
      pattern: /\S.*(?:\n|\r\n?)(?:==+|--+)(?=[ \t]*$)/m,
      alias: 'important',
      inside: {
        punctuation: /==+$|--+$/
      }
    }, {
      // # title 1
      // ###### title 6
      pattern: /(^\s*)#.+/m,
      lookbehind: true,
      alias: 'important',
      inside: {
        punctuation: /^#+|#+$/
      }
    }],
    'hr': {
      // ***
      // ---
      // * * *
      // -----------
      pattern: /(^\s*)([*-])(?:[\t ]*\2){2,}(?=\s*$)/m,
      lookbehind: true,
      alias: 'punctuation'
    },
    'list': {
      // * item
      // + item
      // - item
      // 1. item
      pattern: /(^\s*)(?:[*+-]|\d+\.)(?=[\t ].)/m,
      lookbehind: true,
      alias: 'punctuation'
    },
    'url-reference': {
      // [id]: http://example.com "Optional title"
      // [id]: http://example.com 'Optional title'
      // [id]: http://example.com (Optional title)
      // [id]: <http://example.com> "Optional title"
      pattern: /!?\[[^\]]+\]:[\t ]+(?:\S+|<(?:\\.|[^>\\])+>)(?:[\t ]+(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\)))?/,
      inside: {
        'variable': {
          pattern: /^(!?\[)[^\]]+/,
          lookbehind: true
        },
        'string': /(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\))$/,
        'punctuation': /^[\[\]!:]|[<>]/
      },
      alias: 'url'
    },
    'bold': {
      // **strong**
      // __strong__
      // allow one nested instance of italic text using the same delimiter
      pattern: createInline(/\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\b|\*\*(?:(?!\*)<inner>|\*(?:(?!\*)<inner>)+\*)+\*\*/.source),
      lookbehind: true,
      greedy: true,
      inside: {
        'content': {
          pattern: /(^..)[\s\S]+(?=..$)/,
          lookbehind: true,
          inside: {} // see below

        },
        'punctuation': /\*\*|__/
      }
    },
    'italic': {
      // *em*
      // _em_
      // allow one nested instance of bold text using the same delimiter
      pattern: createInline(/\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\b|\*(?:(?!\*)<inner>|\*\*(?:(?!\*)<inner>)+\*\*)+\*/.source),
      lookbehind: true,
      greedy: true,
      inside: {
        'content': {
          pattern: /(^.)[\s\S]+(?=.$)/,
          lookbehind: true,
          inside: {} // see below

        },
        'punctuation': /[*_]/
      }
    },
    'strike': {
      // ~~strike through~~
      // ~strike~
      // eslint-disable-next-line regexp/strict
      pattern: createInline(/(~~?)(?:(?!~)<inner>)+\2/.source),
      lookbehind: true,
      greedy: true,
      inside: {
        'content': {
          pattern: /(^~~?)[\s\S]+(?=\1$)/,
          lookbehind: true,
          inside: {} // see below

        },
        'punctuation': /~~?/
      }
    },
    'code-snippet': {
      // `code`
      // ``code``
      pattern: /(^|[^\\`])(?:``[^`\r\n]+(?:`[^`\r\n]+)*``(?!`)|`[^`\r\n]+`(?!`))/,
      lookbehind: true,
      greedy: true,
      alias: ['code', 'keyword']
    },
    'url': {
      // [example](http://example.com "Optional title")
      // [example][id]
      // [example] [id]
      pattern: createInline(/!?\[(?:(?!\])<inner>)+\](?:\([^\s)]+(?:[\t ]+"(?:\\.|[^"\\])*")?\)|[ \t]?\[(?:(?!\])<inner>)+\])/.source),
      lookbehind: true,
      greedy: true,
      inside: {
        'operator': /^!/,
        'content': {
          pattern: /(^\[)[^\]]+(?=\])/,
          lookbehind: true,
          inside: {} // see below

        },
        'variable': {
          pattern: /(^\][ \t]?\[)[^\]]+(?=\]$)/,
          lookbehind: true
        },
        'url': {
          pattern: /(^\]\()[^\s)]+/,
          lookbehind: true
        },
        'string': {
          pattern: /(^[ \t]+)"(?:\\.|[^"\\])*"(?=\)$)/,
          lookbehind: true
        }
      }
    }
  });
  ['url', 'bold', 'italic', 'strike'].forEach(function (token) {
    ['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (inside) {
      if (token !== inside) {
        Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];
      }
    });
  });
  Prism.hooks.add('after-tokenize', function (env) {
    if (env.language !== 'markdown' && env.language !== 'md') {
      return;
    }

    function walkTokens(tokens) {
      if (!tokens || typeof tokens === 'string') {
        return;
      }

      for (var i = 0, l = tokens.length; i < l; i++) {
        var token = tokens[i];

        if (token.type !== 'code') {
          walkTokens(token.content);
          continue;
        }
        /*
         * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token
         * is optional. But the grammar is defined so that there is only one case we have to handle:
         *
         * token.content = [
         *     <span class="punctuation">```</span>,
         *     <span class="code-language">xxxx</span>,
         *     '\n', // exactly one new lines (\r or \n or \r\n)
         *     <span class="code-block">...</span>,
         *     '\n', // exactly one new lines again
         *     <span class="punctuation">```</span>
         * ];
         */


        var codeLang = token.content[1];
        var codeBlock = token.content[3];

        if (codeLang && codeBlock && codeLang.type === 'code-language' && codeBlock.type === 'code-block' && typeof codeLang.content === 'string') {
          // this might be a language that Prism does not support
          // do some replacements to support C++, C#, and F#
          var lang = codeLang.content.replace(/\b#/g, 'sharp').replace(/\b\+\+/g, 'pp'); // only use the first word

          lang = (/[a-z][\w-]*/i.exec(lang) || [''])[0].toLowerCase();
          var alias = 'language-' + lang; // add alias

          if (!codeBlock.alias) {
            codeBlock.alias = [alias];
          } else if (typeof codeBlock.alias === 'string') {
            codeBlock.alias = [codeBlock.alias, alias];
          } else {
            codeBlock.alias.push(alias);
          }
        }
      }
    }

    walkTokens(env.tokens);
  });
  Prism.hooks.add('wrap', function (env) {
    if (env.type !== 'code-block') {
      return;
    }

    var codeLang = '';

    for (var i = 0, l = env.classes.length; i < l; i++) {
      var cls = env.classes[i];
      var match = /language-(.+)/.exec(cls);

      if (match) {
        codeLang = match[1];
        break;
      }
    }

    var grammar = Prism.languages[codeLang];

    if (!grammar) {
      if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {
        var id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);
        env.attributes['id'] = id;
        Prism.plugins.autoloader.loadLanguages(codeLang, function () {
          var ele = document.getElementById(id);

          if (ele) {
            ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);
          }
        });
      }
    } else {
      env.content = Prism.highlight(textContent(env.content), grammar, codeLang);
    }
  });
  var tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi');
  /**
   * A list of known entity names.
   *
   * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.
   *
   * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}
   */

  var KNOWN_ENTITY_NAMES = {
    'amp': '&',
    'lt': '<',
    'gt': '>',
    'quot': '"'
  }; // IE 11 doesn't support `String.fromCodePoint`

  var fromCodePoint = String.fromCodePoint || String.fromCharCode;
  /**
   * Returns the text content of a given HTML source code string.
   *
   * @param {string} html
   * @returns {string}
   */

  function textContent(html) {
    // remove all tags
    var text = html.replace(tagPattern, ''); // decode known entities

    text = text.replace(/&(\w{1,8}|#x?[\da-f]{1,8});/gi, function (m, code) {
      code = code.toLowerCase();

      if (code[0] === '#') {
        var value;

        if (code[1] === 'x') {
          value = parseInt(code.slice(2), 16);
        } else {
          value = Number(code.slice(1));
        }

        return fromCodePoint(value);
      } else {
        var known = KNOWN_ENTITY_NAMES[code];

        if (known) {
          return known;
        } // unable to decode


        return m;
      }
    });
    return text;
  }

  Prism.languages.md = Prism.languages.markdown;
})(prism);
/* "prismjs/components/prism-graphql" */


prism.languages.graphql = {
  'comment': /#.*/,
  'description': {
    pattern: /(?:"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*")(?=\s*[a-z_])/i,
    greedy: true,
    alias: 'string',
    inside: {
      'language-markdown': {
        pattern: /(^"(?:"")?)(?!\1)[\s\S]+(?=\1$)/,
        lookbehind: true,
        inside: prism.languages.markdown
      }
    }
  },
  'string': {
    pattern: /"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*"/,
    greedy: true
  },
  'number': /(?:\B-|\b)\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
  'boolean': /\b(?:false|true)\b/,
  'variable': /\$[a-z_]\w*/i,
  'directive': {
    pattern: /@[a-z_]\w*/i,
    alias: 'function'
  },
  'attr-name': {
    pattern: /\b[a-z_]\w*(?=\s*(?:\((?:[^()"]|"(?:\\.|[^\\"\r\n])*")*\))?:)/i,
    greedy: true
  },
  'atom-input': {
    pattern: /\b[A-Z]\w*Input\b/,
    alias: 'class-name'
  },
  'scalar': /\b(?:Boolean|Float|ID|Int|String)\b/,
  'constant': /\b[A-Z][A-Z_\d]*\b/,
  'class-name': {
    pattern: /(\b(?:enum|implements|interface|on|scalar|type|union)\s+|&\s*|:\s*|\[)[A-Z_]\w*/,
    lookbehind: true
  },
  'fragment': {
    pattern: /(\bfragment\s+|\.{3}\s*(?!on\b))[a-zA-Z_]\w*/,
    lookbehind: true,
    alias: 'function'
  },
  'definition-mutation': {
    pattern: /(\bmutation\s+)[a-zA-Z_]\w*/,
    lookbehind: true,
    alias: 'function'
  },
  'definition-query': {
    pattern: /(\bquery\s+)[a-zA-Z_]\w*/,
    lookbehind: true,
    alias: 'function'
  },
  'keyword': /\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\b/,
  'operator': /[!=|&]|\.{3}/,
  'property-query': /\w+(?=\s*\()/,
  'object': /\w+(?=\s*\{)/,
  'punctuation': /[!(){}\[\]:=,]/,
  'property': /\w+/
};
prism.hooks.add('after-tokenize', function afterTokenizeGraphql(env) {
  if (env.language !== 'graphql') {
    return;
  }
  /**
   * get the graphql token stream that we want to customize
   *
   * @typedef {InstanceType<import("./prism-core")["Token"]>} Token
   * @type {Token[]}
   */


  var validTokens = env.tokens.filter(function (token) {
    return typeof token !== 'string' && token.type !== 'comment' && token.type !== 'scalar';
  });
  var currentIndex = 0;
  /**
   * Returns whether the token relative to the current index has the given type.
   *
   * @param {number} offset
   * @returns {Token | undefined}
   */

  function getToken(offset) {
    return validTokens[currentIndex + offset];
  }
  /**
   * Returns whether the token relative to the current index has the given type.
   *
   * @param {readonly string[]} types
   * @param {number} [offset=0]
   * @returns {boolean}
   */


  function isTokenType(types, offset) {
    offset = offset || 0;

    for (var i = 0; i < types.length; i++) {
      var token = getToken(i + offset);

      if (!token || token.type !== types[i]) {
        return false;
      }
    }

    return true;
  }
  /**
   * Returns the index of the closing bracket to an opening bracket.
   *
   * It is assumed that `token[currentIndex - 1]` is an opening bracket.
   *
   * If no closing bracket could be found, `-1` will be returned.
   *
   * @param {RegExp} open
   * @param {RegExp} close
   * @returns {number}
   */


  function findClosingBracket(open, close) {
    var stackHeight = 1;

    for (var i = currentIndex; i < validTokens.length; i++) {
      var token = validTokens[i];
      var content = token.content;

      if (token.type === 'punctuation' && typeof content === 'string') {
        if (open.test(content)) {
          stackHeight++;
        } else if (close.test(content)) {
          stackHeight--;

          if (stackHeight === 0) {
            return i;
          }
        }
      }
    }

    return -1;
  }
  /**
   * Adds an alias to the given token.
   *
   * @param {Token} token
   * @param {string} alias
   * @returns {void}
   */


  function addAlias(token, alias) {
    var aliases = token.alias;

    if (!aliases) {
      token.alias = aliases = [];
    } else if (!Array.isArray(aliases)) {
      token.alias = aliases = [aliases];
    }

    aliases.push(alias);
  }

  for (; currentIndex < validTokens.length;) {
    var startToken = validTokens[currentIndex++]; // add special aliases for mutation tokens

    if (startToken.type === 'keyword' && startToken.content === 'mutation') {
      // any array of the names of all input variables (if any)
      var inputVariables = [];

      if (isTokenType(['definition-mutation', 'punctuation']) && getToken(1).content === '(') {
        // definition
        currentIndex += 2; // skip 'definition-mutation' and 'punctuation'

        var definitionEnd = findClosingBracket(/^\($/, /^\)$/);

        if (definitionEnd === -1) {
          continue;
        } // find all input variables


        for (; currentIndex < definitionEnd; currentIndex++) {
          var t = getToken(0);

          if (t.type === 'variable') {
            addAlias(t, 'variable-input');
            inputVariables.push(t.content);
          }
        }

        currentIndex = definitionEnd + 1;
      }

      if (isTokenType(['punctuation', 'property-query']) && getToken(0).content === '{') {
        currentIndex++; // skip opening bracket

        addAlias(getToken(0), 'property-mutation');

        if (inputVariables.length > 0) {
          var mutationEnd = findClosingBracket(/^\{$/, /^\}$/);

          if (mutationEnd === -1) {
            continue;
          } // give references to input variables a special alias


          for (var i = currentIndex; i < mutationEnd; i++) {
            var varToken = validTokens[i];

            if (varToken.type === 'variable' && inputVariables.indexOf(varToken.content) >= 0) {
              addAlias(varToken, 'variable-input');
            }
          }
        }
      }
    }
  }
});
/* "prismjs/components/prism-sql" */

prism.languages.sql = {
  'comment': {
    pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/,
    lookbehind: true
  },
  'variable': [{
    pattern: /@(["'`])(?:\\[\s\S]|(?!\1)[^\\])+\1/,
    greedy: true
  }, /@[\w.$]+/],
  'string': {
    pattern: /(^|[^@\\])("|')(?:\\[\s\S]|(?!\2)[^\\]|\2\2)*\2/,
    greedy: true,
    lookbehind: true
  },
  'identifier': {
    pattern: /(^|[^@\\])`(?:\\[\s\S]|[^`\\]|``)*`/,
    greedy: true,
    lookbehind: true,
    inside: {
      'punctuation': /^`|`$/
    }
  },
  'function': /\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\s*\()/i,
  // Should we highlight user defined functions too?
  'keyword': /\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\b/i,
  'boolean': /\b(?:FALSE|NULL|TRUE)\b/i,
  'number': /\b0x[\da-f]+\b|\b\d+(?:\.\d*)?|\B\.\d+\b/i,
  'operator': /[-+*\/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\b/i,
  'punctuation': /[;[\]()`,.]/
};
/* "prismjs/components/prism-js-templates" */

(function (Prism) {
  var templateString = Prism.languages.javascript['template-string']; // see the pattern in prism-javascript.js

  var templateLiteralPattern = templateString.pattern.source;
  var interpolationObject = templateString.inside['interpolation'];
  var interpolationPunctuationObject = interpolationObject.inside['interpolation-punctuation'];
  var interpolationPattern = interpolationObject.pattern.source;
  /**
   * Creates a new pattern to match a template string with a special tag.
   *
   * This will return `undefined` if there is no grammar with the given language id.
   *
   * @param {string} language The language id of the embedded language. E.g. `markdown`.
   * @param {string} tag The regex pattern to match the tag.
   * @returns {object | undefined}
   * @example
   * createTemplate('css', /\bcss/.source);
   */

  function createTemplate(language, tag) {
    if (!Prism.languages[language]) {
      return undefined;
    }

    return {
      pattern: RegExp('((?:' + tag + ')\\s*)' + templateLiteralPattern),
      lookbehind: true,
      greedy: true,
      inside: {
        'template-punctuation': {
          pattern: /^`|`$/,
          alias: 'string'
        },
        'embedded-code': {
          pattern: /[\s\S]+/,
          alias: language
        }
      }
    };
  }

  Prism.languages.javascript['template-string'] = [// styled-jsx:
  //   css`a { color: #25F; }`
  // styled-components:
  //   styled.h1`color: red;`
  createTemplate('css', /\b(?:styled(?:\([^)]*\))?(?:\s*\.\s*\w+(?:\([^)]*\))*)*|css(?:\s*\.\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source), // html`<p></p>`
  // div.innerHTML = `<p></p>`
  createTemplate('html', /\bhtml|\.\s*(?:inner|outer)HTML\s*\+?=/.source), // svg`<path fill="#fff" d="M55.37 ..."/>`
  createTemplate('svg', /\bsvg/.source), // md`# h1`, markdown`## h2`
  createTemplate('markdown', /\b(?:markdown|md)/.source), // gql`...`, graphql`...`, graphql.experimental`...`
  createTemplate('graphql', /\b(?:gql|graphql(?:\s*\.\s*experimental)?)/.source), // sql`...`
  createTemplate('sql', /\bsql/.source), // vanilla template string
  templateString].filter(Boolean);
  /**
   * Returns a specific placeholder literal for the given language.
   *
   * @param {number} counter
   * @param {string} language
   * @returns {string}
   */

  function getPlaceholder(counter, language) {
    return '___' + language.toUpperCase() + '_' + counter + '___';
  }
  /**
   * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.
   *
   * @param {string} code
   * @param {any} grammar
   * @param {string} language
   * @returns {(string|Token)[]}
   */


  function tokenizeWithHooks(code, grammar, language) {
    var env = {
      code: code,
      grammar: grammar,
      language: language
    };
    Prism.hooks.run('before-tokenize', env);
    env.tokens = Prism.tokenize(env.code, env.grammar);
    Prism.hooks.run('after-tokenize', env);
    return env.tokens;
  }
  /**
   * Returns the token of the given JavaScript interpolation expression.
   *
   * @param {string} expression The code of the expression. E.g. `"${42}"`
   * @returns {Token}
   */


  function tokenizeInterpolationExpression(expression) {
    var tempGrammar = {};
    tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject;
    /** @type {Array} */

    var tokens = Prism.tokenize(expression, tempGrammar);

    if (tokens.length === 3) {
      /**
       * The token array will look like this
       * [
       *     ["interpolation-punctuation", "${"]
       *     "..." // JavaScript expression of the interpolation
       *     ["interpolation-punctuation", "}"]
       * ]
       */
      var args = [1, 1];
      args.push.apply(args, tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript'));
      tokens.splice.apply(tokens, args);
    }

    return new Prism.Token('interpolation', tokens, interpolationObject.alias, expression);
  }
  /**
   * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.
   *
   * This function has 3 phases:
   *
   * 1. Replace all JavaScript interpolation expression with a placeholder.
   *    The placeholder will have the syntax of a identify of the target language.
   * 2. Tokenize the code with placeholders.
   * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.
   *    The insertion only works if a placeholder hasn't been "ripped apart" meaning that the placeholder has been
   *    tokenized as two tokens by the grammar of the embedded language.
   *
   * @param {string} code
   * @param {object} grammar
   * @param {string} language
   * @returns {Token}
   */


  function tokenizeEmbedded(code, grammar, language) {
    // 1. First filter out all interpolations
    // because they might be escaped, we need a lookbehind, so we use Prism

    /** @type {(Token|string)[]} */
    var _tokens = Prism.tokenize(code, {
      'interpolation': {
        pattern: RegExp(interpolationPattern),
        lookbehind: true
      }
    }); // replace all interpolations with a placeholder which is not in the code already


    var placeholderCounter = 0;
    /** @type {Object<string, string>} */

    var placeholderMap = {};

    var embeddedCode = _tokens.map(function (token) {
      if (typeof token === 'string') {
        return token;
      } else {
        var interpolationExpression = token.content;
        var placeholder;

        while (code.indexOf(placeholder = getPlaceholder(placeholderCounter++, language)) !== -1) {
          /* noop */
        }

        placeholderMap[placeholder] = interpolationExpression;
        return placeholder;
      }
    }).join(''); // 2. Tokenize the embedded code


    var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language); // 3. Re-insert the interpolation

    var placeholders = Object.keys(placeholderMap);
    placeholderCounter = 0;
    /**
     *
     * @param {(Token|string)[]} tokens
     * @returns {void}
     */

    function walkTokens(tokens) {
      for (var i = 0; i < tokens.length; i++) {
        if (placeholderCounter >= placeholders.length) {
          return;
        }

        var token = tokens[i];

        if (typeof token === 'string' || typeof token.content === 'string') {
          var placeholder = placeholders[placeholderCounter];
          var s = typeof token === 'string' ? token :
          /** @type {string} */
          token.content;
          var index = s.indexOf(placeholder);

          if (index !== -1) {
            ++placeholderCounter;
            var before = s.substring(0, index);
            var middle = tokenizeInterpolationExpression(placeholderMap[placeholder]);
            var after = s.substring(index + placeholder.length);
            var replacement = [];

            if (before) {
              replacement.push(before);
            }

            replacement.push(middle);

            if (after) {
              var afterTokens = [after];
              walkTokens(afterTokens);
              replacement.push.apply(replacement, afterTokens);
            }

            if (typeof token === 'string') {
              tokens.splice.apply(tokens, [i, 1].concat(replacement));
              i += replacement.length - 1;
            } else {
              token.content = replacement;
            }
          }
        } else {
          var content = token.content;

          if (Array.isArray(content)) {
            walkTokens(content);
          } else {
            walkTokens([content]);
          }
        }
      }
    }

    walkTokens(embeddedTokens);
    return new Prism.Token(language, embeddedTokens, 'language-' + language, code);
  }
  /**
   * The languages for which JS templating will handle tagged template literals.
   *
   * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.
   */


  var supportedLanguages = {
    'javascript': true,
    'js': true,
    'typescript': true,
    'ts': true,
    'jsx': true,
    'tsx': true
  };
  Prism.hooks.add('after-tokenize', function (env) {
    if (!(env.language in supportedLanguages)) {
      return;
    }
    /**
     * Finds and tokenizes all template strings with an embedded languages.
     *
     * @param {(Token | string)[]} tokens
     * @returns {void}
     */


    function findTemplateStrings(tokens) {
      for (var i = 0, l = tokens.length; i < l; i++) {
        var token = tokens[i];

        if (typeof token === 'string') {
          continue;
        }

        var content = token.content;

        if (!Array.isArray(content)) {
          if (typeof content !== 'string') {
            findTemplateStrings([content]);
          }

          continue;
        }

        if (token.type === 'template-string') {
          /**
           * A JavaScript template-string token will look like this:
           *
           * ["template-string", [
           *     ["template-punctuation", "`"],
           *     (
           *         An array of "string" and "interpolation" tokens. This is the simple string case.
           *         or
           *         ["embedded-code", "..."] This is the token containing the embedded code.
           *                                  It also has an alias which is the language of the embedded code.
           *     ),
           *     ["template-punctuation", "`"]
           * ]]
           */
          var embedded = content[1];

          if (content.length === 3 && typeof embedded !== 'string' && embedded.type === 'embedded-code') {
            // get string content
            var code = stringContent(embedded);
            var alias = embedded.alias;
            var language = Array.isArray(alias) ? alias[0] : alias;
            var grammar = Prism.languages[language];

            if (!grammar) {
              // the embedded language isn't registered.
              continue;
            }

            content[1] = tokenizeEmbedded(code, grammar, language);
          }
        } else {
          findTemplateStrings(content);
        }
      }
    }

    findTemplateStrings(env.tokens);
  });
  /**
   * Returns the string content of a token or token stream.
   *
   * @param {string | Token | (string | Token)[]} value
   * @returns {string}
   */

  function stringContent(value) {
    if (typeof value === 'string') {
      return value;
    } else if (Array.isArray(value)) {
      return value.map(stringContent).join('');
    } else {
      return stringContent(value.content);
    }
  }
})(prism);
/* "prismjs/components/prism-typescript" */


(function (Prism) {
  Prism.languages.typescript = Prism.languages.extend('javascript', {
    'class-name': {
      pattern: /(\b(?:class|extends|implements|instanceof|interface|new|type)\s+)(?!keyof\b)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?:\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,
      lookbehind: true,
      greedy: true,
      inside: null // see below

    },
    'builtin': /\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\b/
  }); // The keywords TypeScript adds to JavaScript

  Prism.languages.typescript.keyword.push(/\b(?:abstract|declare|is|keyof|readonly|require)\b/, // keywords that have to be followed by an identifier
  /\b(?:asserts|infer|interface|module|namespace|type)\b(?=\s*(?:[{_$a-zA-Z\xA0-\uFFFF]|$))/, // This is for `import type *, {}`
  /\btype\b(?=\s*(?:[\{*]|$))/); // doesn't work with TS because TS is too complex

  delete Prism.languages.typescript['parameter'];
  delete Prism.languages.typescript['literal-property']; // a version of typescript specifically for highlighting types

  var typeInside = Prism.languages.extend('typescript', {});
  delete typeInside['class-name'];
  Prism.languages.typescript['class-name'].inside = typeInside;
  Prism.languages.insertBefore('typescript', 'function', {
    'decorator': {
      pattern: /@[$\w\xA0-\uFFFF]+/,
      inside: {
        'at': {
          pattern: /^@/,
          alias: 'operator'
        },
        'function': /^[\s\S]+/
      }
    },
    'generic-function': {
      // e.g. foo<T extends "bar" | "baz">( ...
      pattern: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\s*\()/,
      greedy: true,
      inside: {
        'function': /^#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/,
        'generic': {
          pattern: /<[\s\S]+/,
          // everything after the first <
          alias: 'class-name',
          inside: typeInside
        }
      }
    }
  });
  Prism.languages.ts = Prism.languages.typescript;
})(prism);
/* "prismjs/components/prism-js-extras" */


(function (Prism) {
  Prism.languages.insertBefore('javascript', 'function-variable', {
    'method-variable': {
      pattern: RegExp('(\\.\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),
      lookbehind: true,
      alias: ['function-variable', 'method', 'function', 'property-access']
    }
  });
  Prism.languages.insertBefore('javascript', 'function', {
    'method': {
      pattern: RegExp('(\\.\\s*)' + Prism.languages.javascript['function'].source),
      lookbehind: true,
      alias: ['function', 'property-access']
    }
  });
  Prism.languages.insertBefore('javascript', 'constant', {
    'known-class-name': [{
      // standard built-ins
      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects
      pattern: /\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\b/,
      alias: 'class-name'
    }, {
      // errors
      pattern: /\b(?:[A-Z]\w*)Error\b/,
      alias: 'class-name'
    }]
  });
  /**
   * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.
   *
   * @param {string} source
   * @param {string} [flags]
   * @returns {RegExp}
   */

  function withId(source, flags) {
    return RegExp(source.replace(/<ID>/g, function () {
      return /(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/.source;
    }), flags);
  }

  Prism.languages.insertBefore('javascript', 'keyword', {
    'imports': {
      // https://tc39.es/ecma262/#sec-imports
      pattern: withId(/(\bimport\b\s*)(?:<ID>(?:\s*,\s*(?:\*\s*as\s+<ID>|\{[^{}]*\}))?|\*\s*as\s+<ID>|\{[^{}]*\})(?=\s*\bfrom\b)/.source),
      lookbehind: true,
      inside: Prism.languages.javascript
    },
    'exports': {
      // https://tc39.es/ecma262/#sec-exports
      pattern: withId(/(\bexport\b\s*)(?:\*(?:\s*as\s+<ID>)?(?=\s*\bfrom\b)|\{[^{}]*\})/.source),
      lookbehind: true,
      inside: Prism.languages.javascript
    }
  });
  Prism.languages.javascript['keyword'].unshift({
    pattern: /\b(?:as|default|export|from|import)\b/,
    alias: 'module'
  }, {
    pattern: /\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\b/,
    alias: 'control-flow'
  }, {
    pattern: /\bnull\b/,
    alias: ['null', 'nil']
  }, {
    pattern: /\bundefined\b/,
    alias: 'nil'
  });
  Prism.languages.insertBefore('javascript', 'operator', {
    'spread': {
      pattern: /\.{3}/,
      alias: 'operator'
    },
    'arrow': {
      pattern: /=>/,
      alias: 'operator'
    }
  });
  Prism.languages.insertBefore('javascript', 'punctuation', {
    'property-access': {
      pattern: withId(/(\.\s*)#?<ID>/.source),
      lookbehind: true
    },
    'maybe-class-name': {
      pattern: /(^|[^$\w\xA0-\uFFFF])[A-Z][$\w\xA0-\uFFFF]+/,
      lookbehind: true
    },
    'dom': {
      // this contains only a few commonly used DOM variables
      pattern: /\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\b/,
      alias: 'variable'
    },
    'console': {
      pattern: /\bconsole(?=\s*\.)/,
      alias: 'class-name'
    }
  }); // add 'maybe-class-name' to tokens which might be a class name

  var maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];

  for (var i = 0; i < maybeClassNameTokens.length; i++) {
    var token = maybeClassNameTokens[i];
    var value = Prism.languages.javascript[token]; // convert regex to object

    if (Prism.util.type(value) === 'RegExp') {
      value = Prism.languages.javascript[token] = {
        pattern: value
      };
    } // keep in mind that we don't support arrays


    var inside = value.inside || {};
    value.inside = inside;
    inside['maybe-class-name'] = /^[A-Z][\s\S]*/;
  }
})(prism);
/* "prismjs/components/prism-jsx" */


(function (Prism) {
  var javascript = Prism.util.clone(Prism.languages.javascript);
  var space = /(?:\s|\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))\*\/)/.source;
  var braces = /(?:\{(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])*\})/.source;
  var spread = /(?:\{<S>*\.{3}(?:[^{}]|<BRACES>)*\})/.source;
  /**
   * @param {string} source
   * @param {string} [flags]
   */

  function re(source, flags) {
    source = source.replace(/<S>/g, function () {
      return space;
    }).replace(/<BRACES>/g, function () {
      return braces;
    }).replace(/<SPREAD>/g, function () {
      return spread;
    });
    return RegExp(source, flags);
  }

  spread = re(spread).source;
  Prism.languages.jsx = Prism.languages.extend('markup', javascript);
  Prism.languages.jsx.tag.pattern = re(/<\/?(?:[\w.:-]+(?:<S>+(?:[\w.:$-]+(?:=(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s{'"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\/?)?>/.source);
  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\/?[^\s>\/]*/;
  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\{)(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s'">]+)/;
  Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\w*(?:\.[A-Z]\w*)*$/;
  Prism.languages.jsx.tag.inside['comment'] = javascript['comment'];
  Prism.languages.insertBefore('inside', 'attr-name', {
    'spread': {
      pattern: re(/<SPREAD>/.source),
      inside: Prism.languages.jsx
    }
  }, Prism.languages.jsx.tag);
  Prism.languages.insertBefore('inside', 'special-attr', {
    'script': {
      // Allow for two levels of nesting
      pattern: re(/=<BRACES>/.source),
      alias: 'language-javascript',
      inside: {
        'script-punctuation': {
          pattern: /^=(?=\{)/,
          alias: 'punctuation'
        },
        rest: Prism.languages.jsx
      }
    }
  }, Prism.languages.jsx.tag); // The following will handle plain text inside tags

  var stringifyToken = function (token) {
    if (!token) {
      return '';
    }

    if (typeof token === 'string') {
      return token;
    }

    if (typeof token.content === 'string') {
      return token.content;
    }

    return token.content.map(stringifyToken).join('');
  };

  var walkTokens = function (tokens) {
    var openedTags = [];

    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i];
      var notTagNorBrace = false;

      if (typeof token !== 'string') {
        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {
          // We found a tag, now find its kind
          if (token.content[0].content[0].content === '</') {
            // Closing tag
            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {
              // Pop matching opening tag
              openedTags.pop();
            }
          } else {
            if (token.content[token.content.length - 1].content === '/>') ; else {
              // Opening tag
              openedTags.push({
                tagName: stringifyToken(token.content[0].content[1]),
                openedBraces: 0
              });
            }
          }
        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {
          // Here we might have entered a JSX context inside a tag
          openedTags[openedTags.length - 1].openedBraces++;
        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {
          // Here we might have left a JSX context inside a tag
          openedTags[openedTags.length - 1].openedBraces--;
        } else {
          notTagNorBrace = true;
        }
      }

      if (notTagNorBrace || typeof token === 'string') {
        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {
          // Here we are inside a tag, and not inside a JSX context.
          // That's plain text: drop any tokens matched.
          var plainText = stringifyToken(token); // And merge text with adjacent text

          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {
            plainText += stringifyToken(tokens[i + 1]);
            tokens.splice(i + 1, 1);
          }

          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {
            plainText = stringifyToken(tokens[i - 1]) + plainText;
            tokens.splice(i - 1, 1);
            i--;
          }

          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);
        }
      }

      if (token.content && typeof token.content !== 'string') {
        walkTokens(token.content);
      }
    }
  };

  Prism.hooks.add('after-tokenize', function (env) {
    if (env.language !== 'jsx' && env.language !== 'tsx') {
      return;
    }

    walkTokens(env.tokens);
  });
})(prism);
/* "prismjs/components/prism-diff" */


(function (Prism) {
  Prism.languages.diff = {
    'coord': [// Match all kinds of coord lines (prefixed by "+++", "---" or "***").
    /^(?:\*{3}|-{3}|\+{3}).*$/m, // Match "@@ ... @@" coord lines in unified diff.
    /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).
    /^\d.*$/m] // deleted, inserted, unchanged, diff

  };
  /**
   * A map from the name of a block to its line prefix.
   *
   * @type {Object<string, string>}
   */

  var PREFIXES = {
    'deleted-sign': '-',
    'deleted-arrow': '<',
    'inserted-sign': '+',
    'inserted-arrow': '>',
    'unchanged': ' ',
    'diff': '!'
  }; // add a token for each prefix

  Object.keys(PREFIXES).forEach(function (name) {
    var prefix = PREFIXES[name];
    var alias = [];

    if (!/^\w+$/.test(name)) {
      // "deleted-sign" -> "deleted"
      alias.push(/\w+/.exec(name)[0]);
    }

    if (name === 'diff') {
      alias.push('bold');
    }

    Prism.languages.diff[name] = {
      pattern: RegExp('^(?:[' + prefix + '].*(?:\r\n?|\n|(?![\\s\\S])))+', 'm'),
      alias: alias,
      inside: {
        'line': {
          pattern: /(.)(?=[\s\S]).*(?:\r\n?|\n)?/,
          lookbehind: true
        },
        'prefix': {
          pattern: /[\s\S]/,
          alias: /\w+/.exec(name)[0]
        }
      }
    };
  }); // make prefixes available to Diff plugin

  Object.defineProperty(Prism.languages.diff, 'PREFIXES', {
    value: PREFIXES
  });
})(prism);
/* "prismjs/components/prism-git" */


prism.languages.git = {
  /*
   * A simple one line comment like in a git status command
   * For instance:
   * $ git status
   * # On branch infinite-scroll
   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,
   * # and have 1 and 2 different commits each, respectively.
   * nothing to commit (working directory clean)
   */
  'comment': /^#.*/m,

  /*
   * Regexp to match the changed lines in a git diff output. Check the example below.
   */
  'deleted': /^[-–].*/m,
  'inserted': /^\+.*/m,

  /*
   * a string (double and simple quote)
   */
  'string': /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,

  /*
   * a git command. It starts with a random prompt finishing by a $, then "git" then some other parameters
   * For instance:
   * $ git add file.txt
   */
  'command': {
    pattern: /^.*\$ git .*$/m,
    inside: {
      /*
       * A git command can contain a parameter starting by a single or a double dash followed by a string
       * For instance:
       * $ git diff --cached
       * $ git log -p
       */
      'parameter': /\s--?\w+/
    }
  },

  /*
   * Coordinates displayed in a git diff command
   * For instance:
   * $ git diff
   * diff --git file.txt file.txt
   * index 6214953..1d54a52 100644
   * --- file.txt
   * +++ file.txt
   * @@ -1 +1,2 @@
   * -Here's my tetx file
   * +Here's my text file
   * +And this is the second line
   */
  'coord': /^@@.*@@$/m,

  /*
   * Match a "commit [SHA1]" line in a git log output.
   * For instance:
   * $ git log
   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09
   * Author: lgiraudel
   * Date:   Mon Feb 17 11:18:34 2014 +0100
   *
   *     Add of a new line
   */
  'commit-sha1': /^commit \w{40}$/m
};
/* "prismjs/components/prism-go" */

prism.languages.go = prism.languages.extend('clike', {
  'string': {
    pattern: /(^|[^\\])"(?:\\.|[^"\\\r\n])*"|`[^`]*`/,
    lookbehind: true,
    greedy: true
  },
  'keyword': /\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\b/,
  'boolean': /\b(?:_|false|iota|nil|true)\b/,
  'number': [// binary and octal integers
  /\b0(?:b[01_]+|o[0-7_]+)i?\b/i, // hexadecimal integers and floats
  /\b0x(?:[a-f\d_]+(?:\.[a-f\d_]*)?|\.[a-f\d_]+)(?:p[+-]?\d+(?:_\d+)*)?i?(?!\w)/i, // decimal integers and floats
  /(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?[\d_]+)?i?(?!\w)/i],
  'operator': /[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\./,
  'builtin': /\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\b/
});
prism.languages.insertBefore('go', 'string', {
  'char': {
    pattern: /'(?:\\.|[^'\\\r\n]){0,10}'/,
    greedy: true
  }
});
delete prism.languages.go['class-name'];
/* "prismjs/components/prism-markup-templating" */

(function (Prism) {
  /**
   * Returns the placeholder for the given language id and index.
   *
   * @param {string} language
   * @param {string|number} index
   * @returns {string}
   */
  function getPlaceholder(language, index) {
    return '___' + language.toUpperCase() + index + '___';
  }

  Object.defineProperties(Prism.languages['markup-templating'] = {}, {
    buildPlaceholders: {
      /**
       * Tokenize all inline templating expressions matching `placeholderPattern`.
       *
       * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns
       * `true` will be replaced.
       *
       * @param {object} env The environment of the `before-tokenize` hook.
       * @param {string} language The language id.
       * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.
       * @param {(match: string) => boolean} [replaceFilter]
       */
      value: function (env, language, placeholderPattern, replaceFilter) {
        if (env.language !== language) {
          return;
        }

        var tokenStack = env.tokenStack = [];
        env.code = env.code.replace(placeholderPattern, function (match) {
          if (typeof replaceFilter === 'function' && !replaceFilter(match)) {
            return match;
          }

          var i = tokenStack.length;
          var placeholder; // Check for existing strings

          while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {
            ++i;
          } // Create a sparse array


          tokenStack[i] = match;
          return placeholder;
        }); // Switch the grammar to markup

        env.grammar = Prism.languages.markup;
      }
    },
    tokenizePlaceholders: {
      /**
       * Replace placeholders with proper tokens after tokenizing.
       *
       * @param {object} env The environment of the `after-tokenize` hook.
       * @param {string} language The language id.
       */
      value: function (env, language) {
        if (env.language !== language || !env.tokenStack) {
          return;
        } // Switch the grammar back


        env.grammar = Prism.languages[language];
        var j = 0;
        var keys = Object.keys(env.tokenStack);

        function walkTokens(tokens) {
          for (var i = 0; i < tokens.length; i++) {
            // all placeholders are replaced already
            if (j >= keys.length) {
              break;
            }

            var token = tokens[i];

            if (typeof token === 'string' || token.content && typeof token.content === 'string') {
              var k = keys[j];
              var t = env.tokenStack[k];
              var s = typeof token === 'string' ? token : token.content;
              var placeholder = getPlaceholder(language, k);
              var index = s.indexOf(placeholder);

              if (index > -1) {
                ++j;
                var before = s.substring(0, index);
                var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);
                var after = s.substring(index + placeholder.length);
                var replacement = [];

                if (before) {
                  replacement.push.apply(replacement, walkTokens([before]));
                }

                replacement.push(middle);

                if (after) {
                  replacement.push.apply(replacement, walkTokens([after]));
                }

                if (typeof token === 'string') {
                  tokens.splice.apply(tokens, [i, 1].concat(replacement));
                } else {
                  token.content = replacement;
                }
              }
            } else if (token.content
            /* && typeof token.content !== 'string' */
            ) {
                walkTokens(token.content);
              }
          }

          return tokens;
        }

        walkTokens(env.tokens);
      }
    }
  });
})(prism);
/* "prismjs/components/prism-handlebars" */


(function (Prism) {
  Prism.languages.handlebars = {
    'comment': /\{\{![\s\S]*?\}\}/,
    'delimiter': {
      pattern: /^\{\{\{?|\}\}\}?$/,
      alias: 'punctuation'
    },
    'string': /(["'])(?:\\.|(?!\1)[^\\\r\n])*\1/,
    'number': /\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee][+-]?\d+)?/,
    'boolean': /\b(?:false|true)\b/,
    'block': {
      pattern: /^(\s*(?:~\s*)?)[#\/]\S+?(?=\s*(?:~\s*)?$|\s)/,
      lookbehind: true,
      alias: 'keyword'
    },
    'brackets': {
      pattern: /\[[^\]]+\]/,
      inside: {
        punctuation: /\[|\]/,
        variable: /[\s\S]+/
      }
    },
    'punctuation': /[!"#%&':()*+,.\/;<=>@\[\\\]^`{|}~]/,
    'variable': /[^!"#%&'()*+,\/;<=>@\[\\\]^`{|}~\s]+/
  };
  Prism.hooks.add('before-tokenize', function (env) {
    var handlebarsPattern = /\{\{\{[\s\S]+?\}\}\}|\{\{[\s\S]+?\}\}/g;
    Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);
  });
  Prism.hooks.add('after-tokenize', function (env) {
    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');
  });
  Prism.languages.hbs = Prism.languages.handlebars;
})(prism);
/* "prismjs/components/prism-json" */
// https://www.json.org/json-en.html


prism.languages.json = {
  'property': {
    pattern: /(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?=\s*:)/,
    lookbehind: true,
    greedy: true
  },
  'string': {
    pattern: /(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?!\s*:)/,
    lookbehind: true,
    greedy: true
  },
  'comment': {
    pattern: /\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,
    greedy: true
  },
  'number': /-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
  'punctuation': /[{}[\],]/,
  'operator': /:/,
  'boolean': /\b(?:false|true)\b/,
  'null': {
    pattern: /\bnull\b/,
    alias: 'keyword'
  }
};
prism.languages.webmanifest = prism.languages.json;
/* "prismjs/components/prism-less" */

/* FIXME :
 :extend() is not handled specifically : its highlighting is buggy.
 Mixin usage must be inside a ruleset to be highlighted.
 At-rules (e.g. import) containing interpolations are buggy.
 Detached rulesets are highlighted as at-rules.
 A comment before a mixin usage prevents the latter to be properly highlighted.
 */

prism.languages.less = prism.languages.extend('css', {
  'comment': [/\/\*[\s\S]*?\*\//, {
    pattern: /(^|[^\\])\/\/.*/,
    lookbehind: true
  }],
  'atrule': {
    pattern: /@[\w-](?:\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};\s]|\s+(?!\s))*?(?=\s*\{)/,
    inside: {
      'punctuation': /[:()]/
    }
  },
  // selectors and mixins are considered the same
  'selector': {
    pattern: /(?:@\{[\w-]+\}|[^{};\s@])(?:@\{[\w-]+\}|\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};@\s]|\s+(?!\s))*?(?=\s*\{)/,
    inside: {
      // mixin parameters
      'variable': /@+[\w-]+/
    }
  },
  'property': /(?:@\{[\w-]+\}|[\w-])+(?:\+_?)?(?=\s*:)/,
  'operator': /[+\-*\/]/
});
prism.languages.insertBefore('less', 'property', {
  'variable': [// Variable declaration (the colon must be consumed!)
  {
    pattern: /@[\w-]+\s*:/,
    inside: {
      'punctuation': /:/
    }
  }, // Variable usage
  /@@?[\w-]+/],
  'mixin-usage': {
    pattern: /([{;]\s*)[.#](?!\d)[\w-].*?(?=[(;])/,
    lookbehind: true,
    alias: 'function'
  }
});
/* "prismjs/components/prism-makefile" */

prism.languages.makefile = {
  'comment': {
    pattern: /(^|[^\\])#(?:\\(?:\r\n|[\s\S])|[^\\\r\n])*/,
    lookbehind: true
  },
  'string': {
    pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
    greedy: true
  },
  'builtin-target': {
    pattern: /\.[A-Z][^:#=\s]+(?=\s*:(?!=))/,
    alias: 'builtin'
  },
  'target': {
    pattern: /^(?:[^:=\s]|[ \t]+(?![\s:]))+(?=\s*:(?!=))/m,
    alias: 'symbol',
    inside: {
      'variable': /\$+(?:(?!\$)[^(){}:#=\s]+|(?=[({]))/
    }
  },
  'variable': /\$+(?:(?!\$)[^(){}:#=\s]+|\([@*%<^+?][DF]\)|(?=[({]))/,
  // Directives
  'keyword': /-include\b|\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\b/,
  'function': {
    pattern: /(\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \t])/,
    lookbehind: true
  },
  'operator': /(?:::|[?:+!])?=|[|@]/,
  'punctuation': /[:;(){}]/
};
/* "prismjs/components/prism-objectivec" */

prism.languages.objectivec = prism.languages.extend('c', {
  'string': {
    pattern: /@?"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,
    greedy: true
  },
  'keyword': /\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\b/,
  'operator': /-[->]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|\|?|[~^%?*\/@]/
});
delete prism.languages.objectivec['class-name'];
prism.languages.objc = prism.languages.objectivec;
/* "prismjs/components/prism-ocaml" */
// https://ocaml.org/manual/lex.html

prism.languages.ocaml = {
  'comment': {
    pattern: /\(\*[\s\S]*?\*\)/,
    greedy: true
  },
  'char': {
    pattern: /'(?:[^\\\r\n']|\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,
    greedy: true
  },
  'string': [{
    pattern: /"(?:\\(?:[\s\S]|\r\n)|[^\\\r\n"])*"/,
    greedy: true
  }, {
    pattern: /\{([a-z_]*)\|[\s\S]*?\|\1\}/,
    greedy: true
  }],
  'number': [// binary and octal
  /\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\b/i, // hexadecimal
  /\b0x[a-f0-9][a-f0-9_]*(?:\.[a-f0-9_]*)?(?:p[+-]?\d[\d_]*)?(?!\w)/i, // decimal
  /\b\d[\d_]*(?:\.[\d_]*)?(?:e[+-]?\d[\d_]*)?(?!\w)/i],
  'directive': {
    pattern: /\B#\w+/,
    alias: 'property'
  },
  'label': {
    pattern: /\B~\w+/,
    alias: 'property'
  },
  'type-variable': {
    pattern: /\B'\w+/,
    alias: 'function'
  },
  'variant': {
    pattern: /`\w+/,
    alias: 'symbol'
  },
  // For the list of keywords and operators,
  // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84
  'keyword': /\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\b/,
  'boolean': /\b(?:false|true)\b/,
  'operator-like-punctuation': {
    pattern: /\[[<>|]|[>|]\]|\{<|>\}/,
    alias: 'punctuation'
  },
  // Custom operators are allowed
  'operator': /\.[.~]|:[=>]|[=<>@^|&+\-*\/$%!?~][!$%&*+\-.\/:<=>?@^|~]*|\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\b/,
  'punctuation': /;;|::|[(){}\[\].,:;#]|\b_\b/
};
/* "prismjs/components/prism-python" */

prism.languages.python = {
  'comment': {
    pattern: /(^|[^\\])#.*/,
    lookbehind: true,
    greedy: true
  },
  'string-interpolation': {
    pattern: /(?:f|fr|rf)(?:("""|''')[\s\S]*?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i,
    greedy: true,
    inside: {
      'interpolation': {
        // "{" <expression> <optional "!s", "!r", or "!a"> <optional ":" format specifier> "}"
        pattern: /((?:^|[^{])(?:\{\{)*)\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}])+\})+\})+\}/,
        lookbehind: true,
        inside: {
          'format-spec': {
            pattern: /(:)[^:(){}]+(?=\}$)/,
            lookbehind: true
          },
          'conversion-option': {
            pattern: /![sra](?=[:}]$)/,
            alias: 'punctuation'
          },
          rest: null
        }
      },
      'string': /[\s\S]+/
    }
  },
  'triple-quoted-string': {
    pattern: /(?:[rub]|br|rb)?("""|''')[\s\S]*?\1/i,
    greedy: true,
    alias: 'string'
  },
  'string': {
    pattern: /(?:[rub]|br|rb)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i,
    greedy: true
  },
  'function': {
    pattern: /((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,
    lookbehind: true
  },
  'class-name': {
    pattern: /(\bclass\s+)\w+/i,
    lookbehind: true
  },
  'decorator': {
    pattern: /(^[\t ]*)@\w+(?:\.\w+)*/m,
    lookbehind: true,
    alias: ['annotation', 'punctuation'],
    inside: {
      'punctuation': /\./
    }
  },
  'keyword': /\b(?:_(?=\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/,
  'builtin': /\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,
  'boolean': /\b(?:False|None|True)\b/,
  'number': /\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\b|(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)(?:e[+-]?\d+(?:_\d+)*)?j?(?!\w)/i,
  'operator': /[-+%=]=?|!=|:=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,
  'punctuation': /[{}[\];(),.:]/
};
prism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = prism.languages.python;
prism.languages.py = prism.languages.python;
/* "prismjs/components/prism-reason" */

prism.languages.reason = prism.languages.extend('clike', {
  'string': {
    pattern: /"(?:\\(?:\r\n|[\s\S])|[^\\\r\n"])*"/,
    greedy: true
  },
  // 'class-name' must be matched *after* 'constructor' defined below
  'class-name': /\b[A-Z]\w*/,
  'keyword': /\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\b/,
  'operator': /\.{3}|:[:=]|\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\-*\/]\.?|\b(?:asr|land|lor|lsl|lsr|lxor|mod)\b/
});
prism.languages.insertBefore('reason', 'class-name', {
  'char': {
    pattern: /'(?:\\x[\da-f]{2}|\\o[0-3][0-7][0-7]|\\\d{3}|\\.|[^'\\\r\n])'/,
    greedy: true
  },
  // Negative look-ahead prevents from matching things like String.capitalize
  'constructor': /\b[A-Z]\w*\b(?!\s*\.)/,
  'label': {
    pattern: /\b[a-z]\w*(?=::)/,
    alias: 'symbol'
  }
}); // We can't match functions property, so let's not even try.

delete prism.languages.reason.function;
/* "prismjs/components/prism-sass" */

(function (Prism) {
  Prism.languages.sass = Prism.languages.extend('css', {
    // Sass comments don't need to be closed, only indented
    'comment': {
      pattern: /^([ \t]*)\/[\/*].*(?:(?:\r?\n|\r)\1[ \t].+)*/m,
      lookbehind: true,
      greedy: true
    }
  });
  Prism.languages.insertBefore('sass', 'atrule', {
    // We want to consume the whole line
    'atrule-line': {
      // Includes support for = and + shortcuts
      pattern: /^(?:[ \t]*)[@+=].+/m,
      greedy: true,
      inside: {
        'atrule': /(?:@[\w-]+|[+=])/
      }
    }
  });
  delete Prism.languages.sass.atrule;
  var variable = /\$[-\w]+|#\{\$[-\w]+\}/;
  var operator = [/[+*\/%]|[=!]=|<=?|>=?|\b(?:and|not|or)\b/, {
    pattern: /(\s)-(?=\s)/,
    lookbehind: true
  }];
  Prism.languages.insertBefore('sass', 'property', {
    // We want to consume the whole line
    'variable-line': {
      pattern: /^[ \t]*\$.+/m,
      greedy: true,
      inside: {
        'punctuation': /:/,
        'variable': variable,
        'operator': operator
      }
    },
    // We want to consume the whole line
    'property-line': {
      pattern: /^[ \t]*(?:[^:\s]+ *:.*|:[^:\s].*)/m,
      greedy: true,
      inside: {
        'property': [/[^:\s]+(?=\s*:)/, {
          pattern: /(:)[^:\s]+/,
          lookbehind: true
        }],
        'punctuation': /:/,
        'variable': variable,
        'operator': operator,
        'important': Prism.languages.sass.important
      }
    }
  });
  delete Prism.languages.sass.property;
  delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,
  // what's left should be selectors

  Prism.languages.insertBefore('sass', 'punctuation', {
    'selector': {
      pattern: /^([ \t]*)\S(?:,[^,\r\n]+|[^,\r\n]*)(?:,[^,\r\n]+)*(?:,(?:\r?\n|\r)\1[ \t]+\S(?:,[^,\r\n]+|[^,\r\n]*)(?:,[^,\r\n]+)*)*/m,
      lookbehind: true,
      greedy: true
    }
  });
})(prism);
/* "prismjs/components/prism-scss" */


prism.languages.scss = prism.languages.extend('css', {
  'comment': {
    pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
    lookbehind: true
  },
  'atrule': {
    pattern: /@[\w-](?:\([^()]+\)|[^()\s]|\s+(?!\s))*?(?=\s+[{;])/,
    inside: {
      'rule': /@[\w-]+/ // See rest below

    }
  },
  // url, compassified
  'url': /(?:[-a-z]+-)?url(?=\()/i,
  // CSS selector regex is not appropriate for Sass
  // since there can be lot more things (var, @ directive, nesting..)
  // a selector must start at the end of a property or after a brace (end of other rules or nesting)
  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable
  // the end of a selector is found when there is no rules in it ( {} or {\s}) or if there is a property (because an interpolated var
  // can "pass" as a selector- e.g: proper#{$erty})
  // this one was hard to do, so please be careful if you edit this one :)
  'selector': {
    // Initial look-ahead is used to prevent matching of blank selectors
    pattern: /(?=\S)[^@;{}()]?(?:[^@;{}()\s]|\s+(?!\s)|#\{\$[-\w]+\})+(?=\s*\{(?:\}|\s|[^}][^:{}]*[:{][^}]))/,
    inside: {
      'parent': {
        pattern: /&/,
        alias: 'important'
      },
      'placeholder': /%[-\w]+/,
      'variable': /\$[-\w]+|#\{\$[-\w]+\}/
    }
  },
  'property': {
    pattern: /(?:[-\w]|\$[-\w]|#\{\$[-\w]+\})+(?=\s*:)/,
    inside: {
      'variable': /\$[-\w]+|#\{\$[-\w]+\}/
    }
  }
});
prism.languages.insertBefore('scss', 'atrule', {
  'keyword': [/@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\b/i, {
    pattern: /( )(?:from|through)(?= )/,
    lookbehind: true
  }]
});
prism.languages.insertBefore('scss', 'important', {
  // var and interpolated vars
  'variable': /\$[-\w]+|#\{\$[-\w]+\}/
});
prism.languages.insertBefore('scss', 'function', {
  'module-modifier': {
    pattern: /\b(?:as|hide|show|with)\b/i,
    alias: 'keyword'
  },
  'placeholder': {
    pattern: /%[-\w]+/,
    alias: 'selector'
  },
  'statement': {
    pattern: /\B!(?:default|optional)\b/i,
    alias: 'keyword'
  },
  'boolean': /\b(?:false|true)\b/,
  'null': {
    pattern: /\bnull\b/,
    alias: 'keyword'
  },
  'operator': {
    pattern: /(\s)(?:[-+*\/%]|[=!]=|<=?|>=?|and|not|or)(?=\s)/,
    lookbehind: true
  }
});
prism.languages.scss['atrule'].inside.rest = prism.languages.scss;
/* "prismjs/components/prism-stylus" */

(function (Prism) {
  var unit = {
    pattern: /(\b\d+)(?:%|[a-z]+)/,
    lookbehind: true
  }; // 123 -123 .123 -.123 12.3 -12.3

  var number = {
    pattern: /(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)/,
    lookbehind: true
  };
  var inside = {
    'comment': {
      pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
      lookbehind: true
    },
    'url': {
      pattern: /\burl\((["']?).*?\1\)/i,
      greedy: true
    },
    'string': {
      pattern: /("|')(?:(?!\1)[^\\\r\n]|\\(?:\r\n|[\s\S]))*\1/,
      greedy: true
    },
    'interpolation': null,
    // See below
    'func': null,
    // See below
    'important': /\B!(?:important|optional)\b/i,
    'keyword': {
      pattern: /(^|\s+)(?:(?:else|for|if|return|unless)(?=\s|$)|@[\w-]+)/,
      lookbehind: true
    },
    'hexcode': /#[\da-f]{3,6}/i,
    'color': [/\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\b/i, {
      pattern: /\b(?:hsl|rgb)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:hsl|rgb)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i,
      inside: {
        'unit': unit,
        'number': number,
        'function': /[\w-]+(?=\()/,
        'punctuation': /[(),]/
      }
    }],
    'entity': /\\[\da-f]{1,8}/i,
    'unit': unit,
    'boolean': /\b(?:false|true)\b/,
    'operator': [// We want non-word chars around "-" because it is
    // accepted in property names.
    /~|[+!\/%<>?=]=?|[-:]=|\*[*=]?|\.{2,3}|&&|\|\||\B-\B|\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\b/],
    'number': number,
    'punctuation': /[{}()\[\];:,]/
  };
  inside['interpolation'] = {
    pattern: /\{[^\r\n}:]+\}/,
    alias: 'variable',
    inside: {
      'delimiter': {
        pattern: /^\{|\}$/,
        alias: 'punctuation'
      },
      rest: inside
    }
  };
  inside['func'] = {
    pattern: /[\w-]+\([^)]*\).*/,
    inside: {
      'function': /^[^(]+/,
      rest: inside
    }
  };
  Prism.languages.stylus = {
    'atrule-declaration': {
      pattern: /(^[ \t]*)@.+/m,
      lookbehind: true,
      inside: {
        'atrule': /^@[\w-]+/,
        rest: inside
      }
    },
    'variable-declaration': {
      pattern: /(^[ \t]*)[\w$-]+\s*.?=[ \t]*(?:\{[^{}]*\}|\S.*|$)/m,
      lookbehind: true,
      inside: {
        'variable': /^\S+/,
        rest: inside
      }
    },
    'statement': {
      pattern: /(^[ \t]*)(?:else|for|if|return|unless)[ \t].+/m,
      lookbehind: true,
      inside: {
        'keyword': /^\S+/,
        rest: inside
      }
    },
    // A property/value pair cannot end with a comma or a brace
    // It cannot have indented content unless it ended with a semicolon
    'property-declaration': {
      pattern: /((?:^|\{)([ \t]*))(?:[\w-]|\{[^}\r\n]+\})+(?:\s*:\s*|[ \t]+)(?!\s)[^{\r\n]*(?:;|[^{\r\n,]$(?!(?:\r?\n|\r)(?:\{|\2[ \t])))/m,
      lookbehind: true,
      inside: {
        'property': {
          pattern: /^[^\s:]+/,
          inside: {
            'interpolation': inside.interpolation
          }
        },
        rest: inside
      }
    },
    // A selector can contain parentheses only as part of a pseudo-element
    // It can span multiple lines.
    // It must end with a comma or an accolade or have indented content.
    'selector': {
      pattern: /(^[ \t]*)(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\)|(?![\w-]))|\{[^}\r\n]+\})+)(?:(?:\r?\n|\r)(?:\1(?:(?=\S)(?:[^{}\r\n:()]|::?[\w-]+(?:\([^)\r\n]*\)|(?![\w-]))|\{[^}\r\n]+\})+)))*(?:,$|\{|(?=(?:\r?\n|\r)(?:\{|\1[ \t])))/m,
      lookbehind: true,
      inside: {
        'interpolation': inside.interpolation,
        'comment': inside.comment,
        'punctuation': /[{},]/
      }
    },
    'func': inside.func,
    'string': inside.string,
    'comment': {
      pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
      lookbehind: true,
      greedy: true
    },
    'interpolation': inside.interpolation,
    'punctuation': /[{}()\[\];:.]/
  };
})(prism);
/* "prismjs/components/prism-tsx" */


(function (Prism) {
  var typescript = Prism.util.clone(Prism.languages.typescript);
  Prism.languages.tsx = Prism.languages.extend('jsx', typescript); // doesn't work with TS because TS is too complex

  delete Prism.languages.tsx['parameter'];
  delete Prism.languages.tsx['literal-property']; // This will prevent collisions between TSX tags and TS generic types.
  // Idea by https://github.com/karlhorky
  // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928

  var tag = Prism.languages.tsx.tag;
  tag.pattern = RegExp(/(^|[^\w$]|(?=<\/))/.source + '(?:' + tag.pattern.source + ')', tag.pattern.flags);
  tag.lookbehind = true;
})(prism);
/* "prismjs/components/prism-wasm" */


prism.languages.wasm = {
  'comment': [/\(;[\s\S]*?;\)/, {
    pattern: /;;.*/,
    greedy: true
  }],
  'string': {
    pattern: /"(?:\\[\s\S]|[^"\\])*"/,
    greedy: true
  },
  'keyword': [{
    pattern: /\b(?:align|offset)=/,
    inside: {
      'operator': /=/
    }
  }, {
    pattern: /\b(?:(?:f32|f64|i32|i64)(?:\.(?:abs|add|and|ceil|clz|const|convert_[su]\/i(?:32|64)|copysign|ctz|demote\/f64|div(?:_[su])?|eqz?|extend_[su]\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\/f32|reinterpret\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\/f(?:32|64))?|wrap\/i64|xor))?|memory\.(?:grow|size))\b/,
    inside: {
      'punctuation': /\./
    }
  }, /\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\b/],
  'variable': /\$[\w!#$%&'*+\-./:<=>?@\\^`|~]+/,
  'number': /[+-]?\b(?:\d(?:_?\d)*(?:\.\d(?:_?\d)*)?(?:[eE][+-]?\d(?:_?\d)*)?|0x[\da-fA-F](?:_?[\da-fA-F])*(?:\.[\da-fA-F](?:_?[\da-fA-D])*)?(?:[pP][+-]?\d(?:_?\d)*)?)\b|\binf\b|\bnan(?::0x[\da-fA-F](?:_?[\da-fA-D])*)?\b/,
  'punctuation': /[()]/
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (prism);


/***/ }),

/***/ "./node_modules/prism-react-renderer/themes/duotoneDark/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/prism-react-renderer/themes/duotoneDark/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Duotone Dark
// Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)
// Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)
// Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)
var theme = {
  plain: {
    backgroundColor: "#2a2734",
    color: "#9a86fd"
  },
  styles: [{
    types: ["comment", "prolog", "doctype", "cdata", "punctuation"],
    style: {
      color: "#6c6783"
    }
  }, {
    types: ["namespace"],
    style: {
      opacity: 0.7
    }
  }, {
    types: ["tag", "operator", "number"],
    style: {
      color: "#e09142"
    }
  }, {
    types: ["property", "function"],
    style: {
      color: "#9a86fd"
    }
  }, {
    types: ["tag-id", "selector", "atrule-id"],
    style: {
      color: "#eeebff"
    }
  }, {
    types: ["attr-name"],
    style: {
      color: "#c4b9fe"
    }
  }, {
    types: ["boolean", "string", "entity", "url", "attr-value", "keyword", "control", "directive", "unit", "statement", "regex", "atrule", "placeholder", "variable"],
    style: {
      color: "#ffcc99"
    }
  }, {
    types: ["deleted"],
    style: {
      textDecorationLine: "line-through"
    }
  }, {
    types: ["inserted"],
    style: {
      textDecorationLine: "underline"
    }
  }, {
    types: ["italic"],
    style: {
      fontStyle: "italic"
    }
  }, {
    types: ["important", "bold"],
    style: {
      fontWeight: "bold"
    }
  }, {
    types: ["important"],
    style: {
      color: "#c4b9fe"
    }
  }]
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (theme);


/***/ }),

/***/ "./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js":
/*!*************************************************************************!*\
  !*** ./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * A collection of shims that provide minimal functionality of the ES6 collections.
 *
 * These implementations are not meant to be used outside of the ResizeObserver
 * modules as they cover only a limited range of use cases.
 */
/* eslint-disable require-jsdoc, valid-jsdoc */
var MapShim = (function () {
    if (typeof Map !== 'undefined') {
        return Map;
    }
    /**
     * Returns index in provided array that matches the specified key.
     *
     * @param {Array<Array>} arr
     * @param {*} key
     * @returns {number}
     */
    function getIndex(arr, key) {
        var result = -1;
        arr.some(function (entry, index) {
            if (entry[0] === key) {
                result = index;
                return true;
            }
            return false;
        });
        return result;
    }
    return /** @class */ (function () {
        function class_1() {
            this.__entries__ = [];
        }
        Object.defineProperty(class_1.prototype, "size", {
            /**
             * @returns {boolean}
             */
            get: function () {
                return this.__entries__.length;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @param {*} key
         * @returns {*}
         */
        class_1.prototype.get = function (key) {
            var index = getIndex(this.__entries__, key);
            var entry = this.__entries__[index];
            return entry && entry[1];
        };
        /**
         * @param {*} key
         * @param {*} value
         * @returns {void}
         */
        class_1.prototype.set = function (key, value) {
            var index = getIndex(this.__entries__, key);
            if (~index) {
                this.__entries__[index][1] = value;
            }
            else {
                this.__entries__.push([key, value]);
            }
        };
        /**
         * @param {*} key
         * @returns {void}
         */
        class_1.prototype.delete = function (key) {
            var entries = this.__entries__;
            var index = getIndex(entries, key);
            if (~index) {
                entries.splice(index, 1);
            }
        };
        /**
         * @param {*} key
         * @returns {void}
         */
        class_1.prototype.has = function (key) {
            return !!~getIndex(this.__entries__, key);
        };
        /**
         * @returns {void}
         */
        class_1.prototype.clear = function () {
            this.__entries__.splice(0);
        };
        /**
         * @param {Function} callback
         * @param {*} [ctx=null]
         * @returns {void}
         */
        class_1.prototype.forEach = function (callback, ctx) {
            if (ctx === void 0) { ctx = null; }
            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {
                var entry = _a[_i];
                callback.call(ctx, entry[1], entry[0]);
            }
        };
        return class_1;
    }());
})();

/**
 * Detects whether window and document objects are available in current environment.
 */
var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;

// Returns global object of a current environment.
var global$1 = (function () {
    if (typeof __webpack_require__.g !== 'undefined' && __webpack_require__.g.Math === Math) {
        return __webpack_require__.g;
    }
    if (typeof self !== 'undefined' && self.Math === Math) {
        return self;
    }
    if (typeof window !== 'undefined' && window.Math === Math) {
        return window;
    }
    // eslint-disable-next-line no-new-func
    return Function('return this')();
})();

/**
 * A shim for the requestAnimationFrame which falls back to the setTimeout if
 * first one is not supported.
 *
 * @returns {number} Requests' identifier.
 */
var requestAnimationFrame$1 = (function () {
    if (typeof requestAnimationFrame === 'function') {
        // It's required to use a bounded function because IE sometimes throws
        // an "Invalid calling object" error if rAF is invoked without the global
        // object on the left hand side.
        return requestAnimationFrame.bind(global$1);
    }
    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };
})();

// Defines minimum timeout before adding a trailing call.
var trailingTimeout = 2;
/**
 * Creates a wrapper function which ensures that provided callback will be
 * invoked only once during the specified delay period.
 *
 * @param {Function} callback - Function to be invoked after the delay period.
 * @param {number} delay - Delay after which to invoke callback.
 * @returns {Function}
 */
function throttle (callback, delay) {
    var leadingCall = false, trailingCall = false, lastCallTime = 0;
    /**
     * Invokes the original callback function and schedules new invocation if
     * the "proxy" was called during current request.
     *
     * @returns {void}
     */
    function resolvePending() {
        if (leadingCall) {
            leadingCall = false;
            callback();
        }
        if (trailingCall) {
            proxy();
        }
    }
    /**
     * Callback invoked after the specified delay. It will further postpone
     * invocation of the original function delegating it to the
     * requestAnimationFrame.
     *
     * @returns {void}
     */
    function timeoutCallback() {
        requestAnimationFrame$1(resolvePending);
    }
    /**
     * Schedules invocation of the original function.
     *
     * @returns {void}
     */
    function proxy() {
        var timeStamp = Date.now();
        if (leadingCall) {
            // Reject immediately following calls.
            if (timeStamp - lastCallTime < trailingTimeout) {
                return;
            }
            // Schedule new call to be in invoked when the pending one is resolved.
            // This is important for "transitions" which never actually start
            // immediately so there is a chance that we might miss one if change
            // happens amids the pending invocation.
            trailingCall = true;
        }
        else {
            leadingCall = true;
            trailingCall = false;
            setTimeout(timeoutCallback, delay);
        }
        lastCallTime = timeStamp;
    }
    return proxy;
}

// Minimum delay before invoking the update of observers.
var REFRESH_DELAY = 20;
// A list of substrings of CSS properties used to find transition events that
// might affect dimensions of observed elements.
var transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];
// Check if MutationObserver is available.
var mutationObserverSupported = typeof MutationObserver !== 'undefined';
/**
 * Singleton controller class which handles updates of ResizeObserver instances.
 */
var ResizeObserverController = /** @class */ (function () {
    /**
     * Creates a new instance of ResizeObserverController.
     *
     * @private
     */
    function ResizeObserverController() {
        /**
         * Indicates whether DOM listeners have been added.
         *
         * @private {boolean}
         */
        this.connected_ = false;
        /**
         * Tells that controller has subscribed for Mutation Events.
         *
         * @private {boolean}
         */
        this.mutationEventsAdded_ = false;
        /**
         * Keeps reference to the instance of MutationObserver.
         *
         * @private {MutationObserver}
         */
        this.mutationsObserver_ = null;
        /**
         * A list of connected observers.
         *
         * @private {Array<ResizeObserverSPI>}
         */
        this.observers_ = [];
        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);
    }
    /**
     * Adds observer to observers list.
     *
     * @param {ResizeObserverSPI} observer - Observer to be added.
     * @returns {void}
     */
    ResizeObserverController.prototype.addObserver = function (observer) {
        if (!~this.observers_.indexOf(observer)) {
            this.observers_.push(observer);
        }
        // Add listeners if they haven't been added yet.
        if (!this.connected_) {
            this.connect_();
        }
    };
    /**
     * Removes observer from observers list.
     *
     * @param {ResizeObserverSPI} observer - Observer to be removed.
     * @returns {void}
     */
    ResizeObserverController.prototype.removeObserver = function (observer) {
        var observers = this.observers_;
        var index = observers.indexOf(observer);
        // Remove observer if it's present in registry.
        if (~index) {
            observers.splice(index, 1);
        }
        // Remove listeners if controller has no connected observers.
        if (!observers.length && this.connected_) {
            this.disconnect_();
        }
    };
    /**
     * Invokes the update of observers. It will continue running updates insofar
     * it detects changes.
     *
     * @returns {void}
     */
    ResizeObserverController.prototype.refresh = function () {
        var changesDetected = this.updateObservers_();
        // Continue running updates if changes have been detected as there might
        // be future ones caused by CSS transitions.
        if (changesDetected) {
            this.refresh();
        }
    };
    /**
     * Updates every observer from observers list and notifies them of queued
     * entries.
     *
     * @private
     * @returns {boolean} Returns "true" if any observer has detected changes in
     *      dimensions of it's elements.
     */
    ResizeObserverController.prototype.updateObservers_ = function () {
        // Collect observers that have active observations.
        var activeObservers = this.observers_.filter(function (observer) {
            return observer.gatherActive(), observer.hasActive();
        });
        // Deliver notifications in a separate cycle in order to avoid any
        // collisions between observers, e.g. when multiple instances of
        // ResizeObserver are tracking the same element and the callback of one
        // of them changes content dimensions of the observed target. Sometimes
        // this may result in notifications being blocked for the rest of observers.
        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });
        return activeObservers.length > 0;
    };
    /**
     * Initializes DOM listeners.
     *
     * @private
     * @returns {void}
     */
    ResizeObserverController.prototype.connect_ = function () {
        // Do nothing if running in a non-browser environment or if listeners
        // have been already added.
        if (!isBrowser || this.connected_) {
            return;
        }
        // Subscription to the "Transitionend" event is used as a workaround for
        // delayed transitions. This way it's possible to capture at least the
        // final state of an element.
        document.addEventListener('transitionend', this.onTransitionEnd_);
        window.addEventListener('resize', this.refresh);
        if (mutationObserverSupported) {
            this.mutationsObserver_ = new MutationObserver(this.refresh);
            this.mutationsObserver_.observe(document, {
                attributes: true,
                childList: true,
                characterData: true,
                subtree: true
            });
        }
        else {
            document.addEventListener('DOMSubtreeModified', this.refresh);
            this.mutationEventsAdded_ = true;
        }
        this.connected_ = true;
    };
    /**
     * Removes DOM listeners.
     *
     * @private
     * @returns {void}
     */
    ResizeObserverController.prototype.disconnect_ = function () {
        // Do nothing if running in a non-browser environment or if listeners
        // have been already removed.
        if (!isBrowser || !this.connected_) {
            return;
        }
        document.removeEventListener('transitionend', this.onTransitionEnd_);
        window.removeEventListener('resize', this.refresh);
        if (this.mutationsObserver_) {
            this.mutationsObserver_.disconnect();
        }
        if (this.mutationEventsAdded_) {
            document.removeEventListener('DOMSubtreeModified', this.refresh);
        }
        this.mutationsObserver_ = null;
        this.mutationEventsAdded_ = false;
        this.connected_ = false;
    };
    /**
     * "Transitionend" event handler.
     *
     * @private
     * @param {TransitionEvent} event
     * @returns {void}
     */
    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {
        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;
        // Detect whether transition may affect dimensions of an element.
        var isReflowProperty = transitionKeys.some(function (key) {
            return !!~propertyName.indexOf(key);
        });
        if (isReflowProperty) {
            this.refresh();
        }
    };
    /**
     * Returns instance of the ResizeObserverController.
     *
     * @returns {ResizeObserverController}
     */
    ResizeObserverController.getInstance = function () {
        if (!this.instance_) {
            this.instance_ = new ResizeObserverController();
        }
        return this.instance_;
    };
    /**
     * Holds reference to the controller's instance.
     *
     * @private {ResizeObserverController}
     */
    ResizeObserverController.instance_ = null;
    return ResizeObserverController;
}());

/**
 * Defines non-writable/enumerable properties of the provided target object.
 *
 * @param {Object} target - Object for which to define properties.
 * @param {Object} props - Properties to be defined.
 * @returns {Object} Target object.
 */
var defineConfigurable = (function (target, props) {
    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {
        var key = _a[_i];
        Object.defineProperty(target, key, {
            value: props[key],
            enumerable: false,
            writable: false,
            configurable: true
        });
    }
    return target;
});

/**
 * Returns the global object associated with provided element.
 *
 * @param {Object} target
 * @returns {Object}
 */
var getWindowOf = (function (target) {
    // Assume that the element is an instance of Node, which means that it
    // has the "ownerDocument" property from which we can retrieve a
    // corresponding global object.
    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;
    // Return the local global object if it's not possible extract one from
    // provided element.
    return ownerGlobal || global$1;
});

// Placeholder of an empty content rectangle.
var emptyRect = createRectInit(0, 0, 0, 0);
/**
 * Converts provided string to a number.
 *
 * @param {number|string} value
 * @returns {number}
 */
function toFloat(value) {
    return parseFloat(value) || 0;
}
/**
 * Extracts borders size from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @param {...string} positions - Borders positions (top, right, ...)
 * @returns {number}
 */
function getBordersSize(styles) {
    var positions = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        positions[_i - 1] = arguments[_i];
    }
    return positions.reduce(function (size, position) {
        var value = styles['border-' + position + '-width'];
        return size + toFloat(value);
    }, 0);
}
/**
 * Extracts paddings sizes from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @returns {Object} Paddings box.
 */
function getPaddings(styles) {
    var positions = ['top', 'right', 'bottom', 'left'];
    var paddings = {};
    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {
        var position = positions_1[_i];
        var value = styles['padding-' + position];
        paddings[position] = toFloat(value);
    }
    return paddings;
}
/**
 * Calculates content rectangle of provided SVG element.
 *
 * @param {SVGGraphicsElement} target - Element content rectangle of which needs
 *      to be calculated.
 * @returns {DOMRectInit}
 */
function getSVGContentRect(target) {
    var bbox = target.getBBox();
    return createRectInit(0, 0, bbox.width, bbox.height);
}
/**
 * Calculates content rectangle of provided HTMLElement.
 *
 * @param {HTMLElement} target - Element for which to calculate the content rectangle.
 * @returns {DOMRectInit}
 */
function getHTMLElementContentRect(target) {
    // Client width & height properties can't be
    // used exclusively as they provide rounded values.
    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;
    // By this condition we can catch all non-replaced inline, hidden and
    // detached elements. Though elements with width & height properties less
    // than 0.5 will be discarded as well.
    //
    // Without it we would need to implement separate methods for each of
    // those cases and it's not possible to perform a precise and performance
    // effective test for hidden elements. E.g. even jQuery's ':visible' filter
    // gives wrong results for elements with width & height less than 0.5.
    if (!clientWidth && !clientHeight) {
        return emptyRect;
    }
    var styles = getWindowOf(target).getComputedStyle(target);
    var paddings = getPaddings(styles);
    var horizPad = paddings.left + paddings.right;
    var vertPad = paddings.top + paddings.bottom;
    // Computed styles of width & height are being used because they are the
    // only dimensions available to JS that contain non-rounded values. It could
    // be possible to utilize the getBoundingClientRect if only it's data wasn't
    // affected by CSS transformations let alone paddings, borders and scroll bars.
    var width = toFloat(styles.width), height = toFloat(styles.height);
    // Width & height include paddings and borders when the 'border-box' box
    // model is applied (except for IE).
    if (styles.boxSizing === 'border-box') {
        // Following conditions are required to handle Internet Explorer which
        // doesn't include paddings and borders to computed CSS dimensions.
        //
        // We can say that if CSS dimensions + paddings are equal to the "client"
        // properties then it's either IE, and thus we don't need to subtract
        // anything, or an element merely doesn't have paddings/borders styles.
        if (Math.round(width + horizPad) !== clientWidth) {
            width -= getBordersSize(styles, 'left', 'right') + horizPad;
        }
        if (Math.round(height + vertPad) !== clientHeight) {
            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;
        }
    }
    // Following steps can't be applied to the document's root element as its
    // client[Width/Height] properties represent viewport area of the window.
    // Besides, it's as well not necessary as the <html> itself neither has
    // rendered scroll bars nor it can be clipped.
    if (!isDocumentElement(target)) {
        // In some browsers (only in Firefox, actually) CSS width & height
        // include scroll bars size which can be removed at this step as scroll
        // bars are the only difference between rounded dimensions + paddings
        // and "client" properties, though that is not always true in Chrome.
        var vertScrollbar = Math.round(width + horizPad) - clientWidth;
        var horizScrollbar = Math.round(height + vertPad) - clientHeight;
        // Chrome has a rather weird rounding of "client" properties.
        // E.g. for an element with content width of 314.2px it sometimes gives
        // the client width of 315px and for the width of 314.7px it may give
        // 314px. And it doesn't happen all the time. So just ignore this delta
        // as a non-relevant.
        if (Math.abs(vertScrollbar) !== 1) {
            width -= vertScrollbar;
        }
        if (Math.abs(horizScrollbar) !== 1) {
            height -= horizScrollbar;
        }
    }
    return createRectInit(paddings.left, paddings.top, width, height);
}
/**
 * Checks whether provided element is an instance of the SVGGraphicsElement.
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */
var isSVGGraphicsElement = (function () {
    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement
    // interface.
    if (typeof SVGGraphicsElement !== 'undefined') {
        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };
    }
    // If it's so, then check that element is at least an instance of the
    // SVGElement and that it has the "getBBox" method.
    // eslint-disable-next-line no-extra-parens
    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&
        typeof target.getBBox === 'function'); };
})();
/**
 * Checks whether provided element is a document element (<html>).
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */
function isDocumentElement(target) {
    return target === getWindowOf(target).document.documentElement;
}
/**
 * Calculates an appropriate content rectangle for provided html or svg element.
 *
 * @param {Element} target - Element content rectangle of which needs to be calculated.
 * @returns {DOMRectInit}
 */
function getContentRect(target) {
    if (!isBrowser) {
        return emptyRect;
    }
    if (isSVGGraphicsElement(target)) {
        return getSVGContentRect(target);
    }
    return getHTMLElementContentRect(target);
}
/**
 * Creates rectangle with an interface of the DOMRectReadOnly.
 * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly
 *
 * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.
 * @returns {DOMRectReadOnly}
 */
function createReadOnlyRect(_a) {
    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;
    // If DOMRectReadOnly is available use it as a prototype for the rectangle.
    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;
    var rect = Object.create(Constr.prototype);
    // Rectangle's properties are not writable and non-enumerable.
    defineConfigurable(rect, {
        x: x, y: y, width: width, height: height,
        top: y,
        right: x + width,
        bottom: height + y,
        left: x
    });
    return rect;
}
/**
 * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.
 * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit
 *
 * @param {number} x - X coordinate.
 * @param {number} y - Y coordinate.
 * @param {number} width - Rectangle's width.
 * @param {number} height - Rectangle's height.
 * @returns {DOMRectInit}
 */
function createRectInit(x, y, width, height) {
    return { x: x, y: y, width: width, height: height };
}

/**
 * Class that is responsible for computations of the content rectangle of
 * provided DOM element and for keeping track of it's changes.
 */
var ResizeObservation = /** @class */ (function () {
    /**
     * Creates an instance of ResizeObservation.
     *
     * @param {Element} target - Element to be observed.
     */
    function ResizeObservation(target) {
        /**
         * Broadcasted width of content rectangle.
         *
         * @type {number}
         */
        this.broadcastWidth = 0;
        /**
         * Broadcasted height of content rectangle.
         *
         * @type {number}
         */
        this.broadcastHeight = 0;
        /**
         * Reference to the last observed content rectangle.
         *
         * @private {DOMRectInit}
         */
        this.contentRect_ = createRectInit(0, 0, 0, 0);
        this.target = target;
    }
    /**
     * Updates content rectangle and tells whether it's width or height properties
     * have changed since the last broadcast.
     *
     * @returns {boolean}
     */
    ResizeObservation.prototype.isActive = function () {
        var rect = getContentRect(this.target);
        this.contentRect_ = rect;
        return (rect.width !== this.broadcastWidth ||
            rect.height !== this.broadcastHeight);
    };
    /**
     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data
     * from the corresponding properties of the last observed content rectangle.
     *
     * @returns {DOMRectInit} Last observed content rectangle.
     */
    ResizeObservation.prototype.broadcastRect = function () {
        var rect = this.contentRect_;
        this.broadcastWidth = rect.width;
        this.broadcastHeight = rect.height;
        return rect;
    };
    return ResizeObservation;
}());

var ResizeObserverEntry = /** @class */ (function () {
    /**
     * Creates an instance of ResizeObserverEntry.
     *
     * @param {Element} target - Element that is being observed.
     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.
     */
    function ResizeObserverEntry(target, rectInit) {
        var contentRect = createReadOnlyRect(rectInit);
        // According to the specification following properties are not writable
        // and are also not enumerable in the native implementation.
        //
        // Property accessors are not being used as they'd require to define a
        // private WeakMap storage which may cause memory leaks in browsers that
        // don't support this type of collections.
        defineConfigurable(this, { target: target, contentRect: contentRect });
    }
    return ResizeObserverEntry;
}());

var ResizeObserverSPI = /** @class */ (function () {
    /**
     * Creates a new instance of ResizeObserver.
     *
     * @param {ResizeObserverCallback} callback - Callback function that is invoked
     *      when one of the observed elements changes it's content dimensions.
     * @param {ResizeObserverController} controller - Controller instance which
     *      is responsible for the updates of observer.
     * @param {ResizeObserver} callbackCtx - Reference to the public
     *      ResizeObserver instance which will be passed to callback function.
     */
    function ResizeObserverSPI(callback, controller, callbackCtx) {
        /**
         * Collection of resize observations that have detected changes in dimensions
         * of elements.
         *
         * @private {Array<ResizeObservation>}
         */
        this.activeObservations_ = [];
        /**
         * Registry of the ResizeObservation instances.
         *
         * @private {Map<Element, ResizeObservation>}
         */
        this.observations_ = new MapShim();
        if (typeof callback !== 'function') {
            throw new TypeError('The callback provided as parameter 1 is not a function.');
        }
        this.callback_ = callback;
        this.controller_ = controller;
        this.callbackCtx_ = callbackCtx;
    }
    /**
     * Starts observing provided element.
     *
     * @param {Element} target - Element to be observed.
     * @returns {void}
     */
    ResizeObserverSPI.prototype.observe = function (target) {
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        // Do nothing if current environment doesn't have the Element interface.
        if (typeof Element === 'undefined' || !(Element instanceof Object)) {
            return;
        }
        if (!(target instanceof getWindowOf(target).Element)) {
            throw new TypeError('parameter 1 is not of type "Element".');
        }
        var observations = this.observations_;
        // Do nothing if element is already being observed.
        if (observations.has(target)) {
            return;
        }
        observations.set(target, new ResizeObservation(target));
        this.controller_.addObserver(this);
        // Force the update of observations.
        this.controller_.refresh();
    };
    /**
     * Stops observing provided element.
     *
     * @param {Element} target - Element to stop observing.
     * @returns {void}
     */
    ResizeObserverSPI.prototype.unobserve = function (target) {
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        // Do nothing if current environment doesn't have the Element interface.
        if (typeof Element === 'undefined' || !(Element instanceof Object)) {
            return;
        }
        if (!(target instanceof getWindowOf(target).Element)) {
            throw new TypeError('parameter 1 is not of type "Element".');
        }
        var observations = this.observations_;
        // Do nothing if element is not being observed.
        if (!observations.has(target)) {
            return;
        }
        observations.delete(target);
        if (!observations.size) {
            this.controller_.removeObserver(this);
        }
    };
    /**
     * Stops observing all elements.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.disconnect = function () {
        this.clearActive();
        this.observations_.clear();
        this.controller_.removeObserver(this);
    };
    /**
     * Collects observation instances the associated element of which has changed
     * it's content rectangle.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.gatherActive = function () {
        var _this = this;
        this.clearActive();
        this.observations_.forEach(function (observation) {
            if (observation.isActive()) {
                _this.activeObservations_.push(observation);
            }
        });
    };
    /**
     * Invokes initial callback function with a list of ResizeObserverEntry
     * instances collected from active resize observations.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.broadcastActive = function () {
        // Do nothing if observer doesn't have active observations.
        if (!this.hasActive()) {
            return;
        }
        var ctx = this.callbackCtx_;
        // Create ResizeObserverEntry instance for every active observation.
        var entries = this.activeObservations_.map(function (observation) {
            return new ResizeObserverEntry(observation.target, observation.broadcastRect());
        });
        this.callback_.call(ctx, entries, ctx);
        this.clearActive();
    };
    /**
     * Clears the collection of active observations.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.clearActive = function () {
        this.activeObservations_.splice(0);
    };
    /**
     * Tells whether observer has active observations.
     *
     * @returns {boolean}
     */
    ResizeObserverSPI.prototype.hasActive = function () {
        return this.activeObservations_.length > 0;
    };
    return ResizeObserverSPI;
}());

// Registry of internal observers. If WeakMap is not available use current shim
// for the Map collection as it has all required methods and because WeakMap
// can't be fully polyfilled anyway.
var observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();
/**
 * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation
 * exposing only those methods and properties that are defined in the spec.
 */
var ResizeObserver = /** @class */ (function () {
    /**
     * Creates a new instance of ResizeObserver.
     *
     * @param {ResizeObserverCallback} callback - Callback that is invoked when
     *      dimensions of the observed elements change.
     */
    function ResizeObserver(callback) {
        if (!(this instanceof ResizeObserver)) {
            throw new TypeError('Cannot call a class as a function.');
        }
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        var controller = ResizeObserverController.getInstance();
        var observer = new ResizeObserverSPI(callback, controller, this);
        observers.set(this, observer);
    }
    return ResizeObserver;
}());
// Expose public methods of ResizeObserver.
[
    'observe',
    'unobserve',
    'disconnect'
].forEach(function (method) {
    ResizeObserver.prototype[method] = function () {
        var _a;
        return (_a = observers.get(this))[method].apply(_a, arguments);
    };
});

var index = (function () {
    // Export existing implementation if available.
    if (typeof global$1.ResizeObserver !== 'undefined') {
        return global$1.ResizeObserver;
    }
    return ResizeObserver;
})();

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (index);


/***/ }),

/***/ "./node_modules/@inovua/reactdatagrid-community/index.css":
/*!****************************************************************!*\
  !*** ./node_modules/@inovua/reactdatagrid-community/index.css ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_cjs_js_ruleSet_1_rules_5_oneOf_1_use_1_laravel_mix_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_5_oneOf_1_use_2_index_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../css-loader/dist/cjs.js??ruleSet[1].rules[5].oneOf[1].use[1]!../../laravel-mix/node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[5].oneOf[1].use[2]!./index.css */ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[5].oneOf[1].use[1]!./node_modules/laravel-mix/node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[5].oneOf[1].use[2]!./node_modules/@inovua/reactdatagrid-community/index.css");

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_ruleSet_1_rules_5_oneOf_1_use_1_laravel_mix_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_5_oneOf_1_use_2_index_css__WEBPACK_IMPORTED_MODULE_1__["default"], options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_ruleSet_1_rules_5_oneOf_1_use_1_laravel_mix_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_5_oneOf_1_use_2_index_css__WEBPACK_IMPORTED_MODULE_1__["default"].locals || {});

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/arrayLikeToArray.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayLikeToArray.js ***!
  \*****************************************************************/
/***/ ((module) => {

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
module.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/arrayWithHoles.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayWithHoles.js ***!
  \***************************************************************/
/***/ ((module) => {

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
module.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray.js */ "./node_modules/@babel/runtime/helpers/arrayLikeToArray.js");
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return arrayLikeToArray(arr);
}
module.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/assertThisInitialized.js ***!
  \**********************************************************************/
/***/ ((module) => {

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
module.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/classCallCheck.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \***************************************************************/
/***/ ((module) => {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
module.exports = _classCallCheck, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/construct.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/construct.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf.js */ "./node_modules/@babel/runtime/helpers/setPrototypeOf.js");
var isNativeReflectConstruct = __webpack_require__(/*! ./isNativeReflectConstruct.js */ "./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js");
function _construct(Parent, args, Class) {
  if (isNativeReflectConstruct()) {
    module.exports = _construct = Reflect.construct.bind(), module.exports.__esModule = true, module.exports["default"] = module.exports;
  } else {
    module.exports = _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) setPrototypeOf(instance, Class.prototype);
      return instance;
    }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
  return _construct.apply(null, arguments);
}
module.exports = _construct, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/createClass.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/createClass.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toPropertyKey = __webpack_require__(/*! ./toPropertyKey.js */ "./node_modules/@babel/runtime/helpers/toPropertyKey.js");
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
module.exports = _createClass, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/defineProperty.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/defineProperty.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toPropertyKey = __webpack_require__(/*! ./toPropertyKey.js */ "./node_modules/@babel/runtime/helpers/toPropertyKey.js");
function _defineProperty(obj, key, value) {
  key = toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
module.exports = _defineProperty, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/getPrototypeOf.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/getPrototypeOf.js ***!
  \***************************************************************/
/***/ ((module) => {

function _getPrototypeOf(o) {
  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _getPrototypeOf(o);
}
module.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/inherits.js":
/*!*********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/inherits.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf.js */ "./node_modules/@babel/runtime/helpers/setPrototypeOf.js");
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) setPrototypeOf(subClass, superClass);
}
module.exports = _inherits, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js ***!
  \*************************************************************************/
/***/ ((module) => {

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
module.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/iterableToArray.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/iterableToArray.js ***!
  \****************************************************************/
/***/ ((module) => {

function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
module.exports = _iterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js ***!
  \*********************************************************************/
/***/ ((module) => {

function _iterableToArrayLimit(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e,
      n,
      i,
      u,
      a = [],
      f = !0,
      o = !1;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = !1;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
    } catch (r) {
      o = !0, n = r;
    } finally {
      try {
        if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
module.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/nonIterableRest.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/nonIterableRest.js ***!
  \****************************************************************/
/***/ ((module) => {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
module.exports = _nonIterableRest, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/nonIterableSpread.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/nonIterableSpread.js ***!
  \******************************************************************/
/***/ ((module) => {

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
module.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/objectWithoutProperties.js":
/*!************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/objectWithoutProperties.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var objectWithoutPropertiesLoose = __webpack_require__(/*! ./objectWithoutPropertiesLoose.js */ "./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js");
function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }
  return target;
}
module.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js ***!
  \*****************************************************************************/
/***/ ((module) => {

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
module.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var _typeof = (__webpack_require__(/*! ./typeof.js */ "./node_modules/@babel/runtime/helpers/typeof.js")["default"]);
var assertThisInitialized = __webpack_require__(/*! ./assertThisInitialized.js */ "./node_modules/@babel/runtime/helpers/assertThisInitialized.js");
function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return assertThisInitialized(self);
}
module.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/setPrototypeOf.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/setPrototypeOf.js ***!
  \***************************************************************/
/***/ ((module) => {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _setPrototypeOf(o, p);
}
module.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/slicedToArray.js":
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/slicedToArray.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles.js */ "./node_modules/@babel/runtime/helpers/arrayWithHoles.js");
var iterableToArrayLimit = __webpack_require__(/*! ./iterableToArrayLimit.js */ "./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js");
var unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray.js */ "./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js");
var nonIterableRest = __webpack_require__(/*! ./nonIterableRest.js */ "./node_modules/@babel/runtime/helpers/nonIterableRest.js");
function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();
}
module.exports = _slicedToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/toConsumableArray.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/toConsumableArray.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var arrayWithoutHoles = __webpack_require__(/*! ./arrayWithoutHoles.js */ "./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js");
var iterableToArray = __webpack_require__(/*! ./iterableToArray.js */ "./node_modules/@babel/runtime/helpers/iterableToArray.js");
var unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray.js */ "./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js");
var nonIterableSpread = __webpack_require__(/*! ./nonIterableSpread.js */ "./node_modules/@babel/runtime/helpers/nonIterableSpread.js");
function _toConsumableArray(arr) {
  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();
}
module.exports = _toConsumableArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/toPrimitive.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/toPrimitive.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var _typeof = (__webpack_require__(/*! ./typeof.js */ "./node_modules/@babel/runtime/helpers/typeof.js")["default"]);
function _toPrimitive(input, hint) {
  if (_typeof(input) !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== undefined) {
    var res = prim.call(input, hint || "default");
    if (_typeof(res) !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
module.exports = _toPrimitive, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/toPropertyKey.js":
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/toPropertyKey.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var _typeof = (__webpack_require__(/*! ./typeof.js */ "./node_modules/@babel/runtime/helpers/typeof.js")["default"]);
var toPrimitive = __webpack_require__(/*! ./toPrimitive.js */ "./node_modules/@babel/runtime/helpers/toPrimitive.js");
function _toPropertyKey(arg) {
  var key = toPrimitive(arg, "string");
  return _typeof(key) === "symbol" ? key : String(key);
}
module.exports = _toPropertyKey, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/typeof.js":
/*!*******************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/typeof.js ***!
  \*******************************************************/
/***/ ((module) => {

function _typeof(o) {
  "@babel/helpers - typeof";

  return (module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports), _typeof(o);
}
module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js ***!
  \***************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray.js */ "./node_modules/@babel/runtime/helpers/arrayLikeToArray.js");
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);
}
module.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ })

}]);